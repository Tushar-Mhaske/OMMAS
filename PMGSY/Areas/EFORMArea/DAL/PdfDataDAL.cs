using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.IO;
using System.Web.Mvc;
using Syncfusion.Pdf.Parsing;
using System.Transactions;
using System.Data.Entity;
using System.Security.Cryptography;
using System.Text;
using System.Configuration;
using Syncfusion.Pdf;
using PMGSY.Models;
using PMGSY.Extensions;
using PMGSY.Areas.EFORMArea.Model;
using PMGSY.Common;
using ErrorLog = PMGSY.Areas.EFORMArea.Common.ErrorLog;
using PMGSY.Areas.EFORMArea.QMModels;
using PMGSY.Areas.EFORMArea.QM_ViewPdf_Model;
using System.Diagnostics;
using System.Globalization;
using PMGSY.Areas.EFORMArea.PiuBridgeModel;
using PMGSY.Areas.EFORMArea.PiuBridgeViewPdfModel;
using PMGSY.Areas.EFORMArea.QMBridgeViewPdfModel;
using PMGSY.Areas.EFORMArea.QMBridgeModel;
using PMGSY.Areas.EFORMArea.Models;
using System.Xml.Linq;
using PMGSY.Areas.EFORMArea.TestReportModel;
using PMGSY.Areas.EFORMArea.TestReportPreviewModel;

using CommonFunctions = PMGSY.Areas.EFORMArea.Common.CommonFunctions;

namespace PMGSY.Areas.EFORMArea.Dal
{
    public class PdfDataDAL : IPdfDataDAL
    {
        PMGSYEntities dbContext = new PMGSYEntities();


        #region PIU_demo

        public string ComputeStringToSha256Hash(string plainText)
        {
            try
            {
                using (SHA256 sha256Hash = SHA256.Create())
                {
                    // Computing Hash - returns here byte array
                    byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(plainText));

                    // now convert byte array to a string   
                    StringBuilder stringbuilder = new StringBuilder();
                    for (int i = 0; i < bytes.Length; i++)
                    {
                        stringbuilder.Append(bytes[i].ToString("x2"));
                    }
                    return stringbuilder.ToString();
                }
            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.ComputeStringToSha256Hash");
                return ex.StackTrace;
            }
            // Create a SHA256 hash from string   

        }

        public bool InsertDownloadLogDetails(EFORM_DU_LOG LogDetails)
        {
            try
            {
                string type = string.Empty;
                if (LogDetails.USER_TYPE == "T")
                {
                    type = "T";
                }
                else
                {
                    if (PMGSYSession.Current.RoleCode == 6)
                    {
                        type = "N";
                    }
                    else if (PMGSYSession.Current.RoleCode == 7)
                    {
                        type = "S";
                    }
                    else
                    {
                        type = "P";
                    }
                }

                using (var dbContext = new PMGSYEntities())
                {
                    LogDetails.LOG_ID = dbContext.EFORM_DU_LOG.Any() ? dbContext.EFORM_DU_LOG.Max(s => s.LOG_ID) + 1 : 1;
                    LogDetails.USER_TYPE = type;
                    LogDetails.USERID = PMGSYSession.Current.UserId;
                    LogDetails.IPADD = HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];

                    LogDetails.USER_ACTIVITY = "D";
                    LogDetails.ACTIVITY_DATE = DateTime.Now;

                    dbContext.EFORM_DU_LOG.Add(LogDetails);
                    dbContext.SaveChanges();
                }

                return true;
            }
            catch (Exception ex)
            {




                ErrorLog.LogError(ex, "PdfDataDAL.InsertDownloadLogDetails");
                return false;
            }

        }
        public Array GetWorkListDal(int month, int year, int stateCode, int districtCode, string eformStatus, string proposalType, int? page, int? rows, string sidx, string sord, out long totalRecords)
        {
            var timer = new Stopwatch();
            timer.Start();
            PMGSYEntities eformdbContext = new PMGSYEntities();
            try
            {
                bool uploadRestrictStatus = true;
                stateCode = PMGSYSession.Current.StateCode;
                // int stateCode = eformdbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == districtCode).Select(x => x.MAST_STATE_CODE).FirstOrDefault();
                var lstExecution1 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST("O", month, year, stateCode, districtCode, eformStatus, 0, proposalType).ToList();
                var lstExecution = lstExecution1.Where(m => m.WORK_INSPECTION_STATUS != "M").ToList();
                totalRecords = lstExecution.Count();





                if (year == System.DateTime.Now.Year)// If inspection year is current year
                {
                    if (month == System.DateTime.Now.Month) // If inspection year is current year and inspection month is current month
                    {
                        uploadRestrictStatus = false;
                    }
                    else if (month + 1 == System.DateTime.Now.Month && System.DateTime.Now.Day <= 7)  // If inspection year is current year and inspection month is previous month
                    {
                        uploadRestrictStatus = false;
                    }

                }
                else if (year + 1 == System.DateTime.Now.Year) // If inspection year is previous year
                {
                    if (month == 12 && System.DateTime.Now.Month == 1 && System.DateTime.Now.Day <= 7)  // If inspection year is previous year && inspection month is december && current date less than 7th of jan
                    {
                        uploadRestrictStatus = false;
                    }

                }
                //   uploadRestrictStatus = false;






                #region Provision for PIU to fill e-form till allowed date

                AddXmlFileUser userdata;
                //AddXmlFile_State statedata;
                List<AddXmlFileUser> userdata_list = new List<AddXmlFileUser>();
                //List<AddXmlFile_State> statedata_list = new List<AddXmlFile_State>();

                if (System.IO.File.Exists(System.Web.HttpContext.Current.Server.MapPath("~/AllowUserToInspectWorks_EformPart1.xml")))
                { // Create a file to write to   
                    XDocument doc = XDocument.Load(System.Web.HttpContext.Current.Server.MapPath("~/AllowUserToInspectWorks_EformPart1.xml"));

                    foreach (XElement element in doc.Descendants("eFormdatainfo")
                        .Descendants("User"))
                    {
                        userdata = new AddXmlFileUser();

                        userdata.MAST_STATE_CODE = Convert.ToInt32(element.Element("MAST_STATE_CODE").Value);
                        userdata.MAST_DISTRICT_CODE = Convert.ToInt32(element.Element("MAST_DISTRICT_CODE").Value);
                        userdata.schMonth = Convert.ToInt32(element.Element("schMonth").Value);
                        userdata.ToschMonth = Convert.ToInt32(element.Element("ToschMonth").Value);
                        userdata.schYear = Convert.ToInt32(element.Element("schYear").Value);
                        userdata.ToMonth = Convert.ToInt32(element.Element("ToMonth").Value);
                        userdata.ToYear = Convert.ToInt32(element.Element("ToYear").Value);
                        userdata.ToDate = Convert.ToInt32(element.Element("ToDate").Value);
                        userdata_list.Add(userdata);
                    }
                }
                int currentMonth = System.DateTime.Now.Month;
                int currentYear = System.DateTime.Now.Year;
                int currentDay = System.DateTime.Now.Day;

                foreach (var userlist in userdata_list)
                {

                    if (userlist.MAST_STATE_CODE == PMGSYSession.Current.StateCode || userlist.MAST_DISTRICT_CODE == PMGSYSession.Current.DistrictCode)
                    {
                        if (userlist.schMonth <= month && userlist.ToschMonth >= month && userlist.schYear == year && userlist.ToYear >= currentYear)
                        {
                            if (userlist.ToYear > userlist.schYear)
                            {
                                if (currentYear < userlist.ToYear)
                                {
                                    uploadRestrictStatus = false;
                                    break;
                                }
                                if (currentYear == userlist.ToYear)
                                {
                                    if ((currentMonth == userlist.ToMonth && userlist.ToDate >= currentDay) || (currentMonth < userlist.ToMonth))
                                    {
                                        uploadRestrictStatus = false;
                                        break;
                                    }
                                }

                            }
                            if (userlist.ToYear == userlist.schYear)
                            {
                                if ((currentMonth == userlist.ToMonth && userlist.ToDate >= currentDay) || (currentMonth < userlist.ToMonth))
                                {
                                    uploadRestrictStatus = false;
                                    break;
                                }
                            }

                        }

                    }

                }

                #endregion



                List<PdfRoadListModel> lisModel = new List<PdfRoadListModel>();
                foreach (var item in lstExecution)
                {
                    //var isPIUfileupload = "N";
                    //string status_fin = "N";
                    //EFORM_PDF_UPLOAD_DETAIL obj = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && x.EFORM_ID == item.EFORM_ID && x.USER_TYPE == "P").FirstOrDefault();
                    //if (obj != null)
                    //{
                    //    if (obj.FILE_NAME != null)
                    //    {
                    //        isPIUfileupload = "Y";
                    //    }
                    //    status_fin = obj.IS_FINALISED;
                    //}

                    var execLength = eformdbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == item.EFORM_ID).Select(s => s.EXECUTED_LENGTH).FirstOrDefault();
                    lisModel.Add(new PdfRoadListModel
                    {
                        EFORM_ID = item.EFORM_ID,

                        MAST_PMGSY_SCHEME = Convert.ToInt32(item.MAST_PMGSY_SCHEME),
                        District = item.MAST_DISTRICT_NAME,
                        Block = item.MAST_BLOCK_NAME,
                        PIU_Name = item.MAST_DPIU_NAME,
                        IMS_ROAD_NAME = item.IMS_ROAD_NAME,
                        IMS_PACKAGE_ID = item.IMS_PACKAGE_ID,
                        SANCTION_YEAR = item.IMS_YEAR.ToString(),
                        SANCTION_length = item.IMS_PAV_LENGTH,
                        EXECUTED_length = item.EXEC_COMPLETED,
                        Completion_Date = item.EXEC_COMPLETION_DATE.ToString().Replace("-", "/"),
                        Work_Status = item.WORK_INSPECTION_STATUS,
                        ADMIN_QM_CODE = item.ADMIN_QM_CODE.ToString(),
                        IMS_YEAR = item.IMS_YEAR,
                        QM_NAME = item.MONITOR_NAME,
                        QM_TYPE = item.MONITOR_TYPE,
                        IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                        ADMIN_SCHEDULE_CODE = item.ADMIN_SCHEDULE_CODE,
                        ADMIN_SCHEDULE_MONTH = item.ADMIN_IM_MONTH,
                        ADMIN_SCHEDULE_YEAR = item.ADMIN_IM_YEAR,
                        isPIUfileupload = item.IS_E_P1_UPLOAD,
                        PIUfinalize_status = item.IS_E_P1_FINALIZE,
                        // UserStatus = UserActiveStatus,
                        IMS_PROPOSAL_TYPE = item.IMS_PROPOSAL_TYPE,
                    });

                }


                if (sidx.Trim() != string.Empty)
                {
                    if (sord.ToString() == "asc")
                    {
                        switch (sidx)
                        {
                            case "District":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.District).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Block":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Block).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "PIU_Name":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.PIU_Name).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_ROAD_NAME":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_ROAD_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_PACKAGE_ID":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_PACKAGE_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_YEAR":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_YEAR).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "SANCTION_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.SANCTION_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "EXECUTED_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EXECUTED_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Completion_Date":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Completion_Date).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Work_Status":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Work_Status).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            default:
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                        }
                    }
                    else
                    {
                        switch (sidx)
                        {

                            case "District":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.District).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Block":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Block).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "PIU_Name":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.PIU_Name).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_ROAD_NAME":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_ROAD_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_PACKAGE_ID":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_PACKAGE_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_YEAR":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_YEAR).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "SANCTION_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.SANCTION_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "EXECUTED_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.EXECUTED_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Completion_Date":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Completion_Date).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Work_Status":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Work_Status).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            default:
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                        }
                    }
                }
                else
                {
                    lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                }

                return lisModel.Select(m => new
                {
                    id = m.IMS_PR_ROAD_CODE.ToString(),
                    cell = new[]
                    {
                          URLEncrypt.EncryptParameters1(new string[] { "IMS_road_code =" + m.IMS_PR_ROAD_CODE.ToString() }),
                          m.EFORM_ID.ToString(),
                          m.District == null?string.Empty:m.District.ToString(),
                          m.Block == null?string.Empty:m.Block.ToString(),
                          m.PIU_Name == null?string.Empty:m.PIU_Name.ToString(),
                           m.IMS_PROPOSAL_TYPE==null?string.Empty:(m.IMS_PROPOSAL_TYPE=="L"?"Bridge":"Road"),
                          m.IMS_ROAD_NAME == null?string.Empty:m.IMS_ROAD_NAME.ToString(),
                          m.IMS_PACKAGE_ID == null?string.Empty:m.IMS_PACKAGE_ID.ToString(),
                          m.SANCTION_YEAR == null?string.Empty:m.SANCTION_YEAR.ToString(),
                          m.SANCTION_length == null?string.Empty:m.SANCTION_length.ToString(),
                          m.EXECUTED_length==null?"-":m.EXECUTED_length.ToString(),
                          m.Completion_Date == null?string.Empty:m.Completion_Date.ToString().Split(' ')[0].ToString(),
                          m.Work_Status == null?string.Empty:( m.Work_Status=="C"?"Completed":"In Progress"),
                         
 
                         //PIU
                       ((PMGSYSession.Current.RoleCode==22 || PMGSYSession.Current.RoleCode==38 || PMGSYSession.Current.RoleCode==54) && m.PIUfinalize_status!="Y" && m.IMS_PROPOSAL_TYPE=="P"? "<a type='button' href='/Eform/GetDownloadedPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+"$"+m.EFORM_ID.ToString()+"$"+m.Work_Status+"$"+m.IMS_PROPOSAL_TYPE})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>": m.PIUfinalize_status!="Y" &&  m.IMS_PROPOSAL_TYPE=="L"?"<a type='button' href='/Eform/GetDownloadedPDFBrige?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+"$"+m.EFORM_ID.ToString()+"$"+m.Work_Status+"$"+m.IMS_PROPOSAL_TYPE+"$"+m.EXECUTED_length})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>" :"-" ),
                        //((PMGSYSession.Current.RoleCode==22 || PMGSYSession.Current.RoleCode==38 || PMGSYSession.Current.RoleCode==54) && m.PIUfinalize_status!="Y" && m.IMS_PROPOSAL_TYPE=="L" ? "<a type='button' href='/Eform/GetDownloadedPDFBrige?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+"$"+m.EFORM_ID.ToString()+"$"+m.Work_Status+"$"+m.IMS_PROPOSAL_TYPE})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>":"-" )  ,

                        // change below line  on 08-07-2022
                      (uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center' />": ((PMGSYSession.Current.RoleCode==22 || PMGSYSession.Current.RoleCode==38 || PMGSYSession.Current.RoleCode==54) && m.PIUfinalize_status!="Y" && m.IMS_PROPOSAL_TYPE=="P" ?  "<input type='file' name='file_Upload' id=\"file"+m.EFORM_ID+"\" /><input type='button' id='btnUpload' value='Upload' onClick='uploadPIUPdfFile(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+ m.EFORM_ID+"$"+m.IMS_PROPOSAL_TYPE+"\");'  />" :m.IMS_PROPOSAL_TYPE=="L" && m.PIUfinalize_status!="Y"? " <input type='file' name='file_Upload' id=\"file"+m.EFORM_ID+"\" /><input type='button' id='btnUpload' value='Upload' onClick='uploadBridgePIUPdfFile(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+ m.EFORM_ID+"$"+m.IMS_PROPOSAL_TYPE+"\");'  />" :"-")  ),

                        ( m.isPIUfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "P" ?  "<input type='button' id='btnViewPDF' value='Preview' onClick=viewPdfData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />"
                                                                               : m.isPIUfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "L"
                                                                               ? "<input type='button' id='btnViewPDF' value='Preview' onClick=viewBridgePIUData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />"

                                                                           :"-"),
                         //Physical part-1 pdf view   
                       // ( m.isPIUfileupload=="Y"  ?  "<a href='/Eform/GetReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),
                       
                        //Virtual dir part-1 pdf view
                         ( m.isPIUfileupload=="Y"  ? "<a href='#' title='Click here to view  pdf'  onClick='viewPart1PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>"   :"-"),

                        (uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center' />": ( m.isPIUfileupload=="Y" && m.PIUfinalize_status!="Y"  && m.IMS_PROPOSAL_TYPE=="P"?  "<span   id='btnDelete' value='Delete eForm' onClick='deletePdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+"\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":(  m.isPIUfileupload=="Y" && m.PIUfinalize_status!="Y"  && m.IMS_PROPOSAL_TYPE=="L"?  "<span   id='btnDelete' value='Delete eForm' onClick='deleteBridgePIUPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+"\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"))),
                        ( m.isPIUfileupload=="Y"  && m.PIUfinalize_status!="Y" ?  "<span   id='btnFinalize' value='Finalize eForm' onClick='finalizePdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isPIUfileupload=="Y"  && m.PIUfinalize_status=="Y"? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-")),

                          }
                }).ToArray();
            }
            catch (Exception ex)
            {
                totalRecords = 0;
                ErrorLog.LogError(ex, "PDFDataDal.GetWorkListDal()");
                return null;
            }
            finally
            {
                timer.Stop();
                TimeSpan timeTaken = timer.Elapsed;
                string foo = "Time taken: " + timeTaken.ToString(@"m\:ss\.fff");
                eformdbContext.Dispose();
            }



        }

        public PIU_GET_PREFILLED_DETAILS getPIUPrefilledList(Int32 roadCode, int eformId) //add eformId change on 08-07-2022
        {
            PIU_GET_PREFILLED_DETAILS model = new PIU_GET_PREFILLED_DETAILS();

            try
            {
                var imsDetailsList = (from con in dbContext.EFORM_PREFILLED_DETAILS
                                      join ef in dbContext.EFORM_MASTER on con.EFORM_ID equals ef.EFORM_ID
                                      join ims in dbContext.IMS_SANCTIONED_PROJECTS on ef.IMS_PR_ROAD_CODE equals ims.IMS_PR_ROAD_CODE


                                      where
                                    con.IMS_PR_ROAD_CODE == roadCode && ef.IS_VALID == "Y" && con.EFORM_ID == eformId
                                      select new
                                      {
                                          con.EFORM_ID,
                                          con.STATE,
                                          con.DISTRICT,
                                          con.BLOCK,

                                          con.PACKAGE_ID,
                                          ims.IMS_ROAD_NAME,
                                          con.SANCTION_LENGTH,
                                          con.IMS_PR_ROAD_CODE,
                                          con.AWARDED_COST,
                                          ims.IMS_IS_STAGED,
                                          ims.IMS_STAGE_PHASE,
                                          con.PHYSICAL_WORK_STATUS,
                                          con.QM_NAME,
                                          con.EXECUTED_LENGTH,
                                          con.EXPENDITURE_DONE,
                                          con.COMPLETION_COST,
                                          con.CONNECTIVITY_TYPE,
                                          con.TERRAIN_TYPE,
                                          con.DATE_OF_AWARD_WORK,
                                          con.DATE_OF_START_WORK,
                                          con.STIPULATED_COMPLETION_DATE,
                                          con.ESTIMATED_COST,
                                          con.QM_TYPE
                                      }).FirstOrDefault();

                model.Eform_Id = imsDetailsList.EFORM_ID;
                model.WORK_STATUS = imsDetailsList.PHYSICAL_WORK_STATUS;
                model.CURRENT_STAGE = imsDetailsList.IMS_IS_STAGED;
                model.QM_NAME = imsDetailsList.QM_NAME;
                model.QM_TYPE = imsDetailsList.QM_TYPE;
                model.State = imsDetailsList.STATE;
                model.District = imsDetailsList.DISTRICT;
                model.Block = imsDetailsList.BLOCK;
                model.RoadName = imsDetailsList.IMS_ROAD_NAME;
                model.PkgNumber = imsDetailsList.PACKAGE_ID;
                model.RoadName = imsDetailsList.IMS_ROAD_NAME;
                model.SancLength = Convert.ToDecimal(imsDetailsList.SANCTION_LENGTH);
                model.EXEC_LENGTH = Convert.ToDecimal(imsDetailsList.EXECUTED_LENGTH);
                model.RoadCode = imsDetailsList.IMS_PR_ROAD_CODE;
                model.ESTIMATED_COST = Convert.ToDecimal(imsDetailsList.ESTIMATED_COST);
                model.AWARDED_COST = Convert.ToDecimal(imsDetailsList.AWARDED_COST);
                model.EXPENDITURE_DONE = Math.Round(Convert.ToDecimal(((imsDetailsList.EXPENDITURE_DONE) / 100000).ToString()), 2);
                model.TERRAIN_TYPE = imsDetailsList.TERRAIN_TYPE;
                model.AWARD_OF_WORK_DATE = imsDetailsList.DATE_OF_AWARD_WORK.ToString();
                model.START_OF_WORK_DATE = imsDetailsList.DATE_OF_START_WORK.ToString();
                model.STIPULATED_COMPLETION_DATE = imsDetailsList.STIPULATED_COMPLETION_DATE.ToString();
                model.STAGE_PHASE = imsDetailsList.IMS_STAGE_PHASE;
                model.WORK_TYPE = imsDetailsList.CONNECTIVITY_TYPE;

            }
            catch (Exception e)
            {
                ErrorLog.LogError(e, "PDFDataDal.getPIUPrefilledList()");

            }
            finally
            {
                dbContext.Dispose();
            }
            return model;
        }

        public List<SelectListItem> SaveToDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_PIU_VIEWMODEL piuInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, double templateVersion)


        {
            PdfLoadedDocument loadedDocument = new PdfLoadedDocument(filePath);
            List<SelectListItem> validationList = new List<SelectListItem>();
            PMGSYEntities dbContext = new PMGSYEntities();
            //    EFORMCommonFunctions cm = new EFORMCommonFunctions();
            try
            {




                PdfLoadedForm loadedForm = loadedDocument.Form;
                loadedForm.ReadOnly = true;
                //  loadedDocument.Pages.RemoveAt(0);



                int eformId = Convert.ToInt32(eformIDFromGrid);
                int RoadCode = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == eformId).Select(m => m.IMS_PR_ROAD_CODE).FirstOrDefault();
                int admnNdCode = PMGSYSession.Current.AdminNdCode;
                int prRoadCode = RoadCode;
                int UserId = PMGSYSession.Current.UserId;
                string ipAdd = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                int detailId = eformId;
                string type = string.Empty;

                if (PMGSYSession.Current.RoleCode == 6)
                {
                    type = "N";
                }
                else if (PMGSYSession.Current.RoleCode == 7)
                {
                    type = "S";
                }
                else
                {
                    type = "P";
                }

                using (var scope = new TransactionScope())
                {
                    //DATA PARSING

                    if (dbContext.EFORM_PDF_UPLOAD_DETAIL.Any(s => s.EFORM_ID == eformId && s.USER_TYPE == "P"))
                    {
                        validationList.Add(new SelectListItem { Text = "Pdf is already uploaded. If you want to upload again, please delete the existing file" });
                        return validationList;
                    }


                    EFORM_MASTER inspMasterModel = dbContext.EFORM_MASTER.Where(m => m.EFORM_ID == detailId).FirstOrDefault();

                    if (inspMasterModel == null)
                    {
                        validationList.Add(new SelectListItem { Text = "Error occured while uploading the file" });
                        return validationList;
                    }

                    string templateVersionValue = string.Empty;
                    try
                    {

                        PdfLoadedTextBoxField tempVersion = loadedForm.Fields["TEMPLATE_VERSION"] as PdfLoadedTextBoxField;
                        templateVersionValue = tempVersion.Text;
                    }
                    catch (Exception ex)
                    {
                        ErrorLog.LogError(ex, "PDFDataDal.SaveToDb()");
                    }

                    inspMasterModel.WORK_STATUS_PER_QUALITY = workStatus;
                    if (templateVersionValue != "")
                    {
                        inspMasterModel.PART1_TEMPLATE_VERSION = templateVersionValue;
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    else
                    {
                        inspMasterModel.PART1_TEMPLATE_VERSION = "V1.0";
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }




                    EFORM_PDF_UPLOAD_DETAIL uploadModel = new EFORM_PDF_UPLOAD_DETAIL();



                    int uploadId = dbContext.EFORM_PDF_UPLOAD_DETAIL.Any() ? (from item in dbContext.EFORM_PDF_UPLOAD_DETAIL select item.UPLOAD_ID).Max() + 1 : 1;


                    uploadModel.UPLOAD_ID = uploadId;
                    uploadModel.EFORM_ID = detailId;
                    uploadModel.PR_ROAD_CODE = prRoadCode;
                    uploadModel.USER_TYPE = "P";
                    uploadModel.UPLOAD_DATE = System.DateTime.Now;
                    uploadModel.IS_FINALISED = "N";
                    uploadModel.FILE_NAME = fname;
                    uploadModel.FILE_PATH = Uploaded_Path + "\\" + schdYear + "\\" + schdMonth;
                    if (templateVersionValue != "")
                    {
                        uploadModel.TEMPLATE_VERSION = templateVersionValue;
                    }
                    else
                    {
                        uploadModel.TEMPLATE_VERSION = "V1.0";
                    }

                    uploadModel.USERID = UserId;
                    uploadModel.IPADD = ipAdd;
                    dbContext.EFORM_PDF_UPLOAD_DETAIL.Add(uploadModel);
                    dbContext.SaveChanges();



                    var prefFetailslist = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.EFORM_ID == detailId).ToList();

                    for (int i = 0; i < prefFetailslist.Count; i++)
                    {
                        int prefId = prefFetailslist[i].PREFILLED_ID;
                        EFORM_PREFILLED_DETAILS prefmodel = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.PREFILLED_ID == prefId && s.EFORM_ID == detailId).FirstOrDefault();
                        prefmodel.PHYSICAL_WORK_STATUS = workStatus;
                        dbContext.Entry(prefmodel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    //------------- PAGE(1,2,5) General details----------------




                    int infoId = dbContext.EFORM_PIU_GENERAL_INFO.Any() ? (from item in dbContext.EFORM_PIU_GENERAL_INFO select item.INFO_ID).Max() + 1 : 1;

                    EFORM_PIU_GENERAL_INFO EformGeneralInfo = new EFORM_PIU_GENERAL_INFO();
                    EformGeneralInfo.INFO_ID = infoId;
                    EformGeneralInfo.EFORM_ID = detailId;
                    EformGeneralInfo.ADMIN_ND_CODE = admnNdCode;
                    EformGeneralInfo.PIU_USER_ID = UserId;
                    EformGeneralInfo.PR_ROAD_CODE = prRoadCode;
                    EformGeneralInfo.SAN_FLEX_PAVEMENT = piuInsertModel.GENERAL_INFO_PIU.SAN_FLEX_PAVEMENT;
                    EformGeneralInfo.SAN_RIGID_PAVEMENT = piuInsertModel.GENERAL_INFO_PIU.SAN_RIGID_PAVEMENT;
                    EformGeneralInfo.EXEC_FLEX_PAVEMENT = piuInsertModel.GENERAL_INFO_PIU.EXEC_FLEX_PAVEMENT;
                    EformGeneralInfo.EXEC_RIGID_PAVEMENT = piuInsertModel.GENERAL_INFO_PIU.EXEC_RIGID_PAVEMENT;
                    EformGeneralInfo.DEVIATION_REASON = piuInsertModel.GENERAL_INFO_PIU.DEVIATION_REASON;
                    EformGeneralInfo.TECHNICAL_SANC_COST = piuInsertModel.GENERAL_INFO_PIU.TECHNICAL_SANC_COST;
                    EformGeneralInfo.BILLS_PENDING = piuInsertModel.GENERAL_INFO_PIU.BILLS_PENDING;
                    EformGeneralInfo.TOTAL_EXPENDITURE = piuInsertModel.GENERAL_INFO_PIU.TOTAL_EXPENDITURE;

                    EformGeneralInfo.WORK_TYPE = piuInsertModel.GENERAL_INFO_PIU.WORK_TYPE;
                    EformGeneralInfo.TOTAL_LEN = piuInsertModel.GENERAL_INFO_PIU.TOTAL_LEN;
                    EformGeneralInfo.CARRIAGEWAY_WIDTH_NEW = piuInsertModel.GENERAL_INFO_PIU.CARRIAGEWAY_WIDTH_NEW;
                    EformGeneralInfo.CARRIAGEWAY_WIDTH_TYPE = piuInsertModel.GENERAL_INFO_PIU.CARRIAGEWAY_WIDTH_TYPE;
                    EformGeneralInfo.CARRIAGEWAY_WIDTH_EXISTING = Convert.ToDecimal(piuInsertModel.GENERAL_INFO_PIU.CARRIAGEWAY_WIDTH_EXISTING);
                    EformGeneralInfo.CARRIAGEWAY_WIDTH_PROPOSED = Convert.ToDecimal(piuInsertModel.GENERAL_INFO_PIU.CARRIAGEWAY_WIDTH_PROPOSED);
                    EformGeneralInfo.CARRIAGEWAY_LENGTH = Convert.ToDecimal(piuInsertModel.GENERAL_INFO_PIU.CARRIAGEWAY_LENGTH);
                    EformGeneralInfo.TERRAIN_TYPE = piuInsertModel.GENERAL_INFO_PIU.TERRAIN_TYPE;
                    EformGeneralInfo.AWARD_OF_WORK_DATE = Convert.ToDateTime(piuInsertModel.GENERAL_INFO_PIU.AWARD_OF_WORK_DATE);
                    EformGeneralInfo.START_OF_WORK_DATE = Convert.ToDateTime(piuInsertModel.GENERAL_INFO_PIU.START_OF_WORK_DATE);
                    EformGeneralInfo.STIPULATED_COMPLETION_DATE = Convert.ToDateTime(piuInsertModel.GENERAL_INFO_PIU.STIPULATED_COMPLETION_DATE);
                    if (piuInsertModel.GENERAL_INFO_PIU.ACTUAL_COMPLETION_DATE == null)
                    {
                        EformGeneralInfo.ACTUAL_COMPLETION_DATE = null;
                    }
                    else
                    {
                        EformGeneralInfo.ACTUAL_COMPLETION_DATE = Convert.ToDateTime(piuInsertModel.GENERAL_INFO_PIU.ACTUAL_COMPLETION_DATE);
                    }

                    EformGeneralInfo.PIU_HEAD_NAME = piuInsertModel.GENERAL_INFO_PIU.PIU_HEAD_NAME;
                    EformGeneralInfo.PIU_HEAD_MOBILE_NO = piuInsertModel.GENERAL_INFO_PIU.PIU_HEAD_MOBILE_NO;
                    EformGeneralInfo.PIU_HEAD_EMAIL = piuInsertModel.GENERAL_INFO_PIU.PIU_HEAD_EMAIL;
                    EformGeneralInfo.PIU_ADDR = piuInsertModel.GENERAL_INFO_PIU.PIU_ADDR;
                    EformGeneralInfo.PIU_SIGN_DATE = Convert.ToDateTime(piuInsertModel.GENERAL_INFO_PIU.PIU_SIGN_DATE);
                    EformGeneralInfo.IPADD = ipAdd;
                    EformGeneralInfo.MIX_DESIGN_APPLICABLE = piuInsertModel.GENERAL_INFO_PIU.MIX_DESIGN_APPLICABLE;// piuInsertModel.GENERAL_INFO_PIU.MIX_DESIGN_APPLICABLE;
                    dbContext.EFORM_PIU_GENERAL_INFO.Add(EformGeneralInfo);
                    dbContext.SaveChanges();


                    if (workStatus.Equals("C"))
                    {
                        EFORM_PREFILLED_DETAILS prefData = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.EFORM_ID == detailId).FirstOrDefault();
                        prefData.COMPLETION_COST = Convert.ToDecimal(piuInsertModel.GENERAL_INFO_PIU.COMPLETION_COST);
                        dbContext.Entry(prefData).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }





                    int techDetailId = dbContext.EFORM_PIU_NEW_TECHNOLOGY_DETAILS.Any() ? (from item in dbContext.EFORM_PIU_NEW_TECHNOLOGY_DETAILS select item.TECH_DETAIL_ID).Max() + 1 : 1;


                    PMGSYEntities dbContext1 = new PMGSYEntities();
                    int eform_Id = Convert.ToInt32(detailId);

                    for (int i = 0; i < piuInsertModel.NEW_TECHNOLOGY_DETAILS_LIST.Count; i++)
                    {
                        EFORM_PIU_NEW_TECHNOLOGY_DETAILS newtechpObj = new EFORM_PIU_NEW_TECHNOLOGY_DETAILS();
                        newtechpObj.TECH_DETAIL_ID = techDetailId;
                        newtechpObj.EFORM_ID = detailId;

                        newtechpObj.PIU_USER_ID = UserId;
                        newtechpObj.IMS_PR_ROAD_CODE = prRoadCode;
                        newtechpObj.TECH_ID = Convert.ToInt16(piuInsertModel.NEW_TECHNOLOGY_DETAILS_LIST[i].NEW_TECHNOLOGY_NAME);

                        newtechpObj.RD_FROM = piuInsertModel.NEW_TECHNOLOGY_DETAILS_LIST[i].ROAD_FROM;
                        newtechpObj.RD_TO = piuInsertModel.NEW_TECHNOLOGY_DETAILS_LIST[i].ROAD_TO;
                        newtechpObj.IPADD = ipAdd;

                        dbContext.EFORM_PIU_NEW_TECHNOLOGY_DETAILS.Add(newtechpObj);
                        dbContext.SaveChanges();
                        techDetailId++;


                    }







                    //----------------PAGE-3--------------



                    int progId = dbContext.EFORM_PIU_PRGS_DETAILS.Any() ? (from item in dbContext.EFORM_PIU_PRGS_DETAILS select item.PROGRESS_ID).Max() + 1 : 1;


                    for (int i = 0; i < piuInsertModel.Physical_Progress_List.Count; i++)
                    {
                        EFORM_PIU_PRGS_DETAILS phyProObj = new EFORM_PIU_PRGS_DETAILS();
                        //  int t = i + 1;


                        phyProObj.PROGRESS_ID = progId;
                        phyProObj.EFORM_ID = detailId;
                        phyProObj.ADMIN_ND_CODE = admnNdCode;
                        phyProObj.PIU_USER_ID = UserId;
                        phyProObj.PR_ROAD_CODE = prRoadCode;
                        phyProObj.ITEM_ID = piuInsertModel.Physical_Progress_List[i].ITEM_ID;
                        phyProObj.IEM_UNIT = piuInsertModel.Physical_Progress_List[i].IEM_UNIT;
                        phyProObj.DPR_QUANTITY = piuInsertModel.Physical_Progress_List[i].DPR_QUANTITY;
                        phyProObj.EXECUTED_QUANTITY = piuInsertModel.Physical_Progress_List[i].EXECUTED_QUANTITY;
                        phyProObj.COMPLETED_PERC = piuInsertModel.Physical_Progress_List[i].COMPLETED_PERC;
                        phyProObj.DUE_START_DATE = Convert.ToDateTime(piuInsertModel.Physical_Progress_List[i].DUE_START_DATE);
                        phyProObj.DUE_END_DATE = Convert.ToDateTime(piuInsertModel.Physical_Progress_List[i].DUE_END_DATE);
                        if (piuInsertModel.Physical_Progress_List[i].ACTUAL_START_DATE == null)
                        {
                            phyProObj.ACTUAL_START_DATE = null;
                        }
                        else
                        {
                            phyProObj.ACTUAL_START_DATE = Convert.ToDateTime(piuInsertModel.Physical_Progress_List[i].ACTUAL_START_DATE);
                        }
                        if (piuInsertModel.Physical_Progress_List[i].ACTUAL_END_DATE == null)
                        {
                            phyProObj.ACTUAL_END_DATE = null;
                        }
                        else
                        {
                            phyProObj.ACTUAL_END_DATE = Convert.ToDateTime(piuInsertModel.Physical_Progress_List[i].ACTUAL_END_DATE);
                        }
                        if (piuInsertModel.Physical_Progress_List[i].DELAY_MONTH == null)
                        {
                            phyProObj.DELAY_MONTH = null;
                        }
                        else
                        {
                            phyProObj.DELAY_MONTH = Convert.ToDouble(piuInsertModel.Physical_Progress_List[i].DELAY_MONTH);
                        }

                        phyProObj.IPADD = ipAdd;
                        dbContext.EFORM_PIU_PRGS_DETAILS.Add(phyProObj);
                        dbContext.SaveChanges();
                        progId++;
                    }


                    int qcId = dbContext.EFORM_PIU_QC_DETAILS.Any() ? (from item in dbContext.EFORM_PIU_QC_DETAILS select item.QC_ID).Max() + 1 : 1;


                    EFORM_PIU_QC_DETAILS EformQcDetails = new EFORM_PIU_QC_DETAILS();
                    EformQcDetails.QC_ID = qcId;
                    EformQcDetails.EFORM_ID = detailId;
                    EformQcDetails.ADMIN_ND_CODE = admnNdCode;
                    EformQcDetails.PIU_USER_ID = UserId;
                    EformQcDetails.PR_ROAD_CODE = prRoadCode;
                    EformQcDetails.LAB_LOCATION = piuInsertModel.QC_DETAILS_PIU.LAB_LOCATION;
                    EformQcDetails.PHOTO_UPLOAD_DATE = Convert.ToDateTime(piuInsertModel.QC_DETAILS_PIU.PHOTO_UPLOAD_DATE);
                    EformQcDetails.ESTB_DELAY_REASON = piuInsertModel.QC_DETAILS_PIU.ESTB_DELAY_REASON;
                    EformQcDetails.LAB_EQUIP_AVBL = piuInsertModel.QC_DETAILS_PIU.LAB_EQUIP_AVBL;
                    EformQcDetails.EQUIP_WORKING = piuInsertModel.QC_DETAILS_PIU.EQUIP_WORKING;
                    EformQcDetails.EQUIP_NOT_WORKING = piuInsertModel.QC_DETAILS_PIU.EQUIP_NOT_WORKING;
                    EformQcDetails.LAB_EQUIP_NOT_AVBL = piuInsertModel.QC_DETAILS_PIU.LAB_EQUIP_NOT_AVBL;
                    EformQcDetails.REASON_LAB_EQUIP_NOT_AVBL = piuInsertModel.QC_DETAILS_PIU.REASON_LAB_EQUIP_NOT_AVBL;
                    EformQcDetails.DOCUMENT_FOR_QM = piuInsertModel.QC_DETAILS_PIU.DOCUMENT_FOR_QM;
                    EformQcDetails.IPADD = ipAdd;
                    dbContext.EFORM_PIU_QC_DETAILS.Add(EformQcDetails);
                    dbContext.SaveChanges();


                    //------------PAGE-4-----------------

                    int officialId = dbContext.EFORM_QC_OFFICIAL_DETAILS.Any() ? (from item in dbContext.EFORM_QC_OFFICIAL_DETAILS select item.OFFICIAL_ID).Max() + 1 : 1;

                    for (int i = 0; i < piuInsertModel.QC_OFFICIAL_DETAILS_LIST.Count; i++)
                    {
                        EFORM_QC_OFFICIAL_DETAILS qcOfficialDetails = new EFORM_QC_OFFICIAL_DETAILS();
                        qcOfficialDetails.OFFICIAL_ID = officialId;
                        qcOfficialDetails.QC_ID = qcId;
                        qcOfficialDetails.EFORM_ID = detailId;
                        qcOfficialDetails.PR_ROAD_CODE = prRoadCode;
                        qcOfficialDetails.OFFICIAL_TYPE = piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].OFFICIAL_TYPE;
                        qcOfficialDetails.OFFICIAL_NAME = piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].OFFICIAL_NAME;
                        qcOfficialDetails.IDENTITY_NUMBER = piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].IDENTITY_NUMBER;
                        qcOfficialDetails.MOBILE_NO = piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].MOBILE_NO;
                        qcOfficialDetails.EMAIL_ID = piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].EMAIL_ID;
                        qcOfficialDetails.PAN = piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].PAN;
                        qcOfficialDetails.FROM_DATE = Convert.ToDateTime(piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].FROM_DATE);
                        qcOfficialDetails.TO_DATE = Convert.ToDateTime(piuInsertModel.QC_OFFICIAL_DETAILS_LIST[i].TO_DATE);
                        qcOfficialDetails.IPADD = ipAdd;
                        dbContext.EFORM_QC_OFFICIAL_DETAILS.Add(qcOfficialDetails);
                        dbContext.SaveChanges();
                        officialId++;
                    }

                    PdfLoadedRadioButtonListField MIX_DESIGN_APPLICABLE_Status = loadedForm.Fields["MIX_DESIGN_APPLICABLE"] as PdfLoadedRadioButtonListField;

                    if (MIX_DESIGN_APPLICABLE_Status.SelectedValue == "Y")
                    {

                        int designId = dbContext.EFORM_PIU_MIX_DESIGN_DETAILS.Any() ? (from item in dbContext.EFORM_PIU_MIX_DESIGN_DETAILS select item.DESIGN_ID).Max() + 1 : 1;

                        for (int i = 0; i < piuInsertModel.MIX_DESIGN_DETAILS_LIST.Count; i++)
                        {
                            EFORM_PIU_MIX_DESIGN_DETAILS mixDesDetailsObj = new EFORM_PIU_MIX_DESIGN_DETAILS();
                            mixDesDetailsObj.DESIGN_ID = designId;
                            mixDesDetailsObj.EFORM_ID = detailId;
                            mixDesDetailsObj.ADMIN_ND_CODE = admnNdCode;
                            mixDesDetailsObj.PIU_USER_ID = UserId;
                            mixDesDetailsObj.PR_ROAD_CODE = prRoadCode;
                            mixDesDetailsObj.ITEM_ID = piuInsertModel.MIX_DESIGN_DETAILS_LIST[i].ITEM_ID;
                            mixDesDetailsObj.DESIGN_STRENGTH = piuInsertModel.MIX_DESIGN_DETAILS_LIST[i].DESIGN_STRENGTH;
                            mixDesDetailsObj.DESIGN_LAB = piuInsertModel.MIX_DESIGN_DETAILS_LIST[i].DESIGN_LAB;
                            mixDesDetailsObj.DESIGN_DATE = Convert.ToDateTime(piuInsertModel.MIX_DESIGN_DETAILS_LIST[i].DESIGN_DATE);
                            mixDesDetailsObj.IPADD = ipAdd;
                            dbContext.EFORM_PIU_MIX_DESIGN_DETAILS.Add(mixDesDetailsObj);
                            dbContext.SaveChanges();
                            designId++;
                        }

                    }


                    //add for tepmplate version 3.0
                    if (templateVersion == 3.0)
                    {

                        for (int i = 0; i < piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0.Count && i < 8; i++)
                        {

                            if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].VISIT_DATE != null)
                            {
                                int tempInspId = Convert.ToInt32(piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].INSP_ID);
                                if (tempInspId != 0)
                                {
                                    EFORM_PIU_PREVIOUS_INSP_DETAILS prevInspObj = new EFORM_PIU_PREVIOUS_INSP_DETAILS();
                                    prevInspObj = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(s => s.EFORM_ID == detailId && s.INSP_ID == tempInspId).Single();
                                    prevInspObj.INSP_LEVEL = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].INSP_LEVEL;
                                    prevInspObj.OBSERVATIONS = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].OBSERVATIONS;
                                    prevInspObj.ACTION = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ACTION;
                                    prevInspObj.INSERT_OR_UPDATE = "U";
                                    dbContext.Entry(prevInspObj).State = EntityState.Modified;
                                    dbContext.SaveChanges();
                                }

                            }

                        }


                        for (int i = 8; i < 10; i++)
                        {
                            if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].VISIT_DATE == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].VISITOR_NAME_DESG == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ROAD_FROM == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ROAD_TO == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].INSP_LEVEL == "0" && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].OBSERVATIONS == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ACTION == null)
                            {
                                continue;
                            }
                            else
                            {
                                EFORM_PIU_PREVIOUS_INSP_DETAILS mod = new EFORM_PIU_PREVIOUS_INSP_DETAILS();

                                var results = dbContext.GetInspectionSequenceValue().FirstOrDefault();

                                // from the results, get the first/single value
                                int? nextSequenceValue = results;
                                mod.INSP_ID = Convert.ToInt32(nextSequenceValue);
                                mod.EFORM_ID = detailId;
                                mod.ADMIN_SCHEDULE_CODE = Convert.ToInt32(schdCode);
                                mod.ADMIN_QM_CODE = Convert.ToInt32(qmCode);
                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].VISIT_DATE == null)
                                {
                                    mod.VISIT_DATE = null;
                                }
                                else
                                {
                                    mod.VISIT_DATE = Convert.ToDateTime(piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].VISIT_DATE);
                                }

                                mod.VISITOR_NAME_DESG = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].VISITOR_NAME_DESG;
                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ROAD_FROM == null)
                                {
                                    mod.ROAD_FROM = null;
                                }
                                else
                                {
                                    mod.ROAD_FROM = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ROAD_FROM;
                                }
                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ROAD_TO == null)
                                {
                                    mod.ROAD_TO = null;
                                }
                                else
                                {
                                    mod.ROAD_TO = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ROAD_TO;
                                }

                                mod.INSP_LEVEL = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].INSP_LEVEL;
                                mod.OBSERVATIONS = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].OBSERVATIONS;
                                mod.ACTION = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST_temp3_0[i].ACTION;
                                mod.INSERT_OR_UPDATE = "I";
                                mod.IPADD = ipAdd;
                                mod.USER_ID = UserId;


                                dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Add(mod);
                                dbContext.SaveChanges();
                            }


                        }
                    }
                    else
                    {
                        if (templateVersion >= 2.0)
                        {
                            for (int i = 0; i < piuInsertModel.PREVIOUS_INSP_DETAILS_LIST.Count && i < 8; i++)
                            {

                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISIT_DATE != null)
                                {
                                    int tempInspId = Convert.ToInt32(piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].INSP_ID);
                                    if (tempInspId != 0)
                                    {
                                        EFORM_PIU_PREVIOUS_INSP_DETAILS prevInspObj = new EFORM_PIU_PREVIOUS_INSP_DETAILS();
                                        prevInspObj = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(s => s.EFORM_ID == detailId && s.INSP_ID == tempInspId).Single();
                                        prevInspObj.INSP_LEVEL = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].INSP_LEVEL;
                                        prevInspObj.OBSERVATIONS = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].OBSERVATIONS;
                                        prevInspObj.ACTION = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ACTION;
                                        prevInspObj.INSERT_OR_UPDATE = "U";
                                        dbContext.Entry(prevInspObj).State = EntityState.Modified;
                                        dbContext.SaveChanges();
                                    }

                                }

                            }
                        }
                        else
                        {
                            int inspID = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(s => s.EFORM_ID == detailId).Select(m => m.INSP_ID).FirstOrDefault();
                            var list = (from ma in dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS
                                        where ma.EFORM_ID == detailId && ma.INSERT_OR_UPDATE != "I"
                                        select new
                                        {
                                            ma.INSP_ID,
                                            ma.VISIT_DATE

                                        }).OrderBy(t => t.VISIT_DATE).ToList();
                            int insp = 0;
                            for (int i = 0; i < piuInsertModel.PREVIOUS_INSP_DETAILS_LIST.Count && i < 8; i++)
                            {

                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISIT_DATE != null)
                                {
                                    int tempInspId = list[insp].INSP_ID;
                                    EFORM_PIU_PREVIOUS_INSP_DETAILS prevInspObj = new EFORM_PIU_PREVIOUS_INSP_DETAILS();
                                    prevInspObj = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(s => s.EFORM_ID == detailId && s.INSP_ID == tempInspId).Single();
                                    prevInspObj.INSP_LEVEL = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].INSP_LEVEL;
                                    prevInspObj.OBSERVATIONS = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].OBSERVATIONS;
                                    prevInspObj.ACTION = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ACTION;
                                    prevInspObj.INSERT_OR_UPDATE = "U";
                                    dbContext.Entry(prevInspObj).State = EntityState.Modified;
                                    dbContext.SaveChanges();
                                    insp++;
                                }

                            }
                        }

                        for (int i = 8; i < 10; i++)
                        {
                            if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISIT_DATE == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISITOR_NAME_DESG == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ROAD_FROM == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ROAD_TO == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].INSP_LEVEL == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].OBSERVATIONS == null && piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ACTION == null)
                            {
                                continue;
                            }
                            else
                            {
                                EFORM_PIU_PREVIOUS_INSP_DETAILS mod = new EFORM_PIU_PREVIOUS_INSP_DETAILS();

                                var results = dbContext.GetInspectionSequenceValue().FirstOrDefault();

                                // from the results, get the first/single value
                                int? nextSequenceValue = results;
                                mod.INSP_ID = Convert.ToInt32(nextSequenceValue);
                                mod.EFORM_ID = detailId;
                                mod.ADMIN_SCHEDULE_CODE = Convert.ToInt32(schdCode);
                                mod.ADMIN_QM_CODE = Convert.ToInt32(qmCode);
                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISIT_DATE == null)
                                {
                                    mod.VISIT_DATE = null;
                                }
                                else
                                {
                                    mod.VISIT_DATE = Convert.ToDateTime(piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISIT_DATE);
                                }

                                mod.VISITOR_NAME_DESG = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].VISITOR_NAME_DESG;
                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ROAD_FROM == null)
                                {
                                    mod.ROAD_FROM = null;
                                }
                                else
                                {
                                    mod.ROAD_FROM = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ROAD_FROM;
                                }
                                if (piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ROAD_TO == null)
                                {
                                    mod.ROAD_TO = null;
                                }
                                else
                                {
                                    mod.ROAD_TO = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ROAD_TO;
                                }

                                mod.INSP_LEVEL = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].INSP_LEVEL;
                                mod.OBSERVATIONS = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].OBSERVATIONS;
                                mod.ACTION = piuInsertModel.PREVIOUS_INSP_DETAILS_LIST[i].ACTION;
                                mod.INSERT_OR_UPDATE = "I";
                                mod.IPADD = ipAdd;
                                mod.USER_ID = UserId;


                                dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Add(mod);
                                dbContext.SaveChanges();
                            }


                        }
                    }
                    //end here add for tepmplate version 3.0

                    string checksum = dbContext.EFORM_DU_LOG.Where(s => s.EFORM_ID == detailId && s.USER_TYPE == "P").OrderByDescending(x => x.LOG_ID).Select(m => m.PDF_CHECKSUM).FirstOrDefault();

                    int logId = Convert.ToInt32(dbContext.EFORM_DU_LOG.Any() ? (from item in dbContext.EFORM_DU_LOG select item.LOG_ID).Max() + 1 : 1);
                    if (checksum != null)
                    {
                        EFORM_DU_LOG model = new EFORM_DU_LOG();
                        model.EFORM_ID = detailId;
                        model.LOG_ID = logId;
                        model.USER_ACTIVITY = "U";
                        model.USER_TYPE = type;
                        model.ACTIVITY_DATE = DateTime.Now;
                        model.USERID = UserId;
                        model.PDF_CHECKSUM = checksum;
                        if (templateVersionValue != "")
                        {
                            model.TEMPLATE_VERSION = templateVersionValue;
                        }
                        else
                        {
                            model.TEMPLATE_VERSION = "V1.0";
                        }
                        model.IPADD = ipAdd;
                        dbContext.EFORM_DU_LOG.Add(model);
                        dbContext.SaveChanges();
                    }
                    uploaded_File = Path.Combine(Uploaded_Path + "\\" + schdYear + "\\" + schdMonth, fname);
                    loadedDocument.Save(uploaded_File);
                    loadedDocument.Close(true);
                    scope.Complete();

                }


            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PDFDataDal.SaveToDb()");

                validationList.Add(new SelectListItem { Text = "Error occured while uploading the file, please contact OMMAS team" });

            }
            finally
            {

                if (dbContext != null)
                {
                    dbContext.Dispose();
                }
                loadedDocument.Close(true);
                file.InputStream.Flush();
                file.InputStream.Close();
            }

            return validationList;
        }

        public EFORM_PIU_VIEWMODEL ViewPIU_PdfSavedData(int id)
        {
            #region ModelObjects

            PMGSYEntities dbContext = new PMGSYEntities();

            // Main Custom Model
            EFORM_PIU_VIEWMODEL piuViewModel = new EFORM_PIU_VIEWMODEL();

            // Custom Sub Models
            EFORM_PREFILLED_PIU prefilledDetailsObj = new EFORM_PREFILLED_PIU();
            EFORM_GENERAL_INFO_PIU_View generalInfoPIUObj = new EFORM_GENERAL_INFO_PIU_View();
            EFORM_QC_DETAILS_PIU_View qcDetailsObj = new EFORM_QC_DETAILS_PIU_View();


            // Custom Sub Models Type List
            List<EFORM_PRGS_DETAILS_PIU> Physical_Progress_List = new List<EFORM_PRGS_DETAILS_PIU>();
            List<EFORM_QC_OFFICIAL_DETAILS_PIU> QC_Official_Details_List = new List<EFORM_QC_OFFICIAL_DETAILS_PIU>();
            List<EFORM_MIX_DESIGN_DETAILS_PIU> Mix_Design_List = new List<EFORM_MIX_DESIGN_DETAILS_PIU>();
            List<EFORM_PREVIOUS_INSP_DETAILS_PIU> Previous_Inspection_List = new List<EFORM_PREVIOUS_INSP_DETAILS_PIU>();
            List<EFORM_WORK_ITEM> Work_Items_List = new List<EFORM_WORK_ITEM>();
            List<NewTechPIU_ViewModel> NewTechnology_PIU_List = new List<NewTechPIU_ViewModel>();

            #endregion

            try
            {
                #region dbQueries

                var prefillData = (from con in dbContext.EFORM_PREFILLED_DETAILS
                                   join ims in dbContext.IMS_SANCTIONED_PROJECTS on con.IMS_PR_ROAD_CODE equals ims.IMS_PR_ROAD_CODE
                                   where
                                   con.EFORM_ID == id
                                   select new
                                   {
                                       con.PREFILLED_ID,
                                       con.EFORM_ID,
                                       con.ADMIN_SCHEDULE_CODE,
                                       con.ROAD_NAME,
                                       con.STATE,
                                       con.DISTRICT,
                                       con.BLOCK,
                                       con.PACKAGE_ID,
                                       ims.IMS_ROAD_NAME,
                                       con.SANCTION_LENGTH,
                                       con.IMS_PR_ROAD_CODE,
                                       con.AWARDED_COST,
                                       ims.IMS_IS_STAGED,
                                       ims.IMS_STAGE_PHASE,
                                       con.PHYSICAL_WORK_STATUS,
                                       con.QM_NAME,
                                       con.EXECUTED_LENGTH,
                                       con.EXPENDITURE_DONE,
                                       con.COMPLETION_COST,
                                       con.TERRAIN_TYPE,
                                       con.DATE_OF_AWARD_WORK,
                                       con.DATE_OF_START_WORK,
                                       con.STIPULATED_COMPLETION_DATE,
                                       con.ESTIMATED_COST,
                                       con.QM_TYPE,
                                       con.USER_ID,
                                       con.IPADD
                                   }).FirstOrDefault();


                var generalData = dbContext.EFORM_PIU_GENERAL_INFO.Where(x => x.EFORM_ID == id).FirstOrDefault();
                var physicalProgressDataList = dbContext.EFORM_PIU_PRGS_DETAILS.Where(x => x.EFORM_ID == id).ToList<EFORM_PIU_PRGS_DETAILS>();
                var qcDetailsData = dbContext.EFORM_PIU_QC_DETAILS.Where(x => x.EFORM_ID == id).FirstOrDefault();
                var qcOfficialDetailsDataList = dbContext.EFORM_QC_OFFICIAL_DETAILS.Where(x => x.EFORM_ID == id).ToList<EFORM_QC_OFFICIAL_DETAILS>();
                var mixDesignDataList = dbContext.EFORM_PIU_MIX_DESIGN_DETAILS.Where(x => x.EFORM_ID == id).ToList<EFORM_PIU_MIX_DESIGN_DETAILS>();
                int eform_ID = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == id).Select(m => m.EFORM_ID).FirstOrDefault();
                var previousInspectionDataList = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(x => x.EFORM_ID == eform_ID && x.INSERT_OR_UPDATE == "U").OrderBy(s => s.VISIT_DATE).ToList<EFORM_PIU_PREVIOUS_INSP_DETAILS>();
                var previousInspectionDataListinsert = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(x => x.EFORM_ID == eform_ID && x.INSERT_OR_UPDATE == "I").ToList<EFORM_PIU_PREVIOUS_INSP_DETAILS>();
                previousInspectionDataList.AddRange(previousInspectionDataListinsert);

                var tableHeaderslist = dbContext.EFORM_MASTER_WORK_ITEM.ToList<EFORM_MASTER_WORK_ITEM>();

                // added on 13-04-2022
                var PIU_NewTechnologyList = dbContext.EFORM_PIU_NEW_TECHNOLOGY_DETAILS.Where(s => s.EFORM_ID == id).OrderBy(s => s.TECH_DETAIL_ID).Any() ? dbContext.EFORM_PIU_NEW_TECHNOLOGY_DETAILS.Where(s => s.EFORM_ID == id).OrderBy(s => s.TECH_DETAIL_ID).ToList() : null;

                #endregion

                #region Model Assign to View Model

                if (generalData != null)
                {

                    // PREFILLED DETAILS                        

                    prefilledDetailsObj.PREFILLED_ID = prefillData.PREFILLED_ID;
                    prefilledDetailsObj.EFORM_ID = prefillData.EFORM_ID;
                    prefilledDetailsObj.IMS_PR_ROAD_CODE = prefillData.IMS_PR_ROAD_CODE;
                    prefilledDetailsObj.ADMIN_SCHEDULE_CODE = prefillData.ADMIN_SCHEDULE_CODE;
                    prefilledDetailsObj.STATE = prefillData.STATE;
                    prefilledDetailsObj.DISTRICT = prefillData.DISTRICT;
                    prefilledDetailsObj.BLOCK = prefillData.BLOCK;
                    prefilledDetailsObj.ROAD_NAME = prefillData.ROAD_NAME;
                    prefilledDetailsObj.QM_NAME = prefillData.QM_NAME;
                    prefilledDetailsObj.PACKAGE_ID = prefillData.PACKAGE_ID;
                    prefilledDetailsObj.QM_TYPE = prefillData.QM_TYPE == null ? "" : prefillData.QM_TYPE;
                    prefilledDetailsObj.PHYSICAL_WORK_STATUS = prefillData.PHYSICAL_WORK_STATUS == null ? "" : prefillData.PHYSICAL_WORK_STATUS;
                    prefilledDetailsObj.CURRENT_STAGE = prefillData.IMS_IS_STAGED == "C" ? "3" : (prefillData.IMS_STAGE_PHASE == "S1" ? "1" : "2");
                    prefilledDetailsObj.SANCTION_LENGTH = prefillData.SANCTION_LENGTH;
                    prefilledDetailsObj.EXECUTED_LENGTH = prefillData.EXECUTED_LENGTH;
                    prefilledDetailsObj.ESTIMATED_COST = prefillData.ESTIMATED_COST;
                    prefilledDetailsObj.AWARDED_COST = prefillData.AWARDED_COST;
                    prefilledDetailsObj.EXPENDITURE_DONE = Math.Round(Convert.ToDecimal(((prefillData.EXPENDITURE_DONE) / 100000).ToString()), 2); ;
                    prefilledDetailsObj.COMPLETION_COST = prefillData.COMPLETION_COST;
                    prefilledDetailsObj.TERRAIN_TYPE = prefillData.TERRAIN_TYPE == null ? "" : prefillData.TERRAIN_TYPE;
                    prefilledDetailsObj.DATE_OF_AWARD_WORK = prefillData.DATE_OF_AWARD_WORK.ToString().Split(' ')[0].Replace('-', '/');
                    prefilledDetailsObj.DATE_OF_START_WORK = prefillData.DATE_OF_START_WORK.ToString().Split(' ')[0].Replace('-', '/');
                    prefilledDetailsObj.STIPULATED_COMPLETION_DATE = prefillData.STIPULATED_COMPLETION_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    prefilledDetailsObj.USER_ID = prefillData.USER_ID;
                    prefilledDetailsObj.IPADD = prefillData.IPADD;

                    piuViewModel.Prefilled_Details = prefilledDetailsObj;


                    // 1. GENERAL                        

                    generalInfoPIUObj.INFO_ID = generalData.INFO_ID;
                    generalInfoPIUObj.EFORM_ID = generalData.EFORM_ID;
                    generalInfoPIUObj.ADMIN_ND_CODE = generalData.ADMIN_ND_CODE;
                    generalInfoPIUObj.PIU_USER_ID = generalData.PIU_USER_ID;
                    generalInfoPIUObj.PR_ROAD_CODE = generalData.PR_ROAD_CODE;
                    generalInfoPIUObj.INSPECTION_DATE = generalData.INSPECTION_DATE == null ? "" : Convert.ToDateTime(generalData.INSPECTION_DATE).ToShortDateString();
                    generalInfoPIUObj.QM_CODE = generalData.QM_CODE;
                    generalInfoPIUObj.SAN_FLEX_PAVEMENT = generalData.SAN_FLEX_PAVEMENT == null ? "" : generalData.SAN_FLEX_PAVEMENT.ToString();
                    generalInfoPIUObj.SAN_RIGID_PAVEMENT = generalData.SAN_FLEX_PAVEMENT == null ? "" : generalData.SAN_RIGID_PAVEMENT.ToString();
                    generalInfoPIUObj.EXEC_FLEX_PAVEMENT = generalData.SAN_FLEX_PAVEMENT == null ? "" : generalData.EXEC_FLEX_PAVEMENT.ToString();
                    generalInfoPIUObj.EXEC_RIGID_PAVEMENT = generalData.SAN_FLEX_PAVEMENT == null ? "" : generalData.EXEC_RIGID_PAVEMENT.ToString();
                    generalInfoPIUObj.DEVIATION_REASON = generalData.DEVIATION_REASON;
                    generalInfoPIUObj.NEW_TECHNOLOGY_NAME = generalData.NEW_TECHNOLOGY_NAME;
                    generalInfoPIUObj.ROAD_FROM = Convert.ToDecimal(generalData.ROAD_FROM);
                    generalInfoPIUObj.ROAD_TO = Convert.ToDecimal(generalData.ROAD_TO);
                    generalInfoPIUObj.TECHNICAL_SANC_COST = generalData.TECHNICAL_SANC_COST;

                    // generalInfoPIUObj.EXPENDITURE_DONE = Math.Round(Convert.ToDecimal(((generalData.EXPENDITURE_DONE)/100000).ToString()),2) ;

                    generalInfoPIUObj.BILLS_PENDING = generalData.BILLS_PENDING;
                    generalInfoPIUObj.WORK_TYPE = generalData.WORK_TYPE;
                    generalInfoPIUObj.TOTAL_LEN = generalData.TOTAL_LEN;
                    generalInfoPIUObj.CARRIAGEWAY_WIDTH_NEW = generalData.CARRIAGEWAY_WIDTH_NEW;
                    generalInfoPIUObj.CARRIAGEWAY_WIDTH_TYPE = generalData.CARRIAGEWAY_WIDTH_TYPE;
                    generalInfoPIUObj.CARRIAGEWAY_WIDTH_EXISTING = Convert.ToString(generalData.CARRIAGEWAY_WIDTH_EXISTING);
                    generalInfoPIUObj.CARRIAGEWAY_WIDTH_PROPOSED = Convert.ToString(generalData.CARRIAGEWAY_WIDTH_PROPOSED);
                    generalInfoPIUObj.CARRIAGEWAY_LENGTH = Convert.ToString(generalData.CARRIAGEWAY_LENGTH);
                    //generalInfoPIUObj.AWARD_OF_WORK_DATE = (Convert.ToDateTime(generalData.AWARD_OF_WORK_DATE)).ToShortDateString();
                    //generalInfoPIUObj.START_OF_WORK_DATE = (Convert.ToDateTime(generalData.START_OF_WORK_DATE)).ToShortDateString();
                    //generalInfoPIUObj.STIPULATED_COMPLETION_DATE = (Convert.ToDateTime(generalData.STIPULATED_COMPLETION_DATE)).ToShortDateString();
                    generalInfoPIUObj.ACTUAL_COMPLETION_DATE = generalData.ACTUAL_COMPLETION_DATE == null ? "" : Convert.ToDateTime(generalData.ACTUAL_COMPLETION_DATE).ToShortDateString();

                    generalInfoPIUObj.PIU_HEAD_NAME = (generalData.PIU_HEAD_NAME == null) ? "" : generalData.PIU_HEAD_NAME;
                    generalInfoPIUObj.PIU_HEAD_MOBILE_NO = (generalData == null) ? "" : generalData.PIU_HEAD_MOBILE_NO;
                    generalInfoPIUObj.PIU_HEAD_EMAIL = (generalData.PIU_HEAD_EMAIL == null) ? "" : generalData.PIU_HEAD_EMAIL;
                    generalInfoPIUObj.PIU_ADDR = (generalData.PIU_ADDR == null) ? "" : generalData.PIU_ADDR;
                    generalInfoPIUObj.PIU_SIGN_DATE = (generalData.PIU_SIGN_DATE == null) ? "" : (Convert.ToDateTime(generalData.PIU_SIGN_DATE)).ToString().Split(' ')[0].Replace('-', '/');
                    generalInfoPIUObj.MIX_DESIGN_APPLICABLE = generalData.MIX_DESIGN_APPLICABLE == null ? "" : generalData.MIX_DESIGN_APPLICABLE.Trim();

                    piuViewModel.GENERAL_INFO_PIU_view = generalInfoPIUObj;


                    // 2. PHYSICAL PROGRESS

                    foreach (var php in physicalProgressDataList)
                    {
                        Physical_Progress_List.Add(new EFORM_PRGS_DETAILS_PIU
                        {
                            ITEM_ID = php.ITEM_ID,
                            IEM_UNIT = php.IEM_UNIT,
                            DPR_QUANTITY = php.DPR_QUANTITY == null ? 0 : Convert.ToDecimal(php.DPR_QUANTITY),
                            EXECUTED_QUANTITY = php.EXECUTED_QUANTITY == null ? 0 : Convert.ToDecimal(php.EXECUTED_QUANTITY),
                            COMPLETED_PERC = php.COMPLETED_PERC == null ? 0 : Convert.ToDecimal(php.COMPLETED_PERC),
                            DUE_START_DATE = (Convert.ToDateTime(php.DUE_START_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                            DUE_END_DATE = (Convert.ToDateTime(php.DUE_END_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                            ACTUAL_START_DATE = php.ACTUAL_START_DATE == null ? "" : (Convert.ToDateTime(php.ACTUAL_START_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                            ACTUAL_END_DATE = php.ACTUAL_END_DATE == null ? "" : (Convert.ToDateTime(php.ACTUAL_END_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                            DELAY_MONTH = php.DELAY_MONTH == null ? "" : Convert.ToDecimal(php.DELAY_MONTH).ToString()
                        }); ;
                    }

                    piuViewModel.Physical_Progress_List = Physical_Progress_List;


                    // 3. QUALITY CONTROL

                    // 3 A. QC Details                            
                    qcDetailsObj.LAB_LOCATION = (qcDetailsData.LAB_LOCATION == null) ? "" : qcDetailsData.LAB_LOCATION;
                    qcDetailsObj.PHOTO_UPLOAD_DATE = (qcDetailsData.PHOTO_UPLOAD_DATE == null) ? "" : (Convert.ToDateTime(qcDetailsData.PHOTO_UPLOAD_DATE)).ToString().Split(' ')[0].Replace('-', '/');
                    qcDetailsObj.ESTB_DELAY_REASON = (qcDetailsData.ESTB_DELAY_REASON == null) ? "" : qcDetailsData.ESTB_DELAY_REASON;
                    qcDetailsObj.LAB_EQUIP_AVBL = (qcDetailsData.LAB_EQUIP_AVBL == null) ? "" : qcDetailsData.LAB_EQUIP_AVBL;
                    qcDetailsObj.EQUIP_WORKING = (qcDetailsData.EQUIP_WORKING == null) ? "" : qcDetailsData.EQUIP_WORKING;
                    qcDetailsObj.EQUIP_NOT_WORKING = (qcDetailsData.EQUIP_NOT_WORKING == null) ? "" : qcDetailsData.EQUIP_NOT_WORKING;
                    qcDetailsObj.LAB_EQUIP_NOT_AVBL = (qcDetailsData.LAB_EQUIP_NOT_AVBL == null) ? "" : qcDetailsData.LAB_EQUIP_NOT_AVBL;
                    qcDetailsObj.REASON_LAB_EQUIP_NOT_AVBL = (qcDetailsData.REASON_LAB_EQUIP_NOT_AVBL == null) ? "" : qcDetailsData.REASON_LAB_EQUIP_NOT_AVBL;
                    qcDetailsObj.DOCUMENT_FOR_QM = (qcDetailsData.DOCUMENT_FOR_QM == null) ? "" : qcDetailsData.DOCUMENT_FOR_QM;

                    piuViewModel.QC_DETAILS_PIU_view = qcDetailsObj;

                    // 3 B. QC OFFICIAL DETAILS LIST
                    foreach (var qcd in qcOfficialDetailsDataList)
                    {
                        QC_Official_Details_List.Add(new EFORM_QC_OFFICIAL_DETAILS_PIU
                        {
                            OFFICIAL_TYPE = (qcd.OFFICIAL_TYPE == null) ? "" : qcd.OFFICIAL_TYPE,
                            OFFICIAL_NAME = (qcd.OFFICIAL_NAME == null) ? "" : qcd.OFFICIAL_NAME,
                            PAN = (qcd.PAN == null) ? "" : qcd.PAN,
                            IDENTITY_NUMBER = (qcd.IDENTITY_NUMBER == null) ? "" : qcd.IDENTITY_NUMBER,
                            MOBILE_NO = (qcd.MOBILE_NO == null) ? "" : qcd.MOBILE_NO,
                            EMAIL_ID = (qcd.EMAIL_ID == null) ? "" : qcd.EMAIL_ID,
                            FROM_DATE = (qcd.FROM_DATE == null) ? "" : (Convert.ToDateTime(qcd.FROM_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                            TO_DATE = (qcd.TO_DATE == null) ? "" : (Convert.ToDateTime(qcd.TO_DATE)).ToString().Split(' ')[0].Replace('-', '/')
                        });
                    }
                    piuViewModel.QC_OFFICIAL_DETAILS_LIST = QC_Official_Details_List;


                    // 4. DETAILS OF MIX DESIGN

                    foreach (var mxd in mixDesignDataList)
                    {
                        Mix_Design_List.Add(new EFORM_MIX_DESIGN_DETAILS_PIU
                        {
                            ITEM_ID = mxd.ITEM_ID,
                            DESIGN_STRENGTH = (mxd.DESIGN_STRENGTH == null) ? "" : mxd.DESIGN_STRENGTH,
                            DESIGN_LAB = (mxd.DESIGN_LAB == null) ? "" : mxd.DESIGN_LAB,
                            DESIGN_DATE = (mxd.DESIGN_DATE == null) ? "" : (Convert.ToDateTime(mxd.DESIGN_DATE)).ToString().Split(' ')[0].Replace('-', '/')
                        });
                    }
                    piuViewModel.MIX_DESIGN_DETAILS_LIST = Mix_Design_List;


                    // 5. EARLIER INSPECTIONS

                    foreach (var pid in previousInspectionDataList)
                    {
                        Previous_Inspection_List.Add(new EFORM_PREVIOUS_INSP_DETAILS_PIU
                        {

                            VISIT_DATE = (pid.VISIT_DATE == null) ? "" : (Convert.ToDateTime(pid.VISIT_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                            VISITOR_NAME_DESG = (pid.VISITOR_NAME_DESG == null) ? "" : pid.VISITOR_NAME_DESG,
                            ROAD_FROM = pid.ROAD_FROM,
                            ROAD_TO = pid.ROAD_TO,
                            INSP_LEVEL = (pid.INSP_LEVEL == null) ? "" : pid.INSP_LEVEL,
                            OBSERVATIONS = (pid.OBSERVATIONS == null) ? "" : pid.OBSERVATIONS,
                            ACTION = (pid.ACTION == null) ? "" : pid.ACTION
                        });
                    }
                    piuViewModel.PREVIOUS_INSP_DETAILS_LIST = Previous_Inspection_List;


                    // TABLE HEADERS LIST

                    foreach (var thd in tableHeaderslist)
                    {
                        Work_Items_List.Add(new EFORM_WORK_ITEM
                        {
                            ITEM_ID = thd.ITEM_ID,
                            ITEM_DESC = thd.ITEM_DESC,
                            ITEM_FLAG = thd.ITEM_FLAG
                        });
                    }
                    piuViewModel.Work_Item_List = Work_Items_List;


                    // NEW TECHNOLOGY LIST added on 13-04-2022
                    if (PIU_NewTechnologyList != null)
                    {
                        int rowCount = 0;

                        foreach (var thd in PIU_NewTechnologyList)
                        {
                            NewTechnology_PIU_List.Add(new NewTechPIU_ViewModel
                            {
                                TECH_ID = thd.TECH_ID,
                                EFORM_ID = thd.EFORM_ID,
                                IMS_PR_ROAD_CODE = thd.IMS_PR_ROAD_CODE,

                                MAST_TECH_NAME = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == thd.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault(),
                                RD_FROM = thd.RD_FROM,
                                RD_TO = thd.RD_TO,
                                RowId = rowCount++,
                            });
                        }
                        piuViewModel.NewTechnology_PIU_List = NewTechnology_PIU_List;
                    }

                    return piuViewModel;
                }
                return null;

                #endregion
            }
            catch (Exception ex)
            {
                return null;
            }
            finally
            {
                if (dbContext != null)
                    dbContext.Dispose();
            }
        }


        #endregion

        #region NQM_SQM_demo
        //     COMMENTED ON 25-05-2023
        //public Array GetQMWorkListDal(int month, int year, int stateCode, int districtCode, string eformStatus, string eFormType, int? page, int? rows, string sidx, string sord, out long totalRecords)
        //{
        //    string date = string.Empty;
        //    PMGSYEntities eformdbContext = new PMGSYEntities();

        //    string type = string.Empty;
        //    bool UserActiveStatus = true;
        //    bool UserActiveStatusTR = true;
        //    if (PMGSYSession.Current.RoleCode == 6)
        //    {
        //        type = "I";
        //    }
        //    else if (PMGSYSession.Current.RoleCode == 7)
        //    {
        //        type = "S";
        //        if (stateCode == 0)
        //        {
        //            stateCode = PMGSYSession.Current.StateCode;
        //        }
        //    }
        //    else if (PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69)
        //    {
        //        type = "O";
        //        stateCode = PMGSYSession.Current.StateCode;
        //    }
        //    else
        //    {
        //        type = "O";
        //    }
        //    int userId = PMGSYSession.Current.UserId;
        //    int admnQmCode = eformdbContext.ADMIN_QUALITY_MONITORS.Where(s => s.ADMIN_USER_ID == userId).Select(m => m.ADMIN_QM_CODE).FirstOrDefault();

        //    try
        //    {
        //        string EnabledUserName = System.Configuration.ConfigurationManager.AppSettings["EnabledUserName"];
        //        if (!string.IsNullOrEmpty(EnabledUserName))
        //        {
        //            string[] EnabledUserNameList = EnabledUserName.Split(',');
        //            if (!EnabledUserNameList.Contains(PMGSYSession.Current.UserName))
        //            {
        //                UserActiveStatusTR = false;
        //                //  UserActiveStatus = false;
        //            }

        //        }
        //        UserActiveStatusTR = true;
        //        bool uploadRestrictStatus = true;

        //        if (year == System.DateTime.Now.Year)// If inspection year is current year
        //        {
        //            if (month == System.DateTime.Now.Month) // If inspection year is current year and inspection month is current month
        //            {
        //                uploadRestrictStatus = false;
        //            }
        //            else if (month + 1 == System.DateTime.Now.Month && System.DateTime.Now.Day <= 7)  // If inspection year is current year and inspection month is previous month
        //            {
        //                uploadRestrictStatus = false;
        //            }

        //        }
        //        else if (year + 1 == System.DateTime.Now.Year) // If inspection year is previous year
        //        {
        //            if (month == 12 && System.DateTime.Now.Month == 1 && System.DateTime.Now.Day <= 7)  // If inspection year is previous year && inspection month is december && current date less than 7th of jan
        //            {
        //                uploadRestrictStatus = false;
        //            }

        //        }
        //        // uploadRestrictStatus = false;

        //        #region Provision for QM to fill e-form till allowed date

        //        AddXmlFileUser userdata;
        //        //AddXmlFile_State statedata;
        //        List<AddXmlFileUser> userdata_list = new List<AddXmlFileUser>();
        //        //List<AddXmlFile_State> statedata_list = new List<AddXmlFile_State>();

        //        if (System.IO.File.Exists(System.Web.HttpContext.Current.Server.MapPath("~/AllowUserToInspectWorks_EformPart2.xml")))
        //        { // Create a file to write to   
        //            XDocument doc = XDocument.Load(System.Web.HttpContext.Current.Server.MapPath("~/AllowUserToInspectWorks_EformPart2.xml"));

        //            foreach (XElement element in doc.Descendants("eFormdatainfo")
        //                .Descendants("User"))
        //            {
        //                userdata = new AddXmlFileUser();
        //                userdata.UserId = Convert.ToInt32(element.Element("UserId").Value);
        //                userdata.QM_TYPE = element.Element("QM_TYPE").Value.ToString();
        //                userdata.MAST_STATE_CODE = Convert.ToInt32(element.Element("MAST_STATE_CODE").Value);
        //                userdata.schMonth = Convert.ToInt32(element.Element("schMonth").Value);
        //                userdata.ToschMonth = Convert.ToInt32(element.Element("ToschMonth").Value);
        //                userdata.schYear = Convert.ToInt32(element.Element("schYear").Value);
        //                userdata.ToMonth = Convert.ToInt32(element.Element("ToMonth").Value);
        //                userdata.ToYear = Convert.ToInt32(element.Element("ToYear").Value);
        //                userdata.ToDate = Convert.ToInt32(element.Element("ToDate").Value);
        //                userdata_list.Add(userdata);
        //            }
        //        }
        //        int currentMonth = System.DateTime.Now.Month;
        //        int currentYear = System.DateTime.Now.Year;
        //        int currentDay = System.DateTime.Now.Day;
        //        foreach (var userlist in userdata_list)
        //        {
        //            if ((userlist.MAST_STATE_CODE > 0 && userlist.MAST_STATE_CODE == PMGSYSession.Current.StateCode) || (userlist.UserId == PMGSYSession.Current.UserId && userlist.QM_TYPE == type))
        //            {
        //                if (userlist.schMonth <= month && userlist.ToschMonth >= month && userlist.schYear == year && userlist.ToYear >= currentYear)
        //                {
        //                    if (userlist.ToYear > userlist.schYear)
        //                    {
        //                        if (currentYear < userlist.ToYear)
        //                        {
        //                            uploadRestrictStatus = false;
        //                            break;
        //                        }
        //                        if (currentYear == userlist.ToYear)
        //                        {
        //                            if ((currentMonth == userlist.ToMonth && userlist.ToDate >= currentDay) || (currentMonth < userlist.ToMonth))
        //                            {
        //                                uploadRestrictStatus = false;
        //                                break;
        //                            }
        //                        }

        //                    }
        //                    if (userlist.ToYear == userlist.schYear)
        //                    {
        //                        if ((currentMonth == userlist.ToMonth && userlist.ToDate >= currentDay) || (currentMonth < userlist.ToMonth))
        //                        {
        //                            uploadRestrictStatus = false;
        //                            break;
        //                        }
        //                    }

        //                }

        //            }

        //        }

        //        #endregion


        //        List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result> lstExecution1 = new List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
        //        List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result> lstExecutiontemp2 = new List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
        //        //int stateCode = eformdbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == districtCode).Select(x => x.MAST_STATE_CODE).FirstOrDefault();
        //        lstExecution1 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST(type, month, year, stateCode, districtCode, eformStatus, admnQmCode, eFormType).ToList<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
        //        //    var lstExecution1 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST("O", month, year, stateCode, districtCode, eformStatus, 0, eFormType).ToList();
        //        //if (dbContext.ADMIN_QUALITY_MONITORS_INTER_STATE.Any(s => s.ADMIN_QM_CODE == admnQmCode))
        //        //{
        //        //    QUALITY_QM_SCHEDULE obj = dbContext.QUALITY_QM_SCHEDULE.Where(s => s.ADMIN_IM_MONTH == month && s.ADMIN_IM_YEAR == year && s.ADMIN_QM_CODE == admnQmCode).FirstOrDefault();
        //        //    if (obj != null && obj.MAST_STATE_CODE != stateCode)
        //        //    {
        //        //        string interDistName = dbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == obj.MAST_DISTRICT_CODE).Select(m => m.MAST_DISTRICT_NAME).FirstOrDefault().ToString();
        //        //        if ((dbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == districtCode).Select(m => m.MAST_DISTRICT_NAME).FirstOrDefault().ToString()).Equals(interDistName))
        //        //        {
        //        //            lstExecutiontemp2 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST(type, month, year, obj.MAST_STATE_CODE, obj.MAST_DISTRICT_CODE, eformStatus, admnQmCode, eFormType).ToList<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
        //        //            lstExecution1.AddRange(lstExecutiontemp2);
        //        //        }

        //        //    }
        //        //}

        //        var lstExecution = lstExecution1.Where(s => s.WORK_INSPECTION_STATUS != "M").ToList();
        //        totalRecords = lstExecution.Count();
        //        List<PdfRoadListModel> lisModel = new List<PdfRoadListModel>();
        //        foreach (var item in lstExecution)
        //        {
        //            var piufile_Status = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && x.USER_TYPE == "P" && x.EFORM_ID == item.EFORM_ID).Select(x => x.FILE_NAME).FirstOrDefault();

        //            string isPIUfilnalized = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(s => s.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && s.EFORM_ID == item.EFORM_ID && s.USER_TYPE == "P").Select(x => x.IS_FINALISED).FirstOrDefault();
        //            var isPIUfileupload = "N";
        //            if (piufile_Status != null)
        //            {
        //                isPIUfileupload = "Y";
        //            }

        //            string status_QMfin = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(s => s.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && s.EFORM_ID == item.EFORM_ID && s.USER_TYPE == "Q").Select(x => x.IS_FINALISED).FirstOrDefault();
        //            var qmfile_Status = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && x.USER_TYPE == "Q" && x.EFORM_ID == item.EFORM_ID).Select(x => x.FILE_NAME).FirstOrDefault();
        //            var isQMfileupload = "N";
        //            if (qmfile_Status != null)
        //            {
        //                isQMfileupload = "Y";
        //            }

        //            //Ajinkya
        //            var TRfile1_Status = eformdbContext.EFORM_TEST_REPORT_FILE.Where(x => x.EFORM_ID == item.EFORM_ID && x.IS_EFORM=="N").Select(x => x.FILE_NAME).FirstOrDefault();
        //            var isTRfileuploaded = "N";
        //            if (TRfile1_Status != null)
        //            {
        //                isTRfileuploaded = "Y";
        //            }

        //            var TRfileName = eformdbContext.EFORM_TEST_REPORT_FILE.Where(x => x.EFORM_ID == item.EFORM_ID && x.IS_EFORM == "Y").Select(x => x.FILE_NAME).FirstOrDefault();
        //            var isTrEform = "N";
        //            if (TRfileName != null)
        //            {
        //                if (TRfileName.Contains('$'))
        //                {
        //                    isTrEform = "Y";
        //                }

        //            }





        //            var isAllPdfUpload = "N";
        //            if (eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Any(s => s.EFORM_ID == item.EFORM_ID && s.USER_TYPE == "Q" && s.IS_FINALISED == "Y"))
        //            {
        //                if (eformdbContext.EFORM_TEST_REPORT_FILE.Any(s => s.EFORM_ID == item.EFORM_ID && s.IS_FINALISED == "Y" && s.IS_EFORM=="Y"))
        //                {
        //                    isAllPdfUpload = "Y";
        //                }
        //            }




        //            string status_Trfin = eformdbContext.EFORM_TEST_REPORT_FILE.Where(x => x.EFORM_ID == item.EFORM_ID && x.IS_EFORM=="Y").Select(x => x.IS_FINALISED).FirstOrDefault();
        //            //Ajinkya

        //            var execLength = eformdbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == item.EFORM_ID).Select(s => s.EXECUTED_LENGTH).FirstOrDefault();
        //            lisModel.Add(new PdfRoadListModel
        //            {
        //                EFORM_ID = item.EFORM_ID,
        //                PIUfinalize_status = isPIUfilnalized,
        //                MAST_PMGSY_SCHEME = Convert.ToInt32(item.MAST_PMGSY_SCHEME),
        //                District = item.MAST_DISTRICT_NAME,
        //                Block = item.MAST_BLOCK_NAME,
        //                PIU_Name = item.MAST_DPIU_NAME,
        //                IMS_ROAD_NAME = item.IMS_ROAD_NAME,
        //                IMS_PACKAGE_ID = item.IMS_PACKAGE_ID,
        //                SANCTION_YEAR = item.IMS_YEAR.ToString(),
        //                SANCTION_length = item.IMS_PAV_LENGTH,
        //                EXECUTED_length = item.EXEC_COMPLETED,
        //                Completion_Date = item.EXEC_COMPLETION_DATE.ToString().Replace("-", "/"),
        //                Work_Status = item.WORK_INSPECTION_STATUS,
        //                ADMIN_QM_CODE = item.ADMIN_QM_CODE.ToString(),
        //                IMS_YEAR = item.IMS_YEAR,
        //                QM_NAME = item.MONITOR_NAME,
        //                QM_TYPE = item.MONITOR_TYPE,
        //                IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
        //                ADMIN_SCHEDULE_CODE = item.ADMIN_SCHEDULE_CODE,
        //                ADMIN_SCHEDULE_MONTH = item.ADMIN_IM_MONTH,
        //                ADMIN_SCHEDULE_YEAR = item.ADMIN_IM_YEAR,
        //                UserStatus = UserActiveStatus,
        //                UserStatusTR = UserActiveStatusTR,
        //                isPIUfileupload = isPIUfileupload,
        //                isQMfileupload = isQMfileupload,
        //                isQMfinalised = status_QMfin,
        //                IMS_PROPOSAL_TYPE = item.IMS_PROPOSAL_TYPE,

        //                //Ajinkya
        //                isTRfileuploaded = isTRfileuploaded,
        //                isTrEform = isTrEform,
        //                isTRfinalised = status_Trfin,
        //                isAllPdfUpload = isAllPdfUpload,
        //            });

        //        }


        //        if (sidx.Trim() != string.Empty)
        //        {
        //            if (sord.ToString() == "asc")
        //            {
        //                switch (sidx)
        //                {
        //                    case "District":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.District).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "Block":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Block).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "QM_NAME":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.QM_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "IMS_ROAD_NAME":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_ROAD_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "IMS_PACKAGE_ID":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_PACKAGE_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "IMS_YEAR":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_YEAR).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "SANCTION_length":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.SANCTION_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "EXECUTED_length":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EXECUTED_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "Completion_Date":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Completion_Date).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "Work_Status":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Work_Status).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    default:
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                }
        //            }
        //            else
        //            {
        //                switch (sidx)
        //                {

        //                    case "District":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.District).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "Block":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Block).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "QM_NAME":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.QM_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "IMS_ROAD_NAME":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_ROAD_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "IMS_PACKAGE_ID":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_PACKAGE_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "IMS_YEAR":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_YEAR).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "SANCTION_length":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.SANCTION_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "EXECUTED_length":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.EXECUTED_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "Completion_Date":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Completion_Date).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    case "Work_Status":
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Work_Status).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                    default:
        //                        lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //                        break;
        //                }
        //            }
        //        }
        //        else
        //        {
        //            lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
        //        }



        //        return lisModel.Select(m => new
        //        {
        //            id = m.IMS_PR_ROAD_CODE.ToString(),
        //            cell = new[]
        //            {
        //                  URLEncrypt.EncryptParameters1(new string[] { "IMS_road_code =" + m.IMS_PR_ROAD_CODE.ToString() }),
        //                    m.EFORM_ID.ToString(),
        //                  m.District == null?string.Empty:m.District.ToString(),
        //                  m.Block == null?string.Empty:m.Block.ToString(),
        //                  m.QM_NAME == null?string.Empty:m.QM_NAME.ToString(),
        //                      m.IMS_PROPOSAL_TYPE==null?string.Empty:(m.IMS_PROPOSAL_TYPE=="L"?"Bridge":"Road"),
        //                  m.IMS_ROAD_NAME == null?string.Empty:m.IMS_ROAD_NAME.ToString(),
        //                  m.IMS_PACKAGE_ID == null?string.Empty:m.IMS_PACKAGE_ID.ToString(),
        //                  m.SANCTION_YEAR == null?string.Empty:m.SANCTION_YEAR.ToString(),
        //                  m.SANCTION_length == null?string.Empty:m.SANCTION_length.ToString(),
        //                  m.EXECUTED_length==null?"-":m.EXECUTED_length.ToString(),
        //                  m.Completion_Date == null?string.Empty:m.Completion_Date.ToString().Split(' ')[0].ToString(),
        //                  m.Work_Status == null?string.Empty:( m.Work_Status=="C"?"Completed":"In Progress"),


        //                //PIU 
        //                //part1 physical path view
        //                  //  ((PMGSYSession.Current.RoleCode==7||  PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) && m.isPIUfileupload=="Y" && m.PIUfinalize_status=="Y" ?  "<a href='/Eform/GetReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),
        //                //Virtual dir part-1 pdf view
        //                 ( m.isPIUfileupload=="Y" && m.PIUfinalize_status=="Y" ? "<a href='#' title='Click here to view  pdf'  onClick='viewPart1PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>"   :"-"),

        //                    #region eform test report



        //                //Test report e_form
        //                (m.UserStatusTR?
        //                (m.IMS_PROPOSAL_TYPE=="L"?"NA": ((PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) /*&& m.isQMfinalised!="Y"*/ && m.UserStatus==true  ? "<a type='button' href='/Eform/GetDownloadedTRPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+ "$"+m.EFORM_ID.ToString()+"$"+m.Work_Status})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>"   : "-" ) )
        //                :"-"),


        //                (m.UserStatusTR?
        //               (m.IMS_PROPOSAL_TYPE=="L"?"NA"    //(/*m.isQMfinalised=="Y" &&*/ m.isTRfinalised!="Y" && m.UserStatus==true ?"<input type='file' name='testreportfile_Upload' id=\"file2"+m.EFORM_ID+"\" /><input type='button' id='btntestteportUpload' value='Upload' onClick='uploadTestRepotPdfFile(\""+ m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />":"-")
        //               :(uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'  />" :   (/*m.isQMfinalised=="Y" &&*/ m.isTRfinalised!="Y" && m.UserStatus==true ?"<input type='file' name='testreportfile_Upload' id=\"file1"+m.EFORM_ID+"\" /><input type='button' id='btntestteportUpload' value='Upload' onClick='uploadTRPdfFile(\""+ m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />":"-")))
        //                :"-"),


        //              // Added by Rohit Borse for Test Report Preview
        //              (m.IMS_PROPOSAL_TYPE=="L"?"-":m.isTRfileuploaded=="Y" && m.isTRfinalised=="Y" && m.isTrEform=="Y" && (PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 || PMGSYSession.Current.RoleCode == 9 )? "<input type='button' value='Preview' onClick=previewTestReport('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />"
        //              :(m.isTRfileuploaded=="Y" && m.isTrEform=="Y" && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 )? "<input type='button' value='Preview' onClick=previewTestReport('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />":(m.isTRfileuploaded=="Y" && m.isTrEform=="N"?"NA":"-"))),



        //                //Physical Test Report view
        //              //  (m.IMS_PROPOSAL_TYPE=="L"?"-"   //(m.isTRfinalised=="Y" && m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>": ( m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>"     : "-"))
        //               // :  (m.isTRfinalised=="Y" && m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>": ( m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>"     : "-"))),

        //                //Virtual dir Test Report view
        //                (m.IMS_PROPOSAL_TYPE=="L"?"-": (m.isTRfinalised=="Y" && m.isTRfileuploaded=="Y" && m.UserStatus==true &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) &&  m.isPIUfileupload=="Y" ?  "<a href='#' title='Click here to view e-Form Test Report pdf'  onClick='viewTRPdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":(m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='#' title='Click here to view e-Form Test Report pdf'  onClick='viewTRPdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"))),


        //                   (m.IMS_PROPOSAL_TYPE=="L"?"-"   //(m.isTRfileuploaded=="Y" && m.isTRfinalised!="Y" && m.UserStatus==true    ?  "<span   id='btnDeletetr' value='Delete Test Report' onClick='deleteTestReportPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-")
        //                :(uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'  />" : (m.isTRfileuploaded=="Y" && m.isTRfinalised!="Y" && m.UserStatus==true    ?  "<span   id='btnDeletetr' value='Delete Test Report' onClick='deleteTRPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"))),


        //                (m.IMS_PROPOSAL_TYPE=="L"?"-"   //(m.isTRfinalised!="Y"  && m.UserStatus==true ?  "<span   id='btnFinalizeTR' value='Finalize eForm' onClick='finalizeTRPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isTRfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-"))
        //                : (m.isTRfinalised!="Y"  && m.UserStatus==true ?  "<span   id='btnFinalizeTR' value='Finalize eForm' onClick='finalizeTRPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isTRfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-"))),


        //                #endregion


        //                #region TEST REPORT SCAN COPY
        //                 //Ajinkya
        //                (m.isQMfinalised=="Y" && m.isTRfinalised!="Y" && m.UserStatus==true ?"<input type='file' name='testreportfile_Upload' id=\"file"+m.EFORM_ID+"\" /><input type='button' id='btntestteportUpload' value='Upload' onClick='uploadTestRepotPdfFile(\""+ m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />":"-"),
        //                (m.isTRfileuploaded=="Y" && m.isTRfinalised!="Y" && m.UserStatus==true    ?  "<span   id='btnDeletetr' value='Delete Test Report' onClick='deleteTestReportPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"),
        //                (m.isTRfinalised=="Y" && m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>": ( m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>"     : "-")),
        //                (m.isTRfinalised!="Y"  && m.UserStatus==true ?  "<span   id='btnFinalizeTR' value='Finalize eForm' onClick='finalizeTRPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isTRfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-")),


        //                #endregion


        //                #region eform part2

        //                ((PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="P" ? "<a type='button' href='/Eform/GetDownloadedQMPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+ "$"+m.EFORM_ID.ToString()+"$"+m.Work_Status})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>"   :  (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="L" ? "<a type='button' href='/Eform/GetDownloadedBRIDGEQMPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+ "$"+m.EFORM_ID.ToString()+"$"+m.Work_Status})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>" : "-" )  ,

        //                // change on 06-07-2022
        //                 (uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'  />" : ((PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="P" ?  "<input type='file' name='file_Upload' id=\"file"+m.EFORM_ID+"\" /><input type='button' id='btnUpload' value='Upload' onClick='uploadQMPdfFile(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />"  : (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="L" && m.isQMfinalised!="Y" ?  "<input type='file' name='file_Upload' id=\"file"+m.EFORM_ID+"\" /><input type='button' id='btnUpload' value='Upload' onClick='uploadBridgeQMPdfFile(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />"  :  "-") )    ,



        //                   (m.isQMfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "P"  ?  "<input type='button' id='btnViewPDF' value='Preview' onClick=viewQMPdfData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />"
        //                                                                    :(m.isQMfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "L" ? "<input type='button' id='btnViewPDF' value='Preview' onClick=viewBridgeQMData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />" :"-")),


        //                //part2 physical path view
        //               // (  m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5)  ?  "<a href='/Eform/GetQMReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),

        //             //part2 virtual path view
        //                (  m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5)  ?  "<a href='#' title='Click here to view  pdf'  onClick='viewPart2PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),


        //                (uploadRestrictStatus==true?"<span  class='ui-icon  ui-icon-locked  ui-align-center'  />":  ( m.isQMfileupload=="Y" && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="P"   ?  "<span   id='btnDelete' value='Delete eForm' onClick='deleteQMPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":(m.isQMfileupload=="Y" && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="L"   ?  "<span   id='btnDelete' value='Delete eForm' onClick='deleteBridgeQMPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"))),
        //                (   m.isQMfinalised!="Y" &&  m.UserStatus==true ?  "<span   id='btnFinalize' value='Finalize eForm' onClick='finalizeQMPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isQMfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-")),



        //                 //CQC  
        //                 //CQC part2 physical path view
        //            //   (  m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69)  ?  "<a href='/Eform/GetQMReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),

        //                 //CQC part2 virtual path view
        //                  (  m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5)  ?  "<a href='#' title='Click here to view  pdf'  onClick='viewPart2PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),


        //                  //CQC combine pdf physical path view
        //              // (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) &&  m.isPIUfileupload=="Y" ?  "<a href='/Eform/GetCombineReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view part-I,II pdf'    target=_blank><input type='button' value='View'/></a>":"-"),

        //                //CQC combine pdf virtual path view
        //                 // (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5) &&  m.isPIUfileupload=="Y" ?  "<a href='#' title='Click here to view  pdf'  onClick='viewCombinePdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),

        //                     //CQC combine pdf(part1+part2) physical path view(onfly)
        //              (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) &&  m.isPIUfileupload=="Y" ?  "<a href='#' title='Click here to view e-Form combined part-1,part-2 pdf'  onClick='viewCombinedPart_1_2_Pdf(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),


        //                (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && m.isPIUfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "P" && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) ?  "<input type='button' id='btnViewPDF' value='Preview' onClick=viewCombinePdfData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />" : m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && m.isPIUfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "L" && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) ? "<input type='button' id='btnViewPDF' value='Preview' onClick=PreviewBridgeCQC('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "'); target=_blank />" : "-"),


        //                #endregion

        //                #region combined pdf part1,2,test report
        //              (m.IMS_PROPOSAL_TYPE=="L"?"-" :  (m.isAllPdfUpload=="Y"? "<a href='#' title='Click here to view e-Form combined part-1,part-2 and Test Report pdf'  onClick='viewCombinedPart_1_2_TR_Pdf(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-")),

        //                #endregion


        //            }
        //        }).ToArray();


        //    }
        //    catch (Exception ex)
        //    {
        //        totalRecords = 0;
        //        ErrorLog.LogError(ex, "PDFDataDal.GetQMWorkListDal()");
        //        return null;
        //    }
        //    finally
        //    {
        //        eformdbContext.Dispose();
        //    }
        //}


        public Array GetQMWorkListDal(int month, int year, int stateCode, int districtCode, string eformStatus, string eFormType, int? page, int? rows, string sidx, string sord, out long totalRecords)
        {
            string date = string.Empty;
            PMGSYEntities eformdbContext = new PMGSYEntities();

            string type = string.Empty;
            bool UserActiveStatus = true;
            bool UserActiveStatusTR = true;
            if (PMGSYSession.Current.RoleCode == 6)
            {
                type = "I";
            }
            else if (PMGSYSession.Current.RoleCode == 7)
            {
                type = "S";
                if (stateCode == 0)
                {
                    stateCode = PMGSYSession.Current.StateCode;
                }
            }
            else if (PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69)
            {
                type = "O";
                stateCode = PMGSYSession.Current.StateCode;
            }
            else
            {
                type = "O";
            }
            int userId = PMGSYSession.Current.UserId;
            int admnQmCode = eformdbContext.ADMIN_QUALITY_MONITORS.Where(s => s.ADMIN_USER_ID == userId).Select(m => m.ADMIN_QM_CODE).FirstOrDefault();

            try
            {
                string EnabledUserName = System.Configuration.ConfigurationManager.AppSettings["EnabledUserName"];
                if (!string.IsNullOrEmpty(EnabledUserName))
                {
                    string[] EnabledUserNameList = EnabledUserName.Split(',');
                    if (!EnabledUserNameList.Contains(PMGSYSession.Current.UserName))
                    {
                        UserActiveStatusTR = false;
                        //  UserActiveStatus = false;
                    }

                }
                UserActiveStatusTR = true;
                bool uploadRestrictStatus = true;

                if (year == System.DateTime.Now.Year)// If inspection year is current year
                {
                    if (month == System.DateTime.Now.Month) // If inspection year is current year and inspection month is current month
                    {
                        uploadRestrictStatus = false;
                    }
                    else if (month + 1 == System.DateTime.Now.Month && System.DateTime.Now.Day <= 7)  // If inspection year is current year and inspection month is previous month
                    {
                        uploadRestrictStatus = false;
                    }

                }
                else if (year + 1 == System.DateTime.Now.Year) // If inspection year is previous year
                {
                    if (month == 12 && System.DateTime.Now.Month == 1 && System.DateTime.Now.Day <= 7)  // If inspection year is previous year && inspection month is december && current date less than 7th of jan
                    {
                        uploadRestrictStatus = false;
                    }

                }
                // uploadRestrictStatus = false;

                #region Provision for QM to fill e-form till allowed date

                AddXmlFileUser userdata;
                //AddXmlFile_State statedata;
                List<AddXmlFileUser> userdata_list = new List<AddXmlFileUser>();
                //List<AddXmlFile_State> statedata_list = new List<AddXmlFile_State>();

                if (System.IO.File.Exists(System.Web.HttpContext.Current.Server.MapPath("~/AllowUserToInspectWorks_EformPart2.xml")))
                { // Create a file to write to   
                    XDocument doc = XDocument.Load(System.Web.HttpContext.Current.Server.MapPath("~/AllowUserToInspectWorks_EformPart2.xml"));

                    foreach (XElement element in doc.Descendants("eFormdatainfo")
                        .Descendants("User"))
                    {
                        userdata = new AddXmlFileUser();
                        userdata.UserId = Convert.ToInt32(element.Element("UserId").Value);
                        userdata.QM_TYPE = element.Element("QM_TYPE").Value.ToString();
                        userdata.MAST_STATE_CODE = Convert.ToInt32(element.Element("MAST_STATE_CODE").Value);
                        userdata.schMonth = Convert.ToInt32(element.Element("schMonth").Value);
                        userdata.ToschMonth = Convert.ToInt32(element.Element("ToschMonth").Value);
                        userdata.schYear = Convert.ToInt32(element.Element("schYear").Value);
                        userdata.ToMonth = Convert.ToInt32(element.Element("ToMonth").Value);
                        userdata.ToYear = Convert.ToInt32(element.Element("ToYear").Value);
                        userdata.ToDate = Convert.ToInt32(element.Element("ToDate").Value);
                        userdata_list.Add(userdata);
                    }
                }
                int currentMonth = System.DateTime.Now.Month;
                int currentYear = System.DateTime.Now.Year;
                int currentDay = System.DateTime.Now.Day;
                foreach (var userlist in userdata_list)
                {
                    if ((userlist.MAST_STATE_CODE > 0 && userlist.MAST_STATE_CODE == PMGSYSession.Current.StateCode) || (userlist.UserId == PMGSYSession.Current.UserId && userlist.QM_TYPE == type))
                    {
                        if (userlist.schMonth <= month && userlist.ToschMonth >= month && userlist.schYear == year && userlist.ToYear >= currentYear)
                        {
                            if (userlist.ToYear > userlist.schYear)
                            {
                                if (currentYear < userlist.ToYear)
                                {
                                    uploadRestrictStatus = false;
                                    break;
                                }
                                if (currentYear == userlist.ToYear)
                                {
                                    if ((currentMonth == userlist.ToMonth && userlist.ToDate >= currentDay) || (currentMonth < userlist.ToMonth))
                                    {
                                        uploadRestrictStatus = false;
                                        break;
                                    }
                                }

                            }
                            if (userlist.ToYear == userlist.schYear)
                            {
                                if ((currentMonth == userlist.ToMonth && userlist.ToDate >= currentDay) || (currentMonth < userlist.ToMonth))
                                {
                                    uploadRestrictStatus = false;
                                    break;
                                }
                            }

                        }

                    }

                }

                #endregion


                List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result> lstExecution1 = new List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
                List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result> lstExecutiontemp2 = new List<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
                //int stateCode = eformdbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == districtCode).Select(x => x.MAST_STATE_CODE).FirstOrDefault();
                lstExecution1 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST(type, month, year, stateCode, districtCode, eformStatus, admnQmCode, eFormType).ToList<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
                //    var lstExecution1 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST("O", month, year, stateCode, districtCode, eformStatus, 0, eFormType).ToList();
                //if (dbContext.ADMIN_QUALITY_MONITORS_INTER_STATE.Any(s => s.ADMIN_QM_CODE == admnQmCode))
                //{
                //    QUALITY_QM_SCHEDULE obj = dbContext.QUALITY_QM_SCHEDULE.Where(s => s.ADMIN_IM_MONTH == month && s.ADMIN_IM_YEAR == year && s.ADMIN_QM_CODE == admnQmCode).FirstOrDefault();
                //    if (obj != null && obj.MAST_STATE_CODE != stateCode)
                //    {
                //        string interDistName = dbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == obj.MAST_DISTRICT_CODE).Select(m => m.MAST_DISTRICT_NAME).FirstOrDefault().ToString();
                //        if ((dbContext.MASTER_DISTRICT.Where(s => s.MAST_DISTRICT_CODE == districtCode).Select(m => m.MAST_DISTRICT_NAME).FirstOrDefault().ToString()).Equals(interDistName))
                //        {
                //            lstExecutiontemp2 = eformdbContext.USP_EFORMS_GET_SCHEDULE_WORKLIST(type, month, year, obj.MAST_STATE_CODE, obj.MAST_DISTRICT_CODE, eformStatus, admnQmCode, eFormType).ToList<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>();
                //            lstExecution1.AddRange(lstExecutiontemp2);
                //        }

                //    }
                //}

                var lstExecution = lstExecution1.Where(s => s.WORK_INSPECTION_STATUS != "M").ToList();
                totalRecords = lstExecution.Count();
                List<PdfRoadListModel> lisModel = new List<PdfRoadListModel>();
                foreach (var item in lstExecution)
                {
                    //var piufile_Status = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && x.USER_TYPE == "P" && x.EFORM_ID == item.EFORM_ID).Select(x => x.FILE_NAME).FirstOrDefault();

                    //string isPIUfilnalized = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(s => s.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && s.EFORM_ID == item.EFORM_ID && s.USER_TYPE == "P").Select(x => x.IS_FINALISED).FirstOrDefault();
                    //var isPIUfileupload = "N";
                    //if (piufile_Status != null)
                    //{
                    //    isPIUfileupload = "Y";
                    //}

                    //string status_QMfin = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(s => s.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && s.EFORM_ID == item.EFORM_ID && s.USER_TYPE == "Q").Select(x => x.IS_FINALISED).FirstOrDefault();
                    //var qmfile_Status = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.PR_ROAD_CODE == item.IMS_PR_ROAD_CODE && x.USER_TYPE == "Q" && x.EFORM_ID == item.EFORM_ID).Select(x => x.FILE_NAME).FirstOrDefault();
                    //var isQMfileupload = "N";
                    //if (qmfile_Status != null)
                    //{
                    //    isQMfileupload = "Y";
                    //}

                    ////Ajinkya
                    //var TRfile1_Status = eformdbContext.EFORM_TEST_REPORT_FILE.Where(x => x.EFORM_ID == item.EFORM_ID && x.IS_EFORM == "N").Select(x => x.FILE_NAME).FirstOrDefault();
                    //var isTRfileuploaded = "N";
                    //if (TRfile1_Status != null)
                    //{
                    //    isTRfileuploaded = "Y";
                    //}

                    //var TRfileName = eformdbContext.EFORM_TEST_REPORT_FILE.Where(x => x.EFORM_ID == item.EFORM_ID && x.IS_EFORM == "Y").Select(x => x.FILE_NAME).FirstOrDefault();
                    //var isTrEform = "N";
                    //if (TRfileName != null)
                    //{
                    //    if (TRfileName.Contains('$'))
                    //    {
                    //        isTrEform = "Y";
                    //    }

                    //}
                    var isItem3Uploaded = "Y";
                    if (item.IS_E_P2_UPLOAD=="Y")
                    {
                        if (eformdbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Any(s => s.EFORM_ID == item.EFORM_ID && s.ITEM_3=="Y"))
                        {
                            if (!eformdbContext.EFORM_QM_QC_TEST_DETAILS.Any(s => s.EFORM_ID == item.EFORM_ID))
                            {
                                isItem3Uploaded = "N";
                            }
                        }
                    }
 



                    var isAllPdfUpload = "N";
                    if (eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Any(s => s.EFORM_ID == item.EFORM_ID && s.USER_TYPE == "Q" && s.IS_FINALISED == "Y"))
                    {
                        if (eformdbContext.EFORM_TEST_REPORT_FILE.Any(s => s.EFORM_ID == item.EFORM_ID && s.IS_FINALISED == "Y" && s.IS_EFORM == "Y"))
                        {
                            isAllPdfUpload = "Y";
                        }
                    }




                    //  string status_Trfin = eformdbContext.EFORM_TEST_REPORT_FILE.Where(x => x.EFORM_ID == item.EFORM_ID && x.IS_EFORM == "Y").Select(x => x.IS_FINALISED).FirstOrDefault();
                    //Ajinkya

                    var execLength = eformdbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == item.EFORM_ID).Select(s => s.EXECUTED_LENGTH).FirstOrDefault();
                    lisModel.Add(new PdfRoadListModel
                    {
                        EFORM_ID = item.EFORM_ID,

                        MAST_PMGSY_SCHEME = Convert.ToInt32(item.MAST_PMGSY_SCHEME),
                        District = item.MAST_DISTRICT_NAME,
                        Block = item.MAST_BLOCK_NAME,
                        PIU_Name = item.MAST_DPIU_NAME,
                        IMS_ROAD_NAME = item.IMS_ROAD_NAME,
                        IMS_PACKAGE_ID = item.IMS_PACKAGE_ID,
                        SANCTION_YEAR = item.IMS_YEAR.ToString(),
                        SANCTION_length = item.IMS_PAV_LENGTH,
                        EXECUTED_length = item.EXEC_COMPLETED,
                        Completion_Date = item.EXEC_COMPLETION_DATE.ToString().Replace("-", "/"),
                        Work_Status = item.WORK_INSPECTION_STATUS,
                        ADMIN_QM_CODE = item.ADMIN_QM_CODE.ToString(),
                        IMS_YEAR = item.IMS_YEAR,
                        QM_NAME = item.MONITOR_NAME,
                        QM_TYPE = item.MONITOR_TYPE,
                        IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                        ADMIN_SCHEDULE_CODE = item.ADMIN_SCHEDULE_CODE,
                        ADMIN_SCHEDULE_MONTH = item.ADMIN_IM_MONTH,
                        ADMIN_SCHEDULE_YEAR = item.ADMIN_IM_YEAR,
                        UserStatus = UserActiveStatus,
                        UserStatusTR = UserActiveStatusTR,
                        isPIUfileupload = item.IS_E_P1_UPLOAD,
                        PIUfinalize_status = item.IS_E_P1_FINALIZE,
                        isQMfileupload = item.IS_E_P2_UPLOAD,
                        isQMfinalised = item.IS_E_P2_FINALIZE,
                        IMS_PROPOSAL_TYPE = item.IMS_PROPOSAL_TYPE,

                        //Ajinkya
                        //isTRfileuploaded = isTRfileuploaded,
                        // isTrEform = isTrEform,
                        // isTRfinalised = status_Trfin,
                        isETRuploaded = item.IS_E_TR_UPLOAD,
                        isETRfinalised = item.IS_E_TR_FINALIZE,
                        isScanTRuploaded = item.IS_SCAN_TR_UPLOAD,
                        isScanTRfinalised = item.IS_SCAN_TR_FINALIZE,


                        isAllPdfUpload = isAllPdfUpload,
                        isItem3Uploaded= isItem3Uploaded
                    });

                }


                if (sidx.Trim() != string.Empty)
                {
                    if (sord.ToString() == "asc")
                    {
                        switch (sidx)
                        {
                            case "District":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.District).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Block":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Block).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "QM_NAME":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.QM_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_ROAD_NAME":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_ROAD_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_PACKAGE_ID":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_PACKAGE_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_YEAR":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.IMS_YEAR).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "SANCTION_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.SANCTION_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "EXECUTED_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EXECUTED_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Completion_Date":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Completion_Date).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Work_Status":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.Work_Status).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            default:
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                        }
                    }
                    else
                    {
                        switch (sidx)
                        {

                            case "District":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.District).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Block":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Block).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "QM_NAME":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.QM_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_ROAD_NAME":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_ROAD_NAME).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_PACKAGE_ID":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_PACKAGE_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "IMS_YEAR":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.IMS_YEAR).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "SANCTION_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.SANCTION_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "EXECUTED_length":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.EXECUTED_length).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Completion_Date":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Completion_Date).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            case "Work_Status":
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.Work_Status).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                            default:
                                lisModel = (List<PdfRoadListModel>)lisModel.OrderByDescending(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                                break;
                        }
                    }
                }
                else
                {
                    lisModel = (List<PdfRoadListModel>)lisModel.OrderBy(m => m.EFORM_ID).Skip(Convert.ToInt32(page * rows)).Take(Convert.ToInt16(rows)).ToList();
                }



                return lisModel.Select(m => new
                {
                    id = m.IMS_PR_ROAD_CODE.ToString(),
                    cell = new[]
                    {
                          URLEncrypt.EncryptParameters1(new string[] { "IMS_road_code =" + m.IMS_PR_ROAD_CODE.ToString() }),
                            m.EFORM_ID.ToString(),
                          m.District == null?string.Empty:m.District.ToString(),
                          m.Block == null?string.Empty:m.Block.ToString(),
                          m.QM_NAME == null?string.Empty:m.QM_NAME.ToString(),
                              m.IMS_PROPOSAL_TYPE==null?string.Empty:(m.IMS_PROPOSAL_TYPE=="L"?"Bridge":"Road"),
                          m.IMS_ROAD_NAME == null?string.Empty:(m.isItem3Uploaded=="N"?m.IMS_ROAD_NAME.ToString()+"..":m.IMS_ROAD_NAME.ToString()),
                          m.IMS_PACKAGE_ID == null?string.Empty:m.IMS_PACKAGE_ID.ToString(),
                          m.SANCTION_YEAR == null?string.Empty:m.SANCTION_YEAR.ToString(),
                          m.SANCTION_length == null?string.Empty:m.SANCTION_length.ToString(),
                          m.EXECUTED_length==null?"-":m.EXECUTED_length.ToString(),
                          m.Completion_Date == null?string.Empty:m.Completion_Date.ToString().Split(' ')[0].ToString(),
                          m.Work_Status == null?string.Empty:( m.Work_Status=="C"?"Completed":"In Progress"),
                         
 
                        //PIU 
                        //part1 physical path view
                          //  ((PMGSYSession.Current.RoleCode==7||  PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) && m.isPIUfileupload=="Y" && m.PIUfinalize_status=="Y" ?  "<a href='/Eform/GetReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),
                        //Virtual dir part-1 pdf view
                         ( m.isPIUfileupload=="Y" && m.PIUfinalize_status=="Y" ? "<a href='#' title='Click here to view  pdf'  onClick='viewPart1PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>"   :"-"),

                            #region eform test report

                       

                        //Test report e_form
                        (m.UserStatusTR?
                        (m.IMS_PROPOSAL_TYPE=="L"?"NA": ((PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) /*&& m.isQMfinalised!="Y"*/ && m.UserStatus==true  ? "<a type='button' href='/Eform/GetDownloadedTRPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+ "$"+m.EFORM_ID.ToString()+"$"+m.Work_Status})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>"   : "-" ) )
                        :"-"),


                        (m.UserStatusTR?
                       (m.IMS_PROPOSAL_TYPE=="L"?"NA"    //(/*m.isQMfinalised=="Y" &&*/ m.isTRfinalised!="Y" && m.UserStatus==true ?"<input type='file' name='testreportfile_Upload' id=\"file2"+m.EFORM_ID+"\" /><input type='button' id='btntestteportUpload' value='Upload' onClick='uploadTestRepotPdfFile(\""+ m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />":"-")
                       :(uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'  />" :   (/*m.isQMfinalised=="Y" &&*/ m.isETRfinalised!="Y" && m.UserStatus==true ?"<input type='file' name='testreportfile_Upload' id=\"file1"+m.EFORM_ID+"\" /><input type='button' id='btntestteportUpload' value='Upload' onClick='uploadTRPdfFile(\""+ m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />":"-")))
                        :"-"),

                        
                      // Added by Rohit Borse for Test Report Preview
                      (m.IMS_PROPOSAL_TYPE=="L"?"-":m.isETRuploaded=="Y" && m.isETRfinalised=="Y"  && (PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 || PMGSYSession.Current.RoleCode == 9 )? "<input type='button' value='Preview' onClick=previewTestReport('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />"
                      :(m.isETRuploaded=="Y"  && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 )? "<input type='button' value='Preview' onClick=previewTestReport('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />":"-")),


                        
                        //Physical Test Report view
                      //  (m.IMS_PROPOSAL_TYPE=="L"?"-"   //(m.isTRfinalised=="Y" && m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>": ( m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>"     : "-"))
                       // :  (m.isTRfinalised=="Y" && m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>": ( m.isTRfileuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>"     : "-"))),
                     
                        //Virtual dir Test Report view
                        (m.IMS_PROPOSAL_TYPE=="L"?"-": (m.isETRfinalised=="Y" && m.isETRuploaded=="Y" && m.UserStatus==true &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69)  ?  "<a href='#' title='Click here to view e-Form Test Report pdf'  onClick='viewTRPdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":(m.isETRuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='#' title='Click here to view e-Form Test Report pdf'  onClick='viewTRPdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"))),


                           (m.IMS_PROPOSAL_TYPE=="L"?"-"   //(m.isTRfileuploaded=="Y" && m.isTRfinalised!="Y" && m.UserStatus==true    ?  "<span   id='btnDeletetr' value='Delete Test Report' onClick='deleteTestReportPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-")
                        :(uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'  />" : (m.isETRuploaded=="Y" && m.isETRfinalised!="Y" && m.UserStatus==true    ?  "<span   id='btnDeletetr' value='Delete Test Report' onClick='deleteTRPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"))),


                        (m.IMS_PROPOSAL_TYPE=="L"?"-"   //(m.isTRfinalised!="Y"  && m.UserStatus==true ?  "<span   id='btnFinalizeTR' value='Finalize eForm' onClick='finalizeTRPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isTRfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-"))
                        : (m.isETRfinalised!="Y"  && m.UserStatus==true ?  "<span   id='btnFinalizeTR' value='Finalize eForm' onClick='finalizeETRPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isETRfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-"))),


                        #endregion


                      #region TEST REPORT SCAN COPY
                         //Ajinkya
                        ( m.isScanTRfinalised!="Y" && m.UserStatus==true ?"<input type='file' name='testreportfile_Upload' id=\"file"+m.EFORM_ID+"\" /><input type='button' id='btntestteportUpload' value='Upload' onClick='uploadTestRepotPdfFile(\""+ m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />":"-"),
                       
                        //(m.isScanTRfinalised=="Y" && m.isScanTRuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>": ( m.isScanTRuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='/Eform/GetTestReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString()})+"' title='Click here to view test report pdf'    target=_blank><input type='button' value='View'/></a>"     : "-")),
                        (m.isScanTRfinalised=="Y" && m.isScanTRuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69 ) ?
                        "<a href='#' title='Click here to view test report pdf' onClick='viewTRScanPdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");' ><input type='button' value='View'/></a>"
                        : ( m.isScanTRuploaded=="Y" && m.UserStatus==true && (PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode == 7 ) ?  "<a href='#' onClick='viewTRScanPdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'  title='Click here to view test report pdf' ><input type='button' value='View'/></a>"     : "-")),
                         (m.isScanTRuploaded=="Y" && m.isScanTRfinalised!="Y" && m.UserStatus==true    ?  "<span   id='btnDeletetr' value='Delete Test Report' onClick='deleteTestReportPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"),

                        (m.isScanTRfinalised!="Y"  && m.UserStatus==true ?  "<span   id='btnFinalizeTR' value='Finalize eForm' onClick='finalizeScanTRPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isScanTRfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-")),


                        #endregion


                        #region eform part2

                        ((PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="P" ? "<a type='button' href='/Eform/GetDownloadedQMPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+ "$"+m.EFORM_ID.ToString()+"$"+m.Work_Status})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>"   :  (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="L" ? "<a type='button' href='/Eform/GetDownloadedBRIDGEQMPDF?encRoadCode="+URLEncrypt.EncryptParameters1(new string[]{"imsRoadID="+m.IMS_PR_ROAD_CODE.ToString()+"$"+m.QM_NAME.ToString()+"$"+m.QM_TYPE.ToString() + "$"+m.ADMIN_SCHEDULE_MONTH.ToString() + "$"+m.ADMIN_SCHEDULE_YEAR.ToString() + "$"+m.ADMIN_SCHEDULE_CODE.ToString() + "$"+m.ADMIN_QM_CODE.ToString()+ "$"+m.EFORM_ID.ToString()+"$"+m.Work_Status})+"' title='Click here to Download template pdf'  type='button' id='btnDownload'   value='Download' class='jqueryButton ui-corner-all ui-button-text-only' target=_blank><input type='button'  value='Download'/> </a>" : "-" )  ,

                        // change on 06-07-2022
                         (uploadRestrictStatus == true ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'  />" : ((PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="P" ?  "<input type='file' name='file_Upload' id=\"file2"+m.EFORM_ID+"\" /><input type='button' id='btnUpload' value='Upload' onClick='uploadQMPdfFile(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />"  : (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6) && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="L" && m.isQMfinalised!="Y" ?  "<input type='file' name='file_Upload' id=\"file2"+m.EFORM_ID+"\" /><input type='button' id='btnUpload' value='Upload' onClick='uploadBridgeQMPdfFile(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_CODE.ToString()+"$"+m.ADMIN_SCHEDULE_MONTH.ToString()+"$"+m.ADMIN_SCHEDULE_YEAR.ToString()+"$"+m.Work_Status+"$"+m.ADMIN_QM_CODE+"$"+m.QM_TYPE+"$"+m.EFORM_ID+ "\");'  />"  :  "-") )    ,



                           (m.isQMfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "P"  ?  "<input type='button' id='btnViewPDF' value='Preview' onClick=viewQMPdfData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />"
                                                                            :(m.isQMfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "L" ? "<input type='button' id='btnViewPDF' value='Preview' onClick=viewBridgeQMData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />" :"-")),


                        //part2 physical path view
                       // (  m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5)  ?  "<a href='/Eform/GetQMReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),

                     //part2 virtual path view
                        (  m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5)  ?  "<a href='#' title='Click here to view  pdf'  onClick='viewPart2PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),


                        (uploadRestrictStatus==true?"<span  class='ui-icon  ui-icon-locked  ui-align-center'  />":  ( m.isQMfileupload=="Y" && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="P"   ?  "<span   id='btnDelete' value='Delete eForm' onClick='deleteQMPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":(m.isQMfileupload=="Y" && m.isQMfinalised!="Y" && m.UserStatus==true && m.IMS_PROPOSAL_TYPE=="L"   ?  "<span   id='btnDelete' value='Delete eForm' onClick='deleteBridgeQMPdf(\"" + m.IMS_PR_ROAD_CODE.ToString()+"$"+m.EFORM_ID.ToString()+ "\");' class='ui-icon 	ui-icon-trash  ui-align-center'   />":"-"))),
                        (   m.isQMfinalised!="Y" &&  m.UserStatus==true ?  "<span   id='btnFinalize' value='Finalize eForm' onClick='finalizeQMPdf(\"" + m.EFORM_ID.ToString()+ "\");' class='ui-icon  ui-icon-unlocked  ui-align-center'   />":(m.isQMfinalised=="Y"  ? "<span  class='ui-icon  ui-icon-locked  ui-align-center'   />":"-")),



                         //CQC  
                         //CQC part2 physical path view
                    //   (  m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69)  ?  "<a href='/Eform/GetQMReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view  pdf'    target=_blank><input type='button' value='View'/></a>":"-"),

                         //CQC part2 virtual path view
                          (  m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && (PMGSYSession.Current.RoleCode==7|| PMGSYSession.Current.RoleCode==6 || PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5)  ?  "<a href='#' title='Click here to view  pdf'  onClick='viewPart2PdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),

                       
                          //CQC combine pdf physical path view
                      // (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) &&  m.isPIUfileupload=="Y" ?  "<a href='/Eform/GetCombineReport?idtemp="+URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID})+"' title='Click here to view part-I,II pdf'    target=_blank><input type='button' value='View'/></a>":"-"),

                        //CQC combine pdf virtual path view
                         // (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5) &&  m.isPIUfileupload=="Y" ?  "<a href='#' title='Click here to view  pdf'  onClick='viewCombinePdfVirtualDir(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),

                             //CQC combine pdf(part1+part2) physical path view(onfly)
                      (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" &&  (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) &&  m.isPIUfileupload=="Y" ?  "<a href='#' title='Click here to view e-Form combined part-1,part-2 pdf'  onClick='viewCombinedPart_1_2_Pdf(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-"),


                        (m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && m.isPIUfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "P" && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) ?  "<input type='button' id='btnViewPDF' value='Preview' onClick=viewCombinePdfData('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "');   target=_blank />" : m.isQMfinalised=="Y" && m.isQMfileupload=="Y" && m.isPIUfileupload=="Y" && m.IMS_PROPOSAL_TYPE == "L" && (PMGSYSession.Current.RoleCode==9 || PMGSYSession.Current.RoleCode == 5 || PMGSYSession.Current.RoleCode == 8 || PMGSYSession.Current.RoleCode == 48 || PMGSYSession.Current.RoleCode == 69) ? "<input type='button' id='btnViewPDF' value='Preview' onClick=PreviewBridgeCQC('" +URLEncrypt.EncryptParameters1(new String[]{"imsRoadID ="+ m.EFORM_ID.ToString().Trim()})+ "'); target=_blank />" : "-"),


                        #endregion

                        #region combined pdf part1,2,test report
                      (m.IMS_PROPOSAL_TYPE=="L"?"-" :  (m.isAllPdfUpload=="Y"? "<a href='#' title='Click here to view e-Form combined part-1,part-2 and Test Report pdf'  onClick='viewCombinedPart_1_2_TR_Pdf(\"" + m.EFORM_ID.ToString()+"\");'   ><input type='button' value='View'/></a>":"-")),

                        #endregion


                    }
                }).ToArray();


            }
            catch (Exception ex)
            {
                totalRecords = 0;
                ErrorLog.LogError(ex, "PDFDataDal.GetQMWorkListDal()");
                return null;
            }
            finally
            {
                eformdbContext.Dispose();
            }
        }



        public List<SelectListItem> SaveToQMDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_QM_VIEWMODEL qmInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, bool TemplateStatus, char[] chkBoxArr, double tempVersion)
        {

            PdfLoadedDocument loadedDocument = new PdfLoadedDocument(filePath);
            List<SelectListItem> validationList = new List<SelectListItem>();
            PMGSYEntities dbContext = new PMGSYEntities();
            //   EFORMCommonFunctions cm = new EFORMCommonFunctions();
            try
            {



                PdfLoadedForm loadedForm = loadedDocument.Form;
                loadedForm.ReadOnly = true;

                string type = string.Empty;
                int detailId = 0;


                if (PMGSYSession.Current.RoleCode == 6)
                {
                    type = "N";
                }
                else if (PMGSYSession.Current.RoleCode == 7)
                {
                    type = "S";
                }
                else
                {
                    type = "P";
                }

                string combine_uploaded_path = ConfigurationManager.AppSettings["COMBINE_UPLOADED_PATH"].ToString();



                int eformId = Convert.ToInt32(eformIDFromGrid);
                int RoadCode = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == eformId).Select(m => m.IMS_PR_ROAD_CODE).FirstOrDefault();
                Int32 admnNdCode = PMGSYSession.Current.AdminNdCode;
                Int32 prRoadCode = RoadCode;
                Int32 UserId = PMGSYSession.Current.UserId;
                string ipAdd = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                detailId = eformId;

                //To check which items details to be insert or not
                //   var isQmItemApplicable = dbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId && x.IMS_PR_ROAD_CODE == RoadCode).FirstOrDefault();

                string templateVersionValue = string.Empty;
                try
                {

                    PdfLoadedTextBoxField templateVersion = loadedForm.Fields["TEMPLATE_VERSION"] as PdfLoadedTextBoxField;
                    templateVersionValue = templateVersion.Text;
                }
                catch (Exception ex)
                {
                    ErrorLog.LogError(ex, "PdfDataDAL.SaveToQMDb()");
                }
                using (var scope = new TransactionScope())
                {
                    //DATA PARSING

                    PMGSYEntities eformdbContext = new PMGSYEntities();
                    EFORM_MASTER inspMasterModel = dbContext.EFORM_MASTER.Where(m => m.EFORM_ID == detailId).FirstOrDefault();



                    if (eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Any(s => s.EFORM_ID == eformId && s.USER_TYPE == "Q"))
                    {
                        validationList.Add(new SelectListItem { Text = "Pdf is already uploaded. If you want to upload again, please delete the existing file" });
                        return validationList;
                    }

                    if (inspMasterModel == null)
                    {
                        validationList.Add(new SelectListItem { Text = "Error occured while uploading the file" });
                        return validationList;
                    }
                    if (templateVersionValue != "")
                    {
                        inspMasterModel.PART2_TEMPLATE_VERSION = templateVersionValue;
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    else
                    {
                        inspMasterModel.PART2_TEMPLATE_VERSION = "V1.0";
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }

                    EFORM_PDF_UPLOAD_DETAIL uploadModel = new EFORM_PDF_UPLOAD_DETAIL();

                    int uploadId = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Any() ? (from item in eformdbContext.EFORM_PDF_UPLOAD_DETAIL select item.UPLOAD_ID).Max() + 1 : 1;

                    uploadModel.UPLOAD_ID = uploadId;
                    uploadModel.EFORM_ID = detailId;
                    uploadModel.PR_ROAD_CODE = prRoadCode;
                    uploadModel.USER_TYPE = "Q";
                    uploadModel.UPLOAD_DATE = System.DateTime.Now;
                    uploadModel.IS_FINALISED = "N";
                    uploadModel.FILE_NAME = fname;
                    uploadModel.FILE_PATH = Uploaded_Path + "\\" + schdYear + "\\" + schdMonth;
                    uploadModel.USERID = UserId;
                    uploadModel.IPADD = ipAdd;
                    //  uploadModel.FILE_NAME_C = "C_" + fname;
                    //  uploadModel.FILE_PATH_C = combine_uploaded_path + "\\" + schdYear + "\\" + schdMonth;
                    if (templateVersionValue != "")
                    {
                        uploadModel.TEMPLATE_VERSION = templateVersionValue;
                    }
                    else
                    {
                        uploadModel.TEMPLATE_VERSION = "V1.0";
                    }
                    eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Add(uploadModel);
                    eformdbContext.SaveChanges();




                    EFORM_QM_GENERAL_DETAILS gen_model = new EFORM_QM_GENERAL_DETAILS();
                    int genId = eformdbContext.EFORM_QM_GENERAL_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_GENERAL_DETAILS select item.GEN_ID).Max() + 1 : 1;

                    gen_model.GEN_ID = genId;
                    gen_model.EFORM_ID = detailId;
                    gen_model.PR_ROAD_CODE = prRoadCode;
                    gen_model.INSPECTION_DATE = Convert.ToDateTime(qmInsertModel.general_details_model.INSPECTION_DATE);
                    gen_model.ROAD_FROM = qmInsertModel.general_details_model.ROAD_FROM;
                    gen_model.ROAD_TO = qmInsertModel.general_details_model.ROAD_TO;


                    gen_model.USERID = UserId;
                    gen_model.IPADD = ipAdd;
                    eformdbContext.EFORM_QM_GENERAL_DETAILS.Add(gen_model);
                    eformdbContext.SaveChanges();



                    EFORM_QM_ITEM_APPLICABLE_DETAILS itemDetails = new EFORM_QM_ITEM_APPLICABLE_DETAILS();
                    int itemId = eformdbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS select item.ITEM_ID).Max() + 1 : 1;

                    itemDetails.ITEM_ID = itemId;
                    itemDetails.EFORM_ID = detailId;
                    itemDetails.IMS_PR_ROAD_CODE = prRoadCode;
                    itemDetails.ITEM_2 = chkBoxArr[2].ToString();
                    itemDetails.ITEM_3 = chkBoxArr[3].ToString();
                    itemDetails.ITEM_4 = chkBoxArr[4].ToString();
                    itemDetails.ITEM_5 = chkBoxArr[5].ToString();
                    itemDetails.ITEM_6 = chkBoxArr[6].ToString();
                    itemDetails.ITEM_7 = chkBoxArr[7].ToString();
                    itemDetails.ITEM_8 = chkBoxArr[8].ToString();
                    itemDetails.ITEM_9 = chkBoxArr[9].ToString();
                    itemDetails.ITEM_10 = chkBoxArr[10].ToString();
                    itemDetails.ITEM_11 = chkBoxArr[11].ToString();
                    itemDetails.ITEM_12 = chkBoxArr[12].ToString();
                    itemDetails.ITEM_13 = chkBoxArr[13].ToString();
                    itemDetails.ITEM_14 = chkBoxArr[14].ToString();
                    itemDetails.ITEM_15 = chkBoxArr[15].ToString();
                    itemDetails.ITEM_16 = chkBoxArr[16].ToString();
                    itemDetails.ITEM_17 = chkBoxArr[17].ToString();
                    itemDetails.ITEM_18 = chkBoxArr[18].ToString();
                    itemDetails.ITEM_19 = chkBoxArr[19].ToString();
                    itemDetails.ITEM_20 = chkBoxArr[20].ToString();
                    itemDetails.ITEM_21 = chkBoxArr[21].ToString();
                    itemDetails.QM_USER_ID = UserId;
                    itemDetails.IPADD = ipAdd;
                    eformdbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Add(itemDetails);
                    eformdbContext.SaveChanges();




                    #region ----saurabh 6-9, 13------
                    ////-----saurabh----

                    #region Page 6 : EFORM_QM_PRESENT_WORK_DETAILS

                    if (TemplateStatus != true)
                    {

                        int WorkId = eformdbContext.EFORM_QM_PRESENT_WORK_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_PRESENT_WORK_DETAILS select item.WORK_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.QM_PRESENT_WORK_DETAILS.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_PRESENT_WORK_DETAILS QM_PresentWorkObj = new PMGSY.Models.EFORM_QM_PRESENT_WORK_DETAILS();
                            int t = i + 1;


                            QM_PresentWorkObj.WORK_ID = WorkId;
                            QM_PresentWorkObj.EFORM_ID = detailId;
                            QM_PresentWorkObj.QM_USER_ID = UserId;
                            QM_PresentWorkObj.PR_ROAD_CODE = prRoadCode;
                            QM_PresentWorkObj.ITEM_ID = Convert.ToInt16(qmInsertModel.QM_PRESENT_WORK_DETAILS[i].ITEM_ID);
                            QM_PresentWorkObj.ROAD_FROM = qmInsertModel.QM_PRESENT_WORK_DETAILS[i].ROAD_FROM;
                            QM_PresentWorkObj.ROAD_TO = qmInsertModel.QM_PRESENT_WORK_DETAILS[i].ROAD_TO;

                            QM_PresentWorkObj.IPADD = ipAdd;
                            eformdbContext.EFORM_QM_PRESENT_WORK_DETAILS.Add(QM_PresentWorkObj);
                            eformdbContext.SaveChanges();
                            WorkId++;
                        }
                    }
                    #endregion

                    #region Page 7 : EFORM_QM_ARRANGEMENTS_OBS_DETAILS
                    if (chkBoxArr[2] == 'Y')
                    {

                        if (TemplateStatus != true)
                        {
                            int ObservationId = eformdbContext.EFORM_QM_ARRANGEMENTS_OBS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_ARRANGEMENTS_OBS_DETAILS select item.OBS_ID).Max() + 1 : 1;

                            PMGSY.Models.EFORM_QM_ARRANGEMENTS_OBS_DETAILS OBS_Details = new PMGSY.Models.EFORM_QM_ARRANGEMENTS_OBS_DETAILS();
                            OBS_Details.OBS_ID = ObservationId;
                            OBS_Details.EFORM_ID = detailId;
                            OBS_Details.QM_USER_ID = UserId;
                            OBS_Details.PR_ROAD_CODE = prRoadCode;
                            OBS_Details.IS_FIELD_LAB_ESTD = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_FIELD_LAB_ESTD;
                            OBS_Details.IS_LAB_LOC_SAME = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_LAB_LOC_SAME;
                            OBS_Details.IS_EQUIP_AVAILABLE = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_EQUIP_AVAILABLE;
                            OBS_Details.IS_EQUIP_USED = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_EQUIP_USED;
                            OBS_Details.IS_EQUIP_AVAIL_VERIFY = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_EQUIP_AVAIL_VERIFY;
                            OBS_Details.IS_ENGG_AVAILABLE = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_ENGG_AVAILABLE;
                            OBS_Details.IS_ALT_ENGG_ARR_SATISFIED = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_ALT_ENGG_ARR_SATISFIED;
                            OBS_Details.IS_LAB_TECH_AVAILABLE = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IS_LAB_TECH_AVAILABLE;
                            OBS_Details.ITEM_GRADING_2 = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.ITEM_GRADING_2;
                            OBS_Details.IMPROVEMENT_REMARK = qmInsertModel.QM_ARRANGEMENT_OBS_DETAIL.IMPROVEMENT_REMARK_7;
                            OBS_Details.IPADD = ipAdd;
                            eformdbContext.EFORM_QM_ARRANGEMENTS_OBS_DETAILS.Add(OBS_Details);
                            eformdbContext.SaveChanges();
                        }
                    }

                    #endregion

                    #region Page 8 : EFORM_QM_QUALITY_ATTENTION
                    if (chkBoxArr[3] == 'Y')
                    {
                        if (TemplateStatus != true)
                        {
                            int InfoId = eformdbContext.EFORM_QM_QUALITY_ATTENTION.Any() ? (from item in eformdbContext.EFORM_QM_QUALITY_ATTENTION select item.INFO_ID).Max() + 1 : 1;

                            PMGSY.Models.EFORM_QM_QUALITY_ATTENTION QualityAttention = new PMGSY.Models.EFORM_QM_QUALITY_ATTENTION();
                            QualityAttention.INFO_ID = InfoId;
                            QualityAttention.EFORM_ID = detailId;
                            QualityAttention.QM_USER_ID = UserId;
                            QualityAttention.PR_ROAD_CODE = prRoadCode;
                            QualityAttention.IS_ALL_TEST_CONDUCTED = qmInsertModel.QM_QUALITY_ATTENTION.IS_ALL_TEST_CONDUCTED;
                            QualityAttention.IS_QC_REG_P1_MAINTAINED = qmInsertModel.QM_QUALITY_ATTENTION.IS_QC_REG_P1_MAINTAINED;
                            QualityAttention.IS_QC_REG_P2_MAINTAINED = qmInsertModel.QM_QUALITY_ATTENTION.IS_QC_REG_P2_MAINTAINED;
                            QualityAttention.IS_NEGLIGENCE = qmInsertModel.QM_QUALITY_ATTENTION.IS_NEGLIGENCE;
                            QualityAttention.IS_LOE = qmInsertModel.QM_QUALITY_ATTENTION.IS_LOE;
                            QualityAttention.IS_LOK = qmInsertModel.QM_QUALITY_ATTENTION.IS_LOK;
                            QualityAttention.IS_OTHER = qmInsertModel.QM_QUALITY_ATTENTION.IS_OTHER;
                            QualityAttention.OTHER_REASON = qmInsertModel.QM_QUALITY_ATTENTION.OTHER_REASON;
                            QualityAttention.IS_NON_CONFORMITIES_QCR2 = qmInsertModel.QM_QUALITY_ATTENTION.IS_NON_CONFORMITIES_QCR2;
                            QualityAttention.ITEM_GRADING_3 = qmInsertModel.QM_QUALITY_ATTENTION.ITEM_GRADING_3;
                            QualityAttention.IMPROVEMENT_REMARK = qmInsertModel.QM_QUALITY_ATTENTION.IMPROVEMENT_REMARK_9;
                            QualityAttention.IPADD = ipAdd;
                            eformdbContext.EFORM_QM_QUALITY_ATTENTION.Add(QualityAttention);
                            eformdbContext.SaveChanges();
                        }
                    }

                    #endregion

                    #region Page 8 : QM_QC_TEST_DETAILS
                    if (chkBoxArr[3] == 'Y')
                    {
                        if (TemplateStatus != true)
                        {
                            int WorkID = eformdbContext.EFORM_QM_QC_TEST_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_QC_TEST_DETAILS select item.WORK_ID).Max() + 1 : 1;

                            if (tempVersion < 2.0)
                            {
                                for (int i = 0; i < qmInsertModel.QM_QC_TEST_DETAILS.Count; i++)
                                {
                                    PMGSY.Models.EFORM_QM_QC_TEST_DETAILS QCDetail = new PMGSY.Models.EFORM_QM_QC_TEST_DETAILS();
                                    int t = i + 1;
                                    QCDetail.WORK_ID = WorkID;
                                    QCDetail.PR_ROAD_CODE = prRoadCode;
                                    QCDetail.EFORM_ID = detailId;
                                    QCDetail.QM_USER_ID = UserId;
                                    QCDetail.IPADD = ipAdd;
                                    QCDetail.ITEM_ID = qmInsertModel.QM_QC_TEST_DETAILS[i].ITEM_ID;
                                    QCDetail.INFO_ID = eformdbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault();
                                    QCDetail.DPR_QUANTITY = qmInsertModel.QM_QC_TEST_DETAILS[i].DPR_QUANTITY;
                                    QCDetail.EXECUTED_QUANTITY = qmInsertModel.QM_QC_TEST_DETAILS[i].EXECUTED_QUANTITY;
                                    QCDetail.TEST_NAME = qmInsertModel.QM_QC_TEST_DETAILS[i].TEST_NAME;
                                    QCDetail.REQD_TEST_NUMBER = qmInsertModel.QM_QC_TEST_DETAILS[i].REQD_TEST_NUMBER;
                                    QCDetail.CONDUCTED_TEST_NUMBER = qmInsertModel.QM_QC_TEST_DETAILS[i].CONDUCTED_TEST_NUMBER;
                                    QCDetail.IS_TESTING_ADEQUATE = qmInsertModel.QM_QC_TEST_DETAILS[i].IS_TESTING_ADEQUATE;
                                    eformdbContext.EFORM_QM_QC_TEST_DETAILS.Add(QCDetail);
                                    eformdbContext.SaveChanges();
                                    WorkID++;
                                }
                            }
                            else
                            {
                                for (int i = 0; i < qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0.Count; i++)
                                {
                                    PMGSY.Models.EFORM_QM_QC_TEST_DETAILS QCDetail = new PMGSY.Models.EFORM_QM_QC_TEST_DETAILS();
                                    int t = i + 1;
                                    QCDetail.WORK_ID = WorkID;
                                    QCDetail.PR_ROAD_CODE = prRoadCode;
                                    QCDetail.EFORM_ID = detailId;
                                    QCDetail.QM_USER_ID = UserId;
                                    QCDetail.IPADD = ipAdd;
                                    QCDetail.ITEM_ID = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].ITEM_ID;
                                    QCDetail.INFO_ID = eformdbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault();
                                    QCDetail.DPR_QUANTITY = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].DPR_QUANTITY;
                                    QCDetail.EXECUTED_QUANTITY = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].EXECUTED_QUANTITY;
                                    QCDetail.TEST_NAME = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].TEST_NAME;
                                    QCDetail.REQD_TEST_NUMBER = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].REQD_TEST_NUMBER;
                                    QCDetail.CONDUCTED_TEST_NUMBER = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].CONDUCTED_TEST_NUMBER;
                                    QCDetail.IS_TESTING_ADEQUATE = qmInsertModel.QM_QC_TEST_DETAILS_Temp2_0[i].IS_TESTING_ADEQUATE;
                                    eformdbContext.EFORM_QM_QC_TEST_DETAILS.Add(QCDetail);
                                    eformdbContext.SaveChanges();
                                    WorkID++;
                                }
                            }

                        }
                    }
                    #endregion

                    #region Page 8 : QM_TEST_RESULT_VERIFICATION_DETAILS
                    if (chkBoxArr[3] == 'Y')
                    {
                        if (TemplateStatus != true)
                        {
                            int TestID = eformdbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS select item.TEST_ID).Max() + 1 : 1;

                            if (tempVersion < 2.0)
                            {
                                for (int i = 0; i < qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List.Count; i++)
                                {
                                    PMGSY.Models.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS TestVerification = new PMGSY.Models.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS();
                                    int t = i + 1;
                                    TestVerification.TEST_ID = TestID;
                                    TestVerification.INFO_ID = eformdbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault(); // required foreign key
                                    TestVerification.IPADD = ipAdd;
                                    TestVerification.EFORM_ID = detailId;
                                    TestVerification.PR_ROAD_CODE = prRoadCode;
                                    TestVerification.QM_USER_ID = UserId;
                                    TestVerification.ROAD_LOC = Convert.ToDecimal(qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List[i].ROAD_LOC);
                                    TestVerification.TEST_NAME = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List[i].TEST_NAME;
                                    TestVerification.TEST_CONDUCTED_RESULT = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List[i].TEST_CONDUCTED_RESULT;
                                    TestVerification.TEST_RESULT_QCR1 = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List[i].TEST_RESULT_QCR1;
                                    TestVerification.TEST_RESULT_PREVIOUS = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List[i].TEST_RESULT_PREVIOUS;
                                    TestVerification.TEST_RESULT_CONFRM = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List[i].TEST_RESULT_CONFRM;
                                    eformdbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Add(TestVerification);
                                    eformdbContext.SaveChanges();
                                    TestID++;

                                }
                            }
                            else
                            {
                                for (int i = 0; i < qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0.Count; i++)
                                {
                                    PMGSY.Models.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS TestVerification = new PMGSY.Models.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS();
                                    int t = i + 1;
                                    TestVerification.TEST_ID = TestID;
                                    TestVerification.INFO_ID = eformdbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault(); // required foreign key
                                    TestVerification.IPADD = ipAdd;
                                    TestVerification.EFORM_ID = detailId;
                                    TestVerification.PR_ROAD_CODE = prRoadCode;
                                    TestVerification.QM_USER_ID = UserId;
                                    TestVerification.ROAD_LOC = Convert.ToDecimal(qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].ROAD_LOC);
                                    TestVerification.TEST_NAME = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_NAME;
                                    TestVerification.TEST_CONDUCTED_RESULT = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_CONDUCTED_RESULT;
                                    TestVerification.TEST_RESULT_QCR1 = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_RESULT_QCR1;
                                    TestVerification.TEST_RESULT_PREVIOUS = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_RESULT_PREVIOUS;
                                    TestVerification.TEST_RESULT_CONFRM = qmInsertModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_RESULT_CONFRM;
                                    eformdbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Add(TestVerification);
                                    eformdbContext.SaveChanges();
                                    TestID++;

                                }
                            }
                        }
                    }
                    #endregion

                    #region Page 9 : EFORM_QM_GEOMETRICS_DETAILS
                    if (chkBoxArr[4] == 'Y')
                    {
                        int GeoINFO_ID = eformdbContext.EFORM_QM_GEOMETRICS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_GEOMETRICS_DETAILS select item.INFO_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_QM_GEOMETRICS_DETAILS GNormDetail = new PMGSY.Models.EFORM_QM_GEOMETRICS_DETAILS();
                        GNormDetail.INFO_ID = GeoINFO_ID;
                        GNormDetail.EFORM_ID = detailId;
                        GNormDetail.IPADD = ipAdd;
                        GNormDetail.PR_ROAD_CODE = prRoadCode;
                        GNormDetail.QM_USER_ID = UserId;
                        GNormDetail.ITEM_GRADING_4 = qmInsertModel.QM_GEOMETRICS_DETAILS.ITEM_GRADING_4;
                        GNormDetail.REASON_FOR_DEVIATION = qmInsertModel.QM_GEOMETRICS_DETAILS.IMPROVEMENT_REMARK_10;
                        eformdbContext.EFORM_QM_GEOMETRICS_DETAILS.Add(GNormDetail);
                        eformdbContext.SaveChanges();
                    }
                    #endregion

                    #region Page 9 : EFORM_QM_GEOMETRICS_OBS_DETAILS
                    if (chkBoxArr[4] == 'Y')
                    {
                        int GeoObsID = eformdbContext.EFORM_QM_GEOMETRICS_OBS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_GEOMETRICS_OBS_DETAILS select item.OBS_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_GEOMETRICS_OBS_DETAILS GeoDetails = new PMGSY.Models.EFORM_QM_GEOMETRICS_OBS_DETAILS();

                            GeoDetails.OBS_ID = GeoObsID;
                            GeoDetails.EFORM_ID = detailId;
                            GeoDetails.IPADD = ipAdd;
                            GeoDetails.INFO_ID = eformdbContext.EFORM_QM_GEOMETRICS_DETAILS.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault();
                            GeoDetails.PR_ROAD_CODE = prRoadCode;
                            GeoDetails.QM_USER_ID = UserId;
                            //   GeoDetails.TABLE_FLAG = "1";
                            GeoDetails.TABLE_FLAG = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].TABLE_FLAG;
                            GeoDetails.ROAD_LOC = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].ROAD_LOC;
                            GeoDetails.C4IA_ROAD_WIDTH_ACTUAL = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IA_ROAD_WIDTH_ACTUAL;
                            GeoDetails.C4IA_ROAD_WIDTH_DPR = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IA_ROAD_WIDTH_DPR;
                            GeoDetails.C4IA_ROAD_WIDTH_GRADE = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IA_ROAD_WIDTH_GRADE;
                            GeoDetails.C4IB_CARRIAGE_WIDTH_ACTUAL = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IB_CARRIAGE_WIDTH_ACTUAL;
                            GeoDetails.C4IB_CARRIAGE_WIDTH_DPR = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IB_CARRIAGE_WIDTH_DPR;
                            GeoDetails.C4IB_CARRIAGE_WIDTH_GRADE = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IB_CARRIAGE_WIDTH_GRADE;
                            GeoDetails.C4IC_CAMBER_PER_ACTUAL = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IC_CAMBER_PER_ACTUAL;
                            GeoDetails.C4IC_CAMBER_PER_DPR = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IC_CAMBER_PER_DPR;
                            GeoDetails.C4IC_CAMBER_PER_GRADE = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IC_CAMBER_PER_GRADE;
                            GeoDetails.C4IIA_ELEVATION_PER_ACTUAL = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIA_ELEVATION_PER_ACTUAL;
                            GeoDetails.C4IIA_ELEVATION_PER_DPR = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIA_ELEVATION_PER_DPR;
                            GeoDetails.C4IIA_ELEVATION_PER_GRADE = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIA_ELEVATION_PER_GRADE;
                            GeoDetails.C4IIB_EXTRA_WIDENING_ACTUAL = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIB_EXTRA_WIDENING_ACTUAL;
                            GeoDetails.C4IIB_EXTRA_WIDENING_DPR = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIB_EXTRA_WIDENING_DPR;
                            GeoDetails.C4IIB_EXTRA_WIDENING_GRADE = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIB_EXTRA_WIDENING_GRADE;
                            GeoDetails.ROAD_FROM = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].ROAD_FROM;
                            GeoDetails.ROAD_TO = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].ROAD_TO;
                            GeoDetails.C4IIIA_LONG_GRAD_PER_ACTUAL = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIIA_LONG_GRAD_PER_ACTUAL;
                            GeoDetails.C4IIIA_LONG_GRAD_PER_DPR = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIIA_LONG_GRAD_PER_DPR;
                            GeoDetails.C4IIIA_LONG_GRAD_PER_GRADE = qmInsertModel.QM_GEOMETRICS_OBS_DETAILS_List[i].C4IIIA_LONG_GRAD_PER_GRADE;
                            eformdbContext.EFORM_QM_GEOMETRICS_OBS_DETAILS.Add(GeoDetails);
                            eformdbContext.SaveChanges();
                            GeoObsID++;
                        }
                    }
                    #endregion

                    #region Page 13 : QM_SIDE_SLOPES
                    if (chkBoxArr[5] == 'Y')
                    {
                        int Slope_ID = eformdbContext.EFORM_QM_SIDE_SLOPES.Any() ? (from item in eformdbContext.EFORM_QM_SIDE_SLOPES select item.SIDE_SLOP_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_QM_SIDE_SLOPES SideSlope = new PMGSY.Models.EFORM_QM_SIDE_SLOPES();
                        SideSlope.SIDE_SLOP_ID = Slope_ID;
                        SideSlope.EFORM_ID = detailId;
                        SideSlope.IPADD = ipAdd;
                        SideSlope.IMS_PR_ROAD_CODE = prRoadCode;
                        SideSlope.QM_USER_ID = UserId;
                        SideSlope.SIDE_SLOPS_ASPER_DPR = qmInsertModel.QM_SIDE_SLOPES.SIDE_SLOPS_ASPER_DPR;
                        SideSlope.IS_ANALYSIS_DONE = qmInsertModel.QM_SIDE_SLOPES.IS_ANALYSIS_DONE;
                        SideSlope.OBSERVATIONS = qmInsertModel.QM_SIDE_SLOPES.OBSERVATIONS;
                        SideSlope.SUBITEM_GRADING_5IV = qmInsertModel.QM_SIDE_SLOPES.SUBITEM_GRADING_5IV;
                        SideSlope.IMPROVE_SUGGESTIONS = qmInsertModel.QM_SIDE_SLOPES.IMPROVEMENT_REMARK_5IV;
                        SideSlope.SUBITEM_GRADING_5 = qmInsertModel.QM_SIDE_SLOPES.ITEM_GRADING_5;
                        SideSlope.IMPROVE_SUGGESTIONS_5 = qmInsertModel.QM_SIDE_SLOPES.IMPROVEMENT_REMARK_5;
                        eformdbContext.EFORM_QM_SIDE_SLOPES.Add(SideSlope);
                        eformdbContext.SaveChanges();
                    }
                    #endregion

                    #region Page 13 : QM_CHILD_SIDE_SLOPE_DETAIL_List
                    if (chkBoxArr[5] == 'Y')
                    {
                        int SS_DETAIL_ID = eformdbContext.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL select item.SS_DETAIL_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.QM_CHILD_SIDE_SLOPE_DETAIL_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL ChildSlope = new PMGSY.Models.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL();
                            ChildSlope.SS_DETAIL_ID = SS_DETAIL_ID;
                            ChildSlope.EFORM_ID = detailId;
                            ChildSlope.IPADD = ipAdd;
                            ChildSlope.SIDE_SLOP_ID = eformdbContext.EFORM_QM_SIDE_SLOPES.Where(x => x.EFORM_ID == detailId).Select(x => x.SIDE_SLOP_ID).FirstOrDefault();
                            ChildSlope.IMS_PR_ROAD_CODE = prRoadCode;
                            ChildSlope.QM_USER_ID = UserId;
                            ChildSlope.LOCATION_RD = qmInsertModel.QM_CHILD_SIDE_SLOPE_DETAIL_List[i].LOCATION_RD_13_1;
                            ChildSlope.SS_OBSERVED_BY_QM = qmInsertModel.QM_CHILD_SIDE_SLOPE_DETAIL_List[i].SS_OBSERVED_BY_QM;
                            ChildSlope.IS_SS_SATISFACTORY = qmInsertModel.QM_CHILD_SIDE_SLOPE_DETAIL_List[i].IS_SS_SATISFACTORY;
                            ChildSlope.IS_PROFILE_SATISFACTORY = qmInsertModel.QM_CHILD_SIDE_SLOPE_DETAIL_List[i].IS_PROFILE_SATISFACTORY;
                            ChildSlope.GRADING = qmInsertModel.QM_CHILD_SIDE_SLOPE_DETAIL_List[i].GRADING;
                            eformdbContext.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL.Add(ChildSlope);
                            eformdbContext.SaveChanges();
                            SS_DETAIL_ID++;
                        }
                    }
                    #endregion

                    #region Page 13 : QM_CHILD_CUT_SLOPE_DETAIL_List
                    if (chkBoxArr[5] == 'Y')
                    {
                        int CUT_DETAIL_ID = eformdbContext.EFORM_QM_CHILD_CUT_SLOPE_DETAIL.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_CUT_SLOPE_DETAIL select item.CUT_DETAIL_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.QM_CHILD_CUT_SLOPE_DETAIL_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_CHILD_CUT_SLOPE_DETAIL CutSlopeDetail = new PMGSY.Models.EFORM_QM_CHILD_CUT_SLOPE_DETAIL();
                            CutSlopeDetail.CUT_DETAIL_ID = CUT_DETAIL_ID;
                            CutSlopeDetail.EFORM_ID = detailId;
                            CutSlopeDetail.IPADD = ipAdd;
                            CutSlopeDetail.SIDE_SLOP_ID = eformdbContext.EFORM_QM_SIDE_SLOPES.Where(x => x.EFORM_ID == detailId).Select(x => x.SIDE_SLOP_ID).FirstOrDefault();
                            CutSlopeDetail.IMS_PR_ROAD_CODE = prRoadCode;
                            CutSlopeDetail.QM_USER_ID = UserId;
                            CutSlopeDetail.LOCATION_RD = qmInsertModel.QM_CHILD_CUT_SLOPE_DETAIL_List[i].LOCATION_RD_13_2;
                            CutSlopeDetail.IS_STABLE = qmInsertModel.QM_CHILD_CUT_SLOPE_DETAIL_List[i].IS_STABLE;
                            eformdbContext.EFORM_QM_CHILD_CUT_SLOPE_DETAIL.Add(CutSlopeDetail);
                            eformdbContext.SaveChanges();
                            CUT_DETAIL_ID++;
                        }
                    }
                    #endregion



                    #endregion


                    #region ---Bhushan 10-12----
                    //---Bhushan

                    #region PAGE(10,11) Details of new technology section:
                    if (chkBoxArr[5] == 'Y')
                    {
                        PMGSY.Models.EFORM_QM_NEW_TECHNOLOGY_DETAILS QmNewTechDetails = new PMGSY.Models.EFORM_QM_NEW_TECHNOLOGY_DETAILS();

                        QmNewTechDetails.TECH_ID = eformdbContext.EFORM_QM_NEW_TECHNOLOGY_DETAILS.Any() ? eformdbContext.EFORM_QM_NEW_TECHNOLOGY_DETAILS.Select(x => x.TECH_ID).Max() + 1 : 1;
                        QmNewTechDetails.EFORM_ID = detailId;
                        QmNewTechDetails.IMS_PR_ROAD_CODE = prRoadCode;
                        QmNewTechDetails.IS_NEW_TECH_USED = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.IS_NEW_TECH_USED_10;
                        if (qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.TECH_NAME_10 == 0)
                        {
                            QmNewTechDetails.TECH_CODE = 1;
                        }
                        else
                        {
                            QmNewTechDetails.TECH_CODE = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.TECH_NAME_10;
                        }

                        QmNewTechDetails.PROVIDER_NAME = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.NEW_TECH_PROVIDER_10;
                        QmNewTechDetails.STABILIZER_NAME = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.STABILIZER_NAME_10;
                        QmNewTechDetails.STABILIZER_QTY_DPR = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.STABILIZER_QTY_DPR_10;
                        QmNewTechDetails.STABILIZER_QTY_USED = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.STABILIZER_QTY_USED_10;
                        QmNewTechDetails.UCS = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.UCS_ASPER_DPR_10;

                        QmNewTechDetails.JC_TECH_NAME = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.JC_TECH_NAME_11;
                        QmNewTechDetails.JC_TECH_PROVIDER = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.JC_TECH_PROVIDER_11;
                        QmNewTechDetails.JC_TECH_QTY_DPR = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.JC_TECH_QTY_DPR_11;
                        QmNewTechDetails.JC_TECH_QTY_USED = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.JC_TECH_QTY_USED_11;
                        QmNewTechDetails.IS_TEST_CERT_PROVIDED = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.IS_TEST_CERT_PROVIDED_11;
                        QmNewTechDetails.SUBGRADE_CBR = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.SUBGRADE_CBR_11;

                        QmNewTechDetails.SUBITEM_GRADING_5I = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.SUBITEM_GRADING_5_I;
                        QmNewTechDetails.GUIDING_NOTE = qmInsertModel.QM_NEW_TECHNOLOGY_DETAILS.IMPROVEMENT_REMARK_11;
                        QmNewTechDetails.QM_USER_ID = UserId;
                        QmNewTechDetails.IPADD = ipAdd;
                        eformdbContext.EFORM_QM_NEW_TECHNOLOGY_DETAILS.Add(QmNewTechDetails);
                        eformdbContext.SaveChanges();

                        //List<PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS> QmChildUcsDetails = new List<PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS>();

                        if (QmNewTechDetails.IS_NEW_TECH_USED == "Y")
                        {
                            qmInsertModel.QM_CHILD_UCS_DETAILS.ForEach(item =>
                            {
                                PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS QmChildUcsDetailsModel = new PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS();

                                QmChildUcsDetailsModel.UCS_DETAIL_ID = eformdbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS.Any() ? eformdbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS.Select(x => x.UCS_DETAIL_ID).Max() + 1 : 1;
                                QmChildUcsDetailsModel.TECH_ID = QmNewTechDetails.TECH_ID;
                                QmChildUcsDetailsModel.EFORM_ID = detailId;
                                QmChildUcsDetailsModel.IMS_PR_ROAD_CODE = prRoadCode;
                                QmChildUcsDetailsModel.LOCATION_RD_FROM = Convert.ToDecimal(item.LOCATION_RD_FROM_10);
                                QmChildUcsDetailsModel.LOCATION_RD_TO = Convert.ToDecimal(item.LOCATION_RD_TO_10);
                                QmChildUcsDetailsModel.UCS_ASPER_MIX_DESIGN = Convert.ToDecimal(item.UCS_ASPER_MIX_DESIGN_10);
                                QmChildUcsDetailsModel.UCS_ASPER_PIU = Convert.ToDecimal(item.UCS_ASPER_PIU_10);
                                QmChildUcsDetailsModel.IS_UCS_ACCEPTABLE = item.IS_UCS_ACCEPTABLE_10;
                                QmChildUcsDetailsModel.QM_USER_ID = UserId;
                                QmChildUcsDetailsModel.IPADD = ipAdd;
                                //QmChildUcsDetails.Add(QmChildUcsDetailsModel);

                                eformdbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS.Add(QmChildUcsDetailsModel);
                                eformdbContext.SaveChanges();
                            });

                        }

                        //List<PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS> QmChildCbrDetails = new List<PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS>();

                        if (QmNewTechDetails.IS_NEW_TECH_USED == "Y")
                        {
                            qmInsertModel.QM_CHILD_CBR_DETAILS.ForEach(item =>
                            {
                                PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS QmChildCbrDetailsModel = new PMGSY.Models.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS();

                                QmChildCbrDetailsModel.CBR_DETAIL_ID = eformdbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS.Any() ? eformdbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS.Select(x => x.CBR_DETAIL_ID).Max() + 1 : 1;
                                QmChildCbrDetailsModel.TECH_ID = QmNewTechDetails.TECH_ID;
                                QmChildCbrDetailsModel.EFORM_ID = detailId;
                                QmChildCbrDetailsModel.IMS_PR_ROAD_CODE = prRoadCode;
                                QmChildCbrDetailsModel.LOCATION_RD_FROM = Convert.ToDecimal(item.LOCATION_RD_FROM_11);
                                QmChildCbrDetailsModel.LOCATION_RD_TO = Convert.ToDecimal(item.LOCATION_RD_TO_11);
                                QmChildCbrDetailsModel.CBR_ASPER_MIX_DESIGN = Convert.ToDecimal(item.CBR_ASPER_MIX_DESIGN_11);
                                QmChildCbrDetailsModel.CBR_ASPER_PIU = Convert.ToDecimal(item.CBR_ASPER_PIU_11);
                                QmChildCbrDetailsModel.IS_CBR_ACCEPTABLE = item.IS_CBR_ACCEPTABLE_11;
                                QmChildCbrDetailsModel.QM_USER_ID = UserId;
                                QmChildCbrDetailsModel.IPADD = ipAdd;
                                //QmChildCbrDetails.Add(QmChildCbrDetailsModel);
                                eformdbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS.Add(QmChildCbrDetailsModel);
                                eformdbContext.SaveChanges();
                            });
                        }
                    }
                    //dbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS.Add();

                    #endregion

                    #region PAGE(11,12) Quality of material for embankment / sub-grade:
                    if (chkBoxArr[5] == 'Y')
                    {
                        PMGSY.Models.EFORM_QM_QOM_EMBANKMENT qmQomEmbankment = new PMGSY.Models.EFORM_QM_QOM_EMBANKMENT();

                        qmQomEmbankment.QOM_ID = eformdbContext.EFORM_QM_QOM_EMBANKMENT.Any() ? eformdbContext.EFORM_QM_QOM_EMBANKMENT.Select(x => x.QOM_ID).Max() + 1 : 1;
                        qmQomEmbankment.EFORM_ID = detailId;
                        qmQomEmbankment.IMS_PR_ROAD_CODE = prRoadCode;
                        qmQomEmbankment.NAME_LOCATION_SRC = (qmInsertModel.QM_QOM_EMBANKMENT.NAME_LOCATION_SRC == null || qmInsertModel.QM_QOM_EMBANKMENT.NAME_LOCATION_SRC == "") ? null : qmInsertModel.QM_QOM_EMBANKMENT.NAME_LOCATION_SRC.ToString();
                        qmQomEmbankment.DIST_SOE = Convert.ToDecimal(qmInsertModel.QM_QOM_EMBANKMENT.DIST_SOE);
                        qmQomEmbankment.IS_JUSTIFIED = (qmInsertModel.QM_QOM_EMBANKMENT.IS_JUSTIFIED == null || qmInsertModel.QM_QOM_EMBANKMENT.IS_JUSTIFIED == "") ? null : qmInsertModel.QM_QOM_EMBANKMENT.IS_JUSTIFIED.ToString();
                        qmQomEmbankment.APPROVED_SRC_REMARKS = (qmInsertModel.QM_QOM_EMBANKMENT.APPROVED_SRC_REMARKS == null || qmInsertModel.QM_QOM_EMBANKMENT.APPROVED_SRC_REMARKS == "") ? null : qmInsertModel.QM_QOM_EMBANKMENT.APPROVED_SRC_REMARKS.ToString();
                        qmQomEmbankment.SUBITEM_GRADE_5II = (qmInsertModel.QM_QOM_EMBANKMENT.SUBITEM_GRADING_5_II == null || qmInsertModel.QM_QOM_EMBANKMENT.SUBITEM_GRADING_5_II == "") ? null : qmInsertModel.QM_QOM_EMBANKMENT.SUBITEM_GRADING_5_II;
                        qmQomEmbankment.IMPROVE_SUGG = (qmInsertModel.QM_QOM_EMBANKMENT.IMPROVEMENT_REMARK_12_1 == null || qmInsertModel.QM_QOM_EMBANKMENT.IMPROVEMENT_REMARK_12_1 == "") ? null : qmInsertModel.QM_QOM_EMBANKMENT.IMPROVEMENT_REMARK_12_1;
                        qmQomEmbankment.QM_USER_ID = UserId;
                        qmQomEmbankment.IPADD = ipAdd;

                        eformdbContext.EFORM_QM_QOM_EMBANKMENT.Add(qmQomEmbankment);
                        eformdbContext.SaveChanges();


                        qmInsertModel.QM_CHILD_GROUP_SYMBOL_SOIL.ForEach(item =>
                        {
                            PMGSY.Models.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL qmChildGrpSymolSoil = new PMGSY.Models.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL();

                            qmChildGrpSymolSoil.SYMBOL_ID = eformdbContext.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL.Any() ? eformdbContext.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL.Select(x => x.SYMBOL_ID).Max() + 1 : 1;
                            qmChildGrpSymolSoil.QOM_ID = qmQomEmbankment.QOM_ID;
                            qmChildGrpSymolSoil.EFORM_ID = detailId;
                            qmChildGrpSymolSoil.IMS_PR_ROAD_CODE = prRoadCode;
                            qmChildGrpSymolSoil.LOCATION_RD = Convert.ToDecimal(item.LOCATION_RD_11);
                            qmChildGrpSymolSoil.GSS_ASPER_DPR = (item.GSS_ASPER_DPR == null || item.GSS_ASPER_DPR == "") ? null : item.GSS_ASPER_DPR.ToString();
                            qmChildGrpSymolSoil.GSS_OBSERVED = (item.GSS_OBSERVED == null || item.GSS_OBSERVED == "") ? null : item.GSS_OBSERVED.ToString();
                            qmChildGrpSymolSoil.SUITABILITY = (item.SUITABILITY == null || item.SUITABILITY == "") ? null : item.SUITABILITY.ToString();
                            qmChildGrpSymolSoil.MATERIAL_QLTY = (item.MATERIAL_QLTY == null || item.MATERIAL_QLTY == "") ? null : item.MATERIAL_QLTY.ToString();
                            qmChildGrpSymolSoil.QM_USER_ID = UserId;
                            qmChildGrpSymolSoil.IPADD = ipAdd;
                            eformdbContext.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL.Add(qmChildGrpSymolSoil);
                            eformdbContext.SaveChanges();
                        });

                        PMGSY.Models.EFORM_QM_COMPAQ_EMBANKMENT qmCompqEmbankment = new PMGSY.Models.EFORM_QM_COMPAQ_EMBANKMENT();
                        qmCompqEmbankment.COMPAQ_ID = eformdbContext.EFORM_QM_COMPAQ_EMBANKMENT.Any() ? eformdbContext.EFORM_QM_COMPAQ_EMBANKMENT.Select(x => x.COMPAQ_ID).Max() + 1 : 1;
                        qmCompqEmbankment.EFORM_ID = detailId;
                        qmCompqEmbankment.IMS_PR_ROAD_CODE = prRoadCode;
                        qmCompqEmbankment.MDD = Convert.ToDecimal(qmInsertModel.QM_COMPAQ_EMBANKMENT.MDD);
                        qmCompqEmbankment.OMC = Convert.ToDecimal(qmInsertModel.QM_COMPAQ_EMBANKMENT.OMC);
                        qmCompqEmbankment.SUBITEM_GRADING_5III = (qmInsertModel.QM_COMPAQ_EMBANKMENT.SUBITEM_GRADING_5_III == null || qmInsertModel.QM_COMPAQ_EMBANKMENT.SUBITEM_GRADING_5_III == "") ? null : qmInsertModel.QM_COMPAQ_EMBANKMENT.SUBITEM_GRADING_5_III.ToString();
                        qmCompqEmbankment.IMPROVE_SUGGESTION = (qmInsertModel.QM_COMPAQ_EMBANKMENT.IMPROVEMENT_REMARK_12_2 == null || qmInsertModel.QM_COMPAQ_EMBANKMENT.IMPROVEMENT_REMARK_12_2 == "") ? null : qmInsertModel.QM_COMPAQ_EMBANKMENT.IMPROVEMENT_REMARK_12_2.ToString();
                        qmCompqEmbankment.QM_USER_ID = UserId;
                        qmCompqEmbankment.IPADD = ipAdd;
                        eformdbContext.EFORM_QM_COMPAQ_EMBANKMENT.Add(qmCompqEmbankment);
                        eformdbContext.SaveChanges();

                        qmInsertModel.QM_CHILD_DEGREE_OF_COMPAQ.ForEach(item =>
                        {
                            PMGSY.Models.EFORM_QM_CHILD_DEGREE_OF_COMPAQ qmchildDegreeCompaq = new PMGSY.Models.EFORM_QM_CHILD_DEGREE_OF_COMPAQ();
                            qmchildDegreeCompaq.DEGREE_ID = eformdbContext.EFORM_QM_CHILD_DEGREE_OF_COMPAQ.Any() ? eformdbContext.EFORM_QM_CHILD_DEGREE_OF_COMPAQ.Select(X => X.DEGREE_ID).Max() + 1 : 1;
                            qmchildDegreeCompaq.COMPAQ_ID = qmCompqEmbankment.COMPAQ_ID;
                            qmchildDegreeCompaq.EFORM_ID = detailId;
                            qmchildDegreeCompaq.IMS_PR_ROAD_CODE = prRoadCode;
                            qmchildDegreeCompaq.LOCATION_RD = Convert.ToDecimal(item.LOCATION_RD_12);
                            qmchildDegreeCompaq.QCR1_DRY_DENSITY = Convert.ToDecimal(item.QCR1_DRY_DENSITY);
                            qmchildDegreeCompaq.QCR1_PERCENT_COMPAQ = Convert.ToDecimal(item.QCR1_PERCENT_COMPAQ);
                            qmchildDegreeCompaq.QCR1_DATE_OF_TEST = Convert.ToDateTime(item.QCR1_DATE_OF_TEST);
                            qmchildDegreeCompaq.MEAS_FMC = Convert.ToDecimal(item.MEAS_FMC);
                            qmchildDegreeCompaq.MEAS_DRY_DENSITY = Convert.ToDecimal(item.MEAS_DRY_DENSITY);
                            qmchildDegreeCompaq.MEAS_PERCENT_COMPAQ = Convert.ToDecimal(item.MEAS_PERCENT_COMPAQ);
                            qmchildDegreeCompaq.MEAS_GRADE = (item.MEAS_GRADE == null || item.MEAS_GRADE == "") ? null : item.MEAS_GRADE.ToString();
                            qmchildDegreeCompaq.QM_USER_ID = UserId;
                            qmchildDegreeCompaq.IPADD = ipAdd;
                            eformdbContext.EFORM_QM_CHILD_DEGREE_OF_COMPAQ.Add(qmchildDegreeCompaq);
                            eformdbContext.SaveChanges();
                        });
                    }
                    #endregion

                    #endregion


                    #region ---vikky 14-18----
                    //------------- PAGE(14,15) 6.	GRANULAR SUB-BASE (GSB): ----------------
                    if (chkBoxArr[6] == 'Y')
                    {
                        int subBaseId = eformdbContext.EFORM_QM_GRANULAR_SUBBASE.Any() ? (from item in eformdbContext.EFORM_QM_GRANULAR_SUBBASE select item.SUBBASE_ID).Max() + 1 : 1;




                        EFORM_QM_GRANULAR_SUBBASE granularSubbaseInfo = new EFORM_QM_GRANULAR_SUBBASE();
                        granularSubbaseInfo.SUBBASE_ID = subBaseId;
                        granularSubbaseInfo.EFORM_ID = detailId;
                        granularSubbaseInfo.IMS_PR_ROAD_CODE = prRoadCode;
                        granularSubbaseInfo.QM_USER_ID = UserId;
                        granularSubbaseInfo.IPADD = ipAdd;
                        granularSubbaseInfo.IS_PROVISION_IN_DPR = qmInsertModel.granular_subbase_mod.IS_PROVISION_IN_DPR_14;
                        granularSubbaseInfo.EXECUTION_STATUS = qmInsertModel.granular_subbase_mod.EXECUTION_STATUS_14;
                        granularSubbaseInfo.IS_NEW_TECH_USED = qmInsertModel.granular_subbase_mod.IS_NEW_TECH_USED_14;
                        if (qmInsertModel.granular_subbase_mod.NEW_TECH_NAME_14 == 0)
                        {
                            granularSubbaseInfo.TECH_ID = 1;
                        }
                        else
                        {
                            granularSubbaseInfo.TECH_ID = qmInsertModel.granular_subbase_mod.NEW_TECH_NAME_14;
                        }
                        granularSubbaseInfo.NEW_TECH_PROVIDER = qmInsertModel.granular_subbase_mod.NEW_TECH_PROVIDER_14;
                        granularSubbaseInfo.NAME_STABILISER_USED = qmInsertModel.granular_subbase_mod.NAME_STABILISER_USED_14;
                        granularSubbaseInfo.STABILISER_QTY_ASPER_DPR = qmInsertModel.granular_subbase_mod.STABILISER_QTY_ASPER_DPR_14;
                        granularSubbaseInfo.STABILISER_QTY_USED = qmInsertModel.granular_subbase_mod.STABILISER_QTY_USED_14;
                        if (qmInsertModel.granular_subbase_mod.UCS_ASPER_DPR_14 == null)
                        {
                            granularSubbaseInfo.UCS_ASPER_DPR = null;
                        }
                        else
                        {
                            granularSubbaseInfo.UCS_ASPER_DPR = qmInsertModel.granular_subbase_mod.UCS_ASPER_DPR_14;

                        }
                        granularSubbaseInfo.GSB_GRADING_ASPER_DPR = qmInsertModel.granular_subbase_mod.GSB_GRADING_ASPER_DPR_14;
                        granularSubbaseInfo.MDD = qmInsertModel.granular_subbase_mod.MDD_14;
                        granularSubbaseInfo.OMC = qmInsertModel.granular_subbase_mod.OMC_14;
                        granularSubbaseInfo.IS_GSB_ASPER_DPR = qmInsertModel.granular_subbase_mod.IS_GSB_ASPER_DPR;
                        granularSubbaseInfo.LAYERS_ASPER_DPR = qmInsertModel.granular_subbase_mod.LAYERS_ASPER_DPR;
                        granularSubbaseInfo.IS_GSB_ATSITE = qmInsertModel.granular_subbase_mod.IS_GSB_ATSITE;
                        granularSubbaseInfo.LAYERS_ATSITE = qmInsertModel.granular_subbase_mod.LAYERS_ATSITE;
                        granularSubbaseInfo.IS_COMPAQ = qmInsertModel.granular_subbase_mod.IS_COMPAQ;
                        granularSubbaseInfo.ITEM_GRADING_6 = qmInsertModel.granular_subbase_mod.ITEM_GRADING_6;
                        granularSubbaseInfo.IMPROVE_SUGGESTION = qmInsertModel.granular_subbase_mod.IMPROVEMENT_REMARK_15;

                        eformdbContext.EFORM_QM_GRANULAR_SUBBASE.Add(granularSubbaseInfo);
                        eformdbContext.SaveChanges();




                        int GUCSID = eformdbContext.EFORM_QM_CHILD_GRANULAR_UCS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_GRANULAR_UCS_DETAILS select item.GUCS_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.child_granular_UCS_List.Count; i++)
                        {

                            EFORM_QM_CHILD_GRANULAR_UCS_DETAILS CHILD_GRANULAR_UCS_DETAILS = new EFORM_QM_CHILD_GRANULAR_UCS_DETAILS();
                            CHILD_GRANULAR_UCS_DETAILS.GUCS_ID = GUCSID;
                            CHILD_GRANULAR_UCS_DETAILS.SUBBASE_ID = subBaseId;
                            CHILD_GRANULAR_UCS_DETAILS.EFORM_ID = detailId;
                            CHILD_GRANULAR_UCS_DETAILS.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_GRANULAR_UCS_DETAILS.QM_USER_ID = UserId;
                            CHILD_GRANULAR_UCS_DETAILS.IPADD = ipAdd;
                            CHILD_GRANULAR_UCS_DETAILS.LOCATION_RD_FROM = qmInsertModel.child_granular_UCS_List[i].LOCATION_RD_FROM_14;
                            CHILD_GRANULAR_UCS_DETAILS.LOCATION_RD_TO = qmInsertModel.child_granular_UCS_List[i].LOCATION_RD_TO_14;
                            CHILD_GRANULAR_UCS_DETAILS.UCS_ASPER_MIX_DESIGN = qmInsertModel.child_granular_UCS_List[i].UCS_ASPER_MIX_DESIGN_14;
                            CHILD_GRANULAR_UCS_DETAILS.UCS_ACHIEVED = qmInsertModel.child_granular_UCS_List[i].UCS_ACHIEVED_14;
                            CHILD_GRANULAR_UCS_DETAILS.IS_UCS_ACCEPTABLE = qmInsertModel.child_granular_UCS_List[i].IS_UCS_ACCEPTABLE_14;
                            eformdbContext.EFORM_QM_CHILD_GRANULAR_UCS_DETAILS.Add(CHILD_GRANULAR_UCS_DETAILS);
                            eformdbContext.SaveChanges();
                            GUCSID++;

                        }




                        int wms_id = eformdbContext.EFORM_QM_CHILD_QOM_WORKMENSHIP.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_QOM_WORKMENSHIP select item.WMS_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.child_granular_QOM_OBS_list.Count; i++)
                        {

                            EFORM_QM_CHILD_QOM_WORKMENSHIP CHILD_QOM_WORKMENSHIP = new EFORM_QM_CHILD_QOM_WORKMENSHIP();
                            CHILD_QOM_WORKMENSHIP.WMS_ID = wms_id;
                            CHILD_QOM_WORKMENSHIP.SUBBASE_ID = subBaseId;
                            CHILD_QOM_WORKMENSHIP.EFORM_ID = detailId;
                            CHILD_QOM_WORKMENSHIP.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_QOM_WORKMENSHIP.QM_USER_ID = UserId;
                            CHILD_QOM_WORKMENSHIP.IPADD = ipAdd;
                            CHILD_QOM_WORKMENSHIP.LOCATION_RD = qmInsertModel.child_granular_QOM_OBS_list[i].LOCATION_RD_14;
                            CHILD_QOM_WORKMENSHIP.IS_CONFORM_TO_GRADING = qmInsertModel.child_granular_QOM_OBS_list[i].IS_CONFORM_TO_GRADING_14;
                            CHILD_QOM_WORKMENSHIP.IS_MAT_SUITABLE = qmInsertModel.child_granular_QOM_OBS_list[i].IS_MAT_SUITABLE_14;
                            CHILD_QOM_WORKMENSHIP.DRY_DENSITY = qmInsertModel.child_granular_QOM_OBS_list[i].DRY_DENSITY_14;
                            CHILD_QOM_WORKMENSHIP.PERCENT_COMPAQ = qmInsertModel.child_granular_QOM_OBS_list[i].PERCENT_COMPAQ_14;
                            CHILD_QOM_WORKMENSHIP.IS_COMPAQ_ADIQUATE = qmInsertModel.child_granular_QOM_OBS_list[i].IS_COMPAQ_ADIQUATE_14;
                            CHILD_QOM_WORKMENSHIP.THICKNESS_ASPER_DPR = qmInsertModel.child_granular_QOM_OBS_list[i].THICKNESS_ASPER_DPR_14;
                            CHILD_QOM_WORKMENSHIP.THICKNESS_MEAS = qmInsertModel.child_granular_QOM_OBS_list[i].THICKNESS_MEAS_14;
                            CHILD_QOM_WORKMENSHIP.IS_PRISCRIBED = qmInsertModel.child_granular_QOM_OBS_list[i].IS_PRISCRIBED_14;

                            eformdbContext.EFORM_QM_CHILD_QOM_WORKMENSHIP.Add(CHILD_QOM_WORKMENSHIP);
                            eformdbContext.SaveChanges();
                            wms_id++;

                        }

                    }

                    //---------------base layer-1-------------

                    if (chkBoxArr[7] == 'Y')
                    {

                        int baseId1 = eformdbContext.EFORM_QM_BASE_COURSE_I.Any() ? (from item in eformdbContext.EFORM_QM_BASE_COURSE_I select item.LAYER_ID).Max() + 1 : 1;




                        EFORM_QM_BASE_COURSE_I BASE_COURSE_I = new EFORM_QM_BASE_COURSE_I();
                        BASE_COURSE_I.LAYER_ID = baseId1;

                        BASE_COURSE_I.EFORM_ID = detailId;
                        BASE_COURSE_I.IMS_PR_ROAD_CODE = prRoadCode;
                        BASE_COURSE_I.QM_USER_ID = UserId;
                        BASE_COURSE_I.IPADD = ipAdd;
                        BASE_COURSE_I.PROVISION_IN_DPR = qmInsertModel.base_course_1_details.PROVISION_IN_DPR_15;
                        BASE_COURSE_I.ITEM_EXECUTION_STATUS = qmInsertModel.base_course_1_details.ITEM_EXECUTION_STATUS_15;
                        BASE_COURSE_I.ACTUAL_EXECUTION = qmInsertModel.base_course_1_details.ACTUAL_EXECUTION_15;
                        BASE_COURSE_I.IS_NEW_TECH_USED = qmInsertModel.base_course_1_details.IS_NEW_TECH_USED_15;

                        if (qmInsertModel.base_course_1_details.NEW_TECH_NAME_15 == 0)
                        {
                            BASE_COURSE_I.TECH_ID = 1;
                        }
                        else
                        {
                            BASE_COURSE_I.TECH_ID = qmInsertModel.base_course_1_details.NEW_TECH_NAME_15;
                        }


                        BASE_COURSE_I.NEW_TECH_PROVIDER = qmInsertModel.base_course_1_details.NEW_TECH_PROVIDER_15;
                        BASE_COURSE_I.NAME_STABILISER_USED = qmInsertModel.base_course_1_details.NAME_STABILISER_USED_15;
                        BASE_COURSE_I.STABILISER_QTY_ASPER_DPR = qmInsertModel.base_course_1_details.STABILISER_QTY_ASPER_DPR_15;
                        BASE_COURSE_I.STABILISER_QTY_USED = qmInsertModel.base_course_1_details.STABILISER_QTY_USED_15;
                        BASE_COURSE_I.UCS_ASPER_DPR = qmInsertModel.base_course_1_details.UCS_ASPER_DPR_15;
                        BASE_COURSE_I.REASON_FOR_CHANGE = qmInsertModel.base_course_1_details.REASON_FOR_CHANGE_16;
                        BASE_COURSE_I.ITEM_GRADING_7 = qmInsertModel.base_course_1_details.ITEM_GRADING_7;
                        BASE_COURSE_I.IMPROVE_SUGGESTIONS = qmInsertModel.base_course_1_details.IMPROVEMENT_REMARK_16;

                        eformdbContext.EFORM_QM_BASE_COURSE_I.Add(BASE_COURSE_I);
                        eformdbContext.SaveChanges();

                        PdfLoadedRadioButtonListField IS_NEW_TECH_USED_15_btn = loadedForm.Fields["IS_NEW_TECH_USED_15"] as PdfLoadedRadioButtonListField;

                        if (IS_NEW_TECH_USED_15_btn.SelectedValue == "Y")
                        {

                            int BCUCS_ID1 = eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1 select item.BCUCS_ID).Max() + 1 : 1;


                            for (int i = 0; i < qmInsertModel.child_base_coarse_l1_ucs_list.Count; i++)
                            {

                                EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1 CHILD_BASECOURSE_UCS_DETAILS_LAYER1 = new EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1();


                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.BCUCS_ID = BCUCS_ID1;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.LAYER_ID = baseId1;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.EFORM_ID = detailId;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.IMS_PR_ROAD_CODE = prRoadCode;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.QM_USER_ID = UserId;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.IPADD = ipAdd;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.LOCATION_RD_FROM = qmInsertModel.child_base_coarse_l1_ucs_list[i].LOCATION_RD_FROM_15;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.LOCATION_RD_TO = qmInsertModel.child_base_coarse_l1_ucs_list[i].LOCATION_RD_TO_15;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.UCS_ASPER_MIX_DESIGN = qmInsertModel.child_base_coarse_l1_ucs_list[i].UCS_ASPER_MIX_DESIGN_15;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.UCS_ACHIEVED = qmInsertModel.child_base_coarse_l1_ucs_list[i].UCS_ACHIEVED_15;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER1.IS_UCS_ACCEPTABLE = qmInsertModel.child_base_coarse_l1_ucs_list[i].IS_UCS_ACCEPTABLE_15;
                                eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1.Add(CHILD_BASECOURSE_UCS_DETAILS_LAYER1);
                                eformdbContext.SaveChanges();
                                BCUCS_ID1++;

                            }
                        }



                        int OBSiD1 = eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1 select item.OBSERVATION_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.child_base_coarse_l1_workmanship_list.Count; i++)
                        {

                            EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1 CHILD_OBSERVATION_WORKMANSHIP_LAYER1 = new EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1();
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.OBSERVATION_ID = OBSiD1;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.LAYER_ID = baseId1;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.EFORM_ID = detailId;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.QM_USER_ID = UserId;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.IPADD = ipAdd;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.LOCATION_RD = qmInsertModel.child_base_coarse_l1_workmanship_list[i].LOCATION_RD_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.GRADING_AGRI = qmInsertModel.child_base_coarse_l1_workmanship_list[i].GRADING_AGRI_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.GRADING_PLASTICITY = qmInsertModel.child_base_coarse_l1_workmanship_list[i].GRADING_PLASTICITY_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.PERCENT_VOL_FILLER_MATERIAL = qmInsertModel.child_base_coarse_l1_workmanship_list[i].PERCENT_VOL_FILLER_MATERIAL_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.GRADING_COMPACTION = qmInsertModel.child_base_coarse_l1_workmanship_list[i].GRADING_COMPACTION_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.DESIGN_THICKNESS = qmInsertModel.child_base_coarse_l1_workmanship_list[i].DESIGN_THICKNESS_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.WBM_THICKNESS = qmInsertModel.child_base_coarse_l1_workmanship_list[i].WBM_THICKNESS_16;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER1.ADEQUATE_THICKNESS = qmInsertModel.child_base_coarse_l1_workmanship_list[i].ADEQUATE_THICKNESS_16;


                            eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1.Add(CHILD_OBSERVATION_WORKMANSHIP_LAYER1);
                            eformdbContext.SaveChanges();
                            OBSiD1++;

                        }
                    }
                    //-------------base Layer-2---------------------
                    if (chkBoxArr[8] == 'Y')
                    {
                        int baseId2 = eformdbContext.EFORM_QM_BASE_COURSE_II.Any() ? (from item in eformdbContext.EFORM_QM_BASE_COURSE_II select item.LAYER_ID).Max() + 1 : 1;




                        EFORM_QM_BASE_COURSE_II BASE_COURSE_II = new EFORM_QM_BASE_COURSE_II();
                        BASE_COURSE_II.LAYER_ID = baseId2;

                        BASE_COURSE_II.EFORM_ID = detailId;
                        BASE_COURSE_II.IMS_PR_ROAD_CODE = prRoadCode;
                        BASE_COURSE_II.QM_USER_ID = UserId;
                        BASE_COURSE_II.IPADD = ipAdd;
                        BASE_COURSE_II.PROVISION_IN_DPR = qmInsertModel.base_course_2_details.PROVISION_IN_DPR_16;
                        BASE_COURSE_II.ITEM_EXECUTION_STATUS = qmInsertModel.base_course_2_details.ITEM_EXECUTION_STATUS_16;
                        BASE_COURSE_II.ACTUAL_EXECUTION = qmInsertModel.base_course_2_details.ACTUAL_EXECUTION_16;
                        BASE_COURSE_II.IS_NEW_TECH_USED = qmInsertModel.base_course_2_details.IS_NEW_TECH_USED_16;

                        if (qmInsertModel.base_course_2_details.NEW_TECH_NAME_16 == 0)
                        {
                            BASE_COURSE_II.TECH_ID = 1;
                        }
                        else
                        {
                            BASE_COURSE_II.TECH_ID = qmInsertModel.base_course_2_details.NEW_TECH_NAME_16;
                        }

                        BASE_COURSE_II.NEW_TECH_PROVIDER = qmInsertModel.base_course_2_details.NEW_TECH_PROVIDER_16;
                        BASE_COURSE_II.NAME_STABILISER_USED = qmInsertModel.base_course_2_details.NAME_STABILISER_USED_16;
                        BASE_COURSE_II.STABILISER_QTY_ASPER_DPR = qmInsertModel.base_course_2_details.STABILISER_QTY_ASPER_DPR_16;
                        BASE_COURSE_II.STABILISER_QTY_USED = qmInsertModel.base_course_2_details.STABILISER_QTY_USED_16;
                        BASE_COURSE_II.UCS_ASPER_DPR = qmInsertModel.base_course_2_details.UCS_ASPER_DPR_17;
                        BASE_COURSE_II.REASON_FOR_CHANGE = qmInsertModel.base_course_2_details.REASON_FOR_CHANGE_17;
                        BASE_COURSE_II.ITEM_GRADING_8 = qmInsertModel.base_course_2_details.ITEM_GRADING_8;
                        BASE_COURSE_II.IMPROVE_SUGGESTIONS = qmInsertModel.base_course_2_details.IMPROVEMENT_REMARK_17;

                        eformdbContext.EFORM_QM_BASE_COURSE_II.Add(BASE_COURSE_II);
                        eformdbContext.SaveChanges();

                        PdfLoadedRadioButtonListField IS_NEW_TECH_USED_16_btn = loadedForm.Fields["IS_NEW_TECH_USED_16"] as PdfLoadedRadioButtonListField;

                        if (IS_NEW_TECH_USED_16_btn.SelectedValue == "Y")
                        {

                            int BCUCS_ID2 = eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2 select item.BCUCS_ID).Max() + 1 : 1;


                            for (int i = 0; i < qmInsertModel.child_base_coarse_l2_ucs_list.Count; i++)
                            {

                                EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2 CHILD_BASECOURSE_UCS_DETAILS_LAYER2 = new EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2();


                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.BCUCS_ID = BCUCS_ID2;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.LAYER_ID = baseId2;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.EFORM_ID = detailId;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.IMS_PR_ROAD_CODE = prRoadCode;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.QM_USER_ID = UserId;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.IPADD = ipAdd;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.LOCATION_RD_FROM = qmInsertModel.child_base_coarse_l2_ucs_list[i].LOCATION_RD_FROM_17;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.LOCATION_RD_TO = qmInsertModel.child_base_coarse_l2_ucs_list[i].LOCATION_RD_TO_17;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.UCS_ASPER_MIX_DESIGN = qmInsertModel.child_base_coarse_l2_ucs_list[i].UCS_ASPER_MIX_DESIGN_17;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.UCS_ACHIEVED = qmInsertModel.child_base_coarse_l2_ucs_list[i].UCS_ACHIEVED_17;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER2.IS_UCS_ACCEPTABLE = qmInsertModel.child_base_coarse_l2_ucs_list[i].IS_UCS_ACCEPTABLE_17;
                                eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2.Add(CHILD_BASECOURSE_UCS_DETAILS_LAYER2);
                                eformdbContext.SaveChanges();
                                BCUCS_ID2++;

                            }
                        }


                        int OBSiD2 = eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2 select item.OBSERVATION_ID_L2).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.child_base_coarse_l2_workmanship_list.Count; i++)
                        {

                            EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2 CHILD_OBSERVATION_WORKMANSHIP_LAYER2 = new EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2();
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.OBSERVATION_ID_L2 = OBSiD2;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.LAYER_ID = baseId2;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.EFORM_ID = detailId;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.QM_USER_ID = UserId;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.IPADD = ipAdd;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.LOCATION_RD = qmInsertModel.child_base_coarse_l2_workmanship_list[i].LOCATION_RD_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.GRADING_AGRI = qmInsertModel.child_base_coarse_l2_workmanship_list[i].GRADING_AGRI_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.GRADING_PLASTICITY = qmInsertModel.child_base_coarse_l2_workmanship_list[i].GRADING_PLASTICITY_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.PERCENT_VOL_FILLER_MATERIAL = qmInsertModel.child_base_coarse_l2_workmanship_list[i].PERCENT_VOL_FILLER_MATERIAL_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.GRADING_COMPACTION = qmInsertModel.child_base_coarse_l2_workmanship_list[i].GRADING_COMPACTION_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.DESIGN_THICKNESS = qmInsertModel.child_base_coarse_l2_workmanship_list[i].DESIGN_THICKNESS_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.WBM_THICKNESS = qmInsertModel.child_base_coarse_l2_workmanship_list[i].WBM_THICKNESS_17;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER2.ADEQUATE_THICKNESS = qmInsertModel.child_base_coarse_l2_workmanship_list[i].ADEQUATE_THICKNESS_17;


                            eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2.Add(CHILD_OBSERVATION_WORKMANSHIP_LAYER2);
                            eformdbContext.SaveChanges();
                            OBSiD2++;

                        }

                    }




                    //-------------base Layer-3---------------------

                    if (chkBoxArr[9] == 'Y')
                    {

                        int baseId3 = eformdbContext.EFORM_QM_BASE_COURSE_III.Any() ? (from item in eformdbContext.EFORM_QM_BASE_COURSE_III select item.LAYER_ID).Max() + 1 : 1;




                        EFORM_QM_BASE_COURSE_III BASE_COURSE_III = new EFORM_QM_BASE_COURSE_III();
                        BASE_COURSE_III.LAYER_ID = baseId3;

                        BASE_COURSE_III.EFORM_ID = detailId;
                        BASE_COURSE_III.IMS_PR_ROAD_CODE = prRoadCode;
                        BASE_COURSE_III.QM_USER_ID = UserId;
                        BASE_COURSE_III.IPADD = ipAdd;
                        BASE_COURSE_III.PROVISION_IN_DPR = qmInsertModel.base_course_3_details.PROVISION_IN_DPR_17;
                        BASE_COURSE_III.ITEM_EXECUTION_STATUS = qmInsertModel.base_course_3_details.ITEM_EXECUTION_STATUS_17;
                        BASE_COURSE_III.ACTUAL_EXECUTION = qmInsertModel.base_course_3_details.ACTUAL_EXECUTION_17;
                        BASE_COURSE_III.IS_NEW_TECH_USED = qmInsertModel.base_course_3_details.IS_NEW_TECH_USED_18;

                        if (qmInsertModel.base_course_3_details.NEW_TECH_NAME_18 == 0)
                        {
                            BASE_COURSE_III.TECH_ID = 1;
                        }
                        else
                        {
                            BASE_COURSE_III.TECH_ID = qmInsertModel.base_course_3_details.NEW_TECH_NAME_18;
                        }
                        BASE_COURSE_III.NEW_TECH_PROVIDER = qmInsertModel.base_course_3_details.NEW_TECH_PROVIDER_18;
                        BASE_COURSE_III.NAME_STABILISER_USED = qmInsertModel.base_course_3_details.NAME_STABILISER_USED_18;
                        BASE_COURSE_III.STABILISER_QTY_ASPER_DPR = qmInsertModel.base_course_3_details.STABILISER_QTY_ASPER_DPR_18;
                        BASE_COURSE_III.STABILISER_QTY_USED = qmInsertModel.base_course_3_details.STABILISER_QTY_USED_18;
                        BASE_COURSE_III.UCS_ASPER_DPR = qmInsertModel.base_course_3_details.UCS_ASPER_DPR_18;
                        BASE_COURSE_III.REASON_FOR_CHANGE = qmInsertModel.base_course_3_details.REASON_FOR_CHANGE_18;
                        BASE_COURSE_III.ITEM_GRADING_9 = qmInsertModel.base_course_3_details.ITEM_GRADING_9;
                        BASE_COURSE_III.IMPROVE_SUGGESTIONS = qmInsertModel.base_course_3_details.IMPROVEMENT_REMARK_18;

                        eformdbContext.EFORM_QM_BASE_COURSE_III.Add(BASE_COURSE_III);
                        eformdbContext.SaveChanges();



                        PdfLoadedRadioButtonListField IS_NEW_TECH_USED_18_btn = loadedForm.Fields["IS_NEW_TECH_USED_18"] as PdfLoadedRadioButtonListField;

                        if (IS_NEW_TECH_USED_18_btn.SelectedValue == "Y")
                        {
                            int BCUCS_ID3 = eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3 select item.BCUCS_ID).Max() + 1 : 1;


                            for (int i = 0; i < qmInsertModel.child_base_coarse_l3_ucs_list.Count; i++)
                            {

                                EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3 CHILD_BASECOURSE_UCS_DETAILS_LAYER3 = new EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3();


                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.BCUCS_ID = BCUCS_ID3;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.LAYER_ID = baseId3;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.EFORM_ID = detailId;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.IMS_PR_ROAD_CODE = prRoadCode;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.QM_USER_ID = UserId;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.IPADD = ipAdd;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.LOCATION_RD_FROM = qmInsertModel.child_base_coarse_l3_ucs_list[i].LOCATION_RD_FROM_18;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.LOCATION_RD_TO = qmInsertModel.child_base_coarse_l3_ucs_list[i].LOCATION_RD_TO_18;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.UCS_ASPER_MIX_DESIGN = qmInsertModel.child_base_coarse_l3_ucs_list[i].UCS_ASPER_MIX_DESIGN_18;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.UCS_ACHIEVED = qmInsertModel.child_base_coarse_l3_ucs_list[i].UCS_ACHIEVED_18;
                                CHILD_BASECOURSE_UCS_DETAILS_LAYER3.IS_UCS_ACCEPTABLE = qmInsertModel.child_base_coarse_l3_ucs_list[i].IS_UCS_ACCEPTABLE_18;
                                eformdbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3.Add(CHILD_BASECOURSE_UCS_DETAILS_LAYER3);
                                eformdbContext.SaveChanges();
                                BCUCS_ID3++;

                            }


                        }
                        int OBSiD3 = eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3 select item.OBSERVATION_ID_L2).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.child_base_coarse_l3_workmanship_list.Count; i++)
                        {

                            EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3 CHILD_OBSERVATION_WORKMANSHIP_LAYER3 = new EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3();
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.OBSERVATION_ID_L2 = OBSiD3;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.LAYER_ID = baseId3;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.EFORM_ID = detailId;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.QM_USER_ID = UserId;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.IPADD = ipAdd;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.LOCATION_RD = qmInsertModel.child_base_coarse_l3_workmanship_list[i].LOCATION_RD_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.GRADING_AGRI = qmInsertModel.child_base_coarse_l3_workmanship_list[i].GRADING_AGRI_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.GRADING_PLASTICITY = qmInsertModel.child_base_coarse_l3_workmanship_list[i].GRADING_PLASTICITY_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.PERCENT_VOL_FILLER_MATERIAL = qmInsertModel.child_base_coarse_l3_workmanship_list[i].PERCENT_VOL_FILLER_MATERIAL_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.GRADING_COMPACTION = qmInsertModel.child_base_coarse_l3_workmanship_list[i].GRADING_COMPACTION_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.DESIGN_THICKNESS = qmInsertModel.child_base_coarse_l3_workmanship_list[i].DESIGN_THICKNESS_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.WBM_THICKNESS = qmInsertModel.child_base_coarse_l3_workmanship_list[i].WBM_THICKNESS_18;
                            CHILD_OBSERVATION_WORKMANSHIP_LAYER3.ADEQUATE_THICKNESS = qmInsertModel.child_base_coarse_l3_workmanship_list[i].ADEQUATE_THICKNESS_18;


                            eformdbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3.Add(CHILD_OBSERVATION_WORKMANSHIP_LAYER3);
                            eformdbContext.SaveChanges();
                            OBSiD3++;

                        }
                    }
                    #endregion


                    #region ----srishti 19-23----
                    if (chkBoxArr[10] == 'Y')
                    {
                        PMGSY.Models.EFORM_QM_BITUMINOUS_BASE_COURSE bASE_COURSE = new PMGSY.Models.EFORM_QM_BITUMINOUS_BASE_COURSE();

                        int layerId = eformdbContext.EFORM_QM_BITUMINOUS_BASE_COURSE.Any() ? (from item in eformdbContext.EFORM_QM_BITUMINOUS_BASE_COURSE select item.LAYER_ID).Max() + 1 : 1;

                        bASE_COURSE.LAYER_ID = layerId;
                        bASE_COURSE.EFORM_ID = detailId;
                        bASE_COURSE.IMS_PR_ROAD_CODE = RoadCode;
                        bASE_COURSE.PROVISION_IN_DPR = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.PROVISION_IN_DPR_19;
                        bASE_COURSE.ITEM_EXECUTION_STATUS = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.ITEM_EXECUTION_STATUS_19;
                        bASE_COURSE.ACTUAL_EXECUTION = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.ACTUAL_EXECUTION_19;
                        bASE_COURSE.IS_NEW_TECH_USED = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.IS_NEW_TECH_USED_19;
                        if (qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_NAME_19 == 0)
                        {
                            bASE_COURSE.TECH_ID = 1;
                        }
                        else
                        {
                            bASE_COURSE.TECH_ID = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_NAME_19;

                        }
                        bASE_COURSE.NEW_TECH_PROVIDER = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_PROVIDER_19;
                        bASE_COURSE.NEW_TECH_MATERIAL_NAME = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_MATERIAL_NAME_19;
                        bASE_COURSE.NEW_TECH_QTY_MATERIAL_ASPER_DPR = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_QTY_MATERIAL_ASPER_DPR_19;
                        bASE_COURSE.NEW_TECH_QTY_MATERIAL_USED = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_QTY_MATERIAL_USED_19;
                        bASE_COURSE.NEW_TECH_LOC_FROM_ROAD = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_LOC_FROM_ROAD_19;
                        bASE_COURSE.NEW_TECH_LOC_FROM_TO = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.NEW_TECH_LOC_TO_ROAD_19;
                        bASE_COURSE.GRADING_NEW_TECH_EVALUATION = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.GRADING_NEW_TECH_EVALUATION_19;
                        bASE_COURSE.THICKNESS_ASPER_DPR = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.THICKNESS_ASPER_DPR_19;
                        bASE_COURSE.TYPE_GRADE_BINDER = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.TYPE_GRADE_BINDER_19;
                        bASE_COURSE.BRAND_NAME_BITUMEN = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.BRAND_NAME_BITUMEN_19;
                        bASE_COURSE.IS_BITUMEN_USED = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.IS_BITUMEN_USED_19;
                        bASE_COURSE.INVOICE_INSUFFICIENT_REASON = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.INVOICE_INSUFFICIENT_REASON_19;
                        bASE_COURSE.PERCENT_BITUMEN_CONTENT = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.PERCENT_BITUMEN_CONTENT_19;
                        bASE_COURSE.IS_PRIME_COAT_USED = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.IS_PRIME_COAT_USED_19;
                        bASE_COURSE.LAYING_TEMP = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.LAYING_TEMP_19;
                        bASE_COURSE.IS_MIX_DESIGN = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.IS_MIX_DESIGN_19;
                        bASE_COURSE.MARSHAL_STAB = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.MARSHAL_STAB_19;
                        bASE_COURSE.DESIGN_DENSITY = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.DESIGN_DENSITY_19;
                        bASE_COURSE.IS_HOT_MIX_DONE = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.IS_HOT_MIX_DONE_19;
                        bASE_COURSE.INSP_DATE = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.INSP_DATE_19_af_date;
                        bASE_COURSE.ITEM_GRADING_10 = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.ITEM_GRADING_10;
                        bASE_COURSE.IMPROVE_SUGGESTION = qmInsertModel.QM_BITUMINOUS_BASE_COURSE.IMPROVE_SUGGESTION_20;
                        bASE_COURSE.QM_USER_ID = UserId;
                        bASE_COURSE.IPADD = ipAdd;

                        eformdbContext.EFORM_QM_BITUMINOUS_BASE_COURSE.Add(bASE_COURSE);
                        eformdbContext.SaveChanges();

                        int obsId = eformdbContext.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS select item.OBS_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS oBSERVATION_DETAILS = new PMGSY.Models.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS();

                            oBSERVATION_DETAILS.OBS_ID = obsId;
                            oBSERVATION_DETAILS.LAYER_ID = layerId;
                            oBSERVATION_DETAILS.EFORM_ID = detailId;
                            oBSERVATION_DETAILS.IMS_PR_ROAD_CODE = RoadCode;
                            oBSERVATION_DETAILS.LOCATION_RD = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].LOCATION_RD_20;
                            oBSERVATION_DETAILS.GRADING_COARSE_AGG = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].GRADING_COARSE_AGG_20;
                            oBSERVATION_DETAILS.DENSITY_ACHIEVED = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].DENSITY_ACHIEVED_20;
                            oBSERVATION_DETAILS.PERCENT_COMPAQ = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].PERCENT_COMPAQ_20;
                            oBSERVATION_DETAILS.PERCENT_BITCONT_ASPER_QCR1 = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].PERCENT_BITCONT_ASPER_QCR1_20;
                            oBSERVATION_DETAILS.PERCENT_BITCONT_MEAS_QM = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].PERCENT_BITCONT_MEAS_QM_20;
                            oBSERVATION_DETAILS.GRADING_PERCENT_BITCONT = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].GRADING_PERCENT_BITCONT_20;
                            oBSERVATION_DETAILS.OBSERV_TOL_MEAS_QM = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].OBSERV_TOL_MEAS_QM_20;
                            oBSERVATION_DETAILS.GRADING_OBSERV_TOL = qmInsertModel.QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS[i].GRADING_OBSERV_TOL_20;
                            oBSERVATION_DETAILS.QM_USER_ID = UserId;
                            oBSERVATION_DETAILS.IPADD = ipAdd;

                            eformdbContext.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS.Add(oBSERVATION_DETAILS);
                            eformdbContext.SaveChanges();

                            obsId++;
                        }
                    }

                    if (chkBoxArr[11] == 'Y')
                    {
                        PMGSY.Models.EFORM_QM_BITUMINOUS_SURFACE_COURSE sURFACE_COURSE = new PMGSY.Models.EFORM_QM_BITUMINOUS_SURFACE_COURSE();

                        int scId = eformdbContext.EFORM_QM_BITUMINOUS_SURFACE_COURSE.Any() ? (from item in eformdbContext.EFORM_QM_BITUMINOUS_SURFACE_COURSE select item.SC_ID).Max() + 1 : 1;

                        sURFACE_COURSE.SC_ID = scId;
                        sURFACE_COURSE.EFORM_ID = detailId;
                        sURFACE_COURSE.IMS_PR_ROAD_CODE = RoadCode;
                        sURFACE_COURSE.PROVISION_IN_DPR = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.PROVISION_IN_DPR_20;
                        sURFACE_COURSE.ITEM_EXECUTION_STATUS = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.ITEM_EXECUTION_STATUS_20;
                        sURFACE_COURSE.BITUMINOUS_TYPE = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.BITUMINOUS_TYPE_20;
                        sURFACE_COURSE.IS_NEW_TECH_USED = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_QTY_USED_20;
                        if (qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_NAME_20 == 0)
                        {
                            sURFACE_COURSE.TECH_ID = 1;
                        }
                        else
                        {
                            sURFACE_COURSE.TECH_ID = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_NAME_20;

                        }
                        sURFACE_COURSE.NEW_TECH_PROVIDER = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_PROVIDER_20;
                        sURFACE_COURSE.NEW_TECH_MATERIAL_USED = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_MATERIAL_USED_20;
                        sURFACE_COURSE.NEW_TECH_QTY_USED_ASPER_DPR = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_QTY_USED_ASPER_DPR_20;
                        sURFACE_COURSE.NEW_TECH_QTY_MATERIAL = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_QTY_MATERIAL_20;
                        sURFACE_COURSE.NEW_TECH_LOC_FROM_ROAD = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_LOC_FROM_ROAD_20;
                        sURFACE_COURSE.NEW_TECH_LOC_FROM_TO = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.NEW_TECH_LOC_TO_ROAD_20;
                        sURFACE_COURSE.GRADING_NEW_TECH_EVALUATION = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.GRADING_NEW_TECH_EVALUATION_21;
                        sURFACE_COURSE.THICKNESS_ASPER_DPR = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.THICKNESS_ASPER_DPR;
                        sURFACE_COURSE.TYPE_GRADE_BINDER = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.TYPE_GRADE_BINDER_21;
                        sURFACE_COURSE.BRAND_NAME_BITUMEN = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.BRAND_NAME_BITUMEN_21;
                        sURFACE_COURSE.IS_BITUMEN_USED = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.IS_BITUMEN_USED_21;
                        sURFACE_COURSE.INVOICE_INSUFFICIENT_REASON = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.INVOICE_INSUFFICIENT_REASON_21;
                        sURFACE_COURSE.PERCENT_BITUMEN_CONTENT = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.PERCENT_BITUMEN_CONTENT_21;
                        sURFACE_COURSE.IS_TACK_COAT_USED = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.IS_TACK_COAT_USED_21;
                        sURFACE_COURSE.IS_MIX_DESIGN = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.IS_MIX_DESIGN_21;
                        sURFACE_COURSE.MARSHAL_STAB = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.MARSHAL_STAB_21;
                        sURFACE_COURSE.IS_SIGN_DISTRESS = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.IS_SIGN_DISTRESS_21;
                        sURFACE_COURSE.REASON1_LOQ_TEMP = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.DISTRESS_REASON_21_1;
                        sURFACE_COURSE.REASON2_POOR_WORKMANSHIP = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.DISTRESS_REASON_21_2;
                        sURFACE_COURSE.REASON3_OVERLOADING = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.DISTRESS_REASON_21_3;
                        sURFACE_COURSE.REASON4_BITUMEN_CONTENT = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.DISTRESS_REASON_21_4;
                        sURFACE_COURSE.ITEM_GRADING_11 = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.ITEM_GRADING_11_22;
                        sURFACE_COURSE.IMPROVE_SUGGESTION = qmInsertModel.QM_BITUMINOUS_SURFACE_COURSE.IMPROVE_SUGGESTION_22;
                        sURFACE_COURSE.QM_USER_ID = UserId;
                        sURFACE_COURSE.IPADD = ipAdd;

                        eformdbContext.EFORM_QM_BITUMINOUS_SURFACE_COURSE.Add(sURFACE_COURSE);
                        eformdbContext.SaveChanges();

                        int obserId = eformdbContext.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS select item.OBS_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS rowModel = new PMGSY.Models.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS();

                            rowModel.OBS_ID = obserId;
                            rowModel.SC_ID = scId;
                            rowModel.EFORM_ID = detailId;
                            rowModel.IMS_PR_ROAD_CODE = RoadCode;
                            rowModel.LOCATION_RD = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].LOCATION_RD_21;
                            rowModel.GRADING_COARSE_AGG = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].GRADING_COARSE_AGG_21;
                            rowModel.LAYING_TEMP = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].LAYING_TEMP_21;
                            rowModel.PERCENT_BITCONT_ASPER_QCR1 = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].PERCENT_BITCONT_ASPER_QCR1_21;
                            rowModel.PERCENT_BITCONT_MEAS_QM = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].PERCENT_BITCONT_MEAS_QM_21;
                            rowModel.GRADING_PERCENT_BITCONT = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].GRADING_PERCENT_BITCONT_21;
                            rowModel.OBSERV_TOL_MEAS_QM = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].OBSERV_TOL_MEAS_QM_21;
                            rowModel.GRADING_OBSERV_TOL = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].GRADING_OBSERV_TOL_21;
                            rowModel.GRADING_SURFACE_UE = qmInsertModel.QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS[i].GRADING_SURFACE_UE_21;
                            rowModel.QM_USER_ID = UserId;
                            rowModel.IPADD = ipAdd;

                            eformdbContext.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS.Add(rowModel);
                            eformdbContext.SaveChanges();

                            obserId++;
                        }
                    }

                    if (chkBoxArr[12] == 'Y')
                    {
                        PMGSY.Models.EFORM_QM_SHOULDERS sHOULDERS = new PMGSY.Models.EFORM_QM_SHOULDERS();

                        int shId = eformdbContext.EFORM_QM_SHOULDERS.Any() ? (from item in eformdbContext.EFORM_QM_SHOULDERS select item.SH_ID).Max() + 1 : 1;

                        sHOULDERS.SH_ID = shId;
                        sHOULDERS.EFORM_ID = detailId;
                        sHOULDERS.IMS_PR_ROAD_CODE = RoadCode;
                        sHOULDERS.ITEM_EXECUTION_STATUS = qmInsertModel.QM_SHOULDERS.ITEM_EXECUTION_STATUS_22;
                        sHOULDERS.IS_NEW_TECH_USED = qmInsertModel.QM_SHOULDERS.IS_NEW_TECH_USED_22;

                        if (qmInsertModel.QM_SHOULDERS.NEW_TECH_NAME_22 == 0)
                        {
                            sHOULDERS.TECH_ID = 1;
                        }
                        else
                        {
                            sHOULDERS.TECH_ID = qmInsertModel.QM_SHOULDERS.NEW_TECH_NAME_22;
                        }
                        sHOULDERS.NEW_TECH_PROVIDER = qmInsertModel.QM_SHOULDERS.NEW_TECH_PROVIDER_22;
                        sHOULDERS.NAME_STABILISER_USED = qmInsertModel.QM_SHOULDERS.NAME_STABILISER_USED_22;
                        sHOULDERS.STABILISER_QTY_ASPER_DPR = qmInsertModel.QM_SHOULDERS.STABILISER_QTY_ASPER_DP_22;
                        sHOULDERS.STABILISER_QTY_USED = qmInsertModel.QM_SHOULDERS.STABILISER_QTY_USED_22;
                        sHOULDERS.UCS_ASPER_DPR = qmInsertModel.QM_SHOULDERS.UCS_ASPER_DPR_22;
                        sHOULDERS.MATERIAL_TYPE = qmInsertModel.QM_SHOULDERS.MATERIAL_TYPE_22;
                        sHOULDERS.MATERIAL_WIDTH = qmInsertModel.QM_SHOULDERS.MATERIAL_WIDTH_22;
                        sHOULDERS.MATERIAL_THICKNESS = qmInsertModel.QM_SHOULDERS.MATERIAL_THICKNESS_22;
                        sHOULDERS.ITEM_GRADING_12 = qmInsertModel.QM_SHOULDERS.ITEM_GRADING_12;
                        sHOULDERS.IMPROVE_SUGGESTION = qmInsertModel.QM_SHOULDERS.IMPROVE_SUGGESTION_23;
                        sHOULDERS.QM_USER_ID = UserId;
                        sHOULDERS.IPADD = ipAdd;

                        eformdbContext.EFORM_QM_SHOULDERS.Add(sHOULDERS);
                        eformdbContext.SaveChanges();

                        int ShuchId = eformdbContext.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS select item.SHUCS_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.QM_CHILD_SHOULDERS_UCS_DETAILS.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS rowModel = new PMGSY.Models.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS();

                            rowModel.SHUCS_ID = ShuchId;
                            rowModel.SH_ID = shId;
                            rowModel.EFORM_ID = detailId;
                            rowModel.IMS_PR_ROAD_CODE = RoadCode;
                            rowModel.LOCATION_RD_FROM = qmInsertModel.QM_CHILD_SHOULDERS_UCS_DETAILS[i].LOCATION_RD_FROM_22;
                            rowModel.LOCATION_RD_TO = qmInsertModel.QM_CHILD_SHOULDERS_UCS_DETAILS[i].LOCATION_RD_TO_22;
                            rowModel.UCS_ASPER_MIX_DESIGN = qmInsertModel.QM_CHILD_SHOULDERS_UCS_DETAILS[i].UCS_ASPER_MIX_DESIGN_22;
                            rowModel.UCS_ACHIEVED = qmInsertModel.QM_CHILD_SHOULDERS_UCS_DETAILS[i].UCS_ACHIEVED_22;
                            rowModel.IS_UCS_ACCEPTABLE = qmInsertModel.QM_CHILD_SHOULDERS_UCS_DETAILS[i].IS_UCS_ACCEPTABLE_22;
                            rowModel.QM_USER_ID = UserId;
                            rowModel.IPADD = ipAdd;

                            eformdbContext.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS.Add(rowModel);
                            eformdbContext.SaveChanges();

                            ShuchId++;

                        }

                        int obId = eformdbContext.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS select item.OBS_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS.Count; i++)
                        {
                            PMGSY.Models.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS rowModel = new PMGSY.Models.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS();

                            rowModel.OBS_ID = obId;
                            rowModel.SH_ID = shId;
                            rowModel.EFORM_ID = detailId;
                            rowModel.IMS_PR_ROAD_CODE = RoadCode;
                            rowModel.LOCATION_RD = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].LOCATION_RD_22;
                            rowModel.GRADING_QOM_HAND_FEEL = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].GRADING_QOM_HAND_FEEL_22;
                            rowModel.COMPAQ_DEGREE_ASPER_QCR1 = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].COMPAQ_DEGREE_ASPER_QCR1_22;
                            rowModel.COMPAQ_DEGREE_MEAS_QM = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].COMPAQ_DEGREE_MEAS_QM_22;
                            rowModel.GRADING_COMPAQ_DEGREE = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].GRADING_COMPAQ_DEGREE_22;
                            rowModel.CAMBER_ASPER_DPR = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].CAMBER_ASPER_DPR_22;
                            rowModel.CAMBER_MEAS_QM = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].CAMBER_MEAS_QM_22;
                            rowModel.GRADING_CAMBER = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].GRADING_CAMBER_22;
                            rowModel.SECTIONAL_WIDTH = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].SECTIONAL_WIDTH_22;
                            rowModel.SECTIONAL_THICKNESS = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].SECTIONAL_THICKNESS_22;
                            rowModel.GRADING_SECTIONAL = qmInsertModel.QM_CHILD_SHOULDERS_MATERIAL_DETAILS[i].GRADING_SECTIONAL_22;
                            rowModel.QM_USER_ID = UserId;
                            rowModel.IPADD = ipAdd;

                            eformdbContext.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS.Add(rowModel);
                            eformdbContext.SaveChanges();

                            obId++;
                        }

                    }
                    #endregion


                    #region --vikky  page 23-27-----

                    if (chkBoxArr[13] == 'Y')
                    {
                        PdfLoadedTextBoxField TOTAL_PIPE_CULVERTS = loadedForm.Fields["TOTAL_PIPE_CULVERTS"] as PdfLoadedTextBoxField;

                        var TOTAL_PIPE_CULVERTS_value = Convert.ToDecimal(TOTAL_PIPE_CULVERTS.Text);

                        if (TOTAL_PIPE_CULVERTS_value > 0)
                        {
                            int CDPIPE_ID = eformdbContext.EFORM_QM_CDWORKS_PIPE_CULVERTS.Any() ? (from item in eformdbContext.EFORM_QM_CDWORKS_PIPE_CULVERTS select item.CDWORKS_ID).Max() + 1 : 1;


                            EFORM_QM_CDWORKS_PIPE_CULVERTS CDWORKS_PIPE_CULVERTS = new EFORM_QM_CDWORKS_PIPE_CULVERTS();

                            CDWORKS_PIPE_CULVERTS.CDWORKS_ID = CDPIPE_ID;

                            CDWORKS_PIPE_CULVERTS.EFORM_ID = detailId;
                            CDWORKS_PIPE_CULVERTS.IMS_PR_ROAD_CODE = prRoadCode;
                            CDWORKS_PIPE_CULVERTS.QM_USER_ID = UserId;
                            CDWORKS_PIPE_CULVERTS.IPADD = ipAdd;
                            CDWORKS_PIPE_CULVERTS.TOTAL_PIPE_CULVERTS = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.TOTAL_PIPE_CULVERTS;
                            CDWORKS_PIPE_CULVERTS.MINIMUM_CUSHION = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.MINIMUM_CUSHION;
                            CDWORKS_PIPE_CULVERTS.CLASS_OF_PIPES_NP2 = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.CLASS_OF_PIPES_NP2;
                            CDWORKS_PIPE_CULVERTS.CLASS_OF_PIPES_NP3 = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.CLASS_OF_PIPES_NP3;
                            CDWORKS_PIPE_CULVERTS.GRADE_OF_CONCRETE = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.GRADE_OF_CONCRETE_23;
                            CDWORKS_PIPE_CULVERTS.IS_PROTECTION_PROVIDED = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.IS_PROTECTION_PROVIDED_23;
                            CDWORKS_PIPE_CULVERTS.IS_PIPE_PROPERLY_PLACED = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.IS_PIPE_PROPERLY_PLACED_23;
                            CDWORKS_PIPE_CULVERTS.ITEM_GRADING_13 = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.ITEM_GRADING_13;
                            CDWORKS_PIPE_CULVERTS.IMPROVE_SUGGESTIONS = qmInsertModel.CDWORKS_PIPE_CULVERTS_details.IMPROVE_SUGGESTIONS_23;

                            eformdbContext.EFORM_QM_CDWORKS_PIPE_CULVERTS.Add(CDWORKS_PIPE_CULVERTS);
                            eformdbContext.SaveChanges();


                            int PipeDetail_ID = eformdbContext.EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS select item.CDWORKS_DETAIL_ID).Max() + 1 : 1;


                            for (int i = 0; i < qmInsertModel.CHILD_CDWORKS_PIPE_CULVERTS_list.Count; i++)
                            {
                                EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS CHILD_CDWORKS_PIPE_CULVERTS = new EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS();

                                CHILD_CDWORKS_PIPE_CULVERTS.CDWORKS_DETAIL_ID = PipeDetail_ID;
                                CHILD_CDWORKS_PIPE_CULVERTS.CDWORKS_ID = CDPIPE_ID;
                                CHILD_CDWORKS_PIPE_CULVERTS.EFORM_ID = detailId;
                                CHILD_CDWORKS_PIPE_CULVERTS.IMS_PR_ROAD_CODE = prRoadCode;
                                CHILD_CDWORKS_PIPE_CULVERTS.QM_USER_ID = UserId;
                                CHILD_CDWORKS_PIPE_CULVERTS.IPADD = ipAdd;
                                CHILD_CDWORKS_PIPE_CULVERTS.LOCATION_RD = qmInsertModel.CHILD_CDWORKS_PIPE_CULVERTS_list[i].LOCATION_RD_23;
                                CHILD_CDWORKS_PIPE_CULVERTS.CLASS_OF_PIPE = qmInsertModel.CHILD_CDWORKS_PIPE_CULVERTS_list[i].CLASS_OF_PIPE_23;
                                CHILD_CDWORKS_PIPE_CULVERTS.MEAS_CUSHION = qmInsertModel.CHILD_CDWORKS_PIPE_CULVERTS_list[i].MEAS_CUSHION_23;
                                CHILD_CDWORKS_PIPE_CULVERTS.STRENGTH_OF_CONCRETE = qmInsertModel.CHILD_CDWORKS_PIPE_CULVERTS_list[i].STRENGTH_OF_CONCRETE_23;
                                CHILD_CDWORKS_PIPE_CULVERTS.QOM = qmInsertModel.CHILD_CDWORKS_PIPE_CULVERTS_list[i].QOM_23;


                                eformdbContext.EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS.Add(CHILD_CDWORKS_PIPE_CULVERTS);
                                eformdbContext.SaveChanges();
                                PipeDetail_ID++;
                            }
                        }

                    }

                    if (chkBoxArr[14] == 'Y')
                    {
                        PdfLoadedTextBoxField TOTAL_SLAB_CULVERTS = loadedForm.Fields["TOTAL_SLAB_CULVERTS"] as PdfLoadedTextBoxField;

                        var TOTAL_SLAB_CULVERTS_value = Convert.ToDecimal(TOTAL_SLAB_CULVERTS.Text);

                        if (TOTAL_SLAB_CULVERTS_value > 0)
                        {

                            int CDSLAB_ID = eformdbContext.EFORM_QM_CDWORKS_SLAB_CULVERTS.Any() ? (from item in eformdbContext.EFORM_QM_CDWORKS_SLAB_CULVERTS select item.CDWORKS_ID).Max() + 1 : 1;

                            EFORM_QM_CDWORKS_SLAB_CULVERTS CDWORKS_SLAB_CULVERTS = new EFORM_QM_CDWORKS_SLAB_CULVERTS();

                            CDWORKS_SLAB_CULVERTS.CDWORKS_ID = CDSLAB_ID;
                            CDWORKS_SLAB_CULVERTS.EFORM_ID = detailId;
                            CDWORKS_SLAB_CULVERTS.IMS_PR_ROAD_CODE = prRoadCode;
                            CDWORKS_SLAB_CULVERTS.QM_USER_ID = UserId;
                            CDWORKS_SLAB_CULVERTS.IPADD = ipAdd;
                            CDWORKS_SLAB_CULVERTS.CONCRTE_GRADE = qmInsertModel.CDWORKS_SLAB_CULVERTS_details.CONCRTE_GRADE_24;
                            CDWORKS_SLAB_CULVERTS.TOTAL_SLAB_CULVERTS = qmInsertModel.CDWORKS_SLAB_CULVERTS_details.TOTAL_SLAB_CULVERTS;
                            CDWORKS_SLAB_CULVERTS.ITEM_GRADING_14 = qmInsertModel.CDWORKS_SLAB_CULVERTS_details.ITEM_GRADING_14;
                            CDWORKS_SLAB_CULVERTS.IMPROVE_SUGGESTIONS = qmInsertModel.CDWORKS_SLAB_CULVERTS_details.IMPROVE_SUGGESTIONS_24;

                            eformdbContext.EFORM_QM_CDWORKS_SLAB_CULVERTS.Add(CDWORKS_SLAB_CULVERTS);
                            eformdbContext.SaveChanges();


                            int SlabDetail_ID = eformdbContext.EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS select item.CDWORKS_DETAIL_ID).Max() + 1 : 1;


                            for (int i = 0; i < qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list.Count; i++)
                            {
                                EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS CHILD_CDWORKS_SLAB_CULVERTS = new EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS();

                                CHILD_CDWORKS_SLAB_CULVERTS.CDWORKS_DETAIL_ID = SlabDetail_ID;
                                CHILD_CDWORKS_SLAB_CULVERTS.CDWORKS_ID = CDSLAB_ID;
                                CHILD_CDWORKS_SLAB_CULVERTS.EFORM_ID = detailId;
                                CHILD_CDWORKS_SLAB_CULVERTS.IMS_PR_ROAD_CODE = prRoadCode;
                                CHILD_CDWORKS_SLAB_CULVERTS.QM_USER_ID = UserId;
                                CHILD_CDWORKS_SLAB_CULVERTS.IPADD = ipAdd;
                                CHILD_CDWORKS_SLAB_CULVERTS.LOCATION_RD = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].LOCATION_RD_24;
                                CHILD_CDWORKS_SLAB_CULVERTS.SLAB_THICKNESS_ASPER_DPR = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].SLAB_THICKNESS_ASPER_DPR_24;
                                CHILD_CDWORKS_SLAB_CULVERTS.SLAB_THICKNESS_MEAS_QM = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].SLAB_THICKNESS_MEAS_QM_24;
                                CHILD_CDWORKS_SLAB_CULVERTS.GRADING_SLAB_THICKNESS = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].GRADING_SLAB_THICKNESS_24;
                                CHILD_CDWORKS_SLAB_CULVERTS.CONCRETE_GRADE_ASPER_DPR = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].CONCRETE_GRADE_ASPER_DPR_24;
                                CHILD_CDWORKS_SLAB_CULVERTS.STRENGTH_OF_CONCRETE = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].STRENGTH_OF_CONCRETE_24;
                                CHILD_CDWORKS_SLAB_CULVERTS.QOM = qmInsertModel.CHILD_CDWORKS_SLAB_CULVERTS_list[i].QOM_24;


                                eformdbContext.EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS.Add(CHILD_CDWORKS_SLAB_CULVERTS);
                                eformdbContext.SaveChanges();
                                SlabDetail_ID++;
                            }



                        }
                    }

                    if (chkBoxArr[15] == 'Y')
                    {

                        int PWORK_ID = eformdbContext.EFORM_QM_PROTECTION_WORK.Any() ? (from item in eformdbContext.EFORM_QM_PROTECTION_WORK select item.WORK_ID).Max() + 1 : 1;

                        EFORM_QM_PROTECTION_WORK PROTECTION_WORK = new EFORM_QM_PROTECTION_WORK();

                        PROTECTION_WORK.WORK_ID = PWORK_ID;
                        PROTECTION_WORK.EFORM_ID = detailId;
                        PROTECTION_WORK.IMS_PR_ROAD_CODE = prRoadCode;
                        PROTECTION_WORK.QM_USER_ID = UserId;
                        PROTECTION_WORK.IPADD = ipAdd;
                        PROTECTION_WORK.IS_DPR_PROVISION = qmInsertModel.PROTECTION_WORK_details.IS_DPR_PROVISION_24;
                        PROTECTION_WORK.IS_RETAINING_WALL = qmInsertModel.PROTECTION_WORK_details.Retaining_Wall;
                        PROTECTION_WORK.IS_BREAST_WALL = qmInsertModel.PROTECTION_WORK_details.Breast_Wall;
                        PROTECTION_WORK.IS_PARAPET_WALL = qmInsertModel.PROTECTION_WORK_details.Parapet_Wall;
                        PROTECTION_WORK.IS_ANY_OTHER_TYPE = qmInsertModel.PROTECTION_WORK_details.Any_other;
                        PROTECTION_WORK.RETAINING_WALL_LENGTH = qmInsertModel.PROTECTION_WORK_details.RETAINING_WALL_LENGTH;
                        PROTECTION_WORK.BREAST_WALL_LENGTH = qmInsertModel.PROTECTION_WORK_details.BREAST_WALL_LENGTH;
                        PROTECTION_WORK.PARAPET_WALL_LENGTH = qmInsertModel.PROTECTION_WORK_details.PARAPET_WALL_LENGTH;
                        PROTECTION_WORK.OTHER_TYPE1_NAME = qmInsertModel.PROTECTION_WORK_details.OTHER_TYPE1_NAME;
                        PROTECTION_WORK.OTHER_TYPE2_NAME = qmInsertModel.PROTECTION_WORK_details.OTHER_TYPE2_NAME;
                        PROTECTION_WORK.OTHER_TYPE3_NAME = qmInsertModel.PROTECTION_WORK_details.OTHER_TYPE3_NAME;
                        PROTECTION_WORK.OTHER_A_WALL_LENGTH = qmInsertModel.PROTECTION_WORK_details.OTHER_A_WALL_LENGTH;
                        PROTECTION_WORK.OTHER_B_WALL_LENGTH = qmInsertModel.PROTECTION_WORK_details.OTHER_B_WALL_LENGTH;
                        PROTECTION_WORK.OTHER_C_WALL_LENGTH = qmInsertModel.PROTECTION_WORK_details.OTHER_C_WALL_LENGTH;
                        PROTECTION_WORK.TOT_LENGTH = qmInsertModel.PROTECTION_WORK_details.TOT_LENGTH;
                        PROTECTION_WORK.IS_STONE_MEASONRY_ACCEPTABLE = qmInsertModel.PROTECTION_WORK_details.IS_STONE_MEASONRY_ACCEPTABLE;
                        PROTECTION_WORK.IS_BOND_STONE_PROVIDED = qmInsertModel.PROTECTION_WORK_details.IS_BOND_STONE_PROVIDED;
                        PROTECTION_WORK.ITEM_GRADING_15 = qmInsertModel.PROTECTION_WORK_details.ITEM_GRADING_15;
                        PROTECTION_WORK.IMPROVE_SUGGESTIONS = qmInsertModel.PROTECTION_WORK_details.IMPROVE_SUGGESTIONS_25;

                        eformdbContext.EFORM_QM_PROTECTION_WORK.Add(PROTECTION_WORK);
                        eformdbContext.SaveChanges();




                        int PQomId = eformdbContext.EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS select item.QOM_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.CHILD_PROT_WORKS_QOM_list.Count; i++)
                        {
                            EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS CHILD_PROT_WORKS_QOM = new EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS();

                            CHILD_PROT_WORKS_QOM.QOM_ID = PQomId;
                            CHILD_PROT_WORKS_QOM.WORK_ID = PWORK_ID;
                            CHILD_PROT_WORKS_QOM.EFORM_ID = detailId;
                            CHILD_PROT_WORKS_QOM.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_PROT_WORKS_QOM.QM_USER_ID = UserId;
                            CHILD_PROT_WORKS_QOM.IPADD = ipAdd;
                            CHILD_PROT_WORKS_QOM.LOCATION_RD = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].LOCATION_RD_25;
                            CHILD_PROT_WORKS_QOM.STRUCTURE_TYPE = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].STRUCTURE_TYPE_25;
                            CHILD_PROT_WORKS_QOM.PROTECTION_TYPE = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].PROTECTION_TYPE_25;
                            CHILD_PROT_WORKS_QOM.GENERAL_QOM = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].GENERAL_QOM_25;
                            CHILD_PROT_WORKS_QOM.AVG_WIDTH_ASPER_DPR = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].AVG_WIDTH_ASPER_DPR_25;
                            CHILD_PROT_WORKS_QOM.AVG_HEIGHT_ASPER_DPR = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].AVG_HEIGHT_ASPER_DPR_25;
                            CHILD_PROT_WORKS_QOM.AVG_WIDTH_ASPER_REC = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].AVG_WIDTH_ASPER_REC_25;
                            CHILD_PROT_WORKS_QOM.AVG_HEIGHT_ASPER_REC = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].AVG_HEIGHT_ASPER_REC_25;
                            CHILD_PROT_WORKS_QOM.IS_COMPR_SOM = qmInsertModel.CHILD_PROT_WORKS_QOM_list[i].IS_COMPR_SOM_25;


                            eformdbContext.EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS.Add(CHILD_PROT_WORKS_QOM);
                            eformdbContext.SaveChanges();
                            PQomId++;
                        }




                        int WORS_ID = eformdbContext.EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS select item.WORS_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list.Count; i++)
                        {
                            EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS CHILD_PROT_WORKS_WORKMANSHIP_OF_RS = new EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS();

                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.WORS_ID = WORS_ID;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.WORK_ID = PWORK_ID;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.EFORM_ID = detailId;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.QM_USER_ID = UserId;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.IPADD = ipAdd;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.LOCATION_RD = qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list[i].LOCATION_RD_25_2;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.WORKMANSHIP_RS = qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list[i].WORKMANSHIP_RS_25;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.IS_SURFACE_HONEYCOMBING_FREE = qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list[i].IS_SURFACE_HONEYCOMBING_FREE_25;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.IS_WEEP_HOLES_PROVIDED = qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list[i].IS_WEEP_HOLES_PROVIDED_25;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.WEEP_HOLES_SPACING_ASPER_DRAWING = qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list[i].WEEP_HOLES_SPACING_ASPER_DRAWING_25;
                            CHILD_PROT_WORKS_WORKMANSHIP_OF_RS.WEEP_HOLES_SPACING_ACTUAL = qmInsertModel.CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_list[i].WEEP_HOLES_SPACING_ACTUAL_25;


                            eformdbContext.EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS.Add(CHILD_PROT_WORKS_WORKMANSHIP_OF_RS);
                            eformdbContext.SaveChanges();
                            WORS_ID++;
                        }


                    }

                    if (chkBoxArr[16] == 'Y')
                    {

                        int crId = eformdbContext.EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY.Any() ? (from item in eformdbContext.EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY select item.CR_ID).Max() + 1 : 1;

                        EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY CRASH_BARRIERS_ROAD_SAFETY = new EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY();

                        CRASH_BARRIERS_ROAD_SAFETY.CR_ID = crId;
                        CRASH_BARRIERS_ROAD_SAFETY.EFORM_ID = detailId;
                        CRASH_BARRIERS_ROAD_SAFETY.IMS_PR_ROAD_CODE = prRoadCode;
                        CRASH_BARRIERS_ROAD_SAFETY.QM_USER_ID = UserId;
                        CRASH_BARRIERS_ROAD_SAFETY.IPADD = ipAdd;
                        CRASH_BARRIERS_ROAD_SAFETY.IS_DPR_PROVISION = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.IS_DPR_PROVISION_26_1;
                        CRASH_BARRIERS_ROAD_SAFETY.TOT_LENGTH_ASPER_DPR = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.TOT_LENGTH_ASPER_DPR_26;
                        CRASH_BARRIERS_ROAD_SAFETY.TOT_LENGTH_ERECTED = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.TOT_LENGTH_ERECTED_26;
                        CRASH_BARRIERS_ROAD_SAFETY.TOT_SIGNBOARDS_ASPER_DPR = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.TOT_SIGNBOARDS_ASPER_DPR_26;
                        CRASH_BARRIERS_ROAD_SAFETY.TOT_SIGNBOARDS_ERECTED = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.TOT_SIGNBOARDS_ERECTED_26;
                        CRASH_BARRIERS_ROAD_SAFETY.ITEM_GRADING_16 = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.ITEM_GRADING_16;
                        CRASH_BARRIERS_ROAD_SAFETY.IMPROVE_SUGGESTIONS = qmInsertModel.CRASH_BARRIERS_ROAD_SAFETY_details.IMPROVE_SUGGESTIONS_26;

                        eformdbContext.EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY.Add(CRASH_BARRIERS_ROAD_SAFETY);
                        eformdbContext.SaveChanges();



                        int OBS_ID = eformdbContext.EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS select item.OBS_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.CHILD_CRASH_BARRIERS_OBSERVATION_list.Count; i++)
                        {
                            EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS CHILD_CRASH_BARRIERS_OBSERVATION = new EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS();

                            CHILD_CRASH_BARRIERS_OBSERVATION.OBS_ID = OBS_ID;
                            CHILD_CRASH_BARRIERS_OBSERVATION.CR_ID = crId;
                            CHILD_CRASH_BARRIERS_OBSERVATION.EFORM_ID = detailId;
                            CHILD_CRASH_BARRIERS_OBSERVATION.IMS_PR_ROAD_CODE = prRoadCode;
                            CHILD_CRASH_BARRIERS_OBSERVATION.QM_USER_ID = UserId;
                            CHILD_CRASH_BARRIERS_OBSERVATION.IPADD = ipAdd;
                            CHILD_CRASH_BARRIERS_OBSERVATION.LOCATION_RD = qmInsertModel.CHILD_CRASH_BARRIERS_OBSERVATION_list[i].LOCATION_RD_26;
                            CHILD_CRASH_BARRIERS_OBSERVATION.CRASH_BARRIERS_TYPE = qmInsertModel.CHILD_CRASH_BARRIERS_OBSERVATION_list[i].CRASH_BARRIERS_TYPE_26;
                            CHILD_CRASH_BARRIERS_OBSERVATION.GRADING_SAFETY_MEAS = qmInsertModel.CHILD_CRASH_BARRIERS_OBSERVATION_list[i].GRADING_SAFETY_MEAS_26;
                            CHILD_CRASH_BARRIERS_OBSERVATION.IS_SIGNBOARDS_FIXED = qmInsertModel.CHILD_CRASH_BARRIERS_OBSERVATION_list[i].IS_SIGNBOARDS_FIXED_26;


                            eformdbContext.EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS.Add(CHILD_CRASH_BARRIERS_OBSERVATION);
                            eformdbContext.SaveChanges();
                            OBS_ID++;
                        }

                    }

                    if (chkBoxArr[17] == 'Y')
                    {

                        int drainId = eformdbContext.EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN.Any() ? (from item in eformdbContext.EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN select item.DRAIN_ID).Max() + 1 : 1;

                        EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN SIDE_AND_CATCH_DRAINS = new EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN();

                        SIDE_AND_CATCH_DRAINS.DRAIN_ID = drainId;
                        SIDE_AND_CATCH_DRAINS.EFORM_ID = detailId;
                        SIDE_AND_CATCH_DRAINS.IMS_PR_ROAD_CODE = prRoadCode;
                        SIDE_AND_CATCH_DRAINS.QM_USER_ID = UserId;
                        SIDE_AND_CATCH_DRAINS.IPADD = ipAdd;
                        SIDE_AND_CATCH_DRAINS.IS_DPR_PROVISION = qmInsertModel.SIDE_AND_CATCH_DRAINS_EARTHEN_details.IS_DPR_PROVISION_26;
                        SIDE_AND_CATCH_DRAINS.IS_LONG_SLOPE_ADEQUATE = qmInsertModel.SIDE_AND_CATCH_DRAINS_EARTHEN_details.IS_LONG_SLOPE_ADEQUATE_26;
                        SIDE_AND_CATCH_DRAINS.ITEM_GRADING_17 = qmInsertModel.SIDE_AND_CATCH_DRAINS_EARTHEN_details.ITEM_GRADING_17;
                        SIDE_AND_CATCH_DRAINS.IMPROVE_SUGGESTIONS = qmInsertModel.SIDE_AND_CATCH_DRAINS_EARTHEN_details.IMPROVE_SUGGESTIONS_27;

                        eformdbContext.EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN.Add(SIDE_AND_CATCH_DRAINS);
                        eformdbContext.SaveChanges();



                        int sObsId = eformdbContext.EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS.Any() ? (from item in eformdbContext.EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS select item.OBS_ID).Max() + 1 : 1;


                        for (int i = 0; i < qmInsertModel.CHILD_SD_AND_CW_DRAINS_list.Count; i++)
                        {
                            EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS QM_CHILD_SD_AND_CW_DRAINS = new EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS();

                            QM_CHILD_SD_AND_CW_DRAINS.OBS_ID = sObsId;
                            QM_CHILD_SD_AND_CW_DRAINS.DRAIN_ID = drainId;
                            QM_CHILD_SD_AND_CW_DRAINS.EFORM_ID = detailId;
                            QM_CHILD_SD_AND_CW_DRAINS.IMS_PR_ROAD_CODE = prRoadCode;
                            QM_CHILD_SD_AND_CW_DRAINS.QM_USER_ID = UserId;
                            QM_CHILD_SD_AND_CW_DRAINS.IPADD = ipAdd;
                            QM_CHILD_SD_AND_CW_DRAINS.LOCATION_RD_FROM = qmInsertModel.CHILD_SD_AND_CW_DRAINS_list[i].LOCATION_RD_FROM_27;
                            QM_CHILD_SD_AND_CW_DRAINS.LOCATION_RD_TO = qmInsertModel.CHILD_SD_AND_CW_DRAINS_list[i].LOCATION_RD_TO_27;
                            QM_CHILD_SD_AND_CW_DRAINS.LOCATION_RD = Convert.ToDecimal(qmInsertModel.CHILD_SD_AND_CW_DRAINS_list[i].LOCATION_RD_27);
                            QM_CHILD_SD_AND_CW_DRAINS.IS_GEN_QUAL_ACCEPTABLE = qmInsertModel.CHILD_SD_AND_CW_DRAINS_list[i].IS_GEN_QUAL_ACCEPTABLE_27;
                            QM_CHILD_SD_AND_CW_DRAINS.IS_SIDE_DRAINS_INTEGRATED = qmInsertModel.CHILD_SD_AND_CW_DRAINS_list[i].IS_SIDE_DRAINS_INTEGRATED_27;

                            eformdbContext.EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS.Add(QM_CHILD_SD_AND_CW_DRAINS);
                            eformdbContext.SaveChanges();
                            sObsId++;
                        }
                    }
                    #endregion


                    #region  ----bhushan 27-30------
                    if (chkBoxArr[18] == 'Y')
                    {
                        PdfLoadedTextBoxField CC_SR_PROPOSED_LENGTH_27 = loadedForm.Fields["CC_SR_PROPOSED_LENGTH_27"] as PdfLoadedTextBoxField;
                        decimal CC_SR_PROPOSED_LENGTH_27_val = Convert.ToDecimal(CC_SR_PROPOSED_LENGTH_27.Text);
                        if (CC_SR_PROPOSED_LENGTH_27_val > 0)
                        {
                            #region PAGE(27,28) CEMENT CONCRETE/SEMI-RIGID (SR) PAVEMENTS:

                            PMGSY.Models.EFORM_QM_CC_SR_PVAEMENTS QmCcSrPavement = new PMGSY.Models.EFORM_QM_CC_SR_PVAEMENTS();

                            QmCcSrPavement.PAVE_ID = eformdbContext.EFORM_QM_CC_SR_PVAEMENTS.Any() ? eformdbContext.EFORM_QM_CC_SR_PVAEMENTS.Select(x => x.PAVE_ID).Max() + 1 : 1;
                            QmCcSrPavement.EFORM_ID = detailId;
                            QmCcSrPavement.IMS_PR_ROAD_CODE = prRoadCode;
                            QmCcSrPavement.ITEM_EXEC_STATUS = qmInsertModel.QM_CC_SR_PVAEMENTS.ITEM_EXEC_STATUS_27;
                            QmCcSrPavement.CCP_TYPE = qmInsertModel.QM_CC_SR_PVAEMENTS.CCP_TYPE_27;
                            QmCcSrPavement.CONCRETE_GRADE_ASPER_DPR = qmInsertModel.QM_CC_SR_PVAEMENTS.CONCRETE_GRADE_ASPER_DPR_27;
                            QmCcSrPavement.CC_SR_PROPOSED_LENGTH = qmInsertModel.QM_CC_SR_PVAEMENTS.CC_SR_PROPOSED_LENGTH_27;
                            QmCcSrPavement.CC_SR_EXECUTED_LENGTH = qmInsertModel.QM_CC_SR_PVAEMENTS.CC_SR_EXECUTED_LENGTH_27;
                            QmCcSrPavement.IS_CC_CORE_STRENGTH_ACCEPTABLE = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_CC_CORE_STRENGTH_ACCEPTABLE_28;
                            QmCcSrPavement.IS_EXPANS_CONCTRUCT_PROVIDED = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_EXPANS_CONCTRUCT_PROVIDED_28;
                            QmCcSrPavement.IS_CUTS_JOINTS_ACCEPTABLE = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_CUTS_JOINTS_ACCEPTABLE_28;
                            QmCcSrPavement.IS_JOINTS_FILLED = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_JOINTS_FILLED_28;
                            QmCcSrPavement.IS_SURFACE_TEXTURE_ACCEPTABLE = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_SURFACE_TEXTURE_ACCEPTABLE_28;
                            QmCcSrPavement.IS_EDGES_FREE = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_EDGES_FREE_28;
                            QmCcSrPavement.IS_CAMBER_PROVIDED = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_CAMBER_PROVIDED_28;
                            QmCcSrPavement.IS_CC_PAVEMENT_EXIST = qmInsertModel.QM_CC_SR_PVAEMENTS.IS_CC_PAVEMENT_EXIST_28;
                            QmCcSrPavement.ITEM_GRADING_18 = qmInsertModel.QM_CC_SR_PVAEMENTS.ITEM_GRADING_18;
                            QmCcSrPavement.IMPROVE_SUGGESTIONS = qmInsertModel.QM_CC_SR_PVAEMENTS.IMPROVE_SUGGESTIONS_28;
                            QmCcSrPavement.QM_USER_ID = UserId;
                            QmCcSrPavement.IPADD = ipAdd;

                            eformdbContext.EFORM_QM_CC_SR_PVAEMENTS.Add(QmCcSrPavement);
                            eformdbContext.SaveChanges();

                            qmInsertModel.QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS.ForEach(item =>
                            {
                                PMGSY.Models.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS QmChildCcSrObsModel = new PMGSY.Models.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS();

                                QmChildCcSrObsModel.OBS_ID = eformdbContext.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS.Any() ? eformdbContext.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS.Select(x => x.OBS_ID).Max() + 1 : 1;
                                QmChildCcSrObsModel.PAVE_ID = QmCcSrPavement.PAVE_ID;
                                QmChildCcSrObsModel.EFORM_ID = detailId;
                                QmChildCcSrObsModel.IMS_PR_ROAD_CODE = prRoadCode;
                                QmChildCcSrObsModel.REF_RD_FROM = item.REF_RD_FROM_28;
                                QmChildCcSrObsModel.REF_RD_TO = item.REF_RD_TO_28;
                                QmChildCcSrObsModel.LOCATION_RD = item.LOCATION_RD_28;
                                QmChildCcSrObsModel.GRADING_QOM = item.GRADING_QOM_28;
                                QmChildCcSrObsModel.CONCRETE_STRENGTH_ASPER_QCR1 = item.CONCRETE_STRENGTH_ASPER_QCR1_28;
                                QmChildCcSrObsModel.GRADING_QOW = item.GRADING_QOW_28;
                                QmChildCcSrObsModel.THICKNESS_ASPER_DPR = item.THICKNESS_ASPER_DPR_28;
                                QmChildCcSrObsModel.THICKNESS_MEAS_QM = item.THICKNESS_MEAS_QM_28;
                                QmChildCcSrObsModel.IS_THICKNESS_ACCEPTABLE = item.IS_THICKNESS_ACCEPTABLE_28;
                                QmChildCcSrObsModel.QM_USER_ID = UserId;
                                QmChildCcSrObsModel.IPADD = ipAdd;


                                eformdbContext.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS.Add(QmChildCcSrObsModel);
                                eformdbContext.SaveChanges();
                            });
                            #endregion
                        }
                    }
                    #region PAGE(29,30) CEMENT CONCRETE PUCCA DRAINS:
                    if (chkBoxArr[19] == 'Y')
                    {
                        PMGSY.Models.EFORM_QM_CC_PUCCA_DRAINS QmCcPuccaDrains = new PMGSY.Models.EFORM_QM_CC_PUCCA_DRAINS();

                        QmCcPuccaDrains.DRAIN_ID = eformdbContext.EFORM_QM_CC_PUCCA_DRAINS.Any() ? eformdbContext.EFORM_QM_CC_PUCCA_DRAINS.Select(x => x.DRAIN_ID).Max() + 1 : 1;
                        QmCcPuccaDrains.EFORM_ID = detailId;
                        QmCcPuccaDrains.IMS_PR_ROAD_CODE = prRoadCode;
                        QmCcPuccaDrains.IS_DPR_PROVISION = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_DPR_PROVISION_29;
                        QmCcPuccaDrains.SHAPE_ASPER_DPR = qmInsertModel.QM_CC_PUCCA_DRAINS.SHAPE_ASPER_DPR_29;
                        QmCcPuccaDrains.LENGTH_ASPER_DPR = qmInsertModel.QM_CC_PUCCA_DRAINS.LENGTH_ASPER_DPR;
                        QmCcPuccaDrains.ITEM_EXEC_STATUS = qmInsertModel.QM_CC_PUCCA_DRAINS.ITEM_EXEC_STATUS_29;
                        QmCcPuccaDrains.CONCRETE_PROP_GRADE = qmInsertModel.QM_CC_PUCCA_DRAINS.CONCRETE_PROP_GRADE_29;
                        QmCcPuccaDrains.IS_CC_DRAIN_JUSTIFIED = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_CC_DRAIN_JUSTIFIED_29;
                        QmCcPuccaDrains.IS_SIDE_DRAIN_CONSTRUCTED = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_SIDE_DRAIN_CONSTRUCTED_29;
                        QmCcPuccaDrains.IS_PAVE_PERFORM_AFFECTED = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_PAVE_PERFORM_AFFECTED_29;
                        QmCcPuccaDrains.IS_SURFACE_TEXTURE_ACCEPTABLE = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_SURFACE_TEXTURE_ACCEPTABLE_29;
                        QmCcPuccaDrains.IS_DRAIN_SURFACE_HONEYCOMBING_FREE = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_DRAIN_SURFACE_HONEYCOMBING_FREE_29;
                        QmCcPuccaDrains.IS_LONG_GRADIENT_SUFFICIENT = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_LONG_GRADIENT_SUFFICIENT_29;
                        QmCcPuccaDrains.IS_DRAIN_TERMINATE = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_DRAIN_TERMINATE_29;
                        QmCcPuccaDrains.IS_SLOPE_EXIST = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_SLOPE_EXIST_29;
                        QmCcPuccaDrains.IS_DRAINS_SERVE_SATISFIED = qmInsertModel.QM_CC_PUCCA_DRAINS.IS_DRAINS_SERVE_SATISFIED_29;
                        QmCcPuccaDrains.ITEM_GRADING_19 = qmInsertModel.QM_CC_PUCCA_DRAINS.ITEM_GRADING_19;
                        QmCcPuccaDrains.IMPROVE_SUGGESTIONS = qmInsertModel.QM_CC_PUCCA_DRAINS.IMPROVE_SUGGESTIONS_30;
                        QmCcPuccaDrains.QM_USER_ID = UserId;
                        QmCcPuccaDrains.IPADD = ipAdd;

                        eformdbContext.EFORM_QM_CC_PUCCA_DRAINS.Add(QmCcPuccaDrains);
                        eformdbContext.SaveChanges();

                        qmInsertModel.QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS.ForEach(item =>
                        {
                            PMGSY.Models.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS QmChildCcpuccaDrainsModel = new PMGSY.Models.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS();

                            QmChildCcpuccaDrainsModel.OBS_ID = eformdbContext.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS.Any() ? eformdbContext.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS.Select(x => x.OBS_ID).Max() + 1 : 1;
                            QmChildCcpuccaDrainsModel.DRAIN_ID = QmCcPuccaDrains.DRAIN_ID;
                            QmChildCcpuccaDrainsModel.EFORM_ID = detailId;
                            QmChildCcpuccaDrainsModel.IMS_PR_ROAD_CODE = prRoadCode;
                            QmChildCcpuccaDrainsModel.LOCATION_RD_FROM = item.LOCATION_RD_FROM_29;
                            QmChildCcpuccaDrainsModel.LOCATION_RD_TO = item.LOCATION_RD_TO_29;
                            QmChildCcpuccaDrainsModel.LOCATION_RD = item.LOCATION_RD_29;
                            QmChildCcpuccaDrainsModel.CS_SIZE_B_ASPER_DPR = item.CS_SIZE_B_ASPER_DPR_29;
                            QmChildCcpuccaDrainsModel.CS_SIZE_D_ASPER_DPR = item.CS_SIZE_D_ASPER_DPR_29;
                            QmChildCcpuccaDrainsModel.CS_SIZE_B_MEAS = item.CS_SIZE_B_MEAS_29;
                            QmChildCcpuccaDrainsModel.CS_SIZE_D_MEAS = item.CS_SIZE_D_MEAS_29;
                            QmChildCcpuccaDrainsModel.IS_SIZE_DRAINS_ACCEPTABLE = item.IS_SIZE_DRAINS_ACCEPTABLE_29;
                            QmChildCcpuccaDrainsModel.SOC_ASPER_QCR1 = item.SOC_ASPER_QCR1_29;
                            QmChildCcpuccaDrainsModel.GRADING_GEN_QOM = item.GRADING_GEN_QOM_29;
                            QmChildCcpuccaDrainsModel.QM_USER_ID = UserId;
                            QmChildCcpuccaDrainsModel.IPADD = ipAdd;


                            eformdbContext.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS.Add(QmChildCcpuccaDrainsModel);
                            eformdbContext.SaveChanges();
                        });
                    }
                    #endregion

                    #region PAGE(30)  ROAD FURNITURE AND MARKINGS:
                    if (chkBoxArr[20] == 'Y')
                    {

                        PMGSY.Models.EFORM_QM_ROAD_FURNITURE_MARKINGS QmRdFurnMark = new PMGSY.Models.EFORM_QM_ROAD_FURNITURE_MARKINGS();

                        QmRdFurnMark.MARK_ID = eformdbContext.EFORM_QM_ROAD_FURNITURE_MARKINGS.Any() ? eformdbContext.EFORM_QM_ROAD_FURNITURE_MARKINGS.Select(x => x.MARK_ID).Max() + 1 : 1;
                        QmRdFurnMark.EFORM_ID = detailId;
                        QmRdFurnMark.IMS_PR_ROAD_CODE = prRoadCode;
                        QmRdFurnMark.IS_MAIN_INFO_BOARD_FIXED = qmInsertModel.QM_ROAD_FURNITURE_MARKINGS.IS_MAIN_INFO_BOARD_FIXED_30;
                        QmRdFurnMark.IS_CITIZEN_INFO_BOARD_FIXED = qmInsertModel.QM_ROAD_FURNITURE_MARKINGS.IS_CITIZEN_INFO_BOARD_FIXED_30;
                        QmRdFurnMark.IS_MAINTANANCE_BOARD_FIXED = TemplateStatus ? qmInsertModel.QM_ROAD_FURNITURE_MARKINGS.IS_MAINTANANCE_BOARD_FIXED_30 : "";
                        QmRdFurnMark.IS_BOARD_INFO_IN_LOCAL_LANG = qmInsertModel.QM_ROAD_FURNITURE_MARKINGS.IS_BOARD_INFO_IN_LOCAL_LANG_30;
                        QmRdFurnMark.ITEM_GRADING_20 = qmInsertModel.QM_ROAD_FURNITURE_MARKINGS.ITEM_GRADING_20;
                        QmRdFurnMark.IMPROVE_SUGGESTIONS = qmInsertModel.QM_ROAD_FURNITURE_MARKINGS.IMPROVE_SUGGESTIONS_31;
                        QmRdFurnMark.QM_USER_ID = UserId;
                        QmRdFurnMark.IPADD = ipAdd;

                        eformdbContext.EFORM_QM_ROAD_FURNITURE_MARKINGS.Add(QmRdFurnMark);
                        eformdbContext.SaveChanges();

                        if (TemplateStatus)
                        {
                            qmInsertModel.QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS.ForEach(item =>
                            {
                                PMGSY.Models.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS QmChildRdFurnMarkModel = new PMGSY.Models.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS();

                                QmChildRdFurnMarkModel.OBS_ID = eformdbContext.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS.Any() ? eformdbContext.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS.Select(x => x.OBS_ID).Max() + 1 : 1;
                                QmChildRdFurnMarkModel.MARK_ID = QmRdFurnMark.MARK_ID;
                                QmChildRdFurnMarkModel.EFORM_ID = detailId;
                                QmChildRdFurnMarkModel.IMS_PR_ROAD_CODE = prRoadCode;
                                QmChildRdFurnMarkModel.ITEM_ID = item.ITEM_ID;
                                QmChildRdFurnMarkModel.FURNITURE_QTY_TOBE_PROVIDED = item.FURNITURE_QTY_TOBE_PROVIDED_30;
                                QmChildRdFurnMarkModel.FURNITURE_QTY_PROVIDED_AT_SIDE = item.FURNITURE_QTY_PROVIDED_AT_SIDE_30;
                                QmChildRdFurnMarkModel.IS_PROVIDED_FURNITURE_ADEQUATE = item.IS_PROVIDED_FURNITURE_ADEQUATE_30;
                                QmChildRdFurnMarkModel.GRADING_FURNITURE_QUALITY = item.GRADING_FURNITURE_QUALITY_30;
                                QmChildRdFurnMarkModel.QM_USER_ID = UserId;
                                QmChildRdFurnMarkModel.IPADD = ipAdd;

                                eformdbContext.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS.Add(QmChildRdFurnMarkModel);
                                eformdbContext.SaveChanges();
                            });
                        }
                    }
                    #endregion



                    #endregion


                    #region  ----saurabh 30-33---
                    if (chkBoxArr[21] == 'Y')
                    {

                        #region Page 30 : EFORM_DEFICIENCY_PREPARATION_QM

                        int DefL_ID = eformdbContext.EFORM_QM_DEFICIENCY_PREPARATION.Any() ? (from item in eformdbContext.EFORM_QM_DEFICIENCY_PREPARATION select item.DEF_ID).Max() + 1 : 1;

                        EFORM_QM_DEFICIENCY_PREPARATION DeficincyQM = new EFORM_QM_DEFICIENCY_PREPARATION();
                        DeficincyQM.DEF_ID = DefL_ID;
                        DeficincyQM.EFORM_ID = detailId;
                        DeficincyQM.IMS_PR_ROAD_CODE = prRoadCode;
                        DeficincyQM.IS_NO_DEFICIENCY = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_NO_DEFICIENCY;
                        DeficincyQM.IS_BOQ_NOT_CLEAR = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_BOQ_NOT_CLEAR;
                        DeficincyQM.IS_INVERT_LEVEL_INCORRECT = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_INVERT_LEVEL_INCORRECT;
                        DeficincyQM.IS_CD_STRUCT_INSUFFICE = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_CD_STRUCT_INSUFFICE;
                        DeficincyQM.IS_NO_SIDE_DRAIN = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_NO_SIDE_DRAIN;
                        DeficincyQM.IS_DESIGN_NOT_PROVIDED = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_DESIGN_NOT_PROVIDED;
                        DeficincyQM.IS_JUNCTION_DESIGN_INAP = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_JUNCTION_DESIGN_INAP;
                        DeficincyQM.IS_GUARD_NOT_PROVIDED = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_GUARD_NOT_PROVIDED;
                        DeficincyQM.IS_DEVIATION = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_DEVIATION;
                        DeficincyQM.IS_EARTHWORK_NOT_BAL = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_EARTHWORK_NOT_BAL;
                        DeficincyQM.IS_PAVMENT_NOT_ASPER = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.IS_PAVMENT_NOT_ASPER;
                        DeficincyQM.ANY_OTHER_COMMENT = qmInsertModel.EFORM_DEFICIENCY_PREPARATION_QM.ANY_OTHER_COMMENT;
                        DeficincyQM.QM_USER_ID = UserId;
                        DeficincyQM.IPADD = ipAdd;
                        eformdbContext.EFORM_QM_DEFICIENCY_PREPARATION.Add(DeficincyQM);
                        eformdbContext.SaveChanges();
                        DefL_ID++;

                        #endregion

                        #region Page 33 : EFORM_QM_DIFFEENCE_IN_OBSERVATION

                        int differId = eformdbContext.EFORM_QM_DIFFEENCE_IN_OBSERVATION.Any() ? (from item in eformdbContext.EFORM_QM_DIFFEENCE_IN_OBSERVATION select item.DIFFERENCE_ID).Max() + 1 : 1;

                        EFORM_QM_DIFFEENCE_IN_OBSERVATION QMObservation = new EFORM_QM_DIFFEENCE_IN_OBSERVATION();
                        QMObservation.DIFFERENCE_ID = differId;
                        QMObservation.EFORM_ID = detailId;
                        QMObservation.IMS_PR_ROAD_CODE = prRoadCode;
                        QMObservation.IPADD = ipAdd;
                        QMObservation.QM_USER_ID = UserId;
                        QMObservation.IS_DIFFERENCE_FOUND = qmInsertModel.EFORM_DIFFEENCE_IN_OBSERVATION_QM.IS_DIFFERENCE_FOUND;
                        QMObservation.OTHER_OBSERVATIONS = qmInsertModel.EFORM_DIFFEENCE_IN_OBSERVATION_QM.OTHER_OBSERVATIONS_33;
                        QMObservation.COMMENT_ON_DIFFERENCE = qmInsertModel.EFORM_DIFFEENCE_IN_OBSERVATION_QM.COMMENT_ON_DIFFERENCE_33;
                        eformdbContext.EFORM_QM_DIFFEENCE_IN_OBSERVATION.Add(QMObservation);
                        eformdbContext.SaveChanges();
                        differId++;

                        #endregion


                        #region Page 33 : EFORM_QM_ACTION_TAKEN_PIU

                        int Action_ID = eformdbContext.EFORM_QM_ACTION_TAKEN_PIU.Any() ? (from item in eformdbContext.EFORM_QM_ACTION_TAKEN_PIU select item.ACTION_ID).Max() + 1 : 1;

                        for (int i = 0; i < qmInsertModel.EFORM_ACTION_TAKEN_PIU_QM_List.Count; i++)
                        {
                            EFORM_QM_ACTION_TAKEN_PIU PiuActionQM = new EFORM_QM_ACTION_TAKEN_PIU();
                            PiuActionQM.ACTION_ID = Action_ID;
                            PiuActionQM.EFORM_ID = detailId;
                            PiuActionQM.IMS_PR_ROAD_CODE = prRoadCode;
                            PiuActionQM.IPADD = ipAdd;
                            PiuActionQM.QM_USER_ID = UserId;
                            PiuActionQM.PREV_QM_DESIG = qmInsertModel.EFORM_ACTION_TAKEN_PIU_QM_List[i].PREV_QM_DESIG_33;
                            PiuActionQM.PREV_QM_OBSERVATION = qmInsertModel.EFORM_ACTION_TAKEN_PIU_QM_List[i].PREV_QM_OBSERVATION_33;
                            PiuActionQM.ACTION_TAKEN_PIU = qmInsertModel.EFORM_ACTION_TAKEN_PIU_QM_List[i].ACTION_TAKEN_PIU_33;
                            PiuActionQM.OBSERVATION_ON_PIU_ACTION = qmInsertModel.EFORM_ACTION_TAKEN_PIU_QM_List[i].OBSERVATION_ON_PIU_ACTION_33;
                            eformdbContext.EFORM_QM_ACTION_TAKEN_PIU.Add(PiuActionQM);

                            eformdbContext.SaveChanges();
                            Action_ID++;
                        }
                        #endregion

                        #region Page 32 : EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST
                        if (TemplateStatus)
                        {
                            int Status_ID = eformdbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Any() ? (from item in eformdbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST select item.STATUS_ID).Max() + 1 : 1;

                            EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST QMPerCost = new EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST();
                            QMPerCost.STATUS_ID = Status_ID;
                            QMPerCost.IMS_PR_ROAD_CODE = prRoadCode;
                            QMPerCost.IPADD = ipAdd;
                            QMPerCost.QM_USER_ID = UserId;
                            QMPerCost.EFORM_ID = detailId;
                            QMPerCost.COMPLETION_COST = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.COMPLETION_COST_32;
                            QMPerCost.WORK_STATUS = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.WORK_STATUS_32;
                            QMPerCost.SANCTION_COST = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.SANCTION_COST_32;
                            QMPerCost.REASON_FOR_EXTRA = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.REASON_FOR_EXTRA_32;
                            QMPerCost.IS_REVISED_DPR_PREPARED = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.IS_REVISED_DPR_PREPARED_32;
                            QMPerCost.IS_CHANGED_SCOPEOFWORK = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.IS_CHANGED_SCOPEOFWORK_32;
                            QMPerCost.IS_VARIATION_IN_QTY = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.IS_VARIATION_IN_QTY_32;
                            QMPerCost.IS_COST_APPROVED = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.IS_COST_APPROVED_32;
                            QMPerCost.OTHER_DESCRIBTION = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.OTHER_DESCRIBTION_32;
                            QMPerCost.IS_OTHER = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_QM.IS_OTHER_32;
                            eformdbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Add(QMPerCost);

                            eformdbContext.SaveChanges();
                        }



                        #endregion


                        #region Page 32 : EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG

                        int StatusP_ID = eformdbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Any() ? (from item in eformdbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG select item.STATUS_ID).Max() + 1 : 1;

                        EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG QmWorkProgress = new EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG();
                        QmWorkProgress.STATUS_ID = StatusP_ID;
                        QmWorkProgress.IMS_PR_ROAD_CODE = prRoadCode;
                        QmWorkProgress.IPADD = ipAdd;
                        QmWorkProgress.QM_USER_ID = UserId;
                        QmWorkProgress.EFORM_ID = detailId;
                        QmWorkProgress.WORK_STATUS = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.WORK_STATUS_32_1;
                        QmWorkProgress.C_IS_COMPLETED_WITH_DELAY = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.C_IS_COMPLETED_WITH_DELAY;
                        QmWorkProgress.C_PERIOD_OF_DELAY = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.C_PERIOD_OF_DELAY;
                        QmWorkProgress.C_AMOUNT_STATUS = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.C_AMOUNT_STATUS;
                        QmWorkProgress.C_AMOUNT = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.C_AMOUNT;
                        QmWorkProgress.C_COMMENT = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.C_COMMENT;
                        QmWorkProgress.P_IS_AS_PER_SCHEDULE = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.P_IS_AS_PER_SCHEDULE;
                        //    QmWorkProgress.P_IS_EXT_LAST_DATE = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.IsDateExtended;
                        QmWorkProgress.P_EXT_MONTHS = Convert.ToDecimal(qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.P_EXT_MONTHS);
                        QmWorkProgress.P_IS_AMOUNT_REFUNDED = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.P_IS_AMOUNT_REFUNDED;
                        QmWorkProgress.P_AMOUNT = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.P_AMOUNT;
                        QmWorkProgress.P_PANELTY_AMOUNT = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.P_PANELTY_AMOUNT;
                        QmWorkProgress.P_COMMENT = qmInsertModel.EFORM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_QM.P_COMMENT;
                        eformdbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Add(QmWorkProgress);

                        eformdbContext.SaveChanges();



                        #endregion
                    }
                    #endregion


                    #region --- Srishti Page  34-38 ---



                    PMGSY.Models.EFORM_QM_QUALITY_GRADING qM_QUALITY_GRADING = new PMGSY.Models.EFORM_QM_QUALITY_GRADING();

                    int gradingId = eformdbContext.EFORM_QM_QUALITY_GRADING.Any() ? (from item in eformdbContext.EFORM_QM_QUALITY_GRADING select item.GRADING_ID).Max() + 1 : 1;

                    qM_QUALITY_GRADING.GRADING_ID = gradingId;
                    qM_QUALITY_GRADING.EFORM_ID = detailId;
                    qM_QUALITY_GRADING.IMS_PR_ROAD_CODE = RoadCode;
                    qM_QUALITY_GRADING.I2_QUALITY_ARRANGEMENTS = qmInsertModel.QM_QUALITY_GRADING.I2_QUALITY_ARRANGEMENTS;
                    qM_QUALITY_GRADING.I2_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I2_ITEM_GRADING;
                    qM_QUALITY_GRADING.I3_MANE_QC_REGISTERS = qmInsertModel.QM_QUALITY_GRADING.I3_MANE_QC_REGISTERS;
                    qM_QUALITY_GRADING.I3_VERIFICATION_OF_RESULTS = qmInsertModel.QM_QUALITY_GRADING.I3_VERIFICATION_OF_RESULTS;
                    qM_QUALITY_GRADING.I3_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I3_ITEM_GRADING;
                    qM_QUALITY_GRADING.I4_ROADWAY_WIDTH = qmInsertModel.QM_QUALITY_GRADING.I4_ROADWAY_WIDTH;
                    qM_QUALITY_GRADING.I4_CARRIAGE_WAY_WIDTH = qmInsertModel.QM_QUALITY_GRADING.I4_CARRIAGE_WAY_WIDTH;
                    qM_QUALITY_GRADING.I4_CAMBER = qmInsertModel.QM_QUALITY_GRADING.I4_CAMBER;
                    qM_QUALITY_GRADING.I4_SUPER_ELEVATION = qmInsertModel.QM_QUALITY_GRADING.I4_SUPER_ELEVATION;
                    qM_QUALITY_GRADING.I4_EXTRA_WIDENING = qmInsertModel.QM_QUALITY_GRADING.I4_EXTRA_WIDENING;
                    qM_QUALITY_GRADING.I4_LG_FOR_HILLY = qmInsertModel.QM_QUALITY_GRADING.I4_LG_FOR_HILLY;
                    qM_QUALITY_GRADING.I4_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I4_ITEM_GRADING;
                    qM_QUALITY_GRADING.I5_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I5_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I5_QOM_EMBANKMENT = qmInsertModel.QM_QUALITY_GRADING.I5_QOM_EMBANKMENT;
                    qM_QUALITY_GRADING.I5_COMPACTION = qmInsertModel.QM_QUALITY_GRADING.I5_COMPACTION;
                    qM_QUALITY_GRADING.I5_SIDE_SLOPES = qmInsertModel.QM_QUALITY_GRADING.I5_SIDE_SLOPES;
                    qM_QUALITY_GRADING.I5_PROFILE = qmInsertModel.QM_QUALITY_GRADING.I5_PROFILE;
                    qM_QUALITY_GRADING.I5_ADEQUACY = qmInsertModel.QM_QUALITY_GRADING.I5_ADEQUACY;
                    qM_QUALITY_GRADING.I5_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I5_ITEM_GRADING;
                    qM_QUALITY_GRADING.I6_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I6_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I6_GRAIN_SIZE = qmInsertModel.QM_QUALITY_GRADING.I6_GRAIN_SIZE;
                    qM_QUALITY_GRADING.I6_PLASTISITY = qmInsertModel.QM_QUALITY_GRADING.I6_PLASTISITY;
                    qM_QUALITY_GRADING.I6_COMPACTION = qmInsertModel.QM_QUALITY_GRADING.I6_COMPACTION;
                    qM_QUALITY_GRADING.I6_THICKNESS = qmInsertModel.QM_QUALITY_GRADING.I6_THICKNESS;
                    qM_QUALITY_GRADING.I6_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I6_ITEM_GRADING;
                    qM_QUALITY_GRADING.I7_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I7_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I7_GRAIN_SIZE = qmInsertModel.QM_QUALITY_GRADING.I7_GRAIN_SIZE;
                    qM_QUALITY_GRADING.I7_PLASTISITY = qmInsertModel.QM_QUALITY_GRADING.I7_PLASTISITY;
                    qM_QUALITY_GRADING.I7_COMPACTION = qmInsertModel.QM_QUALITY_GRADING.I7_COMPACTION;
                    qM_QUALITY_GRADING.I7_THICKNESS = qmInsertModel.QM_QUALITY_GRADING.I7_THICKNESS;
                    qM_QUALITY_GRADING.I7_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I7_ITEM_GRADING;
                    qM_QUALITY_GRADING.I8_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I8_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I8_GRAIN_SIZE = qmInsertModel.QM_QUALITY_GRADING.I8_GRAIN_SIZE;
                    qM_QUALITY_GRADING.I8_PLASTISITY = qmInsertModel.QM_QUALITY_GRADING.I8_PLASTISITY;
                    qM_QUALITY_GRADING.I8_COMPACTION = qmInsertModel.QM_QUALITY_GRADING.I8_COMPACTION;
                    qM_QUALITY_GRADING.I8_THICKNESS = qmInsertModel.QM_QUALITY_GRADING.I8_THICKNESS;
                    qM_QUALITY_GRADING.I8_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I8_ITEM_GRADING;
                    qM_QUALITY_GRADING.I9_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I9_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I9_GRAIN_SIZE = qmInsertModel.QM_QUALITY_GRADING.I9_GRAIN_SIZE;
                    qM_QUALITY_GRADING.I9_PLASTISITY = qmInsertModel.QM_QUALITY_GRADING.I9_PLASTISITY;
                    qM_QUALITY_GRADING.I9_COMPACTION = qmInsertModel.QM_QUALITY_GRADING.I9_COMPACTION;
                    qM_QUALITY_GRADING.I9_THICKNESS = qmInsertModel.QM_QUALITY_GRADING.I9_THICKNESS;
                    qM_QUALITY_GRADING.I9_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I9_ITEM_GRADING;
                    qM_QUALITY_GRADING.I10_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I10_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I10_GRADING_COURSE_AGG = qmInsertModel.QM_QUALITY_GRADING.I10_GRADING_COURSE_AGG;
                    qM_QUALITY_GRADING.I10_BITUMEN_CONTENT = qmInsertModel.QM_QUALITY_GRADING.I10_BITUMEN_CONTENT;
                    qM_QUALITY_GRADING.I10_THICKNESS_LAYER = qmInsertModel.QM_QUALITY_GRADING.I10_THICKNESS_LAYER;
                    qM_QUALITY_GRADING.I10_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I10_ITEM_GRADING;
                    qM_QUALITY_GRADING.I11_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I11_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I11_GRADATION_AGG = qmInsertModel.QM_QUALITY_GRADING.I11_GRADATION_AGG;
                    qM_QUALITY_GRADING.I11_LAYING_TEMP = qmInsertModel.QM_QUALITY_GRADING.I11_LAYING_TEMP;
                    qM_QUALITY_GRADING.I11_BITUMEN_CONTENT = qmInsertModel.QM_QUALITY_GRADING.I11_BITUMEN_CONTENT;
                    qM_QUALITY_GRADING.I11_THICKNESS_LAYER = qmInsertModel.QM_QUALITY_GRADING.I11_THICKNESS_LAYER;
                    qM_QUALITY_GRADING.I11_SURFACE_EVENNESS = qmInsertModel.QM_QUALITY_GRADING.I11_SURFACE_EVENNESS;
                    qM_QUALITY_GRADING.I11_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I11_ITEM_GRADING;
                    qM_QUALITY_GRADING.I12_ASSESS_NEW_TECH = qmInsertModel.QM_QUALITY_GRADING.I12_ASSESS_NEW_TECH;
                    qM_QUALITY_GRADING.I12_QOM_SHOULDERS = qmInsertModel.QM_QUALITY_GRADING.I12_QOM_SHOULDERS;
                    qM_QUALITY_GRADING.I12_DOC = qmInsertModel.QM_QUALITY_GRADING.I12_DOC;
                    qM_QUALITY_GRADING.I12_CAMBER = qmInsertModel.QM_QUALITY_GRADING.I12_CAMBER;
                    qM_QUALITY_GRADING.I12_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I12_ITEM_GRADING;
                    qM_QUALITY_GRADING.I13_CUSHION = qmInsertModel.QM_QUALITY_GRADING.I13_CUSHION;
                    qM_QUALITY_GRADING.I13_QOW = qmInsertModel.QM_QUALITY_GRADING.I13_QOW;
                    qM_QUALITY_GRADING.I13_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I13_ITEM_GRADING;
                    qM_QUALITY_GRADING.I14_THICKNESS_OF_SLAB = qmInsertModel.QM_QUALITY_GRADING.I14_THICKNESS_OF_SLAB;
                    qM_QUALITY_GRADING.I14_QOM = qmInsertModel.QM_QUALITY_GRADING.I14_QOM;
                    qM_QUALITY_GRADING.I14_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I14_ITEM_GRADING;
                    qM_QUALITY_GRADING.I15_QOM = qmInsertModel.QM_QUALITY_GRADING.I15_QOM;
                    qM_QUALITY_GRADING.I15_W_RETAINING_STRUCT = qmInsertModel.QM_QUALITY_GRADING.I15_W_RETAINING_STRUCT;
                    qM_QUALITY_GRADING.I15_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I15_ITEM_GRADING;
                    qM_QUALITY_GRADING.I16_OVERALL_QOS = qmInsertModel.QM_QUALITY_GRADING.I16_OVERALL_QOS;
                    qM_QUALITY_GRADING.I16_FIXING_SIGN_BOARDS = qmInsertModel.QM_QUALITY_GRADING.I16_FIXING_SIGN_BOARDS;
                    qM_QUALITY_GRADING.I16_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I16_ITEM_GRADING;
                    qM_QUALITY_GRADING.I17_QOS_DRAINS = qmInsertModel.QM_QUALITY_GRADING.I17_QOS_DRAINS;
                    qM_QUALITY_GRADING.I17_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I17_ITEM_GRADING;
                    qM_QUALITY_GRADING.I18_QOM_CONCREATE = qmInsertModel.QM_QUALITY_GRADING.I18_QOM_CONCREATE;
                    qM_QUALITY_GRADING.I18_STRENGTH_OF_CC = qmInsertModel.QM_QUALITY_GRADING.I18_STRENGTH_OF_CC;
                    qM_QUALITY_GRADING.I18_QOW = qmInsertModel.QM_QUALITY_GRADING.I18_QOW;
                    qM_QUALITY_GRADING.I18_THICKNESS_OF_LAYER = qmInsertModel.QM_QUALITY_GRADING.I18_THICKNESS_OF_LAYER;
                    qM_QUALITY_GRADING.I18_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I18_ITEM_GRADING;
                    qM_QUALITY_GRADING.I19_THICKNESS_CONCREATE_LAYER = qmInsertModel.QM_QUALITY_GRADING.I19_THICKNESS_CONCREATE_LAYER;
                    qM_QUALITY_GRADING.I19_STRENGTH_OF_CONCREATE = qmInsertModel.QM_QUALITY_GRADING.I19_STRENGTH_OF_CONCREATE;
                    qM_QUALITY_GRADING.I19_GENERAL_QOM = qmInsertModel.QM_QUALITY_GRADING.I19_GENERAL_QOM;
                    qM_QUALITY_GRADING.I19_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I19_ITEM_GRADING;
                    qM_QUALITY_GRADING.I20_CITIZEN_INFO_BOARD = qmInsertModel.QM_QUALITY_GRADING.I20_CITIZEN_INFO_BOARD;
                    qM_QUALITY_GRADING.I20_LOGO_BOARDS = qmInsertModel.QM_QUALITY_GRADING.I20_LOGO_BOARDS;
                    qM_QUALITY_GRADING.I20_LOCAL_LANG = qmInsertModel.QM_QUALITY_GRADING.I20_LOCAL_LANG;
                    qM_QUALITY_GRADING.I20_ITEM_GRADING = qmInsertModel.QM_QUALITY_GRADING.I20_ITEM_GRADING;
                    qM_QUALITY_GRADING.QM_USER_ID = UserId;
                    qM_QUALITY_GRADING.IPADD = ipAdd;

                    eformdbContext.EFORM_QM_QUALITY_GRADING.Add(qM_QUALITY_GRADING);
                    eformdbContext.SaveChanges();

                    PMGSY.Models.EFORM_QM_OVERALL_GRADING qM_OVERALL_GRADING = new PMGSY.Models.EFORM_QM_OVERALL_GRADING();

                    int gradeId = eformdbContext.EFORM_QM_OVERALL_GRADING.Any() ? (from item in eformdbContext.EFORM_QM_OVERALL_GRADING select item.GRADING_ID).Max() + 1 : 1;

                    qM_OVERALL_GRADING.GRADING_ID = gradeId;
                    qM_OVERALL_GRADING.EFORM_ID = detailId;
                    qM_OVERALL_GRADING.IMS_PR_ROAD_CODE = RoadCode;
                    qM_OVERALL_GRADING.QC_ARRANGEMENTS = qmInsertModel.QM_OVERALL_GRADING.QC_ARRANGEMENTS_38;
                    qM_OVERALL_GRADING.ATTN_TO_QTY = qmInsertModel.QM_OVERALL_GRADING.ATTN_TO_QTY_38;
                    qM_OVERALL_GRADING.GEOMMETRICS = qmInsertModel.QM_OVERALL_GRADING.GEOMMETRICS_38;
                    qM_OVERALL_GRADING.EW_SG_IN_EMBANKMENT = qmInsertModel.QM_OVERALL_GRADING.EW_SG_IN_EMBANKME_38;
                    qM_OVERALL_GRADING.GRANULAR_SUBBASE = qmInsertModel.QM_OVERALL_GRADING.GRANULAR_SUBBASE_38;
                    qM_OVERALL_GRADING.BASE_COURSE_WBMII = qmInsertModel.QM_OVERALL_GRADING.BASE_COURSE_WBMII_38;
                    qM_OVERALL_GRADING.BASE_COURSE_WBMIII = qmInsertModel.QM_OVERALL_GRADING.BASE_COURSE_WBMIII_38;
                    qM_OVERALL_GRADING.BASE_COURSE_WMM = qmInsertModel.QM_OVERALL_GRADING.BASE_COURSE_WMM_38;
                    qM_OVERALL_GRADING.BITUMINOUS_BASE_COURSE = qmInsertModel.QM_OVERALL_GRADING.BITUMINOUS_BASE_COURSE_38;
                    qM_OVERALL_GRADING.BITUMINOUS_SURF_COURSE = qmInsertModel.QM_OVERALL_GRADING.BITUMINOUS_SURF_COURSE_38;
                    qM_OVERALL_GRADING.SLOULDERS = qmInsertModel.QM_OVERALL_GRADING.SLOULDERS_38;
                    qM_OVERALL_GRADING.CD_WORK_PIPE = qmInsertModel.QM_OVERALL_GRADING.CD_WORK_PIPE_38;
                    qM_OVERALL_GRADING.CD_WORK_SLAB = qmInsertModel.QM_OVERALL_GRADING.CD_WORK_SLAB_38;
                    qM_OVERALL_GRADING.PROTECTION_WORK = qmInsertModel.QM_OVERALL_GRADING.PROTECTION_WORK_38;
                    qM_OVERALL_GRADING.CRASH_BARRIERS = qmInsertModel.QM_OVERALL_GRADING.CRASH_BARRIERS_38;
                    qM_OVERALL_GRADING.SIDE_DRAINS = qmInsertModel.QM_OVERALL_GRADING.SIDE_DRAINS_38;
                    qM_OVERALL_GRADING.CEMENT_CONCRETE_SRP = qmInsertModel.QM_OVERALL_GRADING.CEMENT_CONCRETE_SRP_38;
                    qM_OVERALL_GRADING.CEMENT_CONCRETE_PUCCA_DRAINS = qmInsertModel.QM_OVERALL_GRADING.CEMENT_CONCRETE_PUCCA_DRAINS_38;
                    qM_OVERALL_GRADING.ROAD_FURNITURE = qmInsertModel.QM_OVERALL_GRADING.ROAD_FURNITURE_38;
                    qM_OVERALL_GRADING.OVERALL_GRADING = qmInsertModel.QM_OVERALL_GRADING.OVERALL_GRADING_38;
                    qM_OVERALL_GRADING.IS_WORK_EXCELLENT = qmInsertModel.QM_OVERALL_GRADING.IS_WORK_EXCELLENT_38;
                    qM_OVERALL_GRADING.NAME_OF_QM = qmInsertModel.QM_OVERALL_GRADING.NAME_OF_QM_38;
                    if (qmInsertModel.QM_OVERALL_GRADING.UPLOADING_DATE_38 == null)
                    {
                        qM_OVERALL_GRADING.UPLOADING_DATE = null;
                    }
                    else
                    {
                        qM_OVERALL_GRADING.UPLOADING_DATE = Convert.ToDateTime(qmInsertModel.QM_OVERALL_GRADING.UPLOADING_DATE_38);
                    }

                    qM_OVERALL_GRADING.QM_USER_ID = UserId;
                    qM_OVERALL_GRADING.IPADD = ipAdd;

                    eformdbContext.EFORM_QM_OVERALL_GRADING.Add(qM_OVERALL_GRADING);
                    eformdbContext.SaveChanges();

                    #endregion


                    string checksum = eformdbContext.EFORM_DU_LOG.Where(s => s.EFORM_ID == detailId && (s.USER_TYPE == "S" || s.USER_TYPE == "N")).OrderByDescending(x => x.LOG_ID).Select(m => m.PDF_CHECKSUM).FirstOrDefault();

                    int logId = Convert.ToInt32(eformdbContext.EFORM_DU_LOG.Any() ? (from item in eformdbContext.EFORM_DU_LOG select item.LOG_ID).Max() + 1 : 1);
                    if (checksum != null)
                    {
                        EFORM_DU_LOG model = new EFORM_DU_LOG();
                        model.EFORM_ID = detailId;
                        model.LOG_ID = logId;
                        model.USER_ACTIVITY = "U";
                        model.USER_TYPE = type;
                        model.ACTIVITY_DATE = DateTime.Now;
                        model.USERID = UserId;
                        model.PDF_CHECKSUM = checksum;
                        model.IPADD = ipAdd;
                        if (templateVersionValue != "")
                        {
                            model.TEMPLATE_VERSION = templateVersionValue;
                        }
                        else
                        {
                            model.TEMPLATE_VERSION = "V1.0";
                        }
                        eformdbContext.EFORM_DU_LOG.Add(model);
                        eformdbContext.SaveChanges();

                    }

                    uploaded_File = Path.Combine(Uploaded_Path + "\\" + schdYear + "\\" + schdMonth, fname);
                    loadedDocument.Save(uploaded_File);
                    loadedDocument.Close(true);


                    #region COMBINE PDF
                    ////COMBINE pdf
                    //PdfDocument finalDoc = new PdfDocument();



                    //if (!Directory.Exists(combine_uploaded_path))
                    //    Directory.CreateDirectory(combine_uploaded_path);
                    //string uploaded_path_Piu = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId && x.USER_TYPE == "P").Select(s => s.FILE_PATH).FirstOrDefault();
                    //var fileNamePIU = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId && x.USER_TYPE == "P").Select(s => s.FILE_NAME).FirstOrDefault();

                    //string fullPath = Path.Combine(Uploaded_Path, uploaded_File);
                    //byte[] FileBytesQM = System.IO.File.ReadAllBytes(fullPath);
                    //Stream streamQM = new MemoryStream(FileBytesQM);

                    //string fullPathPIU = Path.Combine(uploaded_path_Piu, fileNamePIU);
                    //byte[] FileBytesPIU = System.IO.File.ReadAllBytes(fullPathPIU);
                    //Stream streamPIU = new MemoryStream(FileBytesPIU);

                    //Stream[] streams = { streamPIU, streamQM };

                    //PdfDocument.Merge(finalDoc, streams);
                    //string MergeFile = "C_" + fname;

                    //var fullFilePath = Path.Combine(combine_uploaded_path + "\\" + schdYear + "\\" + schdMonth, MergeFile);

                    //finalDoc.Save(fullFilePath);
                    #endregion

                    scope.Complete();

                }





            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.SaveToQMDb");
                validationList.Add(new SelectListItem { Text = "Error occured while uploading the file, please contact OMMAS team" });

            }
            finally
            {

                if (dbContext != null)
                {
                    dbContext.Dispose();
                }
                loadedDocument.Close(true);
                file.InputStream.Flush();
                file.InputStream.Close();
            }
            return validationList;

        }






        public QM_ViewPdfModel ViewQMPdfSavedData(int id)
        {

            dbContext = new PMGSYEntities();
            QM_ViewPdfModel objQM_ViewModel = new QM_ViewPdfModel();

            #region  DB Statements 1
            //Is applicable checks
            var isApplicablelist = dbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;



            var prefilledDetails = (from con in dbContext.EFORM_PREFILLED_DETAILS
                                    join ims in dbContext.IMS_SANCTIONED_PROJECTS on con.IMS_PR_ROAD_CODE equals ims.IMS_PR_ROAD_CODE
                                    where
                                    con.EFORM_ID == id
                                    select new
                                    {
                                        con.PREFILLED_ID,
                                        con.EFORM_ID,
                                        con.ADMIN_SCHEDULE_CODE,
                                        con.ROAD_NAME,
                                        con.STATE,
                                        con.DISTRICT,
                                        con.BLOCK,
                                        con.PACKAGE_ID,
                                        ims.IMS_ROAD_NAME,
                                        con.SANCTION_LENGTH,
                                        con.IMS_PR_ROAD_CODE,
                                        con.AWARDED_COST,
                                        ims.IMS_IS_STAGED,
                                        ims.IMS_STAGE_PHASE,
                                        con.PHYSICAL_WORK_STATUS,
                                        con.QM_NAME,
                                        con.EXECUTED_LENGTH,
                                        con.EXPENDITURE_DONE,
                                        con.COMPLETION_COST,
                                        con.TERRAIN_TYPE,
                                        con.DATE_OF_AWARD_WORK,
                                        con.DATE_OF_START_WORK,
                                        con.STIPULATED_COMPLETION_DATE,
                                        con.ESTIMATED_COST,
                                        con.QM_TYPE,
                                        con.USER_ID,
                                        con.IPADD
                                    }).FirstOrDefault();

            // 1
            var generalDetails = dbContext.EFORM_QM_GENERAL_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_GENERAL_DETAILS.Where(x => x.EFORM_ID == id).First() : null;
            var WorkItemlist = dbContext.EFORM_MASTER_WORK_ITEM.ToList();

            var presentWorkDetails = dbContext.EFORM_QM_PRESENT_WORK_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_PRESENT_WORK_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            // 2
            var qmArragementDetails = dbContext.EFORM_QM_ARRANGEMENTS_OBS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_ARRANGEMENTS_OBS_DETAILS.Where(x => x.EFORM_ID == id).First() : null;


            #region to save EFORM_QM_QC_TEST_DETAILS & EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS for version 2.0
            try
            {
                EFORM_PDF_UPLOAD_DETAIL uploadDetail = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(s => s.EFORM_ID == id && s.USER_TYPE == "Q" && s.TEMPLATE_VERSION == "V2.0").FirstOrDefault();
                if (uploadDetail != null && uploadDetail.UPLOAD_DATE < Convert.ToDateTime("17/02/2023"))
                {
                    var fname = uploadDetail.FILE_NAME;
                    var temp_Uploaded_Path = uploadDetail.FILE_PATH;
                    var temp_uploaded_File = Path.Combine(temp_Uploaded_Path, fname);
                    PdfLoadedDocument loadedDocument = new PdfLoadedDocument(temp_uploaded_File);
                    PdfLoadedForm loadedForm = loadedDocument.Form;
                    EFORM_QM_VIEWMODEL objViewModel = new EFORM_QM_VIEWMODEL();
                    CommonFunctions objCommonFunction = new CommonFunctions();
                    List<string> errorListtemp = new List<string>();
                    objViewModel.ErrorList = new List<string>();

                    EFORM_MASTER master = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == id).FirstOrDefault();
                    PdfLoadedCheckBoxField CheckFieldItem3 = loadedForm.Fields["Item_3"] as PdfLoadedCheckBoxField;
                    if (CheckFieldItem3.Checked)
                    {
                        #region QM_QC_TEST_DETAILS_Temp2_0
                        objViewModel.QM_QC_TEST_DETAILS_Temp2_0 = new List<QMModels.EFORM_QM_QC_TEST_DETAILS_Temp2_0>();// add at 28 - 07 - 2022

                        if (!dbContext.EFORM_QM_QC_TEST_DETAILS.Any(s => s.EFORM_ID == id))
                        {
                            dbContext.EFORM_MASTER_WORK_ITEM.Where(m => m.ITEM_FLAG == "A").Select(t => t.ITEM_ID).ToList().ForEach(itemID =>
                            {
                                for (int i = 1; i < 4; i++)
                                {
                                    QMModels.EFORM_QM_QC_TEST_DETAILS_Temp2_0 detailedItem = new QMModels.EFORM_QM_QC_TEST_DETAILS_Temp2_0();
                                    detailedItem.ITEM_ID = itemID;
                                    detailedItem.ROW_ID = i;
                                    objViewModel.QM_QC_TEST_DETAILS_Temp2_0.Add(detailedItem);
                                }

                            });

                            int countTemp = 1;
                            foreach (var item in objViewModel.QM_QC_TEST_DETAILS_Temp2_0.ToList())
                            {

                                string v = "cb_8_1_" + countTemp;
                                PdfLoadedCheckBoxField CheckField = loadedForm.Fields[v] as PdfLoadedCheckBoxField;
                                if (CheckField.Checked)
                                {
                                    errorListtemp = objCommonFunction.FetchPDFFilledDataToQMModel(item, loadedForm);
                                    objViewModel.ErrorList.AddRange(errorListtemp);

                                    if ((item.ROW_ID == 2 || item.ROW_ID == 3) && item.IS_TESTING_ADEQUATE == null && item.REQD_TEST_NUMBER == null && item.TEST_NAME == null && item.CONDUCTED_TEST_NUMBER == null)
                                    {
                                        objViewModel.QM_QC_TEST_DETAILS_Temp2_0.Remove(item);
                                    }

                                }
                                else
                                {
                                    objViewModel.QM_QC_TEST_DETAILS_Temp2_0.Remove(item);
                                }
                                if (item.ROW_ID == 3)
                                {
                                    countTemp++;
                                }

                            }
                            if (objViewModel.QM_QC_TEST_DETAILS_Temp2_0.Count > 2)
                            {
                                for (int i = 1; i < objViewModel.QM_QC_TEST_DETAILS_Temp2_0.Count; i++)
                                {
                                    if (objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].EXECUTED_QUANTITY == null)
                                    {
                                        objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].EXECUTED_QUANTITY = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i - 1].EXECUTED_QUANTITY;
                                    }
                                    if (objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].DPR_QUANTITY == null)
                                    {
                                        objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].DPR_QUANTITY = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i - 1].DPR_QUANTITY;
                                    }
                                }
                            }

                        }
                        using (var scope = new TransactionScope())
                        {
                            for (int i = 0; i < objViewModel.QM_QC_TEST_DETAILS_Temp2_0.Count; i++)
                            {
                                int WorkID = dbContext.EFORM_QM_QC_TEST_DETAILS.Any() ? (from item in dbContext.EFORM_QM_QC_TEST_DETAILS select item.WORK_ID).Max() + 1 : 1;

                                PMGSY.Models.EFORM_QM_QC_TEST_DETAILS QCDetail = new PMGSY.Models.EFORM_QM_QC_TEST_DETAILS();
                                int t = i + 1;
                                QCDetail.WORK_ID = WorkID;
                                QCDetail.PR_ROAD_CODE = master.IMS_PR_ROAD_CODE;
                                QCDetail.EFORM_ID = master.EFORM_ID;
                                QCDetail.QM_USER_ID = PMGSYSession.Current.UserId;
                                QCDetail.IPADD = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                                QCDetail.ITEM_ID = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].ITEM_ID;
                                QCDetail.INFO_ID = dbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == id).Select(x => x.INFO_ID).FirstOrDefault();
                                QCDetail.DPR_QUANTITY = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].DPR_QUANTITY;
                                QCDetail.EXECUTED_QUANTITY = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].EXECUTED_QUANTITY;
                                QCDetail.TEST_NAME = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].TEST_NAME;
                                QCDetail.REQD_TEST_NUMBER = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].REQD_TEST_NUMBER;
                                QCDetail.CONDUCTED_TEST_NUMBER = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].CONDUCTED_TEST_NUMBER;
                                QCDetail.IS_TESTING_ADEQUATE = objViewModel.QM_QC_TEST_DETAILS_Temp2_0[i].IS_TESTING_ADEQUATE;
                                dbContext.EFORM_QM_QC_TEST_DETAILS.Add(QCDetail);
                                dbContext.SaveChanges();
                                WorkID++;
                            }
                            scope.Complete();
                        }
                        #endregion

                        #region EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS
                        objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0 = new List<QMModels.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS_Temp2_0>();   //add on 28-07-2022
                        VerificationModelListTempV2_0 verificationModelListTempV2_0 = new VerificationModelListTempV2_0();   //add at 28-07-2022
                        if (!dbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Any(s => s.EFORM_ID == id))
                        {
                            verificationModelListTempV2_0.VerificationList.ForEach(item =>
                            {

                                for (int i = 1; i <= item.RowCount; i++)
                                {
                                    QMModels.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS_Temp2_0 detailedItem = new QMModels.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS_Temp2_0();
                                    detailedItem.VerificationType = item.VerificationType;
                                    detailedItem.RowID = i;
                                    objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0.Add(detailedItem);
                                }

                            });
                            int countChecked = 0;
                            int countUnchecked = 0;
                            foreach (var item in objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0.ToList())
                            //  objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List.ForEach(item =>
                            {
                                if (item.RowID == 1)
                                {
                                    errorListtemp = objCommonFunction.FetchPDFFilledDataToQMModel(item, loadedForm);
                                    objViewModel.ErrorList.AddRange(errorListtemp);
                                }
                                else
                                {

                                    string v = "cbrd_3_2_" + item.RowID;
                                    PdfLoadedCheckBoxField CheckField = loadedForm.Fields[v] as PdfLoadedCheckBoxField;

                                    if (CheckField.Checked)
                                    {
                                        countChecked++;
                                        errorListtemp = objCommonFunction.FetchPDFFilledDataToQMModel(item, loadedForm);
                                        objViewModel.ErrorList.AddRange(errorListtemp);
                                        if (item.RowID == 2 || item.RowID == 3 || item.RowID == 4)
                                        {
                                            objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[countChecked].ROAD_LOC = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[0].ROAD_LOC;
                                        }
                                        else if (item.RowID == 6 || item.RowID == 7 || item.RowID == 8)
                                        {
                                            objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[countChecked].ROAD_LOC = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[4 - countUnchecked].ROAD_LOC;
                                        }
                                        else if (item.RowID == 10 || item.RowID == 11 || item.RowID == 12)
                                        {
                                            objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[countChecked].ROAD_LOC = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[8 - countUnchecked].ROAD_LOC;
                                        }
                                    }
                                    else
                                    {
                                        countUnchecked++;
                                        objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0.Remove(item);
                                    }
                                }


                            }

                        }
                        using (var scope = new TransactionScope())
                        {
                            for (int i = 0; i < objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0.Count; i++)
                            {
                                int TestID = dbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Any() ? (from item in dbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS select item.TEST_ID).Max() + 1 : 1;

                                PMGSY.Models.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS TestVerification = new PMGSY.Models.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS();
                                int t = i + 1;
                                TestVerification.TEST_ID = TestID;
                                TestVerification.INFO_ID = dbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == id).Select(x => x.INFO_ID).FirstOrDefault(); // required foreign key
                                TestVerification.IPADD = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                                TestVerification.EFORM_ID = master.EFORM_ID;
                                TestVerification.PR_ROAD_CODE = master.IMS_PR_ROAD_CODE;
                                TestVerification.QM_USER_ID = PMGSYSession.Current.UserId;
                                TestVerification.ROAD_LOC = Convert.ToDecimal(objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].ROAD_LOC);
                                TestVerification.TEST_NAME = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_NAME;
                                TestVerification.TEST_CONDUCTED_RESULT = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_CONDUCTED_RESULT;
                                TestVerification.TEST_RESULT_QCR1 = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_RESULT_QCR1;
                                TestVerification.TEST_RESULT_PREVIOUS = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_RESULT_PREVIOUS;
                                TestVerification.TEST_RESULT_CONFRM = objViewModel.QM_TEST_RESULT_VERIFICATION_DETAILS_List_Temp_2_0[i].TEST_RESULT_CONFRM;
                                dbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Add(TestVerification);
                                dbContext.SaveChanges();
                                TestID++;

                            }
                            scope.Complete();
                        }

                        #endregion


                    }




                }
            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.ViewQMPdfSavedData");

            }


            #endregion
            // 3
            var attentionToQuality = dbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == id).First() : null;
            var attentionQualityControl = dbContext.EFORM_QM_QC_TEST_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_QC_TEST_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;
            var attentionQualityTestVerfDetail = dbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;


            //4
            var geometrics = dbContext.EFORM_QM_GEOMETRICS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_GEOMETRICS_DETAILS.Where(x => x.EFORM_ID == id).First() : null;
            var geometricsObs = dbContext.EFORM_QM_GEOMETRICS_OBS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_GEOMETRICS_OBS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //5
            var earthWorkNewTechnology = dbContext.EFORM_QM_NEW_TECHNOLOGY_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_NEW_TECHNOLOGY_DETAILS.Where(x => x.EFORM_ID == id).First() : null;

            // 5I
            var earthWorkUCS = dbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;
            var earthWorkCBR = dbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            // 5 II
            var QomEmbankment = dbContext.EFORM_QM_QOM_EMBANKMENT.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_QOM_EMBANKMENT.Where(x => x.EFORM_ID == id).First() : null;
            var GroupOfSoilList = dbContext.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_GROUP_SYMBOL_SOIL.Where(x => x.EFORM_ID == id).ToList() : null;

            // 5 III
            var CompOfEmbankment = dbContext.EFORM_QM_COMPAQ_EMBANKMENT.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_COMPAQ_EMBANKMENT.Where(x => x.EFORM_ID == id).First() : null;
            var CompEmbankmentlist = dbContext.EFORM_QM_CHILD_DEGREE_OF_COMPAQ.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_DEGREE_OF_COMPAQ.Where(x => x.EFORM_ID == id).ToList() : null;

            // 5 IV
            var SideSlopeDetail = dbContext.EFORM_QM_SIDE_SLOPES.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_SIDE_SLOPES.Where(x => x.EFORM_ID == id).First() : null;
            var SideSlopeList = dbContext.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_SIDE_SLOPE_DETAIL.Where(x => x.EFORM_ID == id).ToList() : null;
            var SideCutSlopelist = dbContext.EFORM_QM_CHILD_CUT_SLOPE_DETAIL.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_CUT_SLOPE_DETAIL.Where(x => x.EFORM_ID == id).ToList() : null;

            // 6
            var GranularSubbaseDetails = dbContext.EFORM_QM_GRANULAR_SUBBASE.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_GRANULAR_SUBBASE.Where(x => x.EFORM_ID == id).First() : null;
            var GranularUCSlist = dbContext.EFORM_QM_CHILD_GRANULAR_UCS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_GRANULAR_UCS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;
            var GranularQOMlist = dbContext.EFORM_QM_CHILD_QOM_WORKMENSHIP.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_QOM_WORKMENSHIP.Where(x => x.EFORM_ID == id).ToList() : null;

            // 7
            var BaseCourse_1_layer = dbContext.EFORM_QM_BASE_COURSE_I.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_BASE_COURSE_I.Where(x => x.EFORM_ID == id).First() : null;
            var BaseCourseUCS_1_list = dbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1.Where(x => x.EFORM_ID == id).ToList() : null;
            var BaseCourseObsWorkmenship_1_list = dbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1.Where(x => x.EFORM_ID == id).ToList() : null;

            // 8
            var BaseCourse_2_layer = dbContext.EFORM_QM_BASE_COURSE_II.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_BASE_COURSE_II.Where(x => x.EFORM_ID == id).First() : null;
            var BasecousreUCS_2_list = dbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2.Where(x => x.EFORM_ID == id).ToList() : null;
            var BaseCourseObsWorkmenship_2_list = dbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2.Where(x => x.EFORM_ID == id).ToList() : null;

            // 9
            var BaseCourse_3_layer = dbContext.EFORM_QM_BASE_COURSE_III.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_BASE_COURSE_III.Where(x => x.EFORM_ID == id).First() : null;
            var BasecousreUCS_3_list = dbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3.Where(x => x.EFORM_ID == id).ToList() : null;
            var BaseCourseObsWorkmenship_3_list = dbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3.Where(x => x.EFORM_ID == id).ToList() : null;

            // 10
            var Bituminous_BaseCourse10 = dbContext.EFORM_QM_BITUMINOUS_BASE_COURSE.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_BITUMINOUS_BASE_COURSE.Where(x => x.EFORM_ID == id).First() : null;
            var Bituminous_BaseCourse10_list = dbContext.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            #endregion

            #region  DB Statements 2
            // 11
            var bituminous_Surface11 = dbContext.EFORM_QM_BITUMINOUS_SURFACE_COURSE.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_BITUMINOUS_SURFACE_COURSE.Where(x => x.EFORM_ID == id).First() : null;
            var bituminous_Surface_list11 = dbContext.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //12
            var qmShouldersdetails = dbContext.EFORM_QM_SHOULDERS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_SHOULDERS.Where(x => x.EFORM_ID == id).First() : null;
            var qmShouldersUCSlist = dbContext.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;
            var qmShouldersMateriallist = dbContext.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //13
            var pipeCulverts = dbContext.EFORM_QM_CDWORKS_PIPE_CULVERTS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CDWORKS_PIPE_CULVERTS.Where(x => x.EFORM_ID == id).First() : null;
            var pipeCulvertlist = dbContext.EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            // 14
            var slabCulverts = dbContext.EFORM_QM_CDWORKS_SLAB_CULVERTS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CDWORKS_SLAB_CULVERTS.Where(x => x.EFORM_ID == id).First() : null;
            var slabCulvertlist = dbContext.EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //15
            var protectionWork = dbContext.EFORM_QM_PROTECTION_WORK.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_PROTECTION_WORK.Where(x => x.EFORM_ID == id).First() : null;
            var protectionWorkQOMlist = dbContext.EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;
            var PTWorkmanshiplist = dbContext.EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //16
            var crashBarrierRoadSafety = dbContext.EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY.Where(x => x.EFORM_ID == id).First() : null;
            var crashBarrierOBSlist = dbContext.EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //17
            var sideCatchDrainModel = dbContext.EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN.Where(x => x.EFORM_ID == id).First() : null;
            var sideCatchDrainlist = dbContext.EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //18
            var ccsrPavements = dbContext.EFORM_QM_CC_SR_PVAEMENTS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CC_SR_PVAEMENTS.Where(x => x.EFORM_ID == id).First() : null;
            var ccsrPavementslist = dbContext.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //19
            var ccPuccaDrains = dbContext.EFORM_QM_CC_PUCCA_DRAINS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CC_PUCCA_DRAINS.Where(x => x.EFORM_ID == id).First() : null;
            var ccPuccaDrainlist = dbContext.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //20
            var furnitureMarkings = dbContext.EFORM_QM_ROAD_FURNITURE_MARKINGS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_ROAD_FURNITURE_MARKINGS.Where(x => x.EFORM_ID == id).First() : null;
            var furnitureMarkingsOBSlist = dbContext.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS.Where(x => x.EFORM_ID == id).ToList() : null;

            //21
            var deficiencyPreparation = dbContext.EFORM_QM_DEFICIENCY_PREPARATION.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_DEFICIENCY_PREPARATION.Where(x => x.EFORM_ID == id).First() : null;
            var compltedInprogressAsperProg = dbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Where(x => x.EFORM_ID == id).First() : null;
            var compltedInprogressAsperCost = dbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Where(x => x.EFORM_ID == id).First() : null;
            var actionByPIUlist = dbContext.EFORM_QM_ACTION_TAKEN_PIU.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_ACTION_TAKEN_PIU.Where(x => x.EFORM_ID == id).ToList() : null;
            var diffOBS = dbContext.EFORM_QM_DIFFEENCE_IN_OBSERVATION.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_DIFFEENCE_IN_OBSERVATION.Where(x => x.EFORM_ID == id).First() : null;

            //22
            var qualityGrading = dbContext.EFORM_QM_QUALITY_GRADING.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_QUALITY_GRADING.Where(x => x.EFORM_ID == id).First() : null;

            using (var scope1 = new TransactionScope())
            {

                PMGSY.Models.EFORM_QM_OVERALL_GRADING model_OVERALL_GRADING = dbContext.EFORM_QM_OVERALL_GRADING.Where(s => s.EFORM_ID == id).FirstOrDefault();
                PMGSY.Models.EFORM_QM_QUALITY_GRADING model_QUALITY_GRADING = dbContext.EFORM_QM_QUALITY_GRADING.Where(s => s.EFORM_ID == id).FirstOrDefault();

                if (model_QUALITY_GRADING != null && model_OVERALL_GRADING != null)
                {
                    if (model_OVERALL_GRADING.BASE_COURSE_WBMII != model_QUALITY_GRADING.I7_ITEM_GRADING)
                    {
                        model_OVERALL_GRADING.BASE_COURSE_WBMII = model_QUALITY_GRADING.I7_ITEM_GRADING;
                        dbContext.Entry(model_OVERALL_GRADING).State = EntityState.Modified;
                        dbContext.SaveChanges();

                    }
                }
                scope1.Complete();
            }
            //23
            var overallGrading = dbContext.EFORM_QM_OVERALL_GRADING.Where(x => x.EFORM_ID == id).Any() ? dbContext.EFORM_QM_OVERALL_GRADING.Where(x => x.EFORM_ID == id).First() : null;

            #endregion

            try
            {

                #region Value Assign From 1 tO 10th Points

                if (isApplicablelist != null)
                {
                    ApplicableCheck objApplicableCheck = new ApplicableCheck();

                    foreach (var item in isApplicablelist)
                    {
                        objApplicableCheck.isApplicable_2 = item.ITEM_2.Trim();
                        objApplicableCheck.isApplicable_3 = item.ITEM_3.Trim();
                        objApplicableCheck.isApplicable_4 = item.ITEM_4.Trim();
                        objApplicableCheck.isApplicable_5 = item.ITEM_5.Trim();
                        objApplicableCheck.isApplicable_6 = item.ITEM_6.Trim();
                        objApplicableCheck.isApplicable_7 = item.ITEM_7.Trim();
                        objApplicableCheck.isApplicable_8 = item.ITEM_8.Trim();
                        objApplicableCheck.isApplicable_9 = item.ITEM_9.Trim();
                        objApplicableCheck.isApplicable_10 = item.ITEM_10.Trim();
                        objApplicableCheck.isApplicable_11 = item.ITEM_11.Trim();
                        objApplicableCheck.isApplicable_12 = item.ITEM_12.Trim();
                        objApplicableCheck.isApplicable_13 = item.ITEM_13.Trim();
                        objApplicableCheck.isApplicable_14 = item.ITEM_14.Trim();
                        objApplicableCheck.isApplicable_15 = item.ITEM_15.Trim();
                        objApplicableCheck.isApplicable_16 = item.ITEM_16.Trim();
                        objApplicableCheck.isApplicable_17 = item.ITEM_17.Trim();
                        objApplicableCheck.isApplicable_18 = item.ITEM_18.Trim();
                        objApplicableCheck.isApplicable_19 = item.ITEM_19.Trim();
                        objApplicableCheck.isApplicable_20 = item.ITEM_20.Trim();
                        objApplicableCheck.isApplicable_21 = item.ITEM_21.Trim();
                    }
                    objQM_ViewModel.ApplicableCheck = objApplicableCheck;
                }
                string templateVersion = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(s => s.USER_TYPE == "Q" && s.EFORM_ID == id).Select(s => s.TEMPLATE_VERSION).FirstOrDefault();



                if (prefilledDetails != null)
                {
                    Prefilled_Details_ViewModel objPrefilled = new Prefilled_Details_ViewModel();

                    objPrefilled.EFORM_ID = prefilledDetails.EFORM_ID;
                    objPrefilled.QM_NAME = prefilledDetails.QM_NAME;
                    objPrefilled.QM_TYPE = prefilledDetails.QM_TYPE.Trim();
                    objPrefilled.STATE = prefilledDetails.STATE;
                    objPrefilled.DISTRICT = prefilledDetails.DISTRICT;
                    objPrefilled.BLOCK = prefilledDetails.BLOCK;
                    objPrefilled.ROAD_NAME = prefilledDetails.ROAD_NAME;
                    objPrefilled.PACKAGE_ID = prefilledDetails.PACKAGE_ID;
                    objPrefilled.CURRENT_STAGE = prefilledDetails.IMS_IS_STAGED == null ? "" : prefilledDetails.IMS_IS_STAGED.Equals("C") ? "3" : (prefilledDetails.IMS_STAGE_PHASE.Equals("S1") ? "1" : "2");
                    objPrefilled.PHYSICAL_WORK_STATUS = prefilledDetails.PHYSICAL_WORK_STATUS.Trim();

                    objQM_ViewModel.PrefillDetailsViewModel = objPrefilled;
                }

                if (generalDetails != null)
                {
                    General_Details_ViewModel objgeneralDetails = new General_Details_ViewModel();
                    objgeneralDetails.EFORM_ID = generalDetails.EFORM_ID;
                    objgeneralDetails.ROAD_FROM = generalDetails.ROAD_FROM;
                    objgeneralDetails.ROAD_TO = generalDetails.ROAD_TO;
                    objgeneralDetails.INSPECTION_DATE = Convert.ToDateTime(generalDetails.INSPECTION_DATE).ToShortDateString();
                    objgeneralDetails.Template_Version = templateVersion == null ? null : templateVersion.Trim();
                    objQM_ViewModel.GeneralDetailsViewModel = objgeneralDetails;
                }

                if (presentWorkDetails != null)
                {
                    List<Present_Work_Details_ViewModel> presentWorkDetail = new List<Present_Work_Details_ViewModel>();

                    foreach (var pwd in presentWorkDetails)
                    {
                        presentWorkDetail.Add(new Present_Work_Details_ViewModel
                        {
                            EFORM_ID = pwd.EFORM_ID,
                            ITEM_ID = pwd.ITEM_ID,
                            ROAD_FROM = pwd.ROAD_FROM,
                            ROAD_TO = pwd.ROAD_TO
                        });
                    }
                    objQM_ViewModel.PresentWorkDetailsList = presentWorkDetail;
                }

                // Work item List
                {
                    List<EFORM_WORK_ITEM> Work_Items_List = new List<EFORM_WORK_ITEM>();
                    foreach (var thd in WorkItemlist)
                    {
                        Work_Items_List.Add(new EFORM_WORK_ITEM
                        {
                            ITEM_ID = thd.ITEM_ID,
                            ITEM_DESC = thd.ITEM_DESC,
                            ITEM_FLAG = thd.ITEM_FLAG
                        });
                    }
                    objQM_ViewModel.WorkItemlistViewModel = Work_Items_List;
                }

                if (qmArragementDetails != null)
                {
                    ArrangementsOBSDetails_ViewModel objArrangementObsDetails = new ArrangementsOBSDetails_ViewModel();

                    objArrangementObsDetails.EFORM_ID = qmArragementDetails.EFORM_ID;
                    objArrangementObsDetails.PR_ROAD_CODE = qmArragementDetails.PR_ROAD_CODE;
                    objArrangementObsDetails.IS_FIELD_LAB_ESTD = qmArragementDetails.IS_FIELD_LAB_ESTD == null ? "" : qmArragementDetails.IS_FIELD_LAB_ESTD.Trim();
                    objArrangementObsDetails.IS_LAB_LOC_SAME = qmArragementDetails.IS_LAB_LOC_SAME == null ? "" : qmArragementDetails.IS_LAB_LOC_SAME.Trim();
                    objArrangementObsDetails.IS_EQUIP_AVAILABLE = qmArragementDetails.IS_EQUIP_AVAILABLE == null ? "" : qmArragementDetails.IS_EQUIP_AVAILABLE.Trim();
                    objArrangementObsDetails.IS_EQUIP_USED = qmArragementDetails.IS_EQUIP_USED == null ? "" : qmArragementDetails.IS_EQUIP_USED.Trim();
                    objArrangementObsDetails.IS_EQUIP_AVAIL_VERIFY = qmArragementDetails.IS_EQUIP_AVAIL_VERIFY == null ? "" : qmArragementDetails.IS_EQUIP_AVAIL_VERIFY.Trim();
                    objArrangementObsDetails.IS_ENGG_AVAILABLE = qmArragementDetails.IS_ENGG_AVAILABLE == null ? "" : qmArragementDetails.IS_ENGG_AVAILABLE.Trim();
                    objArrangementObsDetails.IS_ALT_ENGG_ARR_SATISFIED = qmArragementDetails.IS_ALT_ENGG_ARR_SATISFIED == null ? "" : qmArragementDetails.IS_ALT_ENGG_ARR_SATISFIED.Trim();
                    objArrangementObsDetails.IS_LAB_TECH_AVAILABLE = qmArragementDetails.IS_LAB_TECH_AVAILABLE == null ? "" : qmArragementDetails.IS_LAB_TECH_AVAILABLE.Trim();
                    objArrangementObsDetails.ITEM_GRADING_2 = qmArragementDetails.ITEM_GRADING_2 == null ? "" : qmArragementDetails.ITEM_GRADING_2.Trim();
                    objArrangementObsDetails.IMPROVEMENT_REMARK = qmArragementDetails.IMPROVEMENT_REMARK == null ? "" : qmArragementDetails.IMPROVEMENT_REMARK;

                    objQM_ViewModel.ArrangementObsDetailsViewModel = objArrangementObsDetails;
                }

                if (attentionToQuality != null)
                {
                    AttentionToQuality_ViewModel objAttetionToQuality = new AttentionToQuality_ViewModel();

                    objAttetionToQuality.EFORM_ID = attentionToQuality.EFORM_ID;
                    objAttetionToQuality.PR_ROAD_CODE = attentionToQuality.PR_ROAD_CODE;
                    objAttetionToQuality.IS_ALL_TEST_CONDUCTED = attentionToQuality.IS_ALL_TEST_CONDUCTED == null ? "" : attentionToQuality.IS_ALL_TEST_CONDUCTED.Trim();
                    objAttetionToQuality.IS_QC_REG_P1_MAINTAINED = attentionToQuality.IS_QC_REG_P1_MAINTAINED == null ? "" : attentionToQuality.IS_QC_REG_P1_MAINTAINED.Trim();
                    objAttetionToQuality.IS_QC_REG_P2_MAINTAINED = attentionToQuality.IS_QC_REG_P2_MAINTAINED == null ? "" : attentionToQuality.IS_QC_REG_P2_MAINTAINED.Trim();
                    objAttetionToQuality.IS_NEGLIGENCE = attentionToQuality.IS_NEGLIGENCE == null ? "" : attentionToQuality.IS_NEGLIGENCE.Trim();
                    objAttetionToQuality.IS_LOE = attentionToQuality.IS_LOE == null ? "" : attentionToQuality.IS_LOE.Trim();
                    objAttetionToQuality.IS_LOK = attentionToQuality.IS_LOK == null ? "" : attentionToQuality.IS_LOK.Trim();
                    objAttetionToQuality.IS_OTHER = attentionToQuality.IS_OTHER == null ? "" : attentionToQuality.IS_OTHER.Trim();
                    objAttetionToQuality.OTHER_REASON = attentionToQuality.OTHER_REASON == null ? "" : attentionToQuality.OTHER_REASON;
                    objAttetionToQuality.IS_NON_CONFORMITIES_QCR2 = attentionToQuality.IS_NON_CONFORMITIES_QCR2 == null ? "" : attentionToQuality.IS_NON_CONFORMITIES_QCR2.Trim();
                    objAttetionToQuality.ITEM_GRADING_3 = attentionToQuality.ITEM_GRADING_3 == null ? "" : attentionToQuality.ITEM_GRADING_3.Trim();
                    objAttetionToQuality.IMPROVEMENT_REMARK = attentionToQuality.IMPROVEMENT_REMARK == null ? "" : attentionToQuality.IMPROVEMENT_REMARK;

                    objQM_ViewModel.AttentionToqualityViewModel = objAttetionToQuality;
                }

                if (attentionQualityControl != null)
                {
                    List<AttentionQualityControl_ViewModel> AttentionQualitycontrollist = new List<AttentionQualityControl_ViewModel>();
                    foreach (var item in attentionQualityControl)
                    {
                        AttentionQualitycontrollist.Add(new AttentionQualityControl_ViewModel
                        {
                            WORK_ID = item.WORK_ID,
                            EFORM_ID = item.EFORM_ID,
                            INFO_ID = item.INFO_ID,
                            QM_USER_ID = item.QM_USER_ID,
                            ITEM_ID = item.ITEM_ID,
                            DPR_QUANTITY = item.DPR_QUANTITY == null ? "" : item.DPR_QUANTITY.ToString(),
                            EXECUTED_QUANTITY = item.EXECUTED_QUANTITY == null ? "" : item.EXECUTED_QUANTITY.ToString(),
                            TEST_NAME = item.TEST_NAME == null ? "" : item.TEST_NAME,
                            REQD_TEST_NUMBER = item.REQD_TEST_NUMBER == null ? "" : item.REQD_TEST_NUMBER.ToString(),
                            CONDUCTED_TEST_NUMBER = item.CONDUCTED_TEST_NUMBER == null ? "" : item.CONDUCTED_TEST_NUMBER.ToString(),
                            IS_TESTING_ADEQUATE = item.IS_TESTING_ADEQUATE == null ? "" : item.IS_TESTING_ADEQUATE.Trim().Equals("Y") ? "Yes" : "No",
                            IPADD = item.IPADD,
                            PR_ROAD_CODE = item.PR_ROAD_CODE,
                        });
                    }
                    objQM_ViewModel.AttentionQualityControlList = AttentionQualitycontrollist;
                }

                if (attentionQualityTestVerfDetail != null)
                {
                    List<AttentionQualityTestResult_ViewModel> AttentionQualityTestResultlist = new List<AttentionQualityTestResult_ViewModel>();
                    if (templateVersion != null && templateVersion.Trim().Equals("V1.0"))
                    {
                        foreach (var item in attentionQualityTestVerfDetail)
                        {
                            AttentionQualityTestResultlist.Add(new AttentionQualityTestResult_ViewModel
                            {
                                TEST_ID = item.TEST_ID,
                                EFORM_ID = item.EFORM_ID,
                                INFO_ID = item.INFO_ID,
                                ROAD_LOC = item.ROAD_LOC == null ? "" : item.ROAD_LOC.ToString(),
                                TEST_NAME = item.TEST_NAME == null ? "" : item.TEST_NAME,
                                TEST_CONDUCTED_RESULT = item.TEST_CONDUCTED_RESULT == null ? "" : item.TEST_CONDUCTED_RESULT.Trim().Equals("C") ? "Conforming" : "Non-conforming",
                                TEST_RESULT_QCR1 = item.TEST_RESULT_QCR1 == null ? "" : item.TEST_RESULT_QCR1,
                                TEST_RESULT_PREVIOUS = item.TEST_RESULT_PREVIOUS == null ? "" : item.TEST_RESULT_PREVIOUS.Trim().Equals("C") ? "Conforming" : "Non-conforming",
                                TEST_RESULT_CONFRM = item.TEST_RESULT_CONFRM == null ? "" : item.TEST_RESULT_CONFRM.Trim().Equals("C") ? "Conforming" : "Non-conforming",
                                PR_ROAD_CODE = item.PR_ROAD_CODE,
                                QM_USER_ID = item.QM_USER_ID,
                            });
                            objQM_ViewModel.AttentionQualityTestResultList = AttentionQualityTestResultlist;
                        }
                    }
                    else if (templateVersion != null && templateVersion.Trim().Equals("V2.0"))
                    {
                        foreach (var item in attentionQualityTestVerfDetail)
                        {
                            AttentionQualityTestResultlist.Add(new AttentionQualityTestResult_ViewModel
                            {
                                TEST_ID = item.TEST_ID,
                                EFORM_ID = item.EFORM_ID,
                                INFO_ID = item.INFO_ID,
                                ROAD_LOC = item.ROAD_LOC == null ? "" : item.ROAD_LOC.ToString(),
                                TEST_NAME = item.TEST_NAME == null ? "" : item.TEST_NAME,
                                TEST_CONDUCTED_RESULT = item.TEST_CONDUCTED_RESULT == null ? "" : item.TEST_CONDUCTED_RESULT,
                                TEST_RESULT_QCR1 = item.TEST_RESULT_QCR1 == null ? "" : item.TEST_RESULT_QCR1,
                                TEST_RESULT_PREVIOUS = item.TEST_RESULT_PREVIOUS == null ? "" : item.TEST_RESULT_PREVIOUS,
                                TEST_RESULT_CONFRM = item.TEST_RESULT_CONFRM == null ? "" : item.TEST_RESULT_CONFRM.Trim().Equals("C") ? "Conforming" : "Non-conforming",
                                PR_ROAD_CODE = item.PR_ROAD_CODE,
                                QM_USER_ID = item.QM_USER_ID,
                            });
                            objQM_ViewModel.AttentionQualityTestResultList = AttentionQualityTestResultlist;
                        }
                    }
                }

                if (geometrics != null)
                {
                    Geometric_ViewModel objGeometricDetails = new Geometric_ViewModel();

                    objGeometricDetails.EFORM_ID = geometrics.EFORM_ID;
                    objGeometricDetails.PR_ROAD_CODE = geometrics.PR_ROAD_CODE;
                    objGeometricDetails.ITEM_GRADING_4 = geometrics.ITEM_GRADING_4 == null ? "" : geometrics.ITEM_GRADING_4.Trim();
                    objGeometricDetails.REASON_FOR_DEVIATION = geometrics.REASON_FOR_DEVIATION == null ? "" : geometrics.REASON_FOR_DEVIATION;

                    objQM_ViewModel.GeometricViewModel = objGeometricDetails;
                }

                if (geometricsObs != null)
                {
                    // EFORM_GEOMETRICS_OBS_DETAILS_QM
                    List<EFORM_GEOMETRICS_OBS_DETAILS_QM> GeometricObslist = new List<EFORM_GEOMETRICS_OBS_DETAILS_QM>();
                    foreach (var item in geometricsObs)
                    {
                        GeometricObslist.Add(new EFORM_GEOMETRICS_OBS_DETAILS_QM
                        {
                            OBS_ID = item.OBS_ID,
                            INFO_ID = item.INFO_ID,
                            ROAD_LOC = item.ROAD_LOC.ToString(),
                            C4IA_ROAD_WIDTH_DPR = item.C4IA_ROAD_WIDTH_DPR,
                            C4IA_ROAD_WIDTH_ACTUAL = item.C4IA_ROAD_WIDTH_ACTUAL,
                            C4IA_ROAD_WIDTH_GRADE = item.C4IA_ROAD_WIDTH_GRADE,
                            C4IB_CARRIAGE_WIDTH_DPR = item.C4IB_CARRIAGE_WIDTH_DPR,
                            C4IB_CARRIAGE_WIDTH_ACTUAL = item.C4IB_CARRIAGE_WIDTH_ACTUAL,
                            C4IB_CARRIAGE_WIDTH_GRADE = item.C4IB_CARRIAGE_WIDTH_GRADE,
                            C4IC_CAMBER_PER_DPR = item.C4IC_CAMBER_PER_DPR,
                            C4IC_CAMBER_PER_ACTUAL = item.C4IC_CAMBER_PER_ACTUAL,
                            C4IC_CAMBER_PER_GRADE = item.C4IC_CAMBER_PER_GRADE,

                            C4IIA_ELEVATION_PER_DPR = item.C4IIA_ELEVATION_PER_DPR,
                            C4IIA_ELEVATION_PER_ACTUAL = item.C4IIA_ELEVATION_PER_ACTUAL,
                            C4IIA_ELEVATION_PER_GRADE = item.C4IIA_ELEVATION_PER_GRADE,
                            C4IIB_EXTRA_WIDENING_DPR = item.C4IIB_EXTRA_WIDENING_DPR,
                            C4IIB_EXTRA_WIDENING_ACTUAL = item.C4IIB_EXTRA_WIDENING_ACTUAL,
                            C4IIB_EXTRA_WIDENING_GRADE = item.C4IIB_EXTRA_WIDENING_GRADE,

                            C4IIIA_LONG_GRAD_PER_DPR = item.C4IIIA_LONG_GRAD_PER_DPR,
                            C4IIIA_LONG_GRAD_PER_ACTUAL = item.C4IIIA_LONG_GRAD_PER_ACTUAL,
                            C4IIIA_LONG_GRAD_PER_GRADE = item.C4IIIA_LONG_GRAD_PER_GRADE,
                            TABLE_FLAG = item.TABLE_FLAG,
                            ROAD_FROM = item.ROAD_FROM,
                            ROAD_TO = item.ROAD_TO,

                            IPADD = item.IPADD,
                            PR_ROAD_CODE = item.PR_ROAD_CODE,
                        });

                    }
                    objQM_ViewModel.GeometricObsDetailList = GeometricObslist;
                }

                if (earthWorkNewTechnology != null)
                {
                    EarthworkNewTechnology_ViewModel objEarthworkNewTechnology = new EarthworkNewTechnology_ViewModel();
                    objEarthworkNewTechnology.TECH_ID = earthWorkNewTechnology.TECH_ID;
                    objEarthworkNewTechnology.EFORM_ID = earthWorkNewTechnology.EFORM_ID;
                    objEarthworkNewTechnology.IMS_PR_ROAD_CODE = earthWorkNewTechnology.IMS_PR_ROAD_CODE;
                    objEarthworkNewTechnology.IS_NEW_TECH_USED = earthWorkNewTechnology.IS_NEW_TECH_USED == null ? "" : earthWorkNewTechnology.IS_NEW_TECH_USED.Trim();
                    objEarthworkNewTechnology.TECH_NAME = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == earthWorkNewTechnology.TECH_CODE).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objEarthworkNewTechnology.PROVIDER_NAME = earthWorkNewTechnology.PROVIDER_NAME == null ? "" : earthWorkNewTechnology.PROVIDER_NAME;
                    objEarthworkNewTechnology.STABILIZER_NAME = earthWorkNewTechnology.STABILIZER_NAME == null ? "" : earthWorkNewTechnology.STABILIZER_NAME;
                    objEarthworkNewTechnology.STABILIZER_QTY_DPR = earthWorkNewTechnology.STABILIZER_QTY_DPR == null ? "" : earthWorkNewTechnology.STABILIZER_QTY_DPR;
                    objEarthworkNewTechnology.STABILIZER_QTY_USED = earthWorkNewTechnology.STABILIZER_QTY_USED == null ? "" : earthWorkNewTechnology.STABILIZER_QTY_USED;
                    objEarthworkNewTechnology.UCS = earthWorkNewTechnology.UCS;
                    objEarthworkNewTechnology.JC_TECH_NAME = earthWorkNewTechnology.JC_TECH_NAME == null ? "" : earthWorkNewTechnology.JC_TECH_NAME;
                    objEarthworkNewTechnology.JC_TECH_PROVIDER = earthWorkNewTechnology.JC_TECH_PROVIDER == null ? "" : earthWorkNewTechnology.JC_TECH_PROVIDER;
                    objEarthworkNewTechnology.JC_TECH_QTY_DPR = earthWorkNewTechnology.JC_TECH_QTY_DPR == null ? "" : earthWorkNewTechnology.JC_TECH_QTY_DPR;
                    objEarthworkNewTechnology.JC_TECH_QTY_USED = earthWorkNewTechnology.JC_TECH_QTY_USED == null ? "" : earthWorkNewTechnology.JC_TECH_QTY_USED;
                    objEarthworkNewTechnology.IS_TEST_CERT_PROVIDED = earthWorkNewTechnology.IS_TEST_CERT_PROVIDED == null ? "" : earthWorkNewTechnology.IS_TEST_CERT_PROVIDED.Trim();
                    objEarthworkNewTechnology.SUBGRADE_CBR = earthWorkNewTechnology.SUBGRADE_CBR;
                    objEarthworkNewTechnology.SUBITEM_GRADING_5I = earthWorkNewTechnology.SUBITEM_GRADING_5I == null ? "" : earthWorkNewTechnology.SUBITEM_GRADING_5I.Trim();
                    objEarthworkNewTechnology.GUIDING_NOTE = earthWorkNewTechnology.GUIDING_NOTE == null ? "" : earthWorkNewTechnology.GUIDING_NOTE;

                    objQM_ViewModel.EarthworkNewTechnologyViewModel = objEarthworkNewTechnology;
                }

                if (earthWorkUCS != null)
                {

                    List<EarthworkUCSDetail> earthWorkUCSlist = new List<EarthworkUCSDetail>();
                    foreach (var item in earthWorkUCS)
                    {
                        earthWorkUCSlist.Add(new EarthworkUCSDetail
                        {
                            UCS_DETAIL_ID = item.UCS_DETAIL_ID,
                            TECH_ID = item.TECH_ID,
                            EFORM_ID = item.EFORM_ID,
                            IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                            LOCATION_RD_FROM = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO = item.LOCATION_RD_TO,
                            UCS_ASPER_MIX_DESIGN = item.UCS_ASPER_MIX_DESIGN,
                            UCS_ASPER_PIU = item.UCS_ASPER_PIU,
                            IS_UCS_ACCEPTABLE = item.IS_UCS_ACCEPTABLE == null ? "" : item.IS_UCS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                            QM_USER_ID = item.QM_USER_ID
                        });
                    }


                    objQM_ViewModel.EarthworkUCSList = earthWorkUCSlist;
                }

                if (earthWorkCBR != null)
                {
                    List<EarthworkCBRDetail> earthWorkCBRlist = new List<EarthworkCBRDetail>();
                    foreach (var item in earthWorkCBR)
                    {
                        earthWorkCBRlist.Add(new EarthworkCBRDetail
                        {
                            CBR_DETAIL_ID = item.CBR_DETAIL_ID,
                            TECH_ID = item.TECH_ID,
                            EFORM_ID = item.EFORM_ID,
                            IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                            LOCATION_RD_FROM = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO = item.LOCATION_RD_TO,
                            CBR_ASPER_MIX_DESIGN = item.CBR_ASPER_MIX_DESIGN,
                            CBR_ASPER_PIU = item.CBR_ASPER_PIU,
                            IS_CBR_ACCEPTABLE = item.IS_CBR_ACCEPTABLE == null ? "" : item.IS_CBR_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                            QM_USER_ID = item.QM_USER_ID
                        });
                    }
                    objQM_ViewModel.EarthworkCBRList = earthWorkCBRlist;
                }

                if (QomEmbankment != null)
                {
                    QOM_Embankment_ViewModel objQOMEmbankmentModel = new QOM_Embankment_ViewModel();

                    objQOMEmbankmentModel.QOM_ID = QomEmbankment.QOM_ID;
                    objQOMEmbankmentModel.EFORM_ID = QomEmbankment.EFORM_ID;
                    objQOMEmbankmentModel.IMS_PR_ROAD_CODE = QomEmbankment.IMS_PR_ROAD_CODE;
                    objQOMEmbankmentModel.NAME_LOCATION_SRC = QomEmbankment.NAME_LOCATION_SRC == null ? "" : QomEmbankment.NAME_LOCATION_SRC;
                    objQOMEmbankmentModel.DIST_SOE = QomEmbankment.DIST_SOE;
                    objQOMEmbankmentModel.IS_JUSTIFIED = QomEmbankment.IS_JUSTIFIED == null ? "" : QomEmbankment.IS_JUSTIFIED.Trim();
                    objQOMEmbankmentModel.APPROVED_SRC_REMARKS = QomEmbankment.APPROVED_SRC_REMARKS == null ? "" : QomEmbankment.APPROVED_SRC_REMARKS;
                    objQOMEmbankmentModel.SUBITEM_GRADING_5_II = QomEmbankment.SUBITEM_GRADE_5II == null ? "" : QomEmbankment.SUBITEM_GRADE_5II.Trim();
                    objQOMEmbankmentModel.IMPROVEMENT_REMARK_12_1 = QomEmbankment.IMPROVE_SUGG == null ? "" : QomEmbankment.IMPROVE_SUGG;
                    objQOMEmbankmentModel.QM_USER_ID = QomEmbankment.QM_USER_ID;
                    objQOMEmbankmentModel.IPADD = QomEmbankment.IPADD;

                    objQM_ViewModel.QomEmbankmentModel = objQOMEmbankmentModel;
                }

                if (GroupOfSoilList != null)
                {
                    List<Group_Symbol_Soil_ViewModel> GroupSymbolSoilList = new List<Group_Symbol_Soil_ViewModel>();
                    int rowCount = 1;
                    foreach (var item in GroupOfSoilList)
                    {
                        GroupSymbolSoilList.Add(new Group_Symbol_Soil_ViewModel
                        {
                            SYMBOL_ID = item.SYMBOL_ID,
                            QOM_ID = item.QOM_ID,
                            EFORM_ID = item.EFORM_ID,
                            IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                            LOCATION_RD_11 = item.LOCATION_RD,
                            GSS_ASPER_DPR = item.GSS_ASPER_DPR == null ? "" : item.GSS_ASPER_DPR,
                            GSS_OBSERVED = item.GSS_OBSERVED == null ? "" : item.GSS_OBSERVED,
                            SUITABILITY = item.SUITABILITY == null ? "" : item.SUITABILITY.Trim().Equals("Y") ? "Yes" : "No",
                            MATERIAL_QLTY = item.MATERIAL_QLTY == null ? "" : item.MATERIAL_QLTY,
                            QM_USER_ID = item.QM_USER_ID,
                            RowId = rowCount++,
                            IPADD = item.IPADD == null ? "" : item.IPADD,
                        });
                    }
                    objQM_ViewModel.GroupSymbolSoilList = GroupSymbolSoilList;
                }

                if (CompOfEmbankment != null)
                {
                    COMPAQ_EMBANKMENT_ViewModel objCompqEmbankmentModel = new COMPAQ_EMBANKMENT_ViewModel();

                    objCompqEmbankmentModel.COMPAQ_ID = CompOfEmbankment.COMPAQ_ID;
                    objCompqEmbankmentModel.EFORM_ID = CompOfEmbankment.EFORM_ID;
                    objCompqEmbankmentModel.IMS_PR_ROAD_CODE = CompOfEmbankment.IMS_PR_ROAD_CODE;
                    objCompqEmbankmentModel.MDD = CompOfEmbankment.MDD;
                    objCompqEmbankmentModel.OMC = CompOfEmbankment.OMC;
                    objCompqEmbankmentModel.SUBITEM_GRADING_5_III = CompOfEmbankment.SUBITEM_GRADING_5III == null ? "" : CompOfEmbankment.SUBITEM_GRADING_5III.Trim();
                    objCompqEmbankmentModel.IMPROVEMENT_REMARK_12_2 = CompOfEmbankment.IMPROVE_SUGGESTION == null ? "" : CompOfEmbankment.IMPROVE_SUGGESTION;
                    objCompqEmbankmentModel.QM_USER_ID = CompOfEmbankment.QM_USER_ID;
                    objCompqEmbankmentModel.IPADD = CompOfEmbankment.IPADD;

                    objQM_ViewModel.CompqEmbankmentModel = objCompqEmbankmentModel;
                }

                if (CompEmbankmentlist != null)
                {
                    List<DEGREE_OF_COMPAQ_ViewModel> DegreeofCompaqModelList = new List<DEGREE_OF_COMPAQ_ViewModel>();
                    int rowcount = 1;
                    foreach (var item in CompEmbankmentlist)
                    {
                        DegreeofCompaqModelList.Add(new DEGREE_OF_COMPAQ_ViewModel
                        {
                            DEGREE_ID = item.DEGREE_ID,
                            COMPAQ_ID = item.COMPAQ_ID,
                            EFORM_ID = item.EFORM_ID,
                            IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                            LOCATION_RD_12 = item.LOCATION_RD,
                            QCR1_DRY_DENSITY = item.QCR1_DRY_DENSITY,
                            QCR1_PERCENT_COMPAQ = item.QCR1_PERCENT_COMPAQ,
                            QCR1_DATE_OF_TEST = item.QCR1_DATE_OF_TEST == null ? "" : Convert.ToDateTime(item.QCR1_DATE_OF_TEST).ToShortDateString(),
                            MEAS_FMC = item.MEAS_FMC,
                            MEAS_DRY_DENSITY = item.MEAS_DRY_DENSITY,
                            MEAS_PERCENT_COMPAQ = item.MEAS_PERCENT_COMPAQ,
                            MEAS_GRADE = item.MEAS_GRADE,
                            RowId = rowcount++,
                        }); ;
                    }
                    objQM_ViewModel.DegreeofCompaqModelList = DegreeofCompaqModelList;
                }

                if (SideSlopeDetail != null)
                {
                    SIDE_SLOPES_ViewModel objSideSlopeModel = new SIDE_SLOPES_ViewModel();
                    objSideSlopeModel.SIDE_SLOP_ID = SideSlopeDetail.SIDE_SLOP_ID;
                    objSideSlopeModel.EFORM_ID = SideSlopeDetail.EFORM_ID;
                    objSideSlopeModel.IMS_PR_ROAD_CODE = SideSlopeDetail.IMS_PR_ROAD_CODE;
                    objSideSlopeModel.SIDE_SLOPS_ASPER_DPR = SideSlopeDetail.SIDE_SLOPS_ASPER_DPR.Trim();
                    objSideSlopeModel.IS_ANALYSIS_DONE = SideSlopeDetail.IS_ANALYSIS_DONE == null ? "" : SideSlopeDetail.IS_ANALYSIS_DONE.Trim();
                    objSideSlopeModel.OBSERVATIONS = SideSlopeDetail.OBSERVATIONS;
                    objSideSlopeModel.SUBITEM_GRADING_5IV = SideSlopeDetail.SUBITEM_GRADING_5IV == null ? "" : SideSlopeDetail.SUBITEM_GRADING_5IV.Trim();
                    objSideSlopeModel.IMPROVEMENT_REMARK_5IV = SideSlopeDetail.IMPROVE_SUGGESTIONS;
                    objSideSlopeModel.ITEM_GRADING_5 = SideSlopeDetail.SUBITEM_GRADING_5 == null ? "" : SideSlopeDetail.SUBITEM_GRADING_5.Trim();
                    objSideSlopeModel.IMPROVEMENT_REMARK_5 = SideSlopeDetail.IMPROVE_SUGGESTIONS_5;

                    objQM_ViewModel.SideSlopeModel = objSideSlopeModel;
                }

                if (SideSlopeList != null)
                {
                    List<SIDE_SLOPE_LIST_ViewModel> SideSlopeModelList = new List<SIDE_SLOPE_LIST_ViewModel>();
                    int rowCount = 1;
                    foreach (var item in SideSlopeList)
                    {
                        SideSlopeModelList.Add(new SIDE_SLOPE_LIST_ViewModel
                        {
                            SS_DETAIL_ID = item.SS_DETAIL_ID,
                            SIDE_SLOP_ID = item.SIDE_SLOP_ID,
                            EFORM_ID = item.EFORM_ID,
                            IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                            LOCATION_RD_13_1 = item.LOCATION_RD,
                            SS_OBSERVED_BY_QM = item.SS_OBSERVED_BY_QM,
                            IS_SS_SATISFACTORY = item.IS_SS_SATISFACTORY == null ? "" : item.IS_SS_SATISFACTORY.Trim().Equals("Y") ? "Yes" : "No",
                            IS_PROFILE_SATISFACTORY = item.IS_PROFILE_SATISFACTORY == null ? "" : item.IS_SS_SATISFACTORY.Trim().Equals("Y") ? "Yes" : "No",
                            GRADING = item.GRADING,
                            RowId = rowCount++,
                        });
                    }
                    objQM_ViewModel.SideSlopeModelList = SideSlopeModelList;
                }

                if (SideCutSlopelist != null)
                {
                    List<CUT_SLOPE_LIST_ViewModel> CutSlopeModelList = new List<CUT_SLOPE_LIST_ViewModel>();
                    int rowcount = 1;
                    foreach (var item in SideCutSlopelist)
                    {
                        CutSlopeModelList.Add(new CUT_SLOPE_LIST_ViewModel
                        {
                            CUT_DETAIL_ID = item.CUT_DETAIL_ID,
                            SIDE_SLOP_ID = item.SIDE_SLOP_ID,
                            EFORM_ID = item.EFORM_ID,
                            IMS_PR_ROAD_CODE = item.IMS_PR_ROAD_CODE,
                            LOCATION_RD_13_2 = item.LOCATION_RD,
                            IS_STABLE = item.IS_STABLE,
                            RowId = rowcount++
                        });
                    }
                    objQM_ViewModel.CutSlopeModelList = CutSlopeModelList;
                }

                if (GranularSubbaseDetails != null)
                {
                    GRANULAR_SUBBASE_ViewModel objGranularSubbaseViewModel = new GRANULAR_SUBBASE_ViewModel();

                    objGranularSubbaseViewModel.IsNewTechUsedGSStatus = GranularSubbaseDetails.IS_NEW_TECH_USED.Trim();
                    objGranularSubbaseViewModel.IS_PROVISION_IN_DPR_14 = GranularSubbaseDetails.IS_PROVISION_IN_DPR == null ? "" : GranularSubbaseDetails.IS_PROVISION_IN_DPR.Trim();
                    objGranularSubbaseViewModel.EXECUTION_STATUS_14 = GranularSubbaseDetails.EXECUTION_STATUS == null ? "" : GranularSubbaseDetails.EXECUTION_STATUS.Trim();
                    objGranularSubbaseViewModel.IS_NEW_TECH_USED_14 = GranularSubbaseDetails.IS_NEW_TECH_USED == null ? "" : GranularSubbaseDetails.IS_NEW_TECH_USED.Trim();
                    objGranularSubbaseViewModel.NEW_TECH_NAME_14 = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == GranularSubbaseDetails.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objGranularSubbaseViewModel.NEW_TECH_PROVIDER_14 = GranularSubbaseDetails.NEW_TECH_PROVIDER;
                    objGranularSubbaseViewModel.NAME_STABILISER_USED_14 = GranularSubbaseDetails.NAME_STABILISER_USED;
                    objGranularSubbaseViewModel.STABILISER_QTY_ASPER_DPR_14 = GranularSubbaseDetails.STABILISER_QTY_ASPER_DPR;
                    objGranularSubbaseViewModel.STABILISER_QTY_USED_14 = GranularSubbaseDetails.STABILISER_QTY_USED;
                    objGranularSubbaseViewModel.UCS_ASPER_DPR_14 = GranularSubbaseDetails.UCS_ASPER_DPR;
                    objGranularSubbaseViewModel.GSB_GRADING_ASPER_DPR_14 = GranularSubbaseDetails.GSB_GRADING_ASPER_DPR == null ? "" : GranularSubbaseDetails.GSB_GRADING_ASPER_DPR.Trim();
                    objGranularSubbaseViewModel.MDD_14 = GranularSubbaseDetails.MDD;
                    objGranularSubbaseViewModel.OMC_14 = GranularSubbaseDetails.OMC;
                    objGranularSubbaseViewModel.IS_GSB_ASPER_DPR = GranularSubbaseDetails.IS_GSB_ASPER_DPR == null ? "" : GranularSubbaseDetails.IS_GSB_ASPER_DPR.Trim();
                    objGranularSubbaseViewModel.LAYERS_ASPER_DPR = GranularSubbaseDetails.LAYERS_ASPER_DPR == null ? "" : GranularSubbaseDetails.LAYERS_ASPER_DPR.Trim();
                    objGranularSubbaseViewModel.IS_GSB_ATSITE = GranularSubbaseDetails.IS_GSB_ATSITE == null ? "" : GranularSubbaseDetails.IS_GSB_ATSITE.Trim();
                    objGranularSubbaseViewModel.LAYERS_ATSITE = GranularSubbaseDetails.LAYERS_ATSITE == null ? "0" : GranularSubbaseDetails.LAYERS_ATSITE.Trim();
                    objGranularSubbaseViewModel.IS_COMPAQ = GranularSubbaseDetails.IS_COMPAQ.Trim();
                    objGranularSubbaseViewModel.ITEM_GRADING_6 = GranularSubbaseDetails.ITEM_GRADING_6 == null ? "" : GranularSubbaseDetails.ITEM_GRADING_6.Trim();
                    objGranularSubbaseViewModel.IMPROVEMENT_REMARK_15 = GranularSubbaseDetails.IMPROVE_SUGGESTION;


                    objQM_ViewModel.GranularSubbaseViewModel = objGranularSubbaseViewModel;
                }

                if (GranularUCSlist != null)
                {
                    List<GRANULAR_SUBBASE_UCS_DETAILS_ViewModel> GranularSubaseUCSList = new List<GRANULAR_SUBBASE_UCS_DETAILS_ViewModel>();
                    foreach (var item in GranularUCSlist)
                    {
                        GranularSubaseUCSList.Add(new GRANULAR_SUBBASE_UCS_DETAILS_ViewModel
                        {

                            LOCATION_RD_FROM_14 = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO_14 = item.LOCATION_RD_TO,
                            UCS_ASPER_MIX_DESIGN_14 = item.UCS_ASPER_MIX_DESIGN,
                            UCS_ACHIEVED_14 = item.UCS_ACHIEVED,
                            IS_UCS_ACCEPTABLE_14 = item.IS_UCS_ACCEPTABLE == null ? "" : item.IS_UCS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.GranularSubaseUCSList = GranularSubaseUCSList;
                }

                if (GranularQOMlist != null)
                {
                    List<GRANULAR_QOM_WORKMENSHIP_ViewModel> GranularQOMWorkmenshipList = new List<GRANULAR_QOM_WORKMENSHIP_ViewModel>();

                    foreach (var item in GranularQOMlist)
                    {
                        GranularQOMWorkmenshipList.Add(new GRANULAR_QOM_WORKMENSHIP_ViewModel
                        {
                            LOCATION_RD_14 = item.LOCATION_RD,
                            IS_CONFORM_TO_GRADING_14 = item.IS_CONFORM_TO_GRADING == null ? "" : item.IS_CONFORM_TO_GRADING.Trim().Equals("Y") ? "Yes" : "No",
                            IS_MAT_SUITABLE_14 = item.IS_MAT_SUITABLE == null ? "" : item.IS_MAT_SUITABLE.Trim().Equals("Y") ? "Yes" : "No",
                            DRY_DENSITY_14 = item.DRY_DENSITY,
                            PERCENT_COMPAQ_14 = item.PERCENT_COMPAQ,
                            IS_COMPAQ_ADIQUATE_14 = item.IS_COMPAQ_ADIQUATE == null ? "" : item.IS_COMPAQ_ADIQUATE.Trim().Equals("Y") ? "Yes" : "No",
                            THICKNESS_ASPER_DPR_14 = item.THICKNESS_ASPER_DPR,
                            THICKNESS_MEAS_14 = item.THICKNESS_MEAS,
                            IS_PRISCRIBED_14 = item.IS_PRISCRIBED == null ? "" : item.IS_PRISCRIBED.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }

                    objQM_ViewModel.GranularQOMWorkmenshipList = GranularQOMWorkmenshipList;
                }

                if (BaseCourse_1_layer != null)
                {
                    BASE_COURSE_I_View_Model objBaseCourse1ViewModel = new BASE_COURSE_I_View_Model();

                    objBaseCourse1ViewModel.PROVISION_IN_DPR_15 = BaseCourse_1_layer.PROVISION_IN_DPR == null ? "" : BaseCourse_1_layer.PROVISION_IN_DPR.Trim();
                    objBaseCourse1ViewModel.ITEM_EXECUTION_STATUS_15 = BaseCourse_1_layer.ITEM_EXECUTION_STATUS == null ? "" : BaseCourse_1_layer.ITEM_EXECUTION_STATUS.Trim();
                    objBaseCourse1ViewModel.ACTUAL_EXECUTION_15 = BaseCourse_1_layer.ACTUAL_EXECUTION == null ? "" : BaseCourse_1_layer.ACTUAL_EXECUTION.Trim();
                    objBaseCourse1ViewModel.IS_NEW_TECH_USED_15 = BaseCourse_1_layer.IS_NEW_TECH_USED == null ? "" : BaseCourse_1_layer.IS_NEW_TECH_USED.Trim();
                    objBaseCourse1ViewModel.NEW_TECH_NAME_15 = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == BaseCourse_1_layer.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objBaseCourse1ViewModel.NEW_TECH_PROVIDER_15 = BaseCourse_1_layer.NEW_TECH_PROVIDER;
                    objBaseCourse1ViewModel.NAME_STABILISER_USED_15 = BaseCourse_1_layer.NAME_STABILISER_USED;
                    objBaseCourse1ViewModel.STABILISER_QTY_ASPER_DPR_15 = BaseCourse_1_layer.STABILISER_QTY_ASPER_DPR;
                    objBaseCourse1ViewModel.STABILISER_QTY_USED_15 = BaseCourse_1_layer.STABILISER_QTY_USED;
                    objBaseCourse1ViewModel.UCS_ASPER_DPR_15 = BaseCourse_1_layer.UCS_ASPER_DPR;
                    objBaseCourse1ViewModel.REASON_FOR_CHANGE_16 = BaseCourse_1_layer.REASON_FOR_CHANGE;
                    objBaseCourse1ViewModel.ITEM_GRADING_7 = BaseCourse_1_layer.ITEM_GRADING_7 == null ? "" : BaseCourse_1_layer.ITEM_GRADING_7.Trim();
                    objBaseCourse1ViewModel.IMPROVEMENT_REMARK_16 = BaseCourse_1_layer.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.BaseCourse1ViewModel = objBaseCourse1ViewModel;
                }

                if (BaseCourseUCS_1_list != null)
                {
                    List<BASECOURSE_UCS_DETAILS_LAYER1_ViewModel> BaseCourse1_UCS_List = new List<BASECOURSE_UCS_DETAILS_LAYER1_ViewModel>();
                    foreach (var item in BaseCourseUCS_1_list)
                    {
                        BaseCourse1_UCS_List.Add(new BASECOURSE_UCS_DETAILS_LAYER1_ViewModel
                        {
                            LOCATION_RD_FROM_15 = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO_15 = item.LOCATION_RD_TO,
                            UCS_ASPER_MIX_DESIGN_15 = item.UCS_ASPER_MIX_DESIGN,
                            UCS_ACHIEVED_15 = item.UCS_ACHIEVED,
                            IS_UCS_ACCEPTABLE_15 = item.IS_UCS_ACCEPTABLE == null ? "" : item.IS_UCS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.BaseCourse1_UCS_List = BaseCourse1_UCS_List;
                }

                if (BaseCourseObsWorkmenship_1_list != null)
                {
                    List<BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER1_View_Model> BaseCourse1_ObsWorkmanship_List = new List<BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER1_View_Model>();
                    foreach (var item in BaseCourseObsWorkmenship_1_list)
                    {
                        BaseCourse1_ObsWorkmanship_List.Add(new BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER1_View_Model
                        {
                            LOCATION_RD_16 = item.LOCATION_RD,
                            GRADING_AGRI_16 = item.GRADING_AGRI,
                            GRADING_PLASTICITY_16 = item.GRADING_PLASTICITY,
                            PERCENT_VOL_FILLER_MATERIAL_16 = item.PERCENT_VOL_FILLER_MATERIAL,
                            GRADING_COMPACTION_16 = item.GRADING_COMPACTION,
                            DESIGN_THICKNESS_16 = item.DESIGN_THICKNESS,
                            WBM_THICKNESS_16 = item.WBM_THICKNESS,
                            ADEQUATE_THICKNESS_16 = item.ADEQUATE_THICKNESS,
                        });
                    }
                    objQM_ViewModel.BaseCourse1_ObsWorkmanship_List = BaseCourse1_ObsWorkmanship_List;
                }

                if (BaseCourse_2_layer != null)
                {
                    BASE_COURSE_II_ViewModel objBaseCourse2viewModel = new BASE_COURSE_II_ViewModel();
                    objBaseCourse2viewModel.PROVISION_IN_DPR_16 = BaseCourse_2_layer.PROVISION_IN_DPR == null ? "" : BaseCourse_2_layer.PROVISION_IN_DPR.Trim();
                    objBaseCourse2viewModel.ITEM_EXECUTION_STATUS_16 = BaseCourse_2_layer.ITEM_EXECUTION_STATUS == null ? "" : BaseCourse_2_layer.ITEM_EXECUTION_STATUS.Trim();
                    objBaseCourse2viewModel.ACTUAL_EXECUTION_16 = BaseCourse_2_layer.ACTUAL_EXECUTION == null ? "" : BaseCourse_2_layer.ACTUAL_EXECUTION.Trim();
                    objBaseCourse2viewModel.IS_NEW_TECH_USED_16 = BaseCourse_2_layer.IS_NEW_TECH_USED == null ? "" : BaseCourse_2_layer.IS_NEW_TECH_USED.Trim();
                    objBaseCourse2viewModel.NEW_TECH_NAME_16 = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == BaseCourse_2_layer.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objBaseCourse2viewModel.NEW_TECH_PROVIDER_16 = BaseCourse_2_layer.NEW_TECH_PROVIDER;
                    objBaseCourse2viewModel.NAME_STABILISER_USED_16 = BaseCourse_2_layer.NAME_STABILISER_USED;
                    objBaseCourse2viewModel.STABILISER_QTY_ASPER_DPR_16 = BaseCourse_2_layer.STABILISER_QTY_ASPER_DPR;
                    objBaseCourse2viewModel.STABILISER_QTY_USED_16 = BaseCourse_2_layer.STABILISER_QTY_USED;
                    objBaseCourse2viewModel.UCS_ASPER_DPR_17 = BaseCourse_2_layer.UCS_ASPER_DPR;
                    objBaseCourse2viewModel.REASON_FOR_CHANGE_17 = BaseCourse_2_layer.REASON_FOR_CHANGE;
                    objBaseCourse2viewModel.ITEM_GRADING_8 = BaseCourse_2_layer.ITEM_GRADING_8 == null ? "" : BaseCourse_2_layer.ITEM_GRADING_8.Trim();
                    objBaseCourse2viewModel.IMPROVEMENT_REMARK_17 = BaseCourse_2_layer.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.BaseCourse2viewModel = objBaseCourse2viewModel;
                }

                if (BasecousreUCS_2_list != null)
                {
                    List<BASECOURSE_UCS_DETAILS_LAYER2_ViewModel> Basecourse2_UCS_List = new List<BASECOURSE_UCS_DETAILS_LAYER2_ViewModel>();
                    foreach (var item in BasecousreUCS_2_list)
                    {
                        Basecourse2_UCS_List.Add(new BASECOURSE_UCS_DETAILS_LAYER2_ViewModel
                        {
                            LOCATION_RD_FROM_17 = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO_17 = item.LOCATION_RD_TO,
                            UCS_ASPER_MIX_DESIGN_17 = item.UCS_ASPER_MIX_DESIGN,
                            UCS_ACHIEVED_17 = item.UCS_ACHIEVED,
                            IS_UCS_ACCEPTABLE_17 = item.IS_UCS_ACCEPTABLE == null ? "" : item.IS_UCS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.Basecourse2_UCSList = Basecourse2_UCS_List;
                }

                if (BaseCourseObsWorkmenship_2_list != null)
                {
                    List<BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER2_View_Model> BaseCourse2_ObsWorkmanship_List = new List<BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER2_View_Model>();
                    foreach (var item in BaseCourseObsWorkmenship_2_list)
                    {
                        BaseCourse2_ObsWorkmanship_List.Add(new BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER2_View_Model
                        {
                            LOCATION_RD = item.LOCATION_RD,
                            GRADING_AGRI = item.GRADING_AGRI,
                            GRADING_PLASTICITY = item.GRADING_PLASTICITY,
                            PERCENT_VOL_FILLER_MATERIAL = item.PERCENT_VOL_FILLER_MATERIAL,
                            GRADING_COMPACTION = item.GRADING_COMPACTION,
                            DESIGN_THICKNESS = item.DESIGN_THICKNESS,
                            WBM_THICKNESS = item.WBM_THICKNESS,
                            ADEQUATE_THICKNESS = item.ADEQUATE_THICKNESS,
                        });
                    }
                    objQM_ViewModel.BaseCourse2_ObsWorkmanship_List = BaseCourse2_ObsWorkmanship_List;
                }

                if (BaseCourse_3_layer != null)
                {
                    BASE_COURSE_III_ViewModel objBaseCourse3viewModel = new BASE_COURSE_III_ViewModel();

                    objBaseCourse3viewModel.PROVISION_IN_DPR_17 = BaseCourse_3_layer.PROVISION_IN_DPR == null ? "" : BaseCourse_3_layer.PROVISION_IN_DPR.Trim();
                    objBaseCourse3viewModel.ITEM_EXECUTION_STATUS_17 = BaseCourse_3_layer.ITEM_EXECUTION_STATUS == null ? "" : BaseCourse_3_layer.ITEM_EXECUTION_STATUS.Trim();
                    objBaseCourse3viewModel.ACTUAL_EXECUTION_17 = BaseCourse_3_layer.ACTUAL_EXECUTION == null ? "" : BaseCourse_3_layer.ACTUAL_EXECUTION.Trim();
                    objBaseCourse3viewModel.IS_NEW_TECH_USED_18 = BaseCourse_3_layer.IS_NEW_TECH_USED == null ? "" : BaseCourse_3_layer.IS_NEW_TECH_USED.Trim();
                    objBaseCourse3viewModel.NEW_TECH_NAME_18 = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == BaseCourse_3_layer.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objBaseCourse3viewModel.NEW_TECH_PROVIDER_18 = BaseCourse_3_layer.NEW_TECH_PROVIDER;
                    objBaseCourse3viewModel.NAME_STABILISER_USED_18 = BaseCourse_3_layer.NAME_STABILISER_USED;
                    objBaseCourse3viewModel.STABILISER_QTY_ASPER_DPR_18 = BaseCourse_3_layer.STABILISER_QTY_ASPER_DPR;
                    objBaseCourse3viewModel.STABILISER_QTY_USED_18 = BaseCourse_3_layer.STABILISER_QTY_USED;
                    objBaseCourse3viewModel.UCS_ASPER_DPR_18 = BaseCourse_3_layer.UCS_ASPER_DPR;
                    objBaseCourse3viewModel.REASON_FOR_CHANGE_18 = BaseCourse_3_layer.REASON_FOR_CHANGE;
                    objBaseCourse3viewModel.ITEM_GRADING_9 = BaseCourse_3_layer.ITEM_GRADING_9 == null ? "" : BaseCourse_3_layer.ITEM_GRADING_9.Trim();
                    objBaseCourse3viewModel.IMPROVEMENT_REMARK_18 = BaseCourse_3_layer.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.BaseCourse3viewModel = objBaseCourse3viewModel;
                }

                if (BasecousreUCS_3_list != null)
                {
                    List<BASECOURSE_UCS_DETAILS_LAYER3_ViewModel> Basecourse3_UCSList = new List<BASECOURSE_UCS_DETAILS_LAYER3_ViewModel>();

                    foreach (var item in BasecousreUCS_3_list)
                    {
                        Basecourse3_UCSList.Add(new BASECOURSE_UCS_DETAILS_LAYER3_ViewModel
                        {
                            LOCATION_RD_FROM_18 = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO_18 = item.LOCATION_RD_TO,
                            UCS_ASPER_MIX_DESIGN_18 = item.UCS_ASPER_MIX_DESIGN,
                            UCS_ACHIEVED_18 = item.UCS_ACHIEVED,
                            IS_UCS_ACCEPTABLE_18 = item.IS_UCS_ACCEPTABLE == null ? "" : item.IS_UCS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.Basecourse3_UCSList = Basecourse3_UCSList;
                }

                if (BaseCourseObsWorkmenship_3_list != null)
                {
                    List<BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER3_ViewModel> BaseCourse3_ObsWorkmanship_List = new List<BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER3_ViewModel>();

                    foreach (var item in BaseCourseObsWorkmenship_3_list)
                    {
                        BaseCourse3_ObsWorkmanship_List.Add(new BASE_COURSE_OBSERVATION_WORKMANSHIP_LAYER3_ViewModel
                        {
                            LOCATION_RD_18 = item.LOCATION_RD,
                            GRADING_AGRI_18 = item.GRADING_AGRI,
                            GRADING_PLASTICITY_18 = item.GRADING_PLASTICITY,
                            PERCENT_VOL_FILLER_MATERIAL_18 = item.PERCENT_VOL_FILLER_MATERIAL,
                            GRADING_COMPACTION_18 = item.GRADING_COMPACTION,
                            DESIGN_THICKNESS_18 = item.DESIGN_THICKNESS,
                            WBM_THICKNESS_18 = item.WBM_THICKNESS,
                            ADEQUATE_THICKNESS_18 = item.ADEQUATE_THICKNESS,
                        });
                    }
                    objQM_ViewModel.BaseCourse3_ObsWorkmanship_List = BaseCourse3_ObsWorkmanship_List;
                }

                if (Bituminous_BaseCourse10 != null)
                {
                    BITUMINOUS_BASECOURSE_ViewModel objBituminousBaseCourseViewModel = new BITUMINOUS_BASECOURSE_ViewModel();

                    objBituminousBaseCourseViewModel.LAYER_ID = Bituminous_BaseCourse10.LAYER_ID;
                    objBituminousBaseCourseViewModel.EFORM_ID = Bituminous_BaseCourse10.EFORM_ID;
                    objBituminousBaseCourseViewModel.IMS_PR_ROAD_CODE = Bituminous_BaseCourse10.IMS_PR_ROAD_CODE;
                    objBituminousBaseCourseViewModel.PROVISION_IN_DPR = Bituminous_BaseCourse10.PROVISION_IN_DPR == null ? "" : Bituminous_BaseCourse10.PROVISION_IN_DPR.Trim();
                    objBituminousBaseCourseViewModel.ITEM_EXECUTION_STATUS = Bituminous_BaseCourse10.ITEM_EXECUTION_STATUS == null ? "" : Bituminous_BaseCourse10.ITEM_EXECUTION_STATUS.Trim();
                    objBituminousBaseCourseViewModel.ACTUAL_EXECUTION = Bituminous_BaseCourse10.ACTUAL_EXECUTION == null ? "" : Bituminous_BaseCourse10.ACTUAL_EXECUTION.Trim();
                    objBituminousBaseCourseViewModel.IS_NEW_TECH_USED = Bituminous_BaseCourse10.IS_NEW_TECH_USED == null ? "" : Bituminous_BaseCourse10.IS_NEW_TECH_USED.Trim();
                    objBituminousBaseCourseViewModel.NEW_TECH_NAME = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == Bituminous_BaseCourse10.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objBituminousBaseCourseViewModel.NEW_TECH_PROVIDER = Bituminous_BaseCourse10.NEW_TECH_PROVIDER;
                    objBituminousBaseCourseViewModel.NEW_TECH_MATERIAL_NAME = Bituminous_BaseCourse10.NEW_TECH_MATERIAL_NAME;
                    objBituminousBaseCourseViewModel.NEW_TECH_QTY_MATERIAL_ASPER_DPR = Bituminous_BaseCourse10.NEW_TECH_QTY_MATERIAL_ASPER_DPR;
                    objBituminousBaseCourseViewModel.NEW_TECH_QTY_MATERIAL_USED = Bituminous_BaseCourse10.NEW_TECH_QTY_MATERIAL_USED;
                    objBituminousBaseCourseViewModel.NEW_TECH_LOC_FROM_ROAD = Bituminous_BaseCourse10.NEW_TECH_LOC_FROM_ROAD;
                    objBituminousBaseCourseViewModel.NEW_TECH_LOC_FROM_TO = Bituminous_BaseCourse10.NEW_TECH_LOC_FROM_TO;
                    objBituminousBaseCourseViewModel.GRADING_NEW_TECH_EVALUATION = Bituminous_BaseCourse10.GRADING_NEW_TECH_EVALUATION == null ? "" : Bituminous_BaseCourse10.GRADING_NEW_TECH_EVALUATION.Trim();
                    objBituminousBaseCourseViewModel.THICKNESS_ASPER_DPR = Bituminous_BaseCourse10.THICKNESS_ASPER_DPR;
                    objBituminousBaseCourseViewModel.TYPE_GRADE_BINDER = Bituminous_BaseCourse10.TYPE_GRADE_BINDER;
                    objBituminousBaseCourseViewModel.BRAND_NAME_BITUMEN = Bituminous_BaseCourse10.BRAND_NAME_BITUMEN;
                    objBituminousBaseCourseViewModel.IS_BITUMEN_USED = Bituminous_BaseCourse10.IS_BITUMEN_USED == null ? "" : Bituminous_BaseCourse10.IS_BITUMEN_USED.Trim();
                    objBituminousBaseCourseViewModel.INVOICE_INSUFFICIENT_REASON = Bituminous_BaseCourse10.INVOICE_INSUFFICIENT_REASON;
                    objBituminousBaseCourseViewModel.PERCENT_BITUMEN_CONTENT = Bituminous_BaseCourse10.PERCENT_BITUMEN_CONTENT;
                    objBituminousBaseCourseViewModel.IS_PRIME_COAT_USED = Bituminous_BaseCourse10.IS_PRIME_COAT_USED == null ? "" : Bituminous_BaseCourse10.IS_PRIME_COAT_USED.Trim();
                    objBituminousBaseCourseViewModel.LAYING_TEMP = Bituminous_BaseCourse10.LAYING_TEMP;
                    objBituminousBaseCourseViewModel.IS_MIX_DESIGN = Bituminous_BaseCourse10.IS_MIX_DESIGN == null ? "" : Bituminous_BaseCourse10.IS_MIX_DESIGN.Trim();
                    objBituminousBaseCourseViewModel.MARSHAL_STAB = Bituminous_BaseCourse10.MARSHAL_STAB;
                    objBituminousBaseCourseViewModel.DESIGN_DENSITY = Bituminous_BaseCourse10.DESIGN_DENSITY;
                    objBituminousBaseCourseViewModel.IS_HOT_MIX_DONE = Bituminous_BaseCourse10.IS_HOT_MIX_DONE == null ? "" : Bituminous_BaseCourse10.IS_HOT_MIX_DONE.Trim();
                    objBituminousBaseCourseViewModel.INSP_DATE = Bituminous_BaseCourse10.INSP_DATE == null ? "" : Bituminous_BaseCourse10.INSP_DATE.ToString();
                    objBituminousBaseCourseViewModel.ITEM_GRADING_10 = Bituminous_BaseCourse10.ITEM_GRADING_10 == null ? "" : Bituminous_BaseCourse10.ITEM_GRADING_10.Trim();
                    objBituminousBaseCourseViewModel.IMPROVE_SUGGESTION = Bituminous_BaseCourse10.IMPROVE_SUGGESTION;

                    objQM_ViewModel.BituminousBaseCourseViewModel = objBituminousBaseCourseViewModel;
                }

                if (Bituminous_BaseCourse10_list != null)
                {
                    List<BITUMINOUS_BASECOURSE_OBSERVATION_ViewModel> BituminousBaseCourse_OBS_List = new List<BITUMINOUS_BASECOURSE_OBSERVATION_ViewModel>();
                    foreach (var item in Bituminous_BaseCourse10_list)
                    {
                        BituminousBaseCourse_OBS_List.Add(new BITUMINOUS_BASECOURSE_OBSERVATION_ViewModel
                        {

                            LOCATION_RD = item.LOCATION_RD,
                            GRADING_COARSE_AGG = item.GRADING_COARSE_AGG,
                            DENSITY_ACHIEVED = item.DENSITY_ACHIEVED,
                            PERCENT_COMPAQ = item.PERCENT_COMPAQ,
                            PERCENT_BITCONT_ASPER_QCR1 = item.PERCENT_BITCONT_ASPER_QCR1,
                            PERCENT_BITCONT_MEAS_QM = item.PERCENT_BITCONT_MEAS_QM,
                            GRADING_PERCENT_BITCONT = item.GRADING_PERCENT_BITCONT,
                            OBSERV_TOL_MEAS_QM = item.OBSERV_TOL_MEAS_QM,
                            GRADING_OBSERV_TOL = item.GRADING_OBSERV_TOL,
                        });
                    }
                    objQM_ViewModel.BituminousBaseCourse_OBS_List = BituminousBaseCourse_OBS_List;
                }

                #endregion

                #region Value Assign From 11th to 23 Points

                if (bituminous_Surface11 != null)
                {
                    BITUMINOUS_SURFACE_ViewModel objBituminousSurfaceCourse = new BITUMINOUS_SURFACE_ViewModel();

                    objBituminousSurfaceCourse.PROVISION_IN_DPR = bituminous_Surface11.PROVISION_IN_DPR == null ? "" : bituminous_Surface11.PROVISION_IN_DPR.Trim();
                    objBituminousSurfaceCourse.ITEM_EXECUTION_STATUS = bituminous_Surface11.ITEM_EXECUTION_STATUS == null ? "" : bituminous_Surface11.ITEM_EXECUTION_STATUS.Trim();
                    objBituminousSurfaceCourse.BITUMINOUS_TYPE = bituminous_Surface11.BITUMINOUS_TYPE == null ? "" : bituminous_Surface11.BITUMINOUS_TYPE.Trim();
                    objBituminousSurfaceCourse.IS_NEW_TECH_USED = bituminous_Surface11.IS_NEW_TECH_USED == null ? "" : bituminous_Surface11.IS_NEW_TECH_USED.Trim();
                    objBituminousSurfaceCourse.NEW_TECH_NAME = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == bituminous_Surface11.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objBituminousSurfaceCourse.NEW_TECH_PROVIDER = bituminous_Surface11.NEW_TECH_PROVIDER;
                    objBituminousSurfaceCourse.NEW_TECH_MATERIAL_USED = bituminous_Surface11.NEW_TECH_MATERIAL_USED;
                    objBituminousSurfaceCourse.NEW_TECH_QTY_USED_ASPER_DPR = bituminous_Surface11.NEW_TECH_QTY_USED_ASPER_DPR;
                    objBituminousSurfaceCourse.NEW_TECH_QTY_MATERIAL = bituminous_Surface11.NEW_TECH_QTY_MATERIAL;
                    objBituminousSurfaceCourse.NEW_TECH_LOC_FROM_ROAD = bituminous_Surface11.NEW_TECH_LOC_FROM_ROAD;
                    objBituminousSurfaceCourse.NEW_TECH_LOC_FROM_TO = bituminous_Surface11.NEW_TECH_LOC_FROM_TO;
                    objBituminousSurfaceCourse.GRADING_NEW_TECH_EVALUATION = bituminous_Surface11.GRADING_NEW_TECH_EVALUATION == null ? "" : bituminous_Surface11.GRADING_NEW_TECH_EVALUATION.Trim();
                    objBituminousSurfaceCourse.THICKNESS_ASPER_DPR = bituminous_Surface11.THICKNESS_ASPER_DPR;
                    objBituminousSurfaceCourse.TYPE_GRADE_BINDER = bituminous_Surface11.TYPE_GRADE_BINDER;
                    objBituminousSurfaceCourse.BRAND_NAME_BITUMEN = bituminous_Surface11.BRAND_NAME_BITUMEN;
                    objBituminousSurfaceCourse.IS_BITUMEN_USED = bituminous_Surface11.IS_BITUMEN_USED == null ? "" : bituminous_Surface11.IS_BITUMEN_USED.Trim();
                    objBituminousSurfaceCourse.INVOICE_INSUFFICIENT_REASON = bituminous_Surface11.INVOICE_INSUFFICIENT_REASON;
                    objBituminousSurfaceCourse.PERCENT_BITUMEN_CONTENT = bituminous_Surface11.PERCENT_BITUMEN_CONTENT;
                    objBituminousSurfaceCourse.IS_TACK_COAT_USED = bituminous_Surface11.IS_TACK_COAT_USED == null ? "" : bituminous_Surface11.IS_TACK_COAT_USED.Trim();
                    objBituminousSurfaceCourse.IS_MIX_DESIGN = bituminous_Surface11.IS_MIX_DESIGN == null ? "" : bituminous_Surface11.IS_MIX_DESIGN.Trim();
                    objBituminousSurfaceCourse.MARSHAL_STAB = bituminous_Surface11.MARSHAL_STAB;
                    objBituminousSurfaceCourse.IS_SIGN_DISTRESS = bituminous_Surface11.IS_SIGN_DISTRESS == null ? "" : bituminous_Surface11.IS_SIGN_DISTRESS.Trim();
                    objBituminousSurfaceCourse.REASON1_LOQ_TEMP = bituminous_Surface11.REASON1_LOQ_TEMP == null ? "" : bituminous_Surface11.REASON1_LOQ_TEMP.Trim();
                    objBituminousSurfaceCourse.REASON2_POOR_WORKMANSHIP = bituminous_Surface11.REASON2_POOR_WORKMANSHIP == null ? "" : bituminous_Surface11.REASON2_POOR_WORKMANSHIP.Trim();
                    objBituminousSurfaceCourse.REASON3_OVERLOADING = bituminous_Surface11.REASON3_OVERLOADING == null ? "" : bituminous_Surface11.REASON3_OVERLOADING.Trim();
                    objBituminousSurfaceCourse.REASON4_BITUMEN_CONTENT = bituminous_Surface11.REASON4_BITUMEN_CONTENT == null ? "" : bituminous_Surface11.REASON4_BITUMEN_CONTENT.Trim();
                    objBituminousSurfaceCourse.ITEM_GRADING_11 = bituminous_Surface11.ITEM_GRADING_11 == null ? "" : bituminous_Surface11.ITEM_GRADING_11.Trim();
                    objBituminousSurfaceCourse.IMPROVE_SUGGESTION = bituminous_Surface11.IMPROVE_SUGGESTION;

                    objQM_ViewModel.Bituminous_Surface_Course = objBituminousSurfaceCourse;
                }

                if (bituminous_Surface_list11 != null)
                {
                    List<BITUMINOUS_SURFACE_COARSE_DETAILS> ListBituminousSurface = new List<BITUMINOUS_SURFACE_COARSE_DETAILS>();

                    foreach (var item in bituminous_Surface_list11)
                    {
                        ListBituminousSurface.Add(new BITUMINOUS_SURFACE_COARSE_DETAILS
                        {

                            LOCATION_RD = item.LOCATION_RD,
                            GRADING_COARSE_AGG = item.GRADING_COARSE_AGG,
                            LAYING_TEMP = item.LAYING_TEMP,
                            PERCENT_BITCONT_ASPER_QCR1 = item.PERCENT_BITCONT_ASPER_QCR1,
                            PERCENT_BITCONT_MEAS_QM = item.PERCENT_BITCONT_MEAS_QM,
                            GRADING_PERCENT_BITCONT = item.GRADING_PERCENT_BITCONT,
                            OBSERV_TOL_MEAS_QM = item.OBSERV_TOL_MEAS_QM,
                            GRADING_OBSERV_TOL = item.GRADING_OBSERV_TOL,
                            GRADING_SURFACE_UE = item.GRADING_SURFACE_UE

                        });
                    }
                    objQM_ViewModel.Bituminous_Surface_CourseList = ListBituminousSurface;
                }

                if (qmShouldersdetails != null)
                {
                    QM_SHOULDERS objQMShoulders = new QM_SHOULDERS();

                    objQMShoulders.ITEM_EXECUTION_STATUS = qmShouldersdetails.ITEM_EXECUTION_STATUS == null ? "" : qmShouldersdetails.ITEM_EXECUTION_STATUS.Trim();
                    objQMShoulders.IS_NEW_TECH_USED = qmShouldersdetails.IS_NEW_TECH_USED == null ? "" : qmShouldersdetails.IS_NEW_TECH_USED.Trim();
                    objQMShoulders.NEW_TECH_NAME = dbContext.EFORM_MASTER_NEW_TECH_ITEM.Where(s => s.TECH_ID == qmShouldersdetails.TECH_ID).Select(m => m.TECH_NAME.ToString()).FirstOrDefault();
                    objQMShoulders.NEW_TECH_PROVIDER = qmShouldersdetails.NEW_TECH_PROVIDER;
                    objQMShoulders.NAME_STABILISER_USED = qmShouldersdetails.NAME_STABILISER_USED;
                    objQMShoulders.STABILISER_QTY_ASPER_DPR = qmShouldersdetails.STABILISER_QTY_ASPER_DPR;
                    objQMShoulders.STABILISER_QTY_USED = qmShouldersdetails.STABILISER_QTY_USED;
                    objQMShoulders.UCS_ASPER_DPR = qmShouldersdetails.UCS_ASPER_DPR;
                    objQMShoulders.MATERIAL_TYPE = qmShouldersdetails.MATERIAL_TYPE == null ? "" : qmShouldersdetails.MATERIAL_TYPE.Trim();
                    objQMShoulders.MATERIAL_WIDTH = qmShouldersdetails.MATERIAL_WIDTH;
                    objQMShoulders.MATERIAL_THICKNESS = qmShouldersdetails.MATERIAL_THICKNESS;
                    objQMShoulders.ITEM_GRADING_12 = qmShouldersdetails.ITEM_GRADING_12 == null ? "" : qmShouldersdetails.ITEM_GRADING_12.Trim();
                    objQMShoulders.IMPROVE_SUGGESTION = qmShouldersdetails.IMPROVE_SUGGESTION;

                    objQM_ViewModel.QMShoulders = objQMShoulders;
                }

                if (qmShouldersUCSlist != null)
                {
                    List<QM_SHOULDERS_UCS_DETAILS> QM_SHOULDERS_UCS_List = new List<QM_SHOULDERS_UCS_DETAILS>();
                    foreach (var item in qmShouldersUCSlist)
                    {
                        QM_SHOULDERS_UCS_List.Add(new QM_SHOULDERS_UCS_DETAILS
                        {
                            LOCATION_RD_FROM = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO = item.LOCATION_RD_TO,
                            UCS_ASPER_MIX_DESIGN = item.UCS_ASPER_MIX_DESIGN,
                            UCS_ACHIEVED = item.UCS_ACHIEVED,
                            IS_UCS_ACCEPTABLE = item.IS_UCS_ACCEPTABLE == null ? "" : item.IS_UCS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.QM_SHOULDERS_UCS_List = QM_SHOULDERS_UCS_List;
                }

                if (qmShouldersMateriallist != null)
                {
                    List<QM_SHOULDERS_MATERIAL_DETAILS> QM_SHOULDERS_MATERIAL_List = new List<QM_SHOULDERS_MATERIAL_DETAILS>();

                    foreach (var item in qmShouldersMateriallist)
                    {
                        QM_SHOULDERS_MATERIAL_List.Add(new QM_SHOULDERS_MATERIAL_DETAILS
                        {
                            LOCATION_RD = item.LOCATION_RD,
                            GRADING_QOM_HAND_FEEL = item.GRADING_QOM_HAND_FEEL,
                            COMPAQ_DEGREE_ASPER_QCR1 = item.COMPAQ_DEGREE_ASPER_QCR1,
                            COMPAQ_DEGREE_MEAS_QM = item.COMPAQ_DEGREE_MEAS_QM,
                            GRADING_COMPAQ_DEGREE = item.GRADING_COMPAQ_DEGREE,
                            CAMBER_ASPER_DPR = item.CAMBER_ASPER_DPR,
                            CAMBER_MEAS_QM = item.CAMBER_MEAS_QM,
                            GRADING_CAMBER = item.GRADING_CAMBER,
                            SECTIONAL_WIDTH = item.SECTIONAL_WIDTH,
                            SECTIONAL_THICKNESS = item.SECTIONAL_THICKNESS,
                            GRADING_SECTIONAL = item.GRADING_SECTIONAL,
                        });
                    }
                    objQM_ViewModel.QM_SHOULDERS_MATERIAL_List = QM_SHOULDERS_MATERIAL_List;
                }

                if (pipeCulverts != null)
                {
                    QM_PIPE_CULVERTS objPipeculvert = new QM_PIPE_CULVERTS();
                    objPipeculvert.TOTAL_PIPE_CULVERTS = pipeCulverts.TOTAL_PIPE_CULVERTS;
                    objPipeculvert.MINIMUM_CUSHION = pipeCulverts.MINIMUM_CUSHION;
                    objPipeculvert.CLASS_OF_PIPES_NP2 = pipeCulverts.CLASS_OF_PIPES_NP2;
                    objPipeculvert.CLASS_OF_PIPES_NP3 = pipeCulverts.CLASS_OF_PIPES_NP3;
                    objPipeculvert.GRADE_OF_CONCRETE = pipeCulverts.GRADE_OF_CONCRETE == null ? "" : pipeCulverts.GRADE_OF_CONCRETE.Trim();
                    objPipeculvert.IS_PROTECTION_PROVIDED = pipeCulverts.IS_PROTECTION_PROVIDED == null ? "" : pipeCulverts.IS_PROTECTION_PROVIDED.Trim();
                    objPipeculvert.IS_PIPE_PROPERLY_PLACED = pipeCulverts.IS_PIPE_PROPERLY_PLACED == null ? "" : pipeCulverts.IS_PIPE_PROPERLY_PLACED.Trim();
                    objPipeculvert.ITEM_GRADING_13 = pipeCulverts.ITEM_GRADING_13 == null ? "" : pipeCulverts.ITEM_GRADING_13.Trim();
                    objPipeculvert.IMPROVE_SUGGESTIONS = pipeCulverts.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.Pipeculvert = objPipeculvert;
                }

                if (pipeCulvertlist != null)
                {
                    List<QM_PIPE_CULVERTS_DETAILS> ListPipeCulvertOBS = new List<QM_PIPE_CULVERTS_DETAILS>();

                    foreach (var item in pipeCulvertlist)
                    {
                        ListPipeCulvertOBS.Add(new QM_PIPE_CULVERTS_DETAILS
                        {

                            LOCATION_RD = item.LOCATION_RD,
                            CLASS_OF_PIPE = item.CLASS_OF_PIPE,
                            MEAS_CUSHION = item.MEAS_CUSHION,
                            STRENGTH_OF_CONCRETE = item.STRENGTH_OF_CONCRETE,
                            QOM = item.QOM,
                        });
                    }
                    objQM_ViewModel.PipeCulvertList = ListPipeCulvertOBS;
                }

                if (slabCulverts != null)
                {
                    QM_SLAB_CULVERTS objQmSlabculverts = new QM_SLAB_CULVERTS();

                    objQmSlabculverts.CONCRTE_GRADE = slabCulverts.CONCRTE_GRADE == null ? "" : slabCulverts.CONCRTE_GRADE.Trim();
                    objQmSlabculverts.TOTAL_SLAB_CULVERTS = slabCulverts.TOTAL_SLAB_CULVERTS;
                    objQmSlabculverts.ITEM_GRADING_14 = slabCulverts.ITEM_GRADING_14 == null ? "" : slabCulverts.ITEM_GRADING_14.Trim();
                    objQmSlabculverts.IMPROVE_SUGGESTIONS = slabCulverts.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.SlabCulvert = objQmSlabculverts;
                }

                if (slabCulvertlist != null)
                {
                    List<QM_SLAB_CULVERTS_DETAILS> ListQMSlabCulverts = new List<QM_SLAB_CULVERTS_DETAILS>();

                    foreach (var item in slabCulvertlist)
                    {
                        ListQMSlabCulverts.Add(new QM_SLAB_CULVERTS_DETAILS
                        {
                            LOCATION_RD = item.LOCATION_RD,
                            SLAB_THICKNESS_ASPER_DPR = item.SLAB_THICKNESS_ASPER_DPR,
                            SLAB_THICKNESS_MEAS_QM = item.SLAB_THICKNESS_MEAS_QM,
                            GRADING_SLAB_THICKNESS = item.GRADING_SLAB_THICKNESS,
                            CONCRETE_GRADE_ASPER_DPR = item.CONCRETE_GRADE_ASPER_DPR,
                            STRENGTH_OF_CONCRETE = item.STRENGTH_OF_CONCRETE,
                            QOM = item.QOM == null ? "" : item.QOM.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.SlabCulvertList = ListQMSlabCulverts;
                }

                if (protectionWork != null)
                {
                    QM_PROTECTION_WORK objQMProtectionWork = new QM_PROTECTION_WORK();

                    objQMProtectionWork.IS_DPR_PROVISION = protectionWork.IS_DPR_PROVISION == null ? "-" : protectionWork.IS_DPR_PROVISION.Trim();
                    objQMProtectionWork.IS_RETAINING_WALL = protectionWork.IS_RETAINING_WALL == null ? "-" : protectionWork.IS_RETAINING_WALL.Trim();
                    objQMProtectionWork.IS_BREAST_WALL = protectionWork.IS_BREAST_WALL == null ? "-" : protectionWork.IS_BREAST_WALL.Trim();
                    objQMProtectionWork.IS_PARAPET_WALL = protectionWork.IS_PARAPET_WALL == null ? "-" : protectionWork.IS_PARAPET_WALL.Trim();
                    objQMProtectionWork.IS_ANY_OTHER_TYPE = protectionWork.IS_ANY_OTHER_TYPE == null ? "-" : protectionWork.IS_ANY_OTHER_TYPE.Trim();
                    objQMProtectionWork.RETAINING_WALL_LENGTH = protectionWork.RETAINING_WALL_LENGTH;
                    objQMProtectionWork.BREAST_WALL_LENGTH = protectionWork.BREAST_WALL_LENGTH;
                    objQMProtectionWork.PARAPET_WALL_LENGTH = protectionWork.PARAPET_WALL_LENGTH;
                    objQMProtectionWork.OTHER_TYPE1_NAME = protectionWork.OTHER_TYPE1_NAME;
                    objQMProtectionWork.OTHER_TYPE2_NAME = protectionWork.OTHER_TYPE2_NAME;
                    objQMProtectionWork.OTHER_TYPE3_NAME = protectionWork.OTHER_TYPE3_NAME;
                    objQMProtectionWork.OTHER_A_WALL_LENGTH = protectionWork.OTHER_A_WALL_LENGTH;
                    objQMProtectionWork.OTHER_B_WALL_LENGTH = protectionWork.OTHER_B_WALL_LENGTH;
                    objQMProtectionWork.OTHER_C_WALL_LENGTH = protectionWork.OTHER_C_WALL_LENGTH;
                    objQMProtectionWork.TOT_LENGTH = protectionWork.TOT_LENGTH;
                    objQMProtectionWork.IS_STONE_MEASONRY_ACCEPTABLE = protectionWork.IS_STONE_MEASONRY_ACCEPTABLE == null ? "-" : protectionWork.IS_STONE_MEASONRY_ACCEPTABLE.Trim();
                    objQMProtectionWork.IS_BOND_STONE_PROVIDED = protectionWork.IS_BOND_STONE_PROVIDED == null ? "-" : protectionWork.IS_BOND_STONE_PROVIDED.Trim();
                    objQMProtectionWork.ITEM_GRADING_15 = protectionWork.ITEM_GRADING_15 == null ? "-" : protectionWork.ITEM_GRADING_15.Trim();
                    objQMProtectionWork.IMPROVE_SUGGESTIONS = protectionWork.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.QMProtectionWork = objQMProtectionWork;

                }

                if (protectionWorkQOMlist != null)
                {
                    List<QM_PROTECTION_WORKS_QOM_DETAILS> ProtectionWorkQOMList = new List<QM_PROTECTION_WORKS_QOM_DETAILS>();
                    foreach (var item in protectionWorkQOMlist)
                    {
                        ProtectionWorkQOMList.Add(new QM_PROTECTION_WORKS_QOM_DETAILS
                        {
                            LOCATION_RD = item.LOCATION_RD,
                            STRUCTURE_TYPE = item.STRUCTURE_TYPE,
                            PROTECTION_TYPE = item.PROTECTION_TYPE,
                            GENERAL_QOM = item.GENERAL_QOM == null ? "" : item.GENERAL_QOM.Trim().Equals("Y") ? "Yes" : "No",
                            AVG_WIDTH_ASPER_DPR = item.AVG_WIDTH_ASPER_DPR,
                            AVG_HEIGHT_ASPER_DPR = item.AVG_HEIGHT_ASPER_DPR,
                            AVG_WIDTH_ASPER_REC = item.AVG_WIDTH_ASPER_REC,
                            AVG_HEIGHT_ASPER_REC = item.AVG_HEIGHT_ASPER_REC,
                            IS_COMPR_SOM = item.IS_COMPR_SOM == null ? "" : item.IS_COMPR_SOM.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.ProtectionWorkQOMList = ProtectionWorkQOMList;
                }

                if (PTWorkmanshiplist != null)
                {
                    List<QM_PROTECTION_WORKS_WORKMANSHIP_DETAILS> ProtectionWorkWorkmanshipList = new List<QM_PROTECTION_WORKS_WORKMANSHIP_DETAILS>();
                    foreach (var item in PTWorkmanshiplist)
                    {
                        ProtectionWorkWorkmanshipList.Add(new QM_PROTECTION_WORKS_WORKMANSHIP_DETAILS
                        {
                            LOCATION_RD = item.LOCATION_RD,
                            WORKMANSHIP_RS = item.WORKMANSHIP_RS,
                            IS_SURFACE_HONEYCOMBING_FREE = item.IS_SURFACE_HONEYCOMBING_FREE == null ? "" : item.IS_SURFACE_HONEYCOMBING_FREE.Trim().Equals("Y") ? "Yes" : "No",
                            IS_WEEP_HOLES_PROVIDED = item.IS_WEEP_HOLES_PROVIDED == null ? "" : item.IS_WEEP_HOLES_PROVIDED.Trim().Equals("Y") ? "Yes" : "No",
                            WEEP_HOLES_SPACING_ASPER_DRAWING = item.WEEP_HOLES_SPACING_ASPER_DRAWING,
                            WEEP_HOLES_SPACING_ACTUAL = item.WEEP_HOLES_SPACING_ACTUAL,
                        });
                    }
                    objQM_ViewModel.ProtectionWorkWorkmanshipList = ProtectionWorkWorkmanshipList;
                }

                if (crashBarrierRoadSafety != null)
                {
                    QM_CRASH_BARRIERS_ROAD_SAFETY objQmCrashBarriersRoadsafety = new QM_CRASH_BARRIERS_ROAD_SAFETY();

                    objQmCrashBarriersRoadsafety.IS_DPR_PROVISION = crashBarrierRoadSafety.IS_DPR_PROVISION == null ? "-" : crashBarrierRoadSafety.IS_DPR_PROVISION.Trim();
                    objQmCrashBarriersRoadsafety.TOT_LENGTH_ASPER_DPR = crashBarrierRoadSafety.TOT_LENGTH_ASPER_DPR;
                    objQmCrashBarriersRoadsafety.TOT_LENGTH_ERECTED = crashBarrierRoadSafety.TOT_LENGTH_ERECTED;
                    objQmCrashBarriersRoadsafety.TOT_SIGNBOARDS_ASPER_DPR = crashBarrierRoadSafety.TOT_SIGNBOARDS_ASPER_DPR;
                    objQmCrashBarriersRoadsafety.TOT_SIGNBOARDS_ERECTED = crashBarrierRoadSafety.TOT_SIGNBOARDS_ERECTED;
                    objQmCrashBarriersRoadsafety.ITEM_GRADING_16 = crashBarrierRoadSafety.ITEM_GRADING_16 == null ? "-" : crashBarrierRoadSafety.ITEM_GRADING_16.Trim();
                    objQmCrashBarriersRoadsafety.IMPROVE_SUGGESTIONS = crashBarrierRoadSafety.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.CrashBarriersRoadSafetyModel = objQmCrashBarriersRoadsafety;
                }

                if (crashBarrierOBSlist != null)
                {
                    List<QM_CRASH_BARRIERS_OBSERVATION_DETAILS> CrashBarriersOBSList = new List<QM_CRASH_BARRIERS_OBSERVATION_DETAILS>();

                    foreach (var item in crashBarrierOBSlist)
                    {
                        CrashBarriersOBSList.Add(new QM_CRASH_BARRIERS_OBSERVATION_DETAILS
                        {
                            LOCATION_RD = item.LOCATION_RD,
                            CRASH_BARRIERS_TYPE = item.CRASH_BARRIERS_TYPE,
                            GRADING_SAFETY_MEAS = item.GRADING_SAFETY_MEAS,
                            IS_SIGNBOARDS_FIXED = item.IS_SIGNBOARDS_FIXED == null ? "" : item.IS_SIGNBOARDS_FIXED.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.CrashBarriersOBSList = CrashBarriersOBSList;
                }

                if (sideCatchDrainModel != null)
                {
                    QM_SIDE_AND_CATCH_DRAINS_EARTHEN objSideCatchDrainModel = new QM_SIDE_AND_CATCH_DRAINS_EARTHEN();
                    objSideCatchDrainModel.IS_DPR_PROVISION = sideCatchDrainModel.IS_DPR_PROVISION == null ? "-" : sideCatchDrainModel.IS_DPR_PROVISION.Trim();
                    objSideCatchDrainModel.IS_LONG_SLOPE_ADEQUATE = sideCatchDrainModel.IS_LONG_SLOPE_ADEQUATE == null ? "-" : sideCatchDrainModel.IS_LONG_SLOPE_ADEQUATE.Trim();
                    objSideCatchDrainModel.ITEM_GRADING_17 = sideCatchDrainModel.ITEM_GRADING_17 == null ? "-" : sideCatchDrainModel.ITEM_GRADING_17.Trim();
                    objSideCatchDrainModel.IMPROVE_SUGGESTIONS = sideCatchDrainModel.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.SideCatchDrainModel = objSideCatchDrainModel;
                }

                if (sideCatchDrainlist != null)
                {
                    List<QM_SIDE_AND_CATCH_WT_DRAINS_DETAILS> ListSideCatchDrain = new List<QM_SIDE_AND_CATCH_WT_DRAINS_DETAILS>();

                    foreach (var item in sideCatchDrainlist)
                    {
                        ListSideCatchDrain.Add(new QM_SIDE_AND_CATCH_WT_DRAINS_DETAILS
                        {

                            LOCATION_RD_FROM = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO = item.LOCATION_RD_TO,
                            LOCATION_RD = item.LOCATION_RD,
                            IS_GEN_QUAL_ACCEPTABLE = item.IS_GEN_QUAL_ACCEPTABLE == null ? "" : item.IS_GEN_QUAL_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                            IS_SIDE_DRAINS_INTEGRATED = item.IS_SIDE_DRAINS_INTEGRATED == null ? "" : item.IS_SIDE_DRAINS_INTEGRATED.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.SideCatchDrainList = ListSideCatchDrain;
                }

                if (ccsrPavements != null)
                {
                    QM_CC_SR_PVAEMENTS objCCSR_PavementsModel = new QM_CC_SR_PVAEMENTS();

                    objCCSR_PavementsModel.ITEM_EXEC_STATUS = ccsrPavements.ITEM_EXEC_STATUS == null ? "-" : ccsrPavements.ITEM_EXEC_STATUS.Trim();
                    objCCSR_PavementsModel.CCP_TYPE = ccsrPavements.CCP_TYPE == null ? "-" : ccsrPavements.CCP_TYPE.Trim();
                    objCCSR_PavementsModel.CONCRETE_GRADE_ASPER_DPR = ccsrPavements.CONCRETE_GRADE_ASPER_DPR == null ? "-" : ccsrPavements.CONCRETE_GRADE_ASPER_DPR.Trim();
                    objCCSR_PavementsModel.CC_SR_PROPOSED_LENGTH = ccsrPavements.CC_SR_PROPOSED_LENGTH;
                    objCCSR_PavementsModel.CC_SR_EXECUTED_LENGTH = ccsrPavements.CC_SR_EXECUTED_LENGTH;
                    objCCSR_PavementsModel.IS_CC_CORE_STRENGTH_ACCEPTABLE = ccsrPavements.IS_CC_CORE_STRENGTH_ACCEPTABLE == null ? "-" : ccsrPavements.IS_CC_CORE_STRENGTH_ACCEPTABLE.Trim();
                    objCCSR_PavementsModel.IS_EXPANS_CONCTRUCT_PROVIDED = ccsrPavements.IS_EXPANS_CONCTRUCT_PROVIDED == null ? "-" : ccsrPavements.IS_EXPANS_CONCTRUCT_PROVIDED.Trim();
                    objCCSR_PavementsModel.IS_CUTS_JOINTS_ACCEPTABLE = ccsrPavements.IS_CUTS_JOINTS_ACCEPTABLE == null ? "-" : ccsrPavements.IS_CUTS_JOINTS_ACCEPTABLE.Trim();
                    objCCSR_PavementsModel.IS_JOINTS_FILLED = ccsrPavements.IS_JOINTS_FILLED == null ? "-" : ccsrPavements.IS_JOINTS_FILLED.Trim();
                    objCCSR_PavementsModel.IS_SURFACE_TEXTURE_ACCEPTABLE = ccsrPavements.IS_SURFACE_TEXTURE_ACCEPTABLE == null ? "-" : ccsrPavements.IS_SURFACE_TEXTURE_ACCEPTABLE.Trim();
                    objCCSR_PavementsModel.IS_EDGES_FREE = ccsrPavements.IS_EDGES_FREE == null ? "-" : ccsrPavements.IS_EDGES_FREE.Trim();
                    objCCSR_PavementsModel.IS_CAMBER_PROVIDED = ccsrPavements.IS_CAMBER_PROVIDED == null ? "-" : ccsrPavements.IS_CAMBER_PROVIDED.Trim();
                    objCCSR_PavementsModel.IS_CC_PAVEMENT_EXIST = ccsrPavements.IS_CC_PAVEMENT_EXIST == null ? "-" : ccsrPavements.IS_CC_PAVEMENT_EXIST.Trim();
                    objCCSR_PavementsModel.ITEM_GRADING_18 = ccsrPavements.ITEM_GRADING_18 == null ? "-" : ccsrPavements.ITEM_GRADING_18.Trim();
                    objCCSR_PavementsModel.IMPROVE_SUGGESTIONS = ccsrPavements.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.CCSR_PavementsModel = objCCSR_PavementsModel;
                }

                if (ccsrPavementslist != null)
                {
                    List<QM_CC_AND_SR_PAVEMENTS_OBS_DETAILS> ListCCSR_PavementsOBS = new List<QM_CC_AND_SR_PAVEMENTS_OBS_DETAILS>();
                    foreach (var item in ccsrPavementslist)
                    {
                        ListCCSR_PavementsOBS.Add(new QM_CC_AND_SR_PAVEMENTS_OBS_DETAILS
                        {

                            REF_RD_FROM = item.REF_RD_FROM,
                            REF_RD_TO = item.REF_RD_TO,
                            LOCATION_RD = item.LOCATION_RD,
                            GRADING_QOM = item.GRADING_QOM,
                            CONCRETE_STRENGTH_ASPER_QCR1 = item.CONCRETE_STRENGTH_ASPER_QCR1,
                            GRADING_QOW = item.GRADING_QOW,
                            THICKNESS_ASPER_DPR = item.THICKNESS_ASPER_DPR,
                            THICKNESS_MEAS_QM = item.THICKNESS_MEAS_QM,
                            IS_THICKNESS_ACCEPTABLE = item.IS_THICKNESS_ACCEPTABLE == null ? "" : item.IS_THICKNESS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQM_ViewModel.CCSR_PavementsOBS_List = ListCCSR_PavementsOBS;
                }

                if (ccPuccaDrains != null)
                {
                    QM_CC_PUCCA_DRAINS objCC_PuccaDrains = new QM_CC_PUCCA_DRAINS();

                    objCC_PuccaDrains.IS_DPR_PROVISION = ccPuccaDrains.IS_DPR_PROVISION == null ? "-" : ccPuccaDrains.IS_DPR_PROVISION.Trim();
                    objCC_PuccaDrains.SHAPE_ASPER_DPR = ccPuccaDrains.SHAPE_ASPER_DPR == null ? "-" : ccPuccaDrains.SHAPE_ASPER_DPR.Trim();
                    objCC_PuccaDrains.LENGTH_ASPER_DPR = ccPuccaDrains.LENGTH_ASPER_DPR;
                    objCC_PuccaDrains.ITEM_EXEC_STATUS = ccPuccaDrains.ITEM_EXEC_STATUS == null ? "-" : ccPuccaDrains.ITEM_EXEC_STATUS.Trim();
                    objCC_PuccaDrains.CONCRETE_PROP_GRADE = ccPuccaDrains.CONCRETE_PROP_GRADE == null ? "-" : ccPuccaDrains.CONCRETE_PROP_GRADE.Trim();
                    objCC_PuccaDrains.IS_CC_DRAIN_JUSTIFIED = ccPuccaDrains.IS_CC_DRAIN_JUSTIFIED == null ? "-" : ccPuccaDrains.IS_CC_DRAIN_JUSTIFIED.Trim();
                    objCC_PuccaDrains.IS_SIDE_DRAIN_CONSTRUCTED = ccPuccaDrains.IS_SIDE_DRAIN_CONSTRUCTED == null ? "-" : ccPuccaDrains.IS_SIDE_DRAIN_CONSTRUCTED.Trim();
                    objCC_PuccaDrains.IS_PAVE_PERFORM_AFFECTED = ccPuccaDrains.IS_PAVE_PERFORM_AFFECTED == null ? "-" : ccPuccaDrains.IS_PAVE_PERFORM_AFFECTED.Trim();
                    objCC_PuccaDrains.IS_SURFACE_TEXTURE_ACCEPTABLE = ccPuccaDrains.IS_SURFACE_TEXTURE_ACCEPTABLE == null ? "-" : ccPuccaDrains.IS_SURFACE_TEXTURE_ACCEPTABLE.Trim();
                    objCC_PuccaDrains.IS_DRAIN_SURFACE_HONEYCOMBING_FREE = ccPuccaDrains.IS_DRAIN_SURFACE_HONEYCOMBING_FREE == null ? "-" : ccPuccaDrains.IS_DRAIN_SURFACE_HONEYCOMBING_FREE.Trim();
                    objCC_PuccaDrains.IS_LONG_GRADIENT_SUFFICIENT = ccPuccaDrains.IS_LONG_GRADIENT_SUFFICIENT == null ? "-" : ccPuccaDrains.IS_LONG_GRADIENT_SUFFICIENT.Trim();
                    objCC_PuccaDrains.IS_DRAIN_TERMINATE = ccPuccaDrains.IS_DRAIN_TERMINATE == null ? "-" : ccPuccaDrains.IS_DRAIN_TERMINATE.Trim();
                    objCC_PuccaDrains.IS_SLOPE_EXIST = ccPuccaDrains.IS_SLOPE_EXIST == null ? "-" : ccPuccaDrains.IS_SLOPE_EXIST.Trim();
                    objCC_PuccaDrains.IS_DRAINS_SERVE_SATISFIED = ccPuccaDrains.IS_DRAINS_SERVE_SATISFIED == null ? "-" : ccPuccaDrains.IS_DRAINS_SERVE_SATISFIED.Trim();
                    objCC_PuccaDrains.ITEM_GRADING_19 = ccPuccaDrains.ITEM_GRADING_19 == null ? "-" : ccPuccaDrains.ITEM_GRADING_19.Trim();
                    objCC_PuccaDrains.IMPROVE_SUGGESTIONS = ccPuccaDrains.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.CC_PuccaDrains = objCC_PuccaDrains;
                }

                if (ccPuccaDrainlist != null)
                {
                    List<QM_CC_PUCCA_DRAINS_OBS_DETAILS> ListCC_PuccaDrain_OBS = new List<QM_CC_PUCCA_DRAINS_OBS_DETAILS>();
                    foreach (var item in ccPuccaDrainlist)
                    {
                        ListCC_PuccaDrain_OBS.Add(new QM_CC_PUCCA_DRAINS_OBS_DETAILS
                        {
                            LOCATION_RD_FROM = item.LOCATION_RD_FROM,
                            LOCATION_RD_TO = item.LOCATION_RD_TO,
                            LOCATION_RD = item.LOCATION_RD,
                            CS_SIZE_B_ASPER_DPR = item.CS_SIZE_B_ASPER_DPR,
                            CS_SIZE_D_ASPER_DPR = item.CS_SIZE_D_ASPER_DPR,
                            CS_SIZE_B_MEAS = item.CS_SIZE_B_MEAS,
                            CS_SIZE_D_MEAS = item.CS_SIZE_D_MEAS,
                            IS_SIZE_DRAINS_ACCEPTABLE = item.IS_SIZE_DRAINS_ACCEPTABLE == null ? "" : item.IS_SIZE_DRAINS_ACCEPTABLE.Trim().Equals("Y") ? "Yes" : "No",
                            SOC_ASPER_QCR1 = item.SOC_ASPER_QCR1,
                            GRADING_GEN_QOM = item.GRADING_GEN_QOM,
                        });
                    }
                    objQM_ViewModel.CC_PuccaDrain_OBS_List = ListCC_PuccaDrain_OBS;

                }

                if (furnitureMarkings != null)
                {
                    QM_ROAD_FURNITURE_MARKINGS objFurnitureMarkingModel = new QM_ROAD_FURNITURE_MARKINGS();

                    objFurnitureMarkingModel.IS_MAIN_INFO_BOARD_FIXED = furnitureMarkings.IS_MAIN_INFO_BOARD_FIXED == null ? "-" : furnitureMarkings.IS_MAIN_INFO_BOARD_FIXED.Trim();
                    objFurnitureMarkingModel.IS_CITIZEN_INFO_BOARD_FIXED = furnitureMarkings.IS_CITIZEN_INFO_BOARD_FIXED == null ? "-" : furnitureMarkings.IS_CITIZEN_INFO_BOARD_FIXED.Trim();
                    objFurnitureMarkingModel.IS_MAINTANANCE_BOARD_FIXED = furnitureMarkings.IS_MAINTANANCE_BOARD_FIXED == null ? "-" : furnitureMarkings.IS_MAINTANANCE_BOARD_FIXED.Trim();
                    objFurnitureMarkingModel.IS_BOARD_INFO_IN_LOCAL_LANG = furnitureMarkings.IS_BOARD_INFO_IN_LOCAL_LANG == null ? "-" : furnitureMarkings.IS_BOARD_INFO_IN_LOCAL_LANG.Trim();
                    objFurnitureMarkingModel.ITEM_GRADING_20 = furnitureMarkings.ITEM_GRADING_20 == null ? "-" : furnitureMarkings.ITEM_GRADING_20.Trim();
                    objFurnitureMarkingModel.IMPROVE_SUGGESTIONS = furnitureMarkings.IMPROVE_SUGGESTIONS;

                    objQM_ViewModel.FurnitureMarkingModel = objFurnitureMarkingModel;
                }

                if (furnitureMarkingsOBSlist != null)
                {
                    List<QM_ROAD_FURNITURE_MARKINGS_OBS_DETAILS> ListFurnitureMarkingOBS = new List<QM_ROAD_FURNITURE_MARKINGS_OBS_DETAILS>();

                    foreach (var item in furnitureMarkingsOBSlist)
                    {
                        ListFurnitureMarkingOBS.Add(new QM_ROAD_FURNITURE_MARKINGS_OBS_DETAILS
                        {
                            ITEM_ID = item.ITEM_ID,
                            FURNITURE_QTY_TOBE_PROVIDED = item.FURNITURE_QTY_TOBE_PROVIDED,
                            FURNITURE_QTY_PROVIDED_AT_SIDE = item.FURNITURE_QTY_PROVIDED_AT_SIDE,
                            IS_PROVIDED_FURNITURE_ADEQUATE = item.IS_PROVIDED_FURNITURE_ADEQUATE == null ? "" : item.IS_PROVIDED_FURNITURE_ADEQUATE.Trim().Equals("Y") ? "Yes" : "No",
                            GRADING_FURNITURE_QUALITY = item.GRADING_FURNITURE_QUALITY,
                        });
                    }
                    objQM_ViewModel.FurnitureMarkingOBS_List = ListFurnitureMarkingOBS;
                }

                if (deficiencyPreparation != null)
                {
                    QM_DEFICIENCY_PREPARATION objDeficiencyPreparationModel = new QM_DEFICIENCY_PREPARATION();

                    objDeficiencyPreparationModel.IS_NO_DEFICIENCY = deficiencyPreparation.IS_NO_DEFICIENCY == null ? "-" : deficiencyPreparation.IS_NO_DEFICIENCY.Trim();
                    objDeficiencyPreparationModel.IS_BOQ_NOT_CLEAR = deficiencyPreparation.IS_BOQ_NOT_CLEAR == null ? "-" : deficiencyPreparation.IS_BOQ_NOT_CLEAR.Trim();
                    objDeficiencyPreparationModel.IS_INVERT_LEVEL_INCORRECT = deficiencyPreparation.IS_INVERT_LEVEL_INCORRECT == null ? "-" : deficiencyPreparation.IS_INVERT_LEVEL_INCORRECT.Trim();
                    objDeficiencyPreparationModel.IS_CD_STRUCT_INSUFFICE = deficiencyPreparation.IS_CD_STRUCT_INSUFFICE == null ? "-" : deficiencyPreparation.IS_CD_STRUCT_INSUFFICE.Trim();
                    objDeficiencyPreparationModel.IS_NO_SIDE_DRAIN = deficiencyPreparation.IS_NO_SIDE_DRAIN == null ? "-" : deficiencyPreparation.IS_NO_SIDE_DRAIN.Trim();
                    objDeficiencyPreparationModel.IS_DESIGN_NOT_PROVIDED = deficiencyPreparation.IS_DESIGN_NOT_PROVIDED == null ? "-" : deficiencyPreparation.IS_DESIGN_NOT_PROVIDED.Trim();
                    objDeficiencyPreparationModel.IS_JUNCTION_DESIGN_INAP = deficiencyPreparation.IS_JUNCTION_DESIGN_INAP == null ? "-" : deficiencyPreparation.IS_JUNCTION_DESIGN_INAP.Trim();
                    objDeficiencyPreparationModel.IS_GUARD_NOT_PROVIDED = deficiencyPreparation.IS_GUARD_NOT_PROVIDED == null ? "-" : deficiencyPreparation.IS_GUARD_NOT_PROVIDED.Trim();
                    objDeficiencyPreparationModel.IS_DEVIATION = deficiencyPreparation.IS_DEVIATION == null ? "-" : deficiencyPreparation.IS_DEVIATION.Trim();
                    objDeficiencyPreparationModel.IS_EARTHWORK_NOT_BAL = deficiencyPreparation.IS_EARTHWORK_NOT_BAL == null ? "-" : deficiencyPreparation.IS_EARTHWORK_NOT_BAL.Trim();
                    objDeficiencyPreparationModel.IS_PAVMENT_NOT_ASPER = deficiencyPreparation.IS_PAVMENT_NOT_ASPER == null ? "-" : deficiencyPreparation.IS_PAVMENT_NOT_ASPER.Trim();
                    objDeficiencyPreparationModel.ANY_OTHER_COMMENT = deficiencyPreparation.ANY_OTHER_COMMENT;

                    objQM_ViewModel.DeficiencyPreparationModel = objDeficiencyPreparationModel;
                }

                if (compltedInprogressAsperProg != null)
                {
                    QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG objWorkInProgress_AsPerProgModel = new QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG();

                    objWorkInProgress_AsPerProgModel.WORK_STATUS = compltedInprogressAsperProg.WORK_STATUS == null ? "-" : compltedInprogressAsperProg.WORK_STATUS.Trim();
                    objWorkInProgress_AsPerProgModel.C_IS_COMPLETED_WITH_DELAY = compltedInprogressAsperProg.C_IS_COMPLETED_WITH_DELAY == null ? "-" : compltedInprogressAsperProg.C_IS_COMPLETED_WITH_DELAY.Trim();
                    objWorkInProgress_AsPerProgModel.C_PERIOD_OF_DELAY = compltedInprogressAsperProg.C_PERIOD_OF_DELAY;
                    objWorkInProgress_AsPerProgModel.C_AMOUNT_STATUS = compltedInprogressAsperProg.C_AMOUNT_STATUS == null ? "-" : compltedInprogressAsperProg.C_AMOUNT_STATUS.Trim();
                    objWorkInProgress_AsPerProgModel.C_AMOUNT = compltedInprogressAsperProg.C_AMOUNT;
                    objWorkInProgress_AsPerProgModel.C_COMMENT = compltedInprogressAsperProg.C_COMMENT;

                    objWorkInProgress_AsPerProgModel.P_IS_AS_PER_SCHEDULE = compltedInprogressAsperProg.P_IS_AS_PER_SCHEDULE == null ? "-" : compltedInprogressAsperProg.P_IS_AS_PER_SCHEDULE.Trim();
                    objWorkInProgress_AsPerProgModel.P_EXT_MONTHS = compltedInprogressAsperProg.P_EXT_MONTHS;
                    objWorkInProgress_AsPerProgModel.P_IS_AMOUNT_REFUNDED = compltedInprogressAsperProg.P_IS_AMOUNT_REFUNDED == null ? "-" : compltedInprogressAsperProg.P_IS_AMOUNT_REFUNDED.Trim();
                    objWorkInProgress_AsPerProgModel.P_AMOUNT = compltedInprogressAsperProg.P_AMOUNT;
                    objWorkInProgress_AsPerProgModel.P_PANELTY_AMOUNT = compltedInprogressAsperProg.P_PANELTY_AMOUNT;
                    objWorkInProgress_AsPerProgModel.P_COMMENT = compltedInprogressAsperProg.P_COMMENT;

                    objQM_ViewModel.WorkInProgress_AsPerProgModel = objWorkInProgress_AsPerProgModel;
                }

                if (compltedInprogressAsperCost != null)
                {

                    QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST objWorkInProgress_AsPerCostModel = new QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST();

                    objWorkInProgress_AsPerCostModel.WORK_STATUS = compltedInprogressAsperCost.WORK_STATUS == null ? "-" : compltedInprogressAsperCost.WORK_STATUS.Trim();
                    objWorkInProgress_AsPerCostModel.SANCTION_COST = compltedInprogressAsperCost.SANCTION_COST;
                    objWorkInProgress_AsPerCostModel.COMPLETION_COST = compltedInprogressAsperCost.COMPLETION_COST;
                    objWorkInProgress_AsPerCostModel.REASON_FOR_EXTRA = compltedInprogressAsperCost.REASON_FOR_EXTRA;
                    objWorkInProgress_AsPerCostModel.IS_REVISED_DPR_PREPARED = compltedInprogressAsperCost.IS_REVISED_DPR_PREPARED == null ? "-" : compltedInprogressAsperCost.IS_REVISED_DPR_PREPARED.Trim();
                    objWorkInProgress_AsPerCostModel.IS_CHANGED_SCOPEOFWORK = compltedInprogressAsperCost.IS_CHANGED_SCOPEOFWORK == null ? "-" : compltedInprogressAsperCost.IS_CHANGED_SCOPEOFWORK.Trim();
                    objWorkInProgress_AsPerCostModel.IS_VARIATION_IN_QTY = compltedInprogressAsperCost.IS_VARIATION_IN_QTY == null ? "-" : compltedInprogressAsperCost.IS_VARIATION_IN_QTY.Trim();
                    objWorkInProgress_AsPerCostModel.IS_COST_APPROVED = compltedInprogressAsperCost.IS_COST_APPROVED == null ? "-" : compltedInprogressAsperCost.IS_COST_APPROVED.Trim();
                    objWorkInProgress_AsPerCostModel.OTHER_DESCRIBTION = compltedInprogressAsperCost.OTHER_DESCRIBTION;
                    objWorkInProgress_AsPerCostModel.IS_OTHER = compltedInprogressAsperCost.IS_OTHER == null ? "-" : compltedInprogressAsperCost.IS_OTHER.Trim();

                    objQM_ViewModel.WorkInProgress_AsPerCostModel = objWorkInProgress_AsPerCostModel;

                }

                if (actionByPIUlist != null)
                {
                    List<QM_ACTION_TAKEN_PIU> ListActionTakenByPIU = new List<QM_ACTION_TAKEN_PIU>();

                    foreach (var item in actionByPIUlist)
                    {
                        ListActionTakenByPIU.Add(new QM_ACTION_TAKEN_PIU
                        {
                            PREV_QM_DESIG = item.PREV_QM_DESIG,
                            PREV_QM_OBSERVATION = item.PREV_QM_OBSERVATION,
                            ACTION_TAKEN_PIU = item.ACTION_TAKEN_PIU,
                            OBSERVATION_ON_PIU_ACTION = item.OBSERVATION_ON_PIU_ACTION,
                        });
                    }
                    objQM_ViewModel.ActionTakenByPIU_List = ListActionTakenByPIU;
                }

                if (diffOBS != null)
                {

                    QM_DIFFEENCE_IN_OBSERVATION objQMDiffObservationsModel = new QM_DIFFEENCE_IN_OBSERVATION();
                    objQMDiffObservationsModel.IS_DIFFERENCE_FOUND = diffOBS.IS_DIFFERENCE_FOUND == null ? "-" : diffOBS.IS_DIFFERENCE_FOUND.Trim();
                    objQMDiffObservationsModel.COMMENT_ON_DIFFERENCE = diffOBS.COMMENT_ON_DIFFERENCE;
                    objQMDiffObservationsModel.OTHER_OBSERVATIONS = diffOBS.OTHER_OBSERVATIONS;

                    objQM_ViewModel.QMDiffObservationsModel = objQMDiffObservationsModel;
                }


                if (qualityGrading != null)
                {
                    QM_QUALITY_GRADING objQualityGradingModel = new QM_QUALITY_GRADING();

                    objQualityGradingModel.I2_QUALITY_ARRANGEMENTS = qualityGrading.I2_QUALITY_ARRANGEMENTS;
                    objQualityGradingModel.I2_ITEM_GRADING = qualityGrading.I2_ITEM_GRADING;
                    objQualityGradingModel.I3_MANE_QC_REGISTERS = qualityGrading.I3_MANE_QC_REGISTERS;
                    objQualityGradingModel.I3_VERIFICATION_OF_RESULTS = qualityGrading.I3_VERIFICATION_OF_RESULTS;
                    objQualityGradingModel.I3_ITEM_GRADING = qualityGrading.I3_ITEM_GRADING;
                    objQualityGradingModel.I4_ROADWAY_WIDTH = qualityGrading.I4_ROADWAY_WIDTH;
                    objQualityGradingModel.I4_CARRIAGE_WAY_WIDTH = qualityGrading.I4_CARRIAGE_WAY_WIDTH;
                    objQualityGradingModel.I4_CAMBER = qualityGrading.I4_CAMBER;
                    objQualityGradingModel.I4_SUPER_ELEVATION = qualityGrading.I4_SUPER_ELEVATION;
                    objQualityGradingModel.I4_EXTRA_WIDENING = qualityGrading.I4_EXTRA_WIDENING;
                    objQualityGradingModel.I4_LG_FOR_HILLY = qualityGrading.I4_LG_FOR_HILLY;
                    objQualityGradingModel.I4_ITEM_GRADING = qualityGrading.I4_ITEM_GRADING;
                    objQualityGradingModel.I5_ASSESS_NEW_TECH = qualityGrading.I5_ASSESS_NEW_TECH;
                    objQualityGradingModel.I5_QOM_EMBANKMENT = qualityGrading.I5_QOM_EMBANKMENT;
                    objQualityGradingModel.I5_COMPACTION = qualityGrading.I5_COMPACTION;
                    objQualityGradingModel.I5_SIDE_SLOPES = qualityGrading.I5_SIDE_SLOPES;
                    objQualityGradingModel.I5_PROFILE = qualityGrading.I5_PROFILE;
                    objQualityGradingModel.I5_ADEQUACY = qualityGrading.I5_ADEQUACY;
                    objQualityGradingModel.I5_ITEM_GRADING = qualityGrading.I5_ITEM_GRADING;
                    objQualityGradingModel.I6_ASSESS_NEW_TECH = qualityGrading.I6_ASSESS_NEW_TECH;
                    objQualityGradingModel.I6_GRAIN_SIZE = qualityGrading.I6_GRAIN_SIZE;
                    objQualityGradingModel.I6_PLASTISITY = qualityGrading.I6_PLASTISITY;
                    objQualityGradingModel.I6_COMPACTION = qualityGrading.I6_COMPACTION;
                    objQualityGradingModel.I6_THICKNESS = qualityGrading.I6_THICKNESS;
                    objQualityGradingModel.I6_ITEM_GRADING = qualityGrading.I6_ITEM_GRADING;
                    objQualityGradingModel.I7_ASSESS_NEW_TECH = qualityGrading.I7_ASSESS_NEW_TECH;
                    objQualityGradingModel.I7_GRAIN_SIZE = qualityGrading.I7_GRAIN_SIZE;
                    objQualityGradingModel.I7_PLASTISITY = qualityGrading.I7_PLASTISITY;
                    objQualityGradingModel.I7_COMPACTION = qualityGrading.I7_COMPACTION;
                    objQualityGradingModel.I7_THICKNESS = qualityGrading.I7_THICKNESS;
                    objQualityGradingModel.I7_ITEM_GRADING = qualityGrading.I7_ITEM_GRADING;
                    objQualityGradingModel.I8_ASSESS_NEW_TECH = qualityGrading.I8_ASSESS_NEW_TECH;
                    objQualityGradingModel.I8_GRAIN_SIZE = qualityGrading.I8_GRAIN_SIZE;
                    objQualityGradingModel.I8_PLASTISITY = qualityGrading.I8_PLASTISITY;
                    objQualityGradingModel.I8_COMPACTION = qualityGrading.I8_COMPACTION;
                    objQualityGradingModel.I8_THICKNESS = qualityGrading.I8_THICKNESS;
                    objQualityGradingModel.I8_ITEM_GRADING = qualityGrading.I8_ITEM_GRADING;
                    objQualityGradingModel.I9_ASSESS_NEW_TECH = qualityGrading.I9_ASSESS_NEW_TECH;
                    objQualityGradingModel.I9_GRAIN_SIZE = qualityGrading.I9_GRAIN_SIZE;
                    objQualityGradingModel.I9_PLASTISITY = qualityGrading.I9_PLASTISITY;
                    objQualityGradingModel.I9_COMPACTION = qualityGrading.I9_COMPACTION;
                    objQualityGradingModel.I9_THICKNESS = qualityGrading.I9_THICKNESS;
                    objQualityGradingModel.I9_ITEM_GRADING = qualityGrading.I9_ITEM_GRADING;
                    objQualityGradingModel.I10_ASSESS_NEW_TECH = qualityGrading.I10_ASSESS_NEW_TECH;
                    objQualityGradingModel.I10_GRADING_COURSE_AGG = qualityGrading.I10_GRADING_COURSE_AGG;
                    objQualityGradingModel.I10_BITUMEN_CONTENT = qualityGrading.I10_BITUMEN_CONTENT;
                    objQualityGradingModel.I10_THICKNESS_LAYER = qualityGrading.I10_THICKNESS_LAYER;
                    objQualityGradingModel.I10_ITEM_GRADING = qualityGrading.I10_ITEM_GRADING;
                    objQualityGradingModel.I11_ASSESS_NEW_TECH = qualityGrading.I11_ASSESS_NEW_TECH;
                    objQualityGradingModel.I11_GRADATION_AGG = qualityGrading.I11_GRADATION_AGG;
                    objQualityGradingModel.I11_LAYING_TEMP = qualityGrading.I11_LAYING_TEMP;
                    objQualityGradingModel.I11_BITUMEN_CONTENT = qualityGrading.I11_BITUMEN_CONTENT;
                    objQualityGradingModel.I11_THICKNESS_LAYER = qualityGrading.I11_THICKNESS_LAYER;
                    objQualityGradingModel.I11_SURFACE_EVENNESS = qualityGrading.I11_SURFACE_EVENNESS;
                    objQualityGradingModel.I11_ITEM_GRADING = qualityGrading.I11_ITEM_GRADING;
                    objQualityGradingModel.I12_ASSESS_NEW_TECH = qualityGrading.I12_ASSESS_NEW_TECH;
                    objQualityGradingModel.I12_QOM_SHOULDERS = qualityGrading.I12_QOM_SHOULDERS;
                    objQualityGradingModel.I12_DOC = qualityGrading.I12_DOC;
                    objQualityGradingModel.I12_CAMBER = qualityGrading.I12_CAMBER;
                    objQualityGradingModel.I12_ITEM_GRADING = qualityGrading.I12_ITEM_GRADING;
                    objQualityGradingModel.I13_CUSHION = qualityGrading.I13_CUSHION;
                    objQualityGradingModel.I13_QOW = qualityGrading.I13_QOW;
                    objQualityGradingModel.I13_ITEM_GRADING = qualityGrading.I13_ITEM_GRADING;
                    objQualityGradingModel.I14_THICKNESS_OF_SLAB = qualityGrading.I14_THICKNESS_OF_SLAB;
                    objQualityGradingModel.I14_QOM = qualityGrading.I14_QOM;
                    objQualityGradingModel.I14_ITEM_GRADING = qualityGrading.I14_ITEM_GRADING;
                    objQualityGradingModel.I15_QOM = qualityGrading.I15_QOM;
                    objQualityGradingModel.I15_W_RETAINING_STRUCT = qualityGrading.I15_W_RETAINING_STRUCT;
                    objQualityGradingModel.I15_ITEM_GRADING = qualityGrading.I15_ITEM_GRADING;
                    objQualityGradingModel.I16_OVERALL_QOS = qualityGrading.I16_OVERALL_QOS;
                    objQualityGradingModel.I16_FIXING_SIGN_BOARDS = qualityGrading.I16_FIXING_SIGN_BOARDS;
                    objQualityGradingModel.I16_ITEM_GRADING = qualityGrading.I16_ITEM_GRADING;
                    objQualityGradingModel.I17_QOS_DRAINS = qualityGrading.I17_QOS_DRAINS;
                    objQualityGradingModel.I17_ITEM_GRADING = qualityGrading.I17_ITEM_GRADING;
                    objQualityGradingModel.I18_QOM_CONCREATE = qualityGrading.I18_QOM_CONCREATE;
                    objQualityGradingModel.I18_STRENGTH_OF_CC = qualityGrading.I18_STRENGTH_OF_CC;
                    objQualityGradingModel.I18_QOW = qualityGrading.I18_QOW;
                    objQualityGradingModel.I18_THICKNESS_OF_LAYER = qualityGrading.I18_THICKNESS_OF_LAYER;
                    objQualityGradingModel.I18_ITEM_GRADING = qualityGrading.I18_ITEM_GRADING;
                    objQualityGradingModel.I19_THICKNESS_CONCREATE_LAYER = qualityGrading.I19_THICKNESS_CONCREATE_LAYER;
                    objQualityGradingModel.I19_STRENGTH_OF_CONCREATE = qualityGrading.I19_STRENGTH_OF_CONCREATE;
                    objQualityGradingModel.I19_GENERAL_QOM = qualityGrading.I19_GENERAL_QOM;
                    objQualityGradingModel.I19_ITEM_GRADING = qualityGrading.I19_ITEM_GRADING;
                    objQualityGradingModel.I20_CITIZEN_INFO_BOARD = qualityGrading.I20_CITIZEN_INFO_BOARD;
                    objQualityGradingModel.I20_LOGO_BOARDS = qualityGrading.I20_LOGO_BOARDS;
                    objQualityGradingModel.I20_LOCAL_LANG = qualityGrading.I20_LOCAL_LANG;
                    objQualityGradingModel.I20_ITEM_GRADING = qualityGrading.I20_ITEM_GRADING;

                    objQM_ViewModel.QualityGradingModel = objQualityGradingModel;

                }

                if (overallGrading != null)
                {
                    QM_OVERALL_GRADING objOverallGradingModel = new QM_OVERALL_GRADING();
                    objOverallGradingModel.QC_ARRANGEMENTS = overallGrading.QC_ARRANGEMENTS;
                    objOverallGradingModel.ATTN_TO_QTY = overallGrading.ATTN_TO_QTY;
                    objOverallGradingModel.GEOMMETRICS = overallGrading.GEOMMETRICS;
                    objOverallGradingModel.EW_SG_IN_EMBANKMENT = overallGrading.EW_SG_IN_EMBANKMENT;
                    objOverallGradingModel.GRANULAR_SUBBASE = overallGrading.GRANULAR_SUBBASE;
                    objOverallGradingModel.BASE_COURSE_WBMII = overallGrading.BASE_COURSE_WBMII;
                    objOverallGradingModel.BASE_COURSE_WBMIII = overallGrading.BASE_COURSE_WBMIII;
                    objOverallGradingModel.BASE_COURSE_WMM = overallGrading.BASE_COURSE_WMM;
                    objOverallGradingModel.BITUMINOUS_BASE_COURSE = overallGrading.BITUMINOUS_BASE_COURSE;
                    objOverallGradingModel.BITUMINOUS_SURF_COURSE = overallGrading.BITUMINOUS_SURF_COURSE;
                    objOverallGradingModel.SLOULDERS = overallGrading.SLOULDERS;
                    objOverallGradingModel.CD_WORK_PIPE = overallGrading.CD_WORK_PIPE;
                    objOverallGradingModel.CD_WORK_SLAB = overallGrading.CD_WORK_SLAB;
                    objOverallGradingModel.PROTECTION_WORK = overallGrading.PROTECTION_WORK;
                    objOverallGradingModel.CRASH_BARRIERS = overallGrading.CRASH_BARRIERS;
                    objOverallGradingModel.SIDE_DRAINS = overallGrading.SIDE_DRAINS;
                    objOverallGradingModel.CEMENT_CONCRETE_SRP = overallGrading.CEMENT_CONCRETE_SRP;
                    objOverallGradingModel.CEMENT_CONCRETE_PUCCA_DRAINS = overallGrading.CEMENT_CONCRETE_PUCCA_DRAINS;
                    objOverallGradingModel.ROAD_FURNITURE = overallGrading.ROAD_FURNITURE;
                    objOverallGradingModel.OVERALL_GRADING = overallGrading.OVERALL_GRADING;
                    objOverallGradingModel.IS_WORK_EXCELLENT = overallGrading.IS_WORK_EXCELLENT == null ? "-" : overallGrading.IS_WORK_EXCELLENT.Trim();
                    objOverallGradingModel.NAME_OF_QM = overallGrading.NAME_OF_QM;
                    objOverallGradingModel.UPLOADING_DATE = overallGrading.UPLOADING_DATE == null ? "" : Convert.ToDateTime(overallGrading.UPLOADING_DATE).ToShortDateString();

                    objQM_ViewModel.OverallGradingModel = objOverallGradingModel;
                }

                #endregion

                return objQM_ViewModel;
            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.ViewQMPdfSavedData");
                return null;
            }
            finally
            {
                dbContext.Dispose();
            }
        }



        #endregion

        #region  piu bridge

        public PIU_BRIDGE_GET_PREFILLRD_DETAILS getPIUBridgePrefilledList(Int32 roadCode, int eformId) //add eformId change on 08-07-2022
        {
            PIU_BRIDGE_GET_PREFILLRD_DETAILS model = new PIU_BRIDGE_GET_PREFILLRD_DETAILS();

            try
            {
                var imsDetailsList = (from con in dbContext.EFORM_PREFILLED_DETAILS
                                      join ef in dbContext.EFORM_MASTER on con.EFORM_ID equals ef.EFORM_ID
                                      join ims in dbContext.IMS_SANCTIONED_PROJECTS on ef.IMS_PR_ROAD_CODE equals ims.IMS_PR_ROAD_CODE


                                      where
                                    con.IMS_PR_ROAD_CODE == roadCode && ef.IS_VALID == "Y" && con.EFORM_ID == eformId
                                      select new
                                      {
                                          con.EFORM_ID,
                                          con.STATE,
                                          con.DISTRICT,
                                          con.BLOCK,
                                          con.PACKAGE_ID,
                                          ims.IMS_ROAD_NAME,
                                          con.SANCTION_LENGTH,
                                          con.IMS_PR_ROAD_CODE,
                                          con.AWARDED_COST,
                                          ims.IMS_IS_STAGED,
                                          ims.IMS_STAGE_PHASE,
                                          con.PHYSICAL_WORK_STATUS,
                                          con.QM_NAME,
                                          con.EXECUTED_LENGTH,
                                          con.EXPENDITURE_DONE,
                                          con.COMPLETION_COST,
                                          con.CONNECTIVITY_TYPE,
                                          con.TERRAIN_TYPE,
                                          con.DATE_OF_AWARD_WORK,
                                          con.DATE_OF_START_WORK,
                                          con.STIPULATED_COMPLETION_DATE,
                                          con.ESTIMATED_COST,
                                          con.QM_TYPE
                                      }).FirstOrDefault();

                model.Eform_Id = imsDetailsList.EFORM_ID;
                model.WORK_STATUS = imsDetailsList.PHYSICAL_WORK_STATUS;
                model.QM_NAME = imsDetailsList.QM_NAME;
                model.QM_TYPE = imsDetailsList.QM_TYPE;
                model.State = imsDetailsList.STATE;
                model.District = imsDetailsList.DISTRICT;
                model.Block = imsDetailsList.BLOCK;
                model.RoadName = imsDetailsList.IMS_ROAD_NAME;
                model.PkgNumber = imsDetailsList.PACKAGE_ID;
                model.RoadName = imsDetailsList.IMS_ROAD_NAME;
                model.SancLength = Convert.ToDecimal(imsDetailsList.SANCTION_LENGTH);
                model.RoadCode = imsDetailsList.IMS_PR_ROAD_CODE;
                model.ESTIMATED_COST = Convert.ToDecimal(imsDetailsList.ESTIMATED_COST);
                model.AWARDED_COST = Convert.ToDecimal(imsDetailsList.AWARDED_COST);
                model.EXPENDITURE_DONE = Math.Round(Convert.ToDecimal(((imsDetailsList.EXPENDITURE_DONE) / 100000).ToString()), 2);
                model.AWARD_OF_WORK_DATE = imsDetailsList.DATE_OF_AWARD_WORK.ToString();
                model.START_OF_WORK_DATE = imsDetailsList.DATE_OF_START_WORK.ToString();
                model.STIPULATED_COMPLETION_DATE = imsDetailsList.STIPULATED_COMPLETION_DATE.ToString();

            }
            catch (Exception e)
            {
                ErrorLog.LogError(e, "PDFDataDal.getPIUBridgePrefilledList()");

            }
            finally
            {
                dbContext.Dispose();
            }
            return model;
        }

        public EFORM_BRIDGE_PIU_PREVIEW_MODEL PreviewBridgePIU_SavedDataDAL(int eformId)
        {

            #region Objects Value Assign

            PMGSYEntities dbContext = new PMGSYEntities();

            // Main Custom Model
            EFORM_BRIDGE_PIU_PREVIEW_MODEL objPiuBridge_PreviewModel = new EFORM_BRIDGE_PIU_PREVIEW_MODEL();

            List<EFORM_BRIDGE_MASTER_WORK_ITEM_VIEW> objPiuBridge_WORKiTEM_ViewList = new List<EFORM_BRIDGE_MASTER_WORK_ITEM_VIEW>();
            EFORM_PDF_UPLOAD_DETAIL_VIEW objPiuBridge_pdfUpload_viewModel = new EFORM_PDF_UPLOAD_DETAIL_VIEW();

            PIU_BRIDGE_GET_PREFILLRD_DETAILS objPiuBridge_Prefilled_viewModel = new PIU_BRIDGE_GET_PREFILLRD_DETAILS();
            EFORM_BRIDGE_PIU_GENERAL_INFO_VIEW objPiuBridge_General_ViewModel = new EFORM_BRIDGE_PIU_GENERAL_INFO_VIEW();
            List<EFORM_BRIDGE_PIU_PRGS_DETAILS_VIEW> objPiuBridge_Progress_ViewList = new List<EFORM_BRIDGE_PIU_PRGS_DETAILS_VIEW>();
            EFORM_BRIDGE_PIU_PARTICULARS_VIEW objPiuBridge_Particular_ViewModel = new EFORM_BRIDGE_PIU_PARTICULARS_VIEW();

            EFORM_BRIDGE_PIU_QC_DETAILS_VIEW objPiuBridge_QC_ViewModel = new EFORM_BRIDGE_PIU_QC_DETAILS_VIEW();
            List<EFORM_BRIDGE_QC_OFFICIAL_DETAILS_VIEW> objPiuBridge_QC_Off_ViewList = new List<EFORM_BRIDGE_QC_OFFICIAL_DETAILS_VIEW>();
            List<EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS_VIEW> objPiuBridge_MixDesg_ViewList = new List<EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS_VIEW>();
            List<EFORM_BRIDGE_PIU_PREVIOUS_INSP_DETAILS_VIEW> objPiuBridge_PrevInspection_ViewList = new List<EFORM_BRIDGE_PIU_PREVIOUS_INSP_DETAILS_VIEW>();

            try
            {
                #region database queries
                var pdfUploadDetails_bridge = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId && x.USER_TYPE == "P").Any() ? dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId).First() : null;
                var prefilledData_bridge = dbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == eformId).First() : null;
                var generalDetail_bridge = dbContext.EFORM_BRIDGE_PIU_GENERAL_INFO.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_PIU_GENERAL_INFO.Where(x => x.EFORM_ID == eformId).First() : null;
                var progressList_bridge = dbContext.EFORM_BRIDGE_PIU_PRGS_DETAILS.Where(x => x.EFORM_ID == eformId).ToList<PMGSY.Models.EFORM_BRIDGE_PIU_PRGS_DETAILS>();
                var particularDetail_bridge = dbContext.EFORM_BRIDGE_PIU_PARTICULARS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_PIU_PARTICULARS.Where(x => x.EFORM_ID == eformId).First() : null;
                var QcDetail_bridge = dbContext.EFORM_BRIDGE_PIU_QC_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_PIU_QC_DETAILS.Where(x => x.EFORM_ID == eformId).First() : null;
                var QcOfficalList_bridge = dbContext.EFORM_BRIDGE_QC_OFFICIAL_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QC_OFFICIAL_DETAILS.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var mixDesign_bridge = dbContext.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS.Where(x => x.EFORM_ID == eformId).ToList() : null;


                var previousInspectionDataList = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(x => x.EFORM_ID == eformId && x.INSERT_OR_UPDATE == "U").OrderBy(s => s.VISIT_DATE).ToList<EFORM_PIU_PREVIOUS_INSP_DETAILS>();
                var previousInspectionDataListinsert = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(x => x.EFORM_ID == eformId && x.INSERT_OR_UPDATE == "I").ToList<EFORM_PIU_PREVIOUS_INSP_DETAILS>();
                previousInspectionDataList.AddRange(previousInspectionDataListinsert);

                var tableHeaderslist = dbContext.EFORM_BRIDGE_MASTER_WORK_ITEM.ToList<EFORM_BRIDGE_MASTER_WORK_ITEM>();

                #region EFORM_PDF_UPLOAD_DETAIL
                if (pdfUploadDetails_bridge != null)
                {
                    objPiuBridge_pdfUpload_viewModel.TEMPLATE_VERSION = pdfUploadDetails_bridge.TEMPLATE_VERSION;

                    objPiuBridge_PreviewModel.PDF_UPLOAD_DETAIL_VIEW = objPiuBridge_pdfUpload_viewModel;
                }
                #endregion

                #region BRIDGE_PIU_PREFILLED_VIEW
                if (prefilledData_bridge != null)
                {
                    objPiuBridge_Prefilled_viewModel.Eform_Id = prefilledData_bridge.EFORM_ID;
                    objPiuBridge_Prefilled_viewModel.State = prefilledData_bridge.STATE;
                    objPiuBridge_Prefilled_viewModel.District = prefilledData_bridge.DISTRICT;
                    objPiuBridge_Prefilled_viewModel.Block = prefilledData_bridge.BLOCK;
                    objPiuBridge_Prefilled_viewModel.RoadName = prefilledData_bridge.ROAD_NAME;
                    objPiuBridge_Prefilled_viewModel.QM_NAME = prefilledData_bridge.QM_NAME;
                    objPiuBridge_Prefilled_viewModel.QM_TYPE = prefilledData_bridge.QM_TYPE.Trim();
                    objPiuBridge_Prefilled_viewModel.PkgNumber = prefilledData_bridge.PACKAGE_ID;
                    objPiuBridge_Prefilled_viewModel.WORK_STATUS = prefilledData_bridge.PHYSICAL_WORK_STATUS.Trim();
                    objPiuBridge_Prefilled_viewModel.SancLength = prefilledData_bridge.SANCTION_LENGTH;
                    objPiuBridge_Prefilled_viewModel.ESTIMATED_COST = prefilledData_bridge.ESTIMATED_COST;
                    objPiuBridge_Prefilled_viewModel.AWARDED_COST = prefilledData_bridge.AWARDED_COST;
                    objPiuBridge_Prefilled_viewModel.COMPLETION_COST = prefilledData_bridge.COMPLETION_COST;
                    objPiuBridge_Prefilled_viewModel.AWARD_OF_WORK_DATE = prefilledData_bridge.DATE_OF_AWARD_WORK.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_Prefilled_viewModel.START_OF_WORK_DATE = prefilledData_bridge.DATE_OF_START_WORK.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_Prefilled_viewModel.STIPULATED_COMPLETION_DATE = prefilledData_bridge.STIPULATED_COMPLETION_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_Prefilled_viewModel.EXPENDITURE_DONE = Math.Round(Convert.ToDecimal(((prefilledData_bridge.EXPENDITURE_DONE) / 100000).ToString()), 2);

                    objPiuBridge_PreviewModel.BRIDGE_PIU_PREFILLED_VIEW = objPiuBridge_Prefilled_viewModel;
                }
                #endregion

                #region BRIDGE_PIU_GENERAL_INFO_VIEW
                if (generalDetail_bridge != null)
                {
                    objPiuBridge_General_ViewModel.WORK_STATUS = prefilledData_bridge.PHYSICAL_WORK_STATUS.Trim();
                    objPiuBridge_General_ViewModel.INSPECTION_DATE = generalDetail_bridge.INSPECTION_DATE;
                    objPiuBridge_General_ViewModel.QM_CODE = generalDetail_bridge.QM_CODE;
                    objPiuBridge_General_ViewModel.DEVIATION_LENGTH = generalDetail_bridge.DEVIATION_LENGTH;
                    objPiuBridge_General_ViewModel.DEVIATION_REASON = generalDetail_bridge.DEVIATION_REASON;
                    objPiuBridge_General_ViewModel.TECHNICAL_SANC_COST = generalDetail_bridge.TECHNICAL_SANC_COST;
                    objPiuBridge_General_ViewModel.EXPENDITURE_DONE = generalDetail_bridge.EXPENDITURE_DONE;
                    objPiuBridge_General_ViewModel.TOTAL_EXPENDITURE = generalDetail_bridge.TOTAL_EXPENDITURE;
                    objPiuBridge_General_ViewModel.BILLS_PENDING = generalDetail_bridge.BILLS_PENDING;
                    objPiuBridge_General_ViewModel.AWARD_OF_WORK_DATE = generalDetail_bridge.AWARD_OF_WORK_DATE == null ? "" : generalDetail_bridge.AWARD_OF_WORK_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_General_ViewModel.START_OF_WORK_DATE = generalDetail_bridge.START_OF_WORK_DATE == null ? "" : generalDetail_bridge.START_OF_WORK_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_General_ViewModel.STIPULATED_COMPLETION_DATE = generalDetail_bridge.STIPULATED_COMPLETION_DATE == null ? "" : generalDetail_bridge.STIPULATED_COMPLETION_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_General_ViewModel.ACTUAL_COMPLETION_DATE = generalDetail_bridge.ACTUAL_COMPLETION_DATE == null ? "" : generalDetail_bridge.ACTUAL_COMPLETION_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_General_ViewModel.PIU_HEAD_NAME = generalDetail_bridge.PIU_HEAD_NAME;
                    objPiuBridge_General_ViewModel.PIU_HEAD_MOBILE_NO = generalDetail_bridge.PIU_HEAD_MOBILE_NO;
                    objPiuBridge_General_ViewModel.PIU_HEAD_EMAIL = generalDetail_bridge.PIU_HEAD_EMAIL;
                    objPiuBridge_General_ViewModel.PIU_ADDR = generalDetail_bridge.PIU_ADDR;
                    objPiuBridge_General_ViewModel.PIU_SIGN_DATE = (generalDetail_bridge.PIU_SIGN_DATE == null) ? "" : (Convert.ToDateTime(generalDetail_bridge.PIU_SIGN_DATE)).ToString().Split(' ')[0].Replace('-', '/');


                    objPiuBridge_PreviewModel.BRIDGE_PIU_GENERAL_INFO_VIEW = objPiuBridge_General_ViewModel;

                }

                #endregion

                #region BRIDGE_PIU_PRGS_DETAILS_VIEW
                foreach (var php in progressList_bridge)
                {
                    objPiuBridge_Progress_ViewList.Add(new EFORM_BRIDGE_PIU_PRGS_DETAILS_VIEW
                    {
                        ITEM_ID = php.ITEM_ID,
                        IEM_UNIT = php.IEM_UNIT,
                        DPR_QUANTITY = php.DPR_QUANTITY == null ? 0 : Convert.ToDecimal(php.DPR_QUANTITY),
                        EXECUTED_QUANTITY = php.EXECUTED_QUANTITY == null ? 0 : Convert.ToDecimal(php.EXECUTED_QUANTITY),
                        COMPLETED_PERC = php.COMPLETED_PERC == null ? 0 : Convert.ToDecimal(php.COMPLETED_PERC),
                        DUE_START_DATE = (Convert.ToDateTime(php.DUE_START_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                        DUE_END_DATE = (Convert.ToDateTime(php.DUE_END_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                        ACTUAL_START_DATE = php.ACTUAL_START_DATE == null ? "" : (Convert.ToDateTime(php.ACTUAL_START_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                        ACTUAL_END_DATE = php.ACTUAL_END_DATE == null ? "" : (Convert.ToDateTime(php.ACTUAL_END_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                        DELAY_MONTH = php.DELAY_MONTH == null ? "" : Convert.ToDecimal(php.DELAY_MONTH).ToString()
                    }); ;
                }

                objPiuBridge_PreviewModel.BRIDGE_PIU_PRGS_DETAILS_VIEW = objPiuBridge_Progress_ViewList;
                #endregion

                #region BRIDGE_PIU_PARTICULAR_VIEW

                if (particularDetail_bridge != null)
                {
                    objPiuBridge_Particular_ViewModel.BRIDGE_TYPE_HFL = particularDetail_bridge.BRIDGE_TYPE_HFL == null ? "NA" : particularDetail_bridge.BRIDGE_TYPE_HFL.Trim();
                    objPiuBridge_Particular_ViewModel.BRIDGE_TYPE_MATERIAL = particularDetail_bridge.BRIDGE_TYPE_MATERIAL == null ? "NA" : particularDetail_bridge.BRIDGE_TYPE_MATERIAL.Trim();
                    objPiuBridge_Particular_ViewModel.FOUNDATION_TYPE = particularDetail_bridge.FOUNDATION_TYPE == null ? "NA" : particularDetail_bridge.FOUNDATION_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.BRIDGE_LENGTH = particularDetail_bridge.BRIDGE_LENGTH;
                    objPiuBridge_Particular_ViewModel.SPANS_NO = particularDetail_bridge.SPANS_NO;
                    objPiuBridge_Particular_ViewModel.SPANS_LEN = particularDetail_bridge.SPANS_LEN;
                    objPiuBridge_Particular_ViewModel.BRIDGE_WIDTH = particularDetail_bridge.BRIDGE_WIDTH;
                    objPiuBridge_Particular_ViewModel.IS_FOOTPATH_PROVIDED = particularDetail_bridge.IS_FOOTPATH_PROVIDED == null ? "NA" : particularDetail_bridge.IS_FOOTPATH_PROVIDED.Trim();
                    objPiuBridge_Particular_ViewModel.FOOTPATH_WIDTH = particularDetail_bridge.FOOTPATH_WIDTH;
                    objPiuBridge_Particular_ViewModel.FORMATION_LEVEL = particularDetail_bridge.FORMATION_LEVEL;
                    objPiuBridge_Particular_ViewModel.HIGHEST_FLOOD_LEVEL = particularDetail_bridge.HIGHEST_FLOOD_LEVEL;
                    objPiuBridge_Particular_ViewModel.ORDINARY_FLOOD_LEVEL = particularDetail_bridge.ORDINARY_FLOOD_LEVEL;
                    objPiuBridge_Particular_ViewModel.BED_LEVEL = particularDetail_bridge.BED_LEVEL;
                    objPiuBridge_Particular_ViewModel.CATCHMENT_AREA = particularDetail_bridge.CATCHMENT_AREA;
                    objPiuBridge_Particular_ViewModel.LINEAR_WATERWAY_HFL = particularDetail_bridge.LINEAR_WATERWAY_HFL;
                    objPiuBridge_Particular_ViewModel.DESIGN_DISCHARGE = particularDetail_bridge.DESIGN_DISCHARGE;
                    objPiuBridge_Particular_ViewModel.DESIGN_VELOCITY = particularDetail_bridge.DESIGN_VELOCITY;
                    objPiuBridge_Particular_ViewModel.PIERS_P1 = particularDetail_bridge.PIERS_P1;
                    objPiuBridge_Particular_ViewModel.PIERS_P2 = particularDetail_bridge.PIERS_P2;
                    objPiuBridge_Particular_ViewModel.PIERS_P3 = particularDetail_bridge.PIERS_P3;
                    objPiuBridge_Particular_ViewModel.PIERS_P4 = particularDetail_bridge.PIERS_P4;
                    objPiuBridge_Particular_ViewModel.PIERS_P5 = particularDetail_bridge.PIERS_P5;
                    objPiuBridge_Particular_ViewModel.PIERS_P6 = particularDetail_bridge.PIERS_P6;
                    objPiuBridge_Particular_ViewModel.PIERS_P7 = particularDetail_bridge.PIERS_P7;
                    objPiuBridge_Particular_ViewModel.PIERS_P8 = particularDetail_bridge.PIERS_P8;
                    objPiuBridge_Particular_ViewModel.PIERS_P9 = particularDetail_bridge.PIERS_P9;
                    objPiuBridge_Particular_ViewModel.ABUTMENTS_A1 = particularDetail_bridge.ABUTMENTS_A1;
                    objPiuBridge_Particular_ViewModel.ABUTMENTS_A2 = particularDetail_bridge.ABUTMENTS_A2;
                    objPiuBridge_Particular_ViewModel.RETURNS_R1 = particularDetail_bridge.RETURNS_R1;
                    objPiuBridge_Particular_ViewModel.RETURNS_R2 = particularDetail_bridge.RETURNS_R2;
                    objPiuBridge_Particular_ViewModel.FOUNDATION_STRATA = particularDetail_bridge.FOUNDATION_STRATA;
                    objPiuBridge_Particular_ViewModel.SAFE_BEARING_CAP = particularDetail_bridge.SAFE_BEARING_CAP;
                    objPiuBridge_Particular_ViewModel.IS_RIVER_PROT_PROVIDED = particularDetail_bridge.IS_RIVER_PROT_PROVIDED == null ? "NA" : particularDetail_bridge.IS_RIVER_PROT_PROVIDED.Trim();
                    objPiuBridge_Particular_ViewModel.RIVER_PROT_PROVIDED = particularDetail_bridge.RIVER_PROT_PROVIDED == null ? "NA" : particularDetail_bridge.RIVER_PROT_PROVIDED.Trim();
                    objPiuBridge_Particular_ViewModel.SUBSTRUCTURE_PIERS = particularDetail_bridge.SUBSTRUCTURE_PIERS == null ? "NA" : particularDetail_bridge.SUBSTRUCTURE_PIERS.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_SUBSTRUCTURE_PIERS = particularDetail_bridge.OTHER_SUBSTRUCTURE_PIERS;
                    objPiuBridge_Particular_ViewModel.SUBSTRUCTURE_ABUTMENTS = particularDetail_bridge.SUBSTRUCTURE_ABUTMENTS == null ? "NA" : particularDetail_bridge.SUBSTRUCTURE_ABUTMENTS.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_SUBSTRUCTURE_ABUTMENTS = particularDetail_bridge.OTHER_SUBSTRUCTURE_ABUTMENTS;
                    objPiuBridge_Particular_ViewModel.SUBSTRUCTURE_RETURNS = particularDetail_bridge.SUBSTRUCTURE_RETURNS == null ? "NA" : particularDetail_bridge.SUBSTRUCTURE_RETURNS.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_SUBSTRUCTURE_RETURNS = particularDetail_bridge.OTHER_SUBSTRUCTURE_RETURNS;
                    objPiuBridge_Particular_ViewModel.BEARING_TYPE = particularDetail_bridge.BEARING_TYPE == null ? "NA" : particularDetail_bridge.BEARING_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_BEARING_TYPE = particularDetail_bridge.OTHER_BEARING_TYPE;
                    objPiuBridge_Particular_ViewModel.IS_BEARING_REPORT_AVBL = particularDetail_bridge.IS_BEARING_REPORT_AVBL == null ? "NA" : particularDetail_bridge.IS_BEARING_REPORT_AVBL.Trim();
                    objPiuBridge_Particular_ViewModel.SUPERSTRUCTURE_MAIN_TYPE = particularDetail_bridge.SUPERSTRUCTURE_MAIN_TYPE == null ? "NA" : particularDetail_bridge.SUPERSTRUCTURE_MAIN_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.RCC_SUB_TYPE = particularDetail_bridge.RCC_SUB_TYPE == null ? "NA" : particularDetail_bridge.RCC_SUB_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_RCC_SUB_TYPE = particularDetail_bridge.OTHER_RCC_SUB_TYPE;
                    objPiuBridge_Particular_ViewModel.STEEL_SUB_TYPE = particularDetail_bridge.STEEL_SUB_TYPE == null ? "NA" : particularDetail_bridge.STEEL_SUB_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_STEEL_SUB_TYPE = particularDetail_bridge.OTHER_STEEL_SUB_TYPE;
                    objPiuBridge_Particular_ViewModel.EXPANSION_JNT_TYPE = particularDetail_bridge.EXPANSION_JNT_TYPE == null ? "NA" : particularDetail_bridge.EXPANSION_JNT_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.OHTER_EXPANSION_JNT_TYPE = particularDetail_bridge.OHTER_EXPANSION_JNT_TYPE;
                    objPiuBridge_Particular_ViewModel.WEARING_COAT_TYPE = particularDetail_bridge.WEARING_COAT_TYPE == null ? "NA" : particularDetail_bridge.WEARING_COAT_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.DRAINAGES_SPOUTS_TYPE = particularDetail_bridge.DRAINAGES_SPOUTS_TYPE == null ? "NA" : particularDetail_bridge.DRAINAGES_SPOUTS_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.DESIGN_LOADING = particularDetail_bridge.DESIGN_LOADING == null ? "NA" : particularDetail_bridge.DESIGN_LOADING.Trim();
                    objPiuBridge_Particular_ViewModel.OTHER_DESIGN_LOADING = particularDetail_bridge.OTHER_DESIGN_LOADING;
                    objPiuBridge_Particular_ViewModel.APPROCH_TYPE = particularDetail_bridge.APPROCH_TYPE == null ? "NA" : particularDetail_bridge.APPROCH_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.PITCHING_TYPE = particularDetail_bridge.PITCHING_TYPE == null ? "NA" : particularDetail_bridge.PITCHING_TYPE.Trim();
                    objPiuBridge_Particular_ViewModel.IS_BENCHMARKS_ESTB = particularDetail_bridge.IS_BENCHMARKS_ESTB == null ? "NA" : particularDetail_bridge.IS_BENCHMARKS_ESTB.Trim();
                    objPiuBridge_Particular_ViewModel.BENCHMARK_LOC1 = particularDetail_bridge.BENCHMARK_LOC1;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_LOC2 = particularDetail_bridge.BENCHMARK_LOC2;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_LOC3 = particularDetail_bridge.BENCHMARK_LOC3;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_LOC4 = particularDetail_bridge.BENCHMARK_LOC4;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_RL1 = particularDetail_bridge.BENCHMARK_RL1;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_RL2 = particularDetail_bridge.BENCHMARK_RL2;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_RL3 = particularDetail_bridge.BENCHMARK_RL3;
                    objPiuBridge_Particular_ViewModel.BENCHMARK_RL4 = particularDetail_bridge.BENCHMARK_RL4;
                    objPiuBridge_Particular_ViewModel.RAILING_TYPE = particularDetail_bridge.RAILING_TYPE;
                    objPiuBridge_Particular_ViewModel.OTHER_RAILING_TYPE = particularDetail_bridge.OTHER_RAILING_TYPE == null ? "NA" : particularDetail_bridge.OTHER_RAILING_TYPE.Trim();

                    objPiuBridge_PreviewModel.BRIDGE_PIU_PARTICULAR_VIEW = objPiuBridge_Particular_ViewModel;
                }
                #endregion

                #region BRIDGE_PIU_QC_DETAIL_VIEW
                if (QcDetail_bridge != null)
                {
                    objPiuBridge_QC_ViewModel.LAB_LOCATION = QcDetail_bridge.LAB_LOCATION;
                    objPiuBridge_QC_ViewModel.PHOTO_UPLOAD_DATE = (QcDetail_bridge.PHOTO_UPLOAD_DATE == null) ? "" : (Convert.ToDateTime(QcDetail_bridge.PHOTO_UPLOAD_DATE)).ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_QC_ViewModel.ESTB_DELAY_REASON = QcDetail_bridge.ESTB_DELAY_REASON;
                    objPiuBridge_QC_ViewModel.LAB_EQUIP_AVBL = QcDetail_bridge.LAB_EQUIP_AVBL;
                    objPiuBridge_QC_ViewModel.EQUIP_WORKING = QcDetail_bridge.EQUIP_WORKING;
                    objPiuBridge_QC_ViewModel.EQUIP_NOT_WORKING = QcDetail_bridge.EQUIP_NOT_WORKING;
                    objPiuBridge_QC_ViewModel.LAB_EQUIP_NOT_AVBL = QcDetail_bridge.LAB_EQUIP_NOT_AVBL;
                    objPiuBridge_QC_ViewModel.REASON_LAB_EQUIP_NOT_AVBL = QcDetail_bridge.REASON_LAB_EQUIP_NOT_AVBL;
                    objPiuBridge_QC_ViewModel.CALIBRATION_DETAILS = QcDetail_bridge.CALIBRATION_DETAILS;
                    objPiuBridge_QC_ViewModel.DOCUMENT_FOR_QM = QcDetail_bridge.DOCUMENT_FOR_QM;

                    objPiuBridge_PreviewModel.BRIDGE_PIU_QC_DETAIL_VIEW = objPiuBridge_QC_ViewModel;
                }
                #endregion

                #region BRIDGE_QC_OFFICIAL_DETAILS_VIEW
                foreach (var qcd in QcOfficalList_bridge)
                {
                    objPiuBridge_QC_Off_ViewList.Add(new EFORM_BRIDGE_QC_OFFICIAL_DETAILS_VIEW
                    {
                        OFFICIAL_TYPE = (qcd.OFFICIAL_TYPE == null) ? "" : qcd.OFFICIAL_TYPE,
                        OFFICIAL_NAME = (qcd.OFFICIAL_NAME == null) ? "" : qcd.OFFICIAL_NAME,
                        PAN = (qcd.PAN == null) ? "" : qcd.PAN,
                        IDENTITY_NUMBER = (qcd.IDENTITY_NUMBER == null) ? "" : qcd.IDENTITY_NUMBER,
                        MOBILE_NO = (qcd.MOBILE_NO == null) ? "" : qcd.MOBILE_NO,
                        EMAIL_ID = (qcd.EMAIL_ID == null) ? "" : qcd.EMAIL_ID,
                        FROM_DATE = (qcd.FROM_DATE == null) ? "" : (Convert.ToDateTime(qcd.FROM_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                        TO_DATE = (qcd.TO_DATE == null) ? "" : (Convert.ToDateTime(qcd.TO_DATE)).ToString().Split(' ')[0].Replace('-', '/')
                    });
                }
                objPiuBridge_PreviewModel.BRIDGE_QC_OFFICIAL_DETAILS_VIEW = objPiuBridge_QC_Off_ViewList;
                #endregion

                #region BRIDGE_PIU_MIX_DESIGN_DETAIL_VIEW

                foreach (var mxd in mixDesign_bridge)
                {
                    objPiuBridge_MixDesg_ViewList.Add(new EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS_VIEW
                    {
                        ITEM_ID = mxd.ITEM_ID,
                        DESIGN_STRENGTH = (mxd.DESIGN_STRENGTH == null) ? "" : mxd.DESIGN_STRENGTH,
                        DESIGN_LAB = (mxd.DESIGN_LAB == null) ? "" : mxd.DESIGN_LAB,
                        DESIGN_APP_AUTH = mxd.DESIGN_APP_AUTH
                    });
                }
                objPiuBridge_PreviewModel.BRIDGE_PIU_MIX_DESIGN_DETAIL_VIEW = objPiuBridge_MixDesg_ViewList;

                #endregion

                #region BRIDGE_PIU_PREVIOUS_INSP_DETAIL_VIEW
                foreach (var pid in previousInspectionDataList)
                {
                    objPiuBridge_PrevInspection_ViewList.Add(new EFORM_BRIDGE_PIU_PREVIOUS_INSP_DETAILS_VIEW
                    {

                        VISIT_DATE = (pid.VISIT_DATE == null) ? "" : (Convert.ToDateTime(pid.VISIT_DATE)).ToString().Split(' ')[0].Replace('-', '/'),
                        VISITOR_NAME_DESG = (pid.VISITOR_NAME_DESG == null) ? "" : pid.VISITOR_NAME_DESG,
                        ROAD_FROM = pid.ROAD_FROM,
                        ROAD_TO = pid.ROAD_TO,
                        INSP_LEVEL = (pid.INSP_LEVEL == null) ? "" : pid.INSP_LEVEL,
                        OBSERVATIONS = (pid.OBSERVATIONS == null) ? "" : pid.OBSERVATIONS,
                        ACTION = (pid.ACTION == null) ? "" : pid.ACTION
                    });
                }
                objPiuBridge_PreviewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL_VIEW = objPiuBridge_PrevInspection_ViewList;

                #endregion

                foreach (var thd in tableHeaderslist)
                {
                    objPiuBridge_WORKiTEM_ViewList.Add(new EFORM_BRIDGE_MASTER_WORK_ITEM_VIEW
                    {
                        ITEM_ID = thd.ITEM_ID,
                        ITEM_DESC = thd.ITEM_DESC,
                        ITEM_FLAG = thd.ITEM_FLAG
                    });
                }
                objPiuBridge_PreviewModel.BRIDGE_MASTER_WORK_ITEM_VIEW = objPiuBridge_WORKiTEM_ViewList;




                #endregion
            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "EFORMArea.PdfDataDAL.PreviewBridgePIU_SavedDataDAL()");
                return null;
            }
            finally
            {
                if (dbContext != null)
                    dbContext.Dispose();
            }


            #endregion



            return objPiuBridge_PreviewModel;
        }

        public List<SelectListItem> SaveBridgePIUToDb(string temp_uploaded_File, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_BRIDGE_PIU_VIEW_MODEL objViewModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, double templateVers)
        {
            PdfLoadedDocument loadedDocument = new PdfLoadedDocument(temp_uploaded_File);
            List<SelectListItem> validationList = new List<SelectListItem>();
            PMGSYEntities dbContext = new PMGSYEntities();
            //    EFORMCommonFunctions cm = new EFORMCommonFunctions();
            try
            {
                PdfLoadedForm loadedForm = loadedDocument.Form;
                loadedForm.ReadOnly = true;

                int eformId = Convert.ToInt32(eformIDFromGrid);
                int RoadCode = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == eformId).Select(m => m.IMS_PR_ROAD_CODE).FirstOrDefault();
                int admnNdCode = PMGSYSession.Current.AdminNdCode;
                int prRoadCode = RoadCode;
                int UserId = PMGSYSession.Current.UserId;
                string ipAdd = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                int detailId = eformId;
                string type = string.Empty;

                if (PMGSYSession.Current.RoleCode == 6)
                {
                    type = "N";
                }
                else if (PMGSYSession.Current.RoleCode == 7)
                {
                    type = "S";
                }
                else
                {
                    type = "P";
                }

                using (var scope = new TransactionScope())
                {

                    if (dbContext.EFORM_PDF_UPLOAD_DETAIL.Any(s => s.EFORM_ID == eformId && s.USER_TYPE == "P"))
                    {
                        validationList.Add(new SelectListItem { Text = "Pdf is already uploaded. If you want to upload again, please delete the existing file" });
                        return validationList;
                    }

                    EFORM_MASTER inspMasterModel = dbContext.EFORM_MASTER.Where(m => m.EFORM_ID == detailId).FirstOrDefault();
                    if (inspMasterModel == null)
                    {
                        validationList.Add(new SelectListItem { Text = "Error occured while uploading the file" });
                        return validationList;
                    }
                    string templateVersionValue = string.Empty;
                    try
                    {
                        PdfLoadedTextBoxField tempVersion = loadedForm.Fields["TEMPLATE_VERSION"] as PdfLoadedTextBoxField;
                        templateVersionValue = tempVersion.Text;
                    }
                    catch (Exception ex)
                    {
                        ErrorLog.LogError(ex, "PdfDatDAL.SaveBridgePIUToDb()");
                    }

                    inspMasterModel.WORK_STATUS_PER_QUALITY = workStatus;
                    if (templateVersionValue != "")
                    {
                        inspMasterModel.PART1_TEMPLATE_VERSION = templateVersionValue;
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    else
                    {
                        inspMasterModel.PART1_TEMPLATE_VERSION = "V1.0";
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    EFORM_PDF_UPLOAD_DETAIL uploadModel = new EFORM_PDF_UPLOAD_DETAIL();

                    int uploadId = dbContext.EFORM_PDF_UPLOAD_DETAIL.Any() ? (from item in dbContext.EFORM_PDF_UPLOAD_DETAIL select item.UPLOAD_ID).Max() + 1 : 1;


                    uploadModel.UPLOAD_ID = uploadId;
                    uploadModel.EFORM_ID = detailId;
                    uploadModel.PR_ROAD_CODE = prRoadCode;
                    uploadModel.USER_TYPE = "P";
                    uploadModel.UPLOAD_DATE = System.DateTime.Now;
                    uploadModel.IS_FINALISED = "N";
                    uploadModel.FILE_NAME = fname;
                    uploadModel.FILE_PATH = Uploaded_Path + "\\" + schdYear + "\\" + schdMonth;
                    if (templateVersionValue != "")
                    {
                        uploadModel.TEMPLATE_VERSION = templateVersionValue;
                    }
                    else
                    {
                        uploadModel.TEMPLATE_VERSION = "V1.0";
                    }

                    uploadModel.USERID = UserId;
                    uploadModel.IPADD = ipAdd;
                    dbContext.EFORM_PDF_UPLOAD_DETAIL.Add(uploadModel);
                    dbContext.SaveChanges();

                    var prefFetailslist = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.EFORM_ID == detailId).ToList();

                    for (int i = 0; i < prefFetailslist.Count; i++)
                    {
                        int prefId = prefFetailslist[i].PREFILLED_ID;
                        EFORM_PREFILLED_DETAILS model = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.PREFILLED_ID == prefId && s.EFORM_ID == detailId).FirstOrDefault();
                        model.PHYSICAL_WORK_STATUS = workStatus;
                        dbContext.Entry(model).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }



                    //------------- PAGE(1,2,5) General details----------------




                    int infoId = dbContext.EFORM_BRIDGE_PIU_GENERAL_INFO.Any() ? (from item in dbContext.EFORM_BRIDGE_PIU_GENERAL_INFO select item.INFO_ID).Max() + 1 : 1;

                    PMGSY.Models.EFORM_BRIDGE_PIU_GENERAL_INFO EformGeneralInfo = new PMGSY.Models.EFORM_BRIDGE_PIU_GENERAL_INFO();
                    EformGeneralInfo.INFO_ID = infoId;
                    EformGeneralInfo.EFORM_ID = detailId;
                    EformGeneralInfo.ADMIN_ND_CODE = admnNdCode;
                    EformGeneralInfo.PIU_USER_ID = UserId;
                    EformGeneralInfo.PR_ROAD_CODE = prRoadCode;
                    EformGeneralInfo.WORK_STATUS = workStatus;
                    EformGeneralInfo.DEVIATION_LENGTH = objViewModel.BRIDGE_PIU_GENERAL_INFO.DEVIATION_LENGTH;
                    EformGeneralInfo.DEVIATION_REASON = objViewModel.BRIDGE_PIU_GENERAL_INFO.DEVIATION_REASON;
                    EformGeneralInfo.TECHNICAL_SANC_COST = objViewModel.BRIDGE_PIU_GENERAL_INFO.TECHNICAL_SANC_COST;
                    EformGeneralInfo.BILLS_PENDING = objViewModel.BRIDGE_PIU_GENERAL_INFO.BILLS_PENDING;
                    EformGeneralInfo.TOTAL_EXPENDITURE = objViewModel.BRIDGE_PIU_GENERAL_INFO.TOTAL_EXPENDITURE;


                    EformGeneralInfo.AWARD_OF_WORK_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_GENERAL_INFO.AWARD_OF_WORK_DATE);
                    EformGeneralInfo.START_OF_WORK_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_GENERAL_INFO.START_OF_WORK_DATE);
                    EformGeneralInfo.STIPULATED_COMPLETION_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_GENERAL_INFO.STIPULATED_COMPLETION_DATE);
                    if (objViewModel.BRIDGE_PIU_GENERAL_INFO.ACTUAL_COMPLETION_DATE == null)
                    {
                        EformGeneralInfo.ACTUAL_COMPLETION_DATE = null;
                    }
                    else
                    {
                        EformGeneralInfo.ACTUAL_COMPLETION_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_GENERAL_INFO.ACTUAL_COMPLETION_DATE);
                    }

                    EformGeneralInfo.PIU_HEAD_NAME = objViewModel.BRIDGE_PIU_GENERAL_INFO.PIU_HEAD_NAME;
                    EformGeneralInfo.PIU_HEAD_MOBILE_NO = objViewModel.BRIDGE_PIU_GENERAL_INFO.PIU_HEAD_MOBILE_NO;
                    EformGeneralInfo.PIU_HEAD_EMAIL = objViewModel.BRIDGE_PIU_GENERAL_INFO.PIU_HEAD_EMAIL;
                    EformGeneralInfo.PIU_ADDR = objViewModel.BRIDGE_PIU_GENERAL_INFO.PIU_ADDR;
                    EformGeneralInfo.PIU_SIGN_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_GENERAL_INFO.PIU_SIGN_DATE);
                    EformGeneralInfo.IPADD = ipAdd;

                    dbContext.EFORM_BRIDGE_PIU_GENERAL_INFO.Add(EformGeneralInfo);
                    dbContext.SaveChanges();


                    if (workStatus.Equals("C"))
                    {
                        EFORM_PREFILLED_DETAILS prefData = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.EFORM_ID == detailId).FirstOrDefault();
                        prefData.COMPLETION_COST = Convert.ToDecimal(objViewModel.BRIDGE_PIU_GENERAL_INFO.COMPLETION_COST);
                        dbContext.Entry(prefData).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }




                    //----------------PAGE-3--------------

                    #region EFORM_BRIDGE_PIU_PRGS_DETAILS

                    int progId = dbContext.EFORM_BRIDGE_PIU_PRGS_DETAILS.Any() ? (from item in dbContext.EFORM_BRIDGE_PIU_PRGS_DETAILS select item.PROGRESS_ID).Max() + 1 : 1;


                    for (int i = 0; i < objViewModel.BRIDGE_PIU_PRGS_DETAILS.Count; i++)
                    {
                        PMGSY.Models.EFORM_BRIDGE_PIU_PRGS_DETAILS phyProObj = new PMGSY.Models.EFORM_BRIDGE_PIU_PRGS_DETAILS();
                        //  int t = i + 1;


                        phyProObj.PROGRESS_ID = progId;
                        phyProObj.EFORM_ID = detailId;
                        phyProObj.ADMIN_ND_CODE = admnNdCode;
                        phyProObj.USER_ID = UserId;
                        phyProObj.PR_ROAD_CODE = prRoadCode;
                        phyProObj.ITEM_ID = objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].ITEM_ID;
                        phyProObj.IEM_UNIT = objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].IEM_UNIT;
                        phyProObj.DPR_QUANTITY = objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].DPR_QUANTITY;
                        phyProObj.EXECUTED_QUANTITY = objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].EXECUTED_QUANTITY;
                        phyProObj.COMPLETED_PERC = objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].COMPLETED_PERC;
                        phyProObj.DUE_START_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].DUE_START_DATE);
                        phyProObj.DUE_END_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].DUE_END_DATE);
                        if (objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].ACTUAL_START_DATE == null)
                        {
                            phyProObj.ACTUAL_START_DATE = null;
                        }
                        else
                        {
                            phyProObj.ACTUAL_START_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].ACTUAL_START_DATE);
                        }
                        if (objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].ACTUAL_END_DATE == null)
                        {
                            phyProObj.ACTUAL_END_DATE = null;
                        }
                        else
                        {
                            phyProObj.ACTUAL_END_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].ACTUAL_END_DATE);
                        }
                        if (objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].DELAY_MONTH == null)
                        {
                            phyProObj.DELAY_MONTH = null;
                        }
                        else
                        {
                            phyProObj.DELAY_MONTH = Convert.ToDouble(objViewModel.BRIDGE_PIU_PRGS_DETAILS[i].DELAY_MONTH);
                        }

                        phyProObj.IPADD = ipAdd;
                        dbContext.EFORM_BRIDGE_PIU_PRGS_DETAILS.Add(phyProObj);
                        dbContext.SaveChanges();
                        progId++;
                    }


                    #endregion

                    #region EFORM_BRIDGE_PIU_PARTICULARS
                    int partId = dbContext.EFORM_BRIDGE_PIU_PARTICULARS.Any() ? (from item in dbContext.EFORM_BRIDGE_PIU_PARTICULARS select item.PARTICULAR_ID).Max() + 1 : 1;

                    PMGSY.Models.EFORM_BRIDGE_PIU_PARTICULARS EformParticularsDetails = new PMGSY.Models.EFORM_BRIDGE_PIU_PARTICULARS();
                    EformParticularsDetails.PARTICULAR_ID = partId;
                    EformParticularsDetails.EFORM_ID = detailId;
                    EformParticularsDetails.ADMIN_ND_CODE = admnNdCode;
                    EformParticularsDetails.USER_ID = UserId;
                    EformParticularsDetails.PR_ROAD_CODE = prRoadCode;
                    EformParticularsDetails.BRIDGE_TYPE_HFL = objViewModel.BRIDGE_PIU_PARTICULAR.BRIDGE_TYPE_HFL;
                    EformParticularsDetails.BRIDGE_TYPE_MATERIAL = objViewModel.BRIDGE_PIU_PARTICULAR.BRIDGE_TYPE_MATERIAL;
                    EformParticularsDetails.FOUNDATION_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.FOUNDATION_TYPE;
                    EformParticularsDetails.BRIDGE_LENGTH = objViewModel.BRIDGE_PIU_PARTICULAR.BRIDGE_LENGTH;
                    EformParticularsDetails.SPANS_NO = objViewModel.BRIDGE_PIU_PARTICULAR.SPANS_NO;
                    EformParticularsDetails.SPANS_LEN = objViewModel.BRIDGE_PIU_PARTICULAR.SPANS_LEN;
                    EformParticularsDetails.BRIDGE_WIDTH = objViewModel.BRIDGE_PIU_PARTICULAR.BRIDGE_WIDTH;
                    EformParticularsDetails.IS_FOOTPATH_PROVIDED = objViewModel.BRIDGE_PIU_PARTICULAR.IS_FOOTPATH_PROVIDED;
                    EformParticularsDetails.FOOTPATH_WIDTH = objViewModel.BRIDGE_PIU_PARTICULAR.FOOTPATH_WIDTH;
                    EformParticularsDetails.FORMATION_LEVEL = objViewModel.BRIDGE_PIU_PARTICULAR.FORMATION_LEVEL;
                    EformParticularsDetails.HIGHEST_FLOOD_LEVEL = objViewModel.BRIDGE_PIU_PARTICULAR.HIGHEST_FLOOD_LEVEL;
                    EformParticularsDetails.ORDINARY_FLOOD_LEVEL = objViewModel.BRIDGE_PIU_PARTICULAR.ORDINARY_FLOOD_LEVEL;
                    EformParticularsDetails.BED_LEVEL = objViewModel.BRIDGE_PIU_PARTICULAR.BED_LEVEL;
                    EformParticularsDetails.CATCHMENT_AREA = objViewModel.BRIDGE_PIU_PARTICULAR.CATCHMENT_AREA;
                    EformParticularsDetails.LINEAR_WATERWAY_HFL = objViewModel.BRIDGE_PIU_PARTICULAR.LINEAR_WATERWAY_HFL;
                    EformParticularsDetails.DESIGN_DISCHARGE = objViewModel.BRIDGE_PIU_PARTICULAR.DESIGN_DISCHARGE;
                    EformParticularsDetails.DESIGN_VELOCITY = objViewModel.BRIDGE_PIU_PARTICULAR.DESIGN_VELOCITY;
                    EformParticularsDetails.PIERS_P1 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P1;
                    EformParticularsDetails.PIERS_P2 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P2;
                    EformParticularsDetails.PIERS_P3 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P3;
                    EformParticularsDetails.PIERS_P4 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P4;
                    EformParticularsDetails.PIERS_P5 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P5;
                    EformParticularsDetails.PIERS_P6 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P6;
                    EformParticularsDetails.PIERS_P7 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P7;
                    EformParticularsDetails.PIERS_P8 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P8;
                    EformParticularsDetails.PIERS_P9 = objViewModel.BRIDGE_PIU_PARTICULAR.PIERS_P9;
                    EformParticularsDetails.ABUTMENTS_A1 = objViewModel.BRIDGE_PIU_PARTICULAR.ABUTMENTS_A1;
                    EformParticularsDetails.ABUTMENTS_A2 = objViewModel.BRIDGE_PIU_PARTICULAR.ABUTMENTS_A2;
                    EformParticularsDetails.RETURNS_R1 = objViewModel.BRIDGE_PIU_PARTICULAR.RETURNS_R1;
                    EformParticularsDetails.RETURNS_R2 = objViewModel.BRIDGE_PIU_PARTICULAR.RETURNS_R2;
                    EformParticularsDetails.FOUNDATION_STRATA = objViewModel.BRIDGE_PIU_PARTICULAR.FOUNDATION_STRATA;
                    EformParticularsDetails.SAFE_BEARING_CAP = objViewModel.BRIDGE_PIU_PARTICULAR.SAFE_BEARING_CAP;
                    EformParticularsDetails.IS_RIVER_PROT_PROVIDED = objViewModel.BRIDGE_PIU_PARTICULAR.IS_RIVER_PROT_PROVIDED;
                    EformParticularsDetails.RIVER_PROT_PROVIDED = objViewModel.BRIDGE_PIU_PARTICULAR.RIVER_PROT_PROVIDED;
                    EformParticularsDetails.SUBSTRUCTURE_PIERS = objViewModel.BRIDGE_PIU_PARTICULAR.SUBSTRUCTURE_PIERS;
                    EformParticularsDetails.OTHER_SUBSTRUCTURE_PIERS = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_SUBSTRUCTURE_PIERS;
                    EformParticularsDetails.SUBSTRUCTURE_ABUTMENTS = objViewModel.BRIDGE_PIU_PARTICULAR.SUBSTRUCTURE_ABUTMENTS;
                    EformParticularsDetails.OTHER_SUBSTRUCTURE_ABUTMENTS = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_SUBSTRUCTURE_ABUTMENTS;
                    EformParticularsDetails.SUBSTRUCTURE_RETURNS = objViewModel.BRIDGE_PIU_PARTICULAR.SUBSTRUCTURE_RETURNS;
                    EformParticularsDetails.OTHER_SUBSTRUCTURE_RETURNS = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_SUBSTRUCTURE_RETURNS;
                    EformParticularsDetails.BEARING_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.BEARING_TYPE;
                    EformParticularsDetails.OTHER_BEARING_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_BEARING_TYPE;
                    EformParticularsDetails.IS_BEARING_REPORT_AVBL = objViewModel.BRIDGE_PIU_PARTICULAR.IS_BEARING_REPORT_AVBL;
                    EformParticularsDetails.SUPERSTRUCTURE_MAIN_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.SUPERSTRUCTURE_MAIN_TYPE;
                    EformParticularsDetails.RCC_SUB_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.RCC_SUB_TYPE;
                    EformParticularsDetails.OTHER_RCC_SUB_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_RCC_SUB_TYPE;
                    EformParticularsDetails.STEEL_SUB_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.STEEL_SUB_TYPE;
                    EformParticularsDetails.OTHER_STEEL_SUB_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_STEEL_SUB_TYPE;
                    EformParticularsDetails.EXPANSION_JNT_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.EXPANSION_JNT_TYPE;
                    EformParticularsDetails.OHTER_EXPANSION_JNT_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.OHTER_EXPANSION_JNT_TYPE;
                    EformParticularsDetails.WEARING_COAT_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.WEARING_COAT_TYPE;
                    EformParticularsDetails.DRAINAGES_SPOUTS_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.DRAINAGES_SPOUTS_TYPE;
                    EformParticularsDetails.DESIGN_LOADING = objViewModel.BRIDGE_PIU_PARTICULAR.DESIGN_LOADING;
                    EformParticularsDetails.OTHER_DESIGN_LOADING = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_DESIGN_LOADING;
                    EformParticularsDetails.APPROCH_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.APPROCH_TYPE;
                    EformParticularsDetails.PITCHING_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.PITCHING_TYPE;
                    EformParticularsDetails.IS_BENCHMARKS_ESTB = objViewModel.BRIDGE_PIU_PARTICULAR.IS_BENCHMARKS_ESTB;
                    EformParticularsDetails.BENCHMARK_LOC1 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_LOC1;
                    EformParticularsDetails.BENCHMARK_LOC2 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_LOC2;
                    EformParticularsDetails.BENCHMARK_LOC3 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_LOC3;
                    EformParticularsDetails.BENCHMARK_LOC4 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_LOC4;
                    EformParticularsDetails.BENCHMARK_RL1 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_RL1;
                    EformParticularsDetails.BENCHMARK_RL2 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_RL2;
                    EformParticularsDetails.BENCHMARK_RL3 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_RL3;
                    EformParticularsDetails.BENCHMARK_RL4 = objViewModel.BRIDGE_PIU_PARTICULAR.BENCHMARK_RL4;
                    EformParticularsDetails.RAILING_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.RAILING_TYPE;
                    EformParticularsDetails.OTHER_RAILING_TYPE = objViewModel.BRIDGE_PIU_PARTICULAR.OTHER_RAILING_TYPE;
                    EformParticularsDetails.IPADD = ipAdd;
                    dbContext.EFORM_BRIDGE_PIU_PARTICULARS.Add(EformParticularsDetails);
                    dbContext.SaveChanges();
                    #endregion

                    #region EFORM_BRIDGE_PIU_QC_DETAILS

                    int qcId = dbContext.EFORM_BRIDGE_PIU_QC_DETAILS.Any() ? (from item in dbContext.EFORM_BRIDGE_PIU_QC_DETAILS select item.QC_ID).Max() + 1 : 1;


                    PMGSY.Models.EFORM_BRIDGE_PIU_QC_DETAILS EformQcDetails = new PMGSY.Models.EFORM_BRIDGE_PIU_QC_DETAILS();
                    EformQcDetails.QC_ID = qcId;
                    EformQcDetails.EFORM_ID = detailId;
                    EformQcDetails.ADMIN_ND_CODE = admnNdCode;
                    EformQcDetails.USER_ID = UserId;
                    EformQcDetails.PR_ROAD_CODE = prRoadCode;
                    EformQcDetails.LAB_LOCATION = objViewModel.BRIDGE_PIU_QC_DETAIL.LAB_LOCATION;
                    if (objViewModel.BRIDGE_PIU_QC_DETAIL.PHOTO_UPLOAD_DATE == null)
                    {
                        EformQcDetails.PHOTO_UPLOAD_DATE = null;
                    }
                    else
                    {
                        EformQcDetails.PHOTO_UPLOAD_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_QC_DETAIL.PHOTO_UPLOAD_DATE);
                    }

                    EformQcDetails.ESTB_DELAY_REASON = objViewModel.BRIDGE_PIU_QC_DETAIL.ESTB_DELAY_REASON;
                    EformQcDetails.LAB_EQUIP_AVBL = objViewModel.BRIDGE_PIU_QC_DETAIL.LAB_EQUIP_AVBL;
                    EformQcDetails.EQUIP_WORKING = objViewModel.BRIDGE_PIU_QC_DETAIL.EQUIP_WORKING;
                    EformQcDetails.EQUIP_NOT_WORKING = objViewModel.BRIDGE_PIU_QC_DETAIL.EQUIP_NOT_WORKING;
                    EformQcDetails.LAB_EQUIP_NOT_AVBL = objViewModel.BRIDGE_PIU_QC_DETAIL.LAB_EQUIP_NOT_AVBL;
                    EformQcDetails.REASON_LAB_EQUIP_NOT_AVBL = objViewModel.BRIDGE_PIU_QC_DETAIL.REASON_LAB_EQUIP_NOT_AVBL;
                    EformQcDetails.DOCUMENT_FOR_QM = objViewModel.BRIDGE_PIU_QC_DETAIL.DOCUMENT_FOR_QM;
                    EformQcDetails.IPADD = ipAdd;
                    dbContext.EFORM_BRIDGE_PIU_QC_DETAILS.Add(EformQcDetails);
                    dbContext.SaveChanges();

                    #endregion

                    #region EFORM_BRIDGE_QC_OFFICIAL_DETAILS
                    int officialId = dbContext.EFORM_BRIDGE_QC_OFFICIAL_DETAILS.Any() ? (from item in dbContext.EFORM_BRIDGE_QC_OFFICIAL_DETAILS select item.OFFICIAL_ID).Max() + 1 : 1;

                    for (int i = 0; i < objViewModel.BRIDGE_QC_OFFICIAL_DETAILS.Count; i++)
                    {
                        PMGSY.Models.EFORM_BRIDGE_QC_OFFICIAL_DETAILS qcOfficialDetails = new PMGSY.Models.EFORM_BRIDGE_QC_OFFICIAL_DETAILS();
                        qcOfficialDetails.OFFICIAL_ID = officialId;
                        qcOfficialDetails.QC_ID = qcId;
                        qcOfficialDetails.EFORM_ID = detailId;
                        qcOfficialDetails.PR_ROAD_CODE = prRoadCode;
                        qcOfficialDetails.USER_ID = UserId;
                        qcOfficialDetails.OFFICIAL_TYPE = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].OFFICIAL_TYPE;
                        qcOfficialDetails.OFFICIAL_NAME = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].OFFICIAL_NAME;
                        qcOfficialDetails.IDENTITY_NUMBER = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].IDENTITY_NUMBER;
                        qcOfficialDetails.MOBILE_NO = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].MOBILE_NO;
                        qcOfficialDetails.EMAIL_ID = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].EMAIL_ID;
                        qcOfficialDetails.PAN = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].PAN;
                        qcOfficialDetails.FROM_DATE = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].FROM_DATE;
                        qcOfficialDetails.TO_DATE = objViewModel.BRIDGE_QC_OFFICIAL_DETAILS[i].TO_DATE;
                        qcOfficialDetails.IPADD = ipAdd;

                        dbContext.EFORM_BRIDGE_QC_OFFICIAL_DETAILS.Add(qcOfficialDetails);
                        dbContext.SaveChanges();
                        officialId++;
                    }
                    #endregion

                    #region EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS
                    int designId = dbContext.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS.Any() ? (from item in dbContext.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS select item.DESIGN_ID).Max() + 1 : 1;

                    for (int i = 0; i < objViewModel.BRIDGE_PIU_MIX_DESIGN_DETAIL.Count; i++)
                    {
                        PMGSY.Models.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS mixDesDetailsObj = new PMGSY.Models.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS();
                        mixDesDetailsObj.DESIGN_ID = designId;
                        mixDesDetailsObj.EFORM_ID = detailId;
                        mixDesDetailsObj.ADMIN_ND_CODE = admnNdCode;
                        mixDesDetailsObj.USER_ID = UserId;
                        mixDesDetailsObj.PR_ROAD_CODE = prRoadCode;
                        mixDesDetailsObj.ITEM_ID = objViewModel.BRIDGE_PIU_MIX_DESIGN_DETAIL[i].ITEM_ID;
                        mixDesDetailsObj.DESIGN_STRENGTH = objViewModel.BRIDGE_PIU_MIX_DESIGN_DETAIL[i].DESIGN_STRENGTH;
                        mixDesDetailsObj.DESIGN_LAB = objViewModel.BRIDGE_PIU_MIX_DESIGN_DETAIL[i].DESIGN_LAB;
                        mixDesDetailsObj.DESIGN_APP_AUTH = objViewModel.BRIDGE_PIU_MIX_DESIGN_DETAIL[i].DESIGN_APP_AUTH;
                        mixDesDetailsObj.IPADD = ipAdd;
                        dbContext.EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS.Add(mixDesDetailsObj);
                        dbContext.SaveChanges();
                        designId++;
                    }

                    #endregion

                    #region BRIDGE_PIU_PREVIOUS_INSP_DETAIL

                    for (int i = 0; i < objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL.Count && i < 8; i++)
                    {

                        if (objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].VISIT_DATE != null)
                        {
                            int tempInspId = Convert.ToInt32(objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].INSP_ID);
                            if (tempInspId != 0)
                            {
                                EFORM_PIU_PREVIOUS_INSP_DETAILS prevInspObj = new EFORM_PIU_PREVIOUS_INSP_DETAILS();
                                prevInspObj = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Where(s => s.EFORM_ID == detailId && s.INSP_ID == tempInspId).Single();
                                prevInspObj.INSP_LEVEL = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].INSP_LEVEL;
                                prevInspObj.OBSERVATIONS = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].OBSERVATIONS;
                                prevInspObj.ACTION = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ACTION;
                                prevInspObj.INSERT_OR_UPDATE = "U";
                                dbContext.Entry(prevInspObj).State = EntityState.Modified;
                                dbContext.SaveChanges();
                            }

                        }

                    }





                    //        int inspIDtemp = dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Any() ? (from item in dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS select item.INSP_ID).Max() + 1 : 1;


                    for (int i = 8; i < 10; i++)
                    {
                        if (objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].VISIT_DATE == null && objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].VISITOR_NAME_DESG == null && objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ROAD_FROM == null && objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ROAD_TO == null && objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].INSP_LEVEL == "0" && objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].OBSERVATIONS == null && objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ACTION == null)
                        {
                            continue;
                        }
                        else
                        {
                            EFORM_PIU_PREVIOUS_INSP_DETAILS mod = new EFORM_PIU_PREVIOUS_INSP_DETAILS();

                            var results = dbContext.GetInspectionSequenceValue().FirstOrDefault();

                            // from the results, get the first/single value
                            int? nextSequenceValue = results;
                            mod.INSP_ID = Convert.ToInt32(nextSequenceValue);
                            mod.EFORM_ID = detailId;
                            mod.ADMIN_SCHEDULE_CODE = Convert.ToInt32(schdCode);
                            mod.ADMIN_QM_CODE = Convert.ToInt32(qmCode);
                            if (objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].VISIT_DATE == null)
                            {
                                mod.VISIT_DATE = null;
                            }
                            else
                            {
                                mod.VISIT_DATE = Convert.ToDateTime(objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].VISIT_DATE);
                            }

                            mod.VISITOR_NAME_DESG = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].VISITOR_NAME_DESG;
                            if (objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ROAD_FROM == null)
                            {
                                mod.ROAD_FROM = null;
                            }
                            else
                            {
                                mod.ROAD_FROM = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ROAD_FROM;
                            }
                            if (objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ROAD_TO == null)
                            {
                                mod.ROAD_TO = null;
                            }
                            else
                            {
                                mod.ROAD_TO = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ROAD_TO;
                            }

                            mod.INSP_LEVEL = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].INSP_LEVEL;
                            mod.OBSERVATIONS = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].OBSERVATIONS;
                            mod.ACTION = objViewModel.BRIDGE_PIU_PREVIOUS_INSP_DETAIL[i].ACTION;
                            mod.INSERT_OR_UPDATE = "I";
                            mod.IPADD = ipAdd;
                            mod.USER_ID = UserId;


                            dbContext.EFORM_PIU_PREVIOUS_INSP_DETAILS.Add(mod);
                            dbContext.SaveChanges();
                        }


                    }
                    #endregion

                    string checksum = dbContext.EFORM_DU_LOG.Where(s => s.EFORM_ID == detailId && s.USER_TYPE == "P").OrderByDescending(x => x.LOG_ID).Select(m => m.PDF_CHECKSUM).FirstOrDefault();

                    int logId = Convert.ToInt32(dbContext.EFORM_DU_LOG.Any() ? (from item in dbContext.EFORM_DU_LOG select item.LOG_ID).Max() + 1 : 1);
                    if (checksum != null)
                    {
                        EFORM_DU_LOG model = new EFORM_DU_LOG();
                        model.EFORM_ID = detailId;
                        model.LOG_ID = logId;
                        model.USER_ACTIVITY = "U";
                        model.USER_TYPE = type;
                        model.ACTIVITY_DATE = DateTime.Now;
                        model.USERID = UserId;
                        model.PDF_CHECKSUM = checksum;
                        if (templateVersionValue != "")
                        {
                            model.TEMPLATE_VERSION = templateVersionValue;
                        }
                        else
                        {
                            model.TEMPLATE_VERSION = "V1.0";
                        }
                        model.IPADD = ipAdd;
                        dbContext.EFORM_DU_LOG.Add(model);
                        dbContext.SaveChanges();
                    }
                    uploaded_File = Path.Combine(Uploaded_Path + "\\" + schdYear + "\\" + schdMonth, fname);
                    loadedDocument.Save(uploaded_File);
                    loadedDocument.Close(true);
                    scope.Complete();

                }


            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PDFDataDal.SaveBridgePIUToDb()");

                validationList.Add(new SelectListItem { Text = "Error occured while uploading the file, please contact OMMAS team" });

            }
            finally
            {

                if (dbContext != null)
                {
                    dbContext.Dispose();
                }
                loadedDocument.Close(true);
                file.InputStream.Flush();
                file.InputStream.Close();
            }

            return validationList;
        }
        #endregion

        #region QM Bridge

        public List<SelectListItem> SaveToBridgeQMDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_BRIDGE_QM_VIEWMODEL qmInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, bool TemplateStatus, char[] chkBoxArr)
        {

            PdfLoadedDocument loadedDocument = new PdfLoadedDocument(filePath);
            List<SelectListItem> validationList = new List<SelectListItem>();
            PMGSYEntities dbContext = new PMGSYEntities();
            //   EFORMCommonFunctions cm = new EFORMCommonFunctions();
            try
            {
                PdfLoadedForm loadedForm = loadedDocument.Form;
                loadedForm.ReadOnly = true;
                string type = string.Empty;
                int detailId = 0;


                if (PMGSYSession.Current.RoleCode == 6)
                {
                    type = "N";
                }
                else if (PMGSYSession.Current.RoleCode == 7)
                {
                    type = "S";
                }
                else
                {
                    type = "P";
                }

                string combine_uploaded_path = ConfigurationManager.AppSettings["COMBINE_UPLOADED_PATH"].ToString();



                int eformId = Convert.ToInt32(eformIDFromGrid);
                int RoadCode = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == eformId).Select(m => m.IMS_PR_ROAD_CODE).FirstOrDefault();
                Int32 admnNdCode = PMGSYSession.Current.AdminNdCode;
                Int32 prRoadCode = RoadCode;
                Int32 UserId = PMGSYSession.Current.UserId;
                string ipAdd = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                detailId = eformId;

                //To check which items details to be insert or not
                //   var isQmItemApplicable = dbContext.EFORM_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId && x.IMS_PR_ROAD_CODE == RoadCode).FirstOrDefault();

                string templateVersionValue = string.Empty;
                try
                {

                    PdfLoadedTextBoxField templateVersion = loadedForm.Fields["TEMPLATE_VERSION"] as PdfLoadedTextBoxField;
                    templateVersionValue = templateVersion.Text;
                }
                catch (Exception ex)
                {
                    ErrorLog.LogError(ex, "PdfDataDAL.SaveToBridgeQMDb()");
                }
                using (var scope = new TransactionScope())
                {
                    //DATA PARSING
                    if (dbContext.EFORM_PDF_UPLOAD_DETAIL.Any(s => s.EFORM_ID == eformId && s.USER_TYPE == "Q"))
                    {
                        validationList.Add(new SelectListItem { Text = "Pdf is already uploaded. If you want to upload again, please delete the existing file" });
                        return validationList;
                    }
                    PMGSYEntities eformdbContext = new PMGSYEntities();
                    EFORM_MASTER inspMasterModel = dbContext.EFORM_MASTER.Where(m => m.EFORM_ID == detailId).FirstOrDefault();

                    if (inspMasterModel == null)
                    {
                        validationList.Add(new SelectListItem { Text = "Error occured while uploading the file" });
                        return validationList;
                    }
                    if (templateVersionValue != "")
                    {
                        inspMasterModel.PART2_TEMPLATE_VERSION = templateVersionValue;
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    else
                    {
                        inspMasterModel.PART2_TEMPLATE_VERSION = "V1.0";
                        dbContext.Entry(inspMasterModel).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }

                    EFORM_PDF_UPLOAD_DETAIL uploadModel = new EFORM_PDF_UPLOAD_DETAIL();

                    int uploadId = eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Any() ? (from item in eformdbContext.EFORM_PDF_UPLOAD_DETAIL select item.UPLOAD_ID).Max() + 1 : 1;

                    uploadModel.UPLOAD_ID = uploadId;
                    uploadModel.EFORM_ID = detailId;
                    uploadModel.PR_ROAD_CODE = prRoadCode;
                    uploadModel.USER_TYPE = "Q";
                    uploadModel.UPLOAD_DATE = System.DateTime.Now;
                    uploadModel.IS_FINALISED = "N";
                    uploadModel.FILE_NAME = fname;
                    uploadModel.FILE_PATH = Uploaded_Path + "\\" + schdYear + "\\" + schdMonth;
                    uploadModel.USERID = UserId;
                    uploadModel.IPADD = ipAdd;
                    //    uploadModel.FILE_NAME_C = "C_" + fname;
                    //   uploadModel.FILE_PATH_C = combine_uploaded_path + "\\" + schdYear + "\\" + schdMonth;
                    if (templateVersionValue != "")
                    {
                        uploadModel.TEMPLATE_VERSION = templateVersionValue;
                    }
                    else
                    {
                        uploadModel.TEMPLATE_VERSION = "V1.0";
                    }
                    eformdbContext.EFORM_PDF_UPLOAD_DETAIL.Add(uploadModel);
                    eformdbContext.SaveChanges();













                    EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS itemDetails = new EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS();
                    int itemId = eformdbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS select item.ITEM_ID).Max() + 1 : 1;

                    itemDetails.ITEM_ID = itemId;
                    itemDetails.EFORM_ID = detailId;
                    itemDetails.IMS_PR_ROAD_CODE = prRoadCode;
                    itemDetails.ITEM_2 = chkBoxArr[2].ToString();
                    itemDetails.ITEM_3 = chkBoxArr[3].ToString();
                    itemDetails.ITEM_4 = chkBoxArr[4].ToString();
                    itemDetails.ITEM_5 = chkBoxArr[5].ToString();
                    itemDetails.ITEM_6 = chkBoxArr[6].ToString();
                    itemDetails.ITEM_7 = chkBoxArr[7].ToString();
                    itemDetails.ITEM_8 = chkBoxArr[8].ToString();
                    itemDetails.ITEM_9 = chkBoxArr[9].ToString();
                    itemDetails.ITEM_10 = chkBoxArr[10].ToString();
                    itemDetails.ITEM_11 = chkBoxArr[11].ToString();

                    itemDetails.QM_USER_ID = UserId;
                    itemDetails.IPADD = ipAdd;
                    eformdbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS.Add(itemDetails);
                    eformdbContext.SaveChanges();




                    #region ----Vikky 9-15------

                    #region Page 9: EFORM_BRIDGE_QM_GENERAL_DETAILS
                    PMGSY.Models.EFORM_BRIDGE_QM_GENERAL_DETAILS gen_model = new PMGSY.Models.EFORM_BRIDGE_QM_GENERAL_DETAILS();
                    int genId = eformdbContext.EFORM_BRIDGE_QM_GENERAL_DETAILS.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_GENERAL_DETAILS select item.GENERAL_ID).Max() + 1 : 1;

                    gen_model.GENERAL_ID = genId;
                    gen_model.EFORM_ID = detailId;
                    gen_model.PR_ROAD_CODE = prRoadCode;
                    gen_model.INSPECTION_DATE = Convert.ToDateTime(qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.INSPECTION_DATE);
                    gen_model.IS_WORK_STAT_LAYOUT = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_LAYOUT;
                    gen_model.IS_WORK_STAT_FOUNDATION = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_FOUNDATION;
                    gen_model.IS_WORK_STAT_SUBSTRUCTURE = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_SUBSTRUCTURE;
                    gen_model.IS_WORK_STAT_SUPERSTRUCTURE = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_SUPERSTRUCTURE;
                    gen_model.IS_WORK_STAT_PROT_WORK = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_PROT_WORK;
                    gen_model.IS_WORK_STAT_APPROACH = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_APPROACH;
                    gen_model.IS_WORK_STAT_FINISHING_STAGE = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_WORK_STAT_FINISHING_STAGE;
                    gen_model.IS_VIDEO_RECORDS = qmInsertModel.BRIDGE_QM_GENERAL_DETAILS.IS_VIDEO_RECORDS;
                    gen_model.USER_ID = UserId;
                    gen_model.IPADD = ipAdd;
                    eformdbContext.EFORM_BRIDGE_QM_GENERAL_DETAILS.Add(gen_model);
                    eformdbContext.SaveChanges();

                    #endregion
                    if (TemplateStatus != true)
                    {

                        #region Page 10 : EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS

                        if (chkBoxArr[2] == 'Y')
                        {
                            if (TemplateStatus != true)
                            {
                                int ObservationId = eformdbContext.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS select item.OBS_ID).Max() + 1 : 1;

                                PMGSY.Models.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS OBS_Details = new PMGSY.Models.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS();
                                OBS_Details.OBS_ID = ObservationId;
                                OBS_Details.EFORM_ID = detailId;
                                OBS_Details.USER_ID = UserId;
                                OBS_Details.PR_ROAD_CODE = prRoadCode;
                                OBS_Details.IS_FIELD_LAB_ESTB = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_FIELD_LAB_ESTD;
                                OBS_Details.IS_LAB_LOC_SAME = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_LAB_LOC_SAME;
                                OBS_Details.IS_EQUIP_AVAILABLE = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_EQUIP_AVAILABLE;
                                OBS_Details.IS_EQUIP_USED = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_EQUIP_USED;
                                OBS_Details.IS_EQUIP_AVAIL_VERIFY = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_EQUIP_AVAIL_VERIFY;
                                OBS_Details.IS_CALIBRATION_OF_EQUIPMENT = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_CALIBRATION_OF_EQUIPMENT; OBS_Details.IS_ENGG_AVAILABLE = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_ENGG_AVAILABLE;
                                OBS_Details.IS_ALT_ENGG_ARR_SATISFIED = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_ALT_ENGG_ARR_SATISFIED;
                                OBS_Details.IS_LAB_TECH_AVAILABLE = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IS_LAB_TECH_AVAILABLE;
                                OBS_Details.ITEM_GRADING_2 = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.ITEM_GRADING_2;
                                OBS_Details.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL.IMPROVEMENT_REMARK_2;
                                OBS_Details.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS.Add(OBS_Details);
                                eformdbContext.SaveChanges();
                            }

                        }
                        #endregion

                        #region Page 10,11,12 : EFORM_BRIDGE_QM_QUALITY_ATTENTION
                        if (chkBoxArr[3] == 'Y')
                        {
                            if (TemplateStatus != true)
                            {
                                int InfoId = eformdbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION select item.INFO_ID).Max() + 1 : 1;

                                PMGSY.Models.EFORM_BRIDGE_QM_QUALITY_ATTENTION QualityAttention = new PMGSY.Models.EFORM_BRIDGE_QM_QUALITY_ATTENTION();
                                QualityAttention.INFO_ID = InfoId;
                                QualityAttention.EFORM_ID = detailId;
                                QualityAttention.USER_ID = UserId;
                                QualityAttention.PR_ROAD_CODE = prRoadCode;
                                QualityAttention.IS_ALL_TEST_CONDUCTED = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_ALL_TEST_CONDUCTED;
                                QualityAttention.IS_QC_REG_P1_MAINTAINED = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_QC_REG_P1_MAINTAINED;
                                QualityAttention.IS_QC_REG_P2_MAINTAINED = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_QC_REG_P2_MAINTAINED;
                                QualityAttention.IS_NEGLIGENCE = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_NEGLIGENCE;
                                QualityAttention.IS_LOE = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_LOE;
                                QualityAttention.IS_LOK = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_LOK;
                                QualityAttention.IS_OTHER = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_OTHER;
                                QualityAttention.OTHER_REASON = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.OTHER_REASON;
                                QualityAttention.IS_NON_CONFORMITIES_QCR2 = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_NON_CONFORMITIES_QCR2;
                                QualityAttention.IS_NDT_CONDUCTED = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IS_NDT_CONDUCTED_12;
                                QualityAttention.ITEM_GRADING_3 = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.ITEM_GRADING_3;
                                QualityAttention.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_QUALITY_ATTENTION.IMPROVEMENT_REMARK_3;
                                QualityAttention.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION.Add(QualityAttention);
                                eformdbContext.SaveChanges();
                            }
                        }

                        #endregion

                        #region Page 11 : EFORM_BRIDGE_QM_QC_TEST_DETAILS



                        if (chkBoxArr[3] == 'Y')
                        {
                            if (TemplateStatus != true)
                            {
                                int WorkID = eformdbContext.EFORM_BRIDGE_QM_QC_TEST_DETAILS.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_QC_TEST_DETAILS select item.WORK_ID).Max() + 1 : 1;


                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_QC_TEST_DETAILS QCDetail = new PMGSY.Models.EFORM_BRIDGE_QM_QC_TEST_DETAILS();
                                    int t = i + 1;
                                    QCDetail.WORK_ID = WorkID;
                                    QCDetail.PR_ROAD_CODE = prRoadCode;
                                    QCDetail.EFORM_ID = detailId;
                                    QCDetail.USER_ID = UserId;
                                    QCDetail.IPADD = ipAdd;
                                    QCDetail.ITEM_ID = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].ITEM_ID;
                                    QCDetail.INFO_ID = eformdbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault();
                                    QCDetail.DPR_QUANTITY = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].DPR_QUANTITY;
                                    QCDetail.EXECUTED_QUANTITY = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].EXECUTED_QUANTITY;
                                    QCDetail.TEST_NAME = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].TEST_NAME;
                                    QCDetail.REQD_TEST_NUMBER = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].REQD_TEST_NUMBER;
                                    QCDetail.CONDUCTED_TEST_NUMBER = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].CONDUCTED_TEST_NUMBER;
                                    QCDetail.IS_TESTING_ADEQUATE = qmInsertModel.BRIDGE_QM_QC_TEST_DETAILS_LIST[i].IS_TESTING_ADEQUATE;
                                    eformdbContext.EFORM_BRIDGE_QM_QC_TEST_DETAILS.Add(QCDetail);
                                    eformdbContext.SaveChanges();
                                    WorkID++;
                                }
                            }


                        }
                        #endregion

                        #region Page 11 : EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS
                        if (chkBoxArr[3] == 'Y')
                        {
                            if (TemplateStatus != true)
                            {
                                int TestID = eformdbContext.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS select item.TEST_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS TestVerification = new PMGSY.Models.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS();
                                    int t = i + 1;
                                    TestVerification.TEST_ID = TestID;
                                    TestVerification.INFO_ID = eformdbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == detailId).Select(x => x.INFO_ID).FirstOrDefault(); // required foreign key
                                    TestVerification.IPADD = ipAdd;
                                    TestVerification.EFORM_ID = detailId;
                                    TestVerification.PR_ROAD_CODE = prRoadCode;
                                    TestVerification.QM_USER_ID = UserId;
                                    TestVerification.ROAD_LOC = Convert.ToDecimal(qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST[i].ROAD_LOC);
                                    TestVerification.TEST_NAME = qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST[i].TEST_NAME;
                                    TestVerification.TEST_CONDUCTED_RESULT = qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST[i].TEST_CONDUCTED_RESULT;
                                    TestVerification.TEST_RESULT_QCR1 = qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST[i].TEST_RESULT_QCR1;
                                    TestVerification.TEST_RESULT_PREVIOUS = qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST[i].TEST_RESULT_PREVIOUS;
                                    TestVerification.TEST_RESULT_CONFRM = qmInsertModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST[i].TEST_RESULT_CONFRM;
                                    eformdbContext.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS.Add(TestVerification);
                                    eformdbContext.SaveChanges();
                                    TestID++;

                                }


                            }
                        }
                        #endregion
                    }


                    if (chkBoxArr[4] == 'Y')
                    {
                        #region Page 13 : EFORM_BRIDGE_QM_FOUNDATION
                        int foundId = eformdbContext.EFORM_BRIDGE_QM_FOUNDATION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_FOUNDATION select item.FOUNDATION_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_BRIDGE_QM_FOUNDATION FOUNDATIONModel = new PMGSY.Models.EFORM_BRIDGE_QM_FOUNDATION();
                        FOUNDATIONModel.FOUNDATION_ID = foundId;
                        FOUNDATIONModel.EFORM_ID = detailId;
                        FOUNDATIONModel.USER_ID = UserId;
                        FOUNDATIONModel.PR_ROAD_CODE = prRoadCode;
                        FOUNDATIONModel.ITEM_GRADING_4 = qmInsertModel.BRIDGE_QM_FOUNDATION.ITEM_GRADING_4;
                        FOUNDATIONModel.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_LOAD_TEST.IMPROVEMENT_REMARK_7;
                        FOUNDATIONModel.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_FOUNDATION.Add(FOUNDATIONModel);
                        eformdbContext.SaveChanges();
                        #endregion
                        if (TemplateStatus != true)
                        {
                            #region Page 13 : EFORM_BRIDGE_QM_ONGOING_FOUNDATION
                            int fondOnId = eformdbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION select item.FOND_ON_ID).Max() + 1 : 1;

                            PMGSY.Models.EFORM_BRIDGE_QM_ONGOING_FOUNDATION onFOUNDATIONModel = new PMGSY.Models.EFORM_BRIDGE_QM_ONGOING_FOUNDATION();
                            onFOUNDATIONModel.FOND_ON_ID = foundId;
                            onFOUNDATIONModel.FOUNDATION_ID = foundId;
                            onFOUNDATIONModel.EFORM_ID = detailId;
                            onFOUNDATIONModel.USER_ID = UserId;
                            onFOUNDATIONModel.PR_ROAD_CODE = prRoadCode;
                            onFOUNDATIONModel.FOUNDATION_ABUTMENT1 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_ABUTMENT1;
                            onFOUNDATIONModel.FOUNDATION_ABUTMENT2 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_ABUTMENT2;
                            onFOUNDATIONModel.FOUNDATION_PIERS1 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS1;
                            onFOUNDATIONModel.FOUNDATION_PIERS2 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS2;
                            onFOUNDATIONModel.FOUNDATION_PIERS3 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS3;
                            onFOUNDATIONModel.FOUNDATION_PIERS4 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS4;
                            onFOUNDATIONModel.FOUNDATION_PIERS5 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS5;
                            onFOUNDATIONModel.FOUNDATION_PIERS6 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS6;
                            onFOUNDATIONModel.FOUNDATION_PIERS7 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS7;
                            onFOUNDATIONModel.FOUNDATION_PIERS8 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS8;
                            onFOUNDATIONModel.FOUNDATION_PIERS9 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_PIERS9;
                            onFOUNDATIONModel.FOUNDATION_RETURN1 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_RETURN1;
                            onFOUNDATIONModel.FOUNDATION_RETURN2 = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.FOUNDATION_RETURN2;
                            onFOUNDATIONModel.IS_TEST_CONDUCTED = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.IS_TEST_CONDUCTED;
                            onFOUNDATIONModel.IS_REINFORCEMENT_DONE = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.IS_REINFORCEMENT_DONE;
                            onFOUNDATIONModel.IS_LAITANCE_PLUGGING = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.IS_LAITANCE_EFFECT;
                            onFOUNDATIONModel.IS_BOTTOM_PLUGGING = qmInsertModel.BRIDGE_QM_ONGOING_FOUNDATION.IS_BOTTOM_PLUGING;
                            onFOUNDATIONModel.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION.Add(onFOUNDATIONModel);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page 13 :EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION

                            int locId = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION select item.LOC_ID).Max() + 1 : 1;

                            for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST.Count; i++)
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION onQOMFondModel = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION();
                                int t = i + 1;
                                onQOMFondModel.LOC_ID = locId;
                                onQOMFondModel.FOND_ON_ID = eformdbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION.Where(x => x.EFORM_ID == detailId).Select(x => x.FOND_ON_ID).FirstOrDefault(); // required foreign key
                                onQOMFondModel.IPADD = ipAdd;
                                onQOMFondModel.EFORM_ID = detailId;
                                onQOMFondModel.PR_ROAD_CODE = prRoadCode;
                                onQOMFondModel.USER_ID = UserId;
                                onQOMFondModel.WORK_ITEM_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].WORK_ITEM_LOC_1;
                                onQOMFondModel.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].CONCRETE_GRADE_1;
                                onQOMFondModel.QM_CEMENT_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].QM_CEMENT_QCR_1;
                                onQOMFondModel.QM_COARSE_AGG_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].QM_COARSE_AGG_QCR_1;
                                onQOMFondModel.QM_FINE_AGG_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].QM_FINE_AGG_QCR_1;
                                onQOMFondModel.QM_STEEL_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].QM_STEEL_QCR_1;
                                onQOMFondModel.CONCRETE_TEST_NQM = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].CONCRETE_TEST_NQM_1;
                                onQOMFondModel.GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST[i].GRADE_1;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION.Add(onQOMFondModel);
                                eformdbContext.SaveChanges();
                                locId++;




                            }


                            #endregion

                            #region Page 13 :EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION

                            int locId1 = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION select item.LOC_ID).Max() + 1 : 1;

                            for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST.Count; i++)
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION onWorkmanshipFondModel = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION();
                                int t = i + 1;
                                onWorkmanshipFondModel.LOC_ID = locId1;
                                onWorkmanshipFondModel.FD_ON_ID = eformdbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION.Where(x => x.EFORM_ID == detailId).Select(x => x.FOND_ON_ID).FirstOrDefault(); // required foreign key
                                onWorkmanshipFondModel.IPADD = ipAdd;
                                onWorkmanshipFondModel.EFORM_ID = detailId;
                                onWorkmanshipFondModel.PR_ROAD_CODE = prRoadCode;
                                onWorkmanshipFondModel.USER_ID = UserId;
                                onWorkmanshipFondModel.WORK_ITEM_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].WORK_ITEM_LOC_2;
                                onWorkmanshipFondModel.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].CONCRETE_GRADE_2;
                                onWorkmanshipFondModel.WORK_QUALITY_ARRG = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].WORK_QUALITY_AGG_2;
                                onWorkmanshipFondModel.REINFORCEMENT_CHECK_AUTH = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].REINFORCEMENT_CHECK_AUTH_2;
                                onWorkmanshipFondModel.CONCRETE_WORKABILITY = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].CONCRETE_WORKABILITY_2;
                                onWorkmanshipFondModel.COMPACTION_ARRG = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].COMPACTION_AGG_2;
                                onWorkmanshipFondModel.CURING_ARRG = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].CURING_AGG_2;
                                onWorkmanshipFondModel.GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST[i].GRADE_2;

                                eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION.Add(onWorkmanshipFondModel);
                                eformdbContext.SaveChanges();
                                locId1++;




                            }


                            #endregion

                        }
                        if (TemplateStatus == true)
                        {

                            #region Page 14 : EFORM_BRIDGE_QM_COMPLETED_FOUNDATION
                            int fondComplId = eformdbContext.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION select item.FOND_CO_ID).Max() + 1 : 1;
                            PMGSY.Models.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION cmplFOUNDATIONModel = new PMGSY.Models.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION();
                            cmplFOUNDATIONModel.FOND_CO_ID = fondComplId;
                            cmplFOUNDATIONModel.FOUNDATION_ID = foundId;
                            cmplFOUNDATIONModel.EFORM_ID = detailId;
                            cmplFOUNDATIONModel.USER_ID = UserId;
                            cmplFOUNDATIONModel.PR_ROAD_CODE = prRoadCode;
                            cmplFOUNDATIONModel.IS_CONDUCTED_INDEP_LAB = qmInsertModel.BRIDGE_QM_COMPLETED_FOUNDATION.IS_CONDUCTED_INDEP_LAB_14;
                            cmplFOUNDATIONModel.IS_NDT_CONDUCTED = qmInsertModel.BRIDGE_QM_COMPLETED_FOUNDATION.IS_NDT_CONDUCTED_14;
                            cmplFOUNDATIONModel.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION.Add(cmplFOUNDATIONModel);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page 13 :EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION

                            int locId = eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION select item.LOC_ID).Max() + 1 : 1;

                            for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST.Count; i++)
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION cmplQOMFondModel = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION();
                                int t = i + 1;
                                cmplQOMFondModel.LOC_ID = locId;
                                cmplQOMFondModel.FD_CO_ID = eformdbContext.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION.Where(x => x.EFORM_ID == detailId).Select(x => x.FOND_CO_ID).FirstOrDefault(); // required foreign key
                                cmplQOMFondModel.IPADD = ipAdd;
                                cmplQOMFondModel.EFORM_ID = detailId;
                                cmplQOMFondModel.PR_ROAD_CODE = prRoadCode;
                                cmplQOMFondModel.USER_ID = UserId;
                                cmplQOMFondModel.WORK_ITEM_LOC = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].WORK_ITEM_LOC_14;
                                cmplQOMFondModel.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].CONCRETE_GRADE_14;
                                cmplQOMFondModel.COMP_STRENGTH_CONCRETE_QCR = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].COMP_STRENGTH_CONCRETE_QCR_14;
                                cmplQOMFondModel.CONCRETE_TEST_NQM = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].CONCRETE_TEST_NQM_14;
                                cmplQOMFondModel.SURFACE_ACCEPTABILITY_WK = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].SURFACE_ACCEPTABLITY_WK_14;
                                cmplQOMFondModel.DESIGN_SIZE_SHAPE = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].DESIGN_SIZE_SHAPE_14;
                                cmplQOMFondModel.QUALITY_PERSONAL_JUDG = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].QUALITY_ASS_PERSONAL_JUDG_14;
                                cmplQOMFondModel.GRADE = qmInsertModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST[i].GRADE_14;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION.Add(cmplQOMFondModel);
                                eformdbContext.SaveChanges();
                                locId++;




                            }


                            #endregion
                        }



                    }


                    #endregion

                    #region saurabh 15-22

                    if (chkBoxArr[5] == 'Y')
                    {
                        PMGSY.Models.EFORM_BRIDGE_QM_SUBSTRUCTURE BridgeSubStru = new PMGSY.Models.EFORM_BRIDGE_QM_SUBSTRUCTURE();

                        int TestID = eformdbContext.EFORM_BRIDGE_QM_SUBSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_SUBSTRUCTURE select item.SUBSTRUCTURE_ID).Max() + 1 : 1;

                        BridgeSubStru.SUBSTRUCTURE_ID = TestID;
                        BridgeSubStru.EFORM_ID = eformId;
                        BridgeSubStru.PR_ROAD_CODE = RoadCode;
                        BridgeSubStru.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_SUBSTRUCTURE.IMPROVEMENT_REMARK_5;
                        BridgeSubStru.ITEM_GRADING_5 = qmInsertModel.BRIDGE_QM_SUBSTRUCTURE.ITEM_GRADING_5;
                        BridgeSubStru.USER_ID = UserId;
                        BridgeSubStru.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_SUBSTRUCTURE.Add(BridgeSubStru);
                        eformdbContext.SaveChanges();

                        if (TemplateStatus != true)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE eFORM_BRIDGE_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE();

                            int SubONID = eformdbContext.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE select item.SUBSTRUCTURE_ID).Max() + 1 : 1;
                            eFORM_BRIDGE_QM_.SUBST_ON_ID = SubONID;
                            eFORM_BRIDGE_QM_.SUBSTRUCTURE_ID = TestID;
                            eFORM_BRIDGE_QM_.PR_ROAD_CODE = RoadCode;
                            eFORM_BRIDGE_QM_.EFORM_ID = eformId;
                            eFORM_BRIDGE_QM_.IS_GRANULAR_SANDY_DONE = qmInsertModel.BRIDGE_QM_ONGOING_SUBSTRUCTURE.IS_GRANULAR_SANDY_DONE;
                            eFORM_BRIDGE_QM_.IS_PAINT_MARKING_DONE = qmInsertModel.BRIDGE_QM_ONGOING_SUBSTRUCTURE.IS_PAINT_MARKING_DONE;
                            eFORM_BRIDGE_QM_.IS_CONDUCTED_INDEP_LAB = qmInsertModel.BRIDGE_QM_ONGOING_SUBSTRUCTURE.IS_CONDUCTED_INDEP_LAB;
                            eFORM_BRIDGE_QM_.USER_ID = UserId;
                            eFORM_BRIDGE_QM_.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE.Add(eFORM_BRIDGE_QM_);
                            eformdbContext.SaveChanges();



                            int SubQomONID = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE select item.LOC_ID).Max() + 1 : 1;

                            for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST.Count; i++)
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE QomOnSub = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE();

                                QomOnSub.LOC_ID = SubQomONID;
                                QomOnSub.SUBSTRUCTURE_ID = TestID;
                                QomOnSub.SUBST_ON_ID = SubONID;
                                QomOnSub.PR_ROAD_CODE = RoadCode;
                                QomOnSub.EFORM_ID = eformId;
                                QomOnSub.WORK_ITEM_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].WORK_ITEM_LOC_15_1;
                                QomOnSub.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].CONCRETE_GRADE_15_1;
                                QomOnSub.QM_CEMENT_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].QM_CEMENT_QCR_15_1;
                                QomOnSub.QM_COARSE_AGGR_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].QM_COARSE_AGGR_QCR_15_1;
                                QomOnSub.QM_FINE_AGGR_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].QM_FINE_AGGR_QCR_15_1;
                                QomOnSub.QM_STEEL_QCR = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].QM_STEEL_QCR_15_1;
                                QomOnSub.CONCRETE_TEST_NQM = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].CONCRETE_TEST_NQM_15_1;
                                QomOnSub.GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST[i].GRADE_15_1;
                                QomOnSub.IPADD = ipAdd;
                                QomOnSub.USER_ID = UserId;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE.Add(QomOnSub);
                                eformdbContext.SaveChanges();
                                SubQomONID++;
                            }

                            int SubWorkMenONID = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE select item.LOC_ID).Max() + 1 : 1;

                            for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST.Count; i++)
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE WomOnSub = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE();

                                WomOnSub.LOC_ID = SubWorkMenONID;
                                WomOnSub.SUBST_ON_ID = SubONID;
                                WomOnSub.PR_ROAD_CODE = RoadCode;
                                WomOnSub.SUBSTRUCTURE_ID = TestID;
                                WomOnSub.EFORM_ID = eformId;
                                WomOnSub.WORK_ITEM_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].WORK_ITEM_LOC_15_2;
                                WomOnSub.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].CONCRETE_GRADE_15_2;
                                WomOnSub.WORK_QUALITY_ARRG = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].WORK_QUALITY_ARRG_15_2;
                                WomOnSub.REINFORCEMENT_CHECK__AUTH = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].REINFORCEMENT_CHECK_AUTH_15_2;
                                WomOnSub.CONCRETE_WORKABILITY = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].CONCRETE_WORKABILITY_15_2;
                                WomOnSub.COMPACTION_ARRG = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].COMPACTION_ARRG_15_2;
                                WomOnSub.CURING_ARRG = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].CURING_ARRG_15_2;
                                WomOnSub.GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST[i].GRADE_15_2;
                                WomOnSub.IPADD = ipAdd;
                                WomOnSub.USER_ID = UserId;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE.Add(WomOnSub);
                                eformdbContext.SaveChanges();
                                SubWorkMenONID++;
                            }


                        }
                        else
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE eFORM_BRIDGE_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE();

                            int SubCOID = eformdbContext.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE select item.SUBST_CO_ID).Max() + 1 : 1;
                            eFORM_BRIDGE_QM_.SUBST_CO_ID = SubCOID;
                            eFORM_BRIDGE_QM_.SUBSTRUCTURE_ID = TestID;
                            eFORM_BRIDGE_QM_.PR_ROAD_CODE = RoadCode;
                            eFORM_BRIDGE_QM_.EFORM_ID = eformId;
                            eFORM_BRIDGE_QM_.IS_CONDUCTED_INDEP_LAB = qmInsertModel.BRIDGE_QM_COMPLETED_SUBSTRUCTURE.IS_CONDUCTED_INDEP_LAB_16;
                            eFORM_BRIDGE_QM_.IS_NDT_CONDUCTED = qmInsertModel.BRIDGE_QM_COMPLETED_SUBSTRUCTURE.IS_NDT_COMDUCTED_16;
                            eFORM_BRIDGE_QM_.USER_ID = UserId;
                            eFORM_BRIDGE_QM_.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE.Add(eFORM_BRIDGE_QM_);
                            eformdbContext.SaveChanges();


                            int SubComplID = eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE select item.LOC_ID).Max() + 1 : 1;

                            for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST.Count; i++)
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE ComplSubStru = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE();

                                ComplSubStru.LOC_ID = SubComplID;
                                ComplSubStru.SUBSTRUCTURE_ID = TestID;
                                ComplSubStru.SUBST_CO_ID = SubCOID;
                                ComplSubStru.PR_ROAD_CODE = RoadCode;
                                ComplSubStru.EFORM_ID = eformId;
                                ComplSubStru.WORK_ITEM_LOC = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].WORK_ITEM_LOC_16;
                                ComplSubStru.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].CONCRETE_GRADE_16;
                                ComplSubStru.COMP_STRENGTH_CONCRETE_QCR = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].COMP_STRENGTH_CONCRETE_QCR_16;
                                ComplSubStru.CONCRETE_TEST_NQM = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].CONCRETE_TEST_NQM_16;
                                ComplSubStru.SURFACE_ACCEPTABILITY_WK = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].SURFACE_ACCEPTABLITY_WK_16;
                                ComplSubStru.DESIGN_SIZE_SHAPE = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].DESIGN_SIZE_SHAPE_16;
                                ComplSubStru.QUALITY_PERSONAL_JUDG = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].QUALITY_ASS_PERSONAL_JUDG_16;
                                ComplSubStru.WEEP_HOLES_ADEQUACY = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].WEEP_HOLES_ADEQUACY_16;
                                ComplSubStru.RIDING_RETURNS = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].RIDING_RETURNS_16;
                                ComplSubStru.GRADE = qmInsertModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST[i].GRADE_16;
                                ComplSubStru.IPADD = ipAdd;
                                ComplSubStru.USER_ID = UserId;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE.Add(ComplSubStru);
                                eformdbContext.SaveChanges();
                                SubComplID++;
                            }

                        }

                    }

                    if (chkBoxArr[6] == 'Y')
                    {

                        PdfLoadedRadioButtonListField StructureType = loadedForm.Fields["STRUCTURE_TYPE"] as PdfLoadedRadioButtonListField;
                        PMGSY.Models.EFORM_BRIDGE_QM_SUPERSTRUCTURE BridgeSuperStructure = new PMGSY.Models.EFORM_BRIDGE_QM_SUPERSTRUCTURE();

                        int StructID = eformdbContext.EFORM_BRIDGE_QM_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_SUPERSTRUCTURE select item.STRUCTURE_ID).Max() + 1 : 1;

                        BridgeSuperStructure.STRUCTURE_ID = StructID;
                        BridgeSuperStructure.EFORM_ID = eformId;
                        BridgeSuperStructure.PR_ROAD_CODE = RoadCode;
                        BridgeSuperStructure.STRUCTURE_TYPE = StructureType.SelectedValue;
                        BridgeSuperStructure.ITEM_GRADING_6_1 = qmInsertModel.BRIDGE_QM_SUPERSTRUCTURE.ITEM_GRADING_6_1;
                        BridgeSuperStructure.ITEM_GRADING_6_2 = qmInsertModel.BRIDGE_QM_SUPERSTRUCTURE.ITEM_GRADING_6_2;
                        BridgeSuperStructure.ITEM_GRADING_6_3 = qmInsertModel.BRIDGE_QM_SUPERSTRUCTURE.ITEM_GRADING_6_3;
                        BridgeSuperStructure.IMPROVEMENT_REMARK_6_1 = qmInsertModel.BRIDGE_QM_SUPERSTRUCTURE.IMPROVEMENT_REMARK_6_1;
                        BridgeSuperStructure.IMPROVEMENT_REMARK_6_2 = qmInsertModel.BRIDGE_QM_SUPERSTRUCTURE.IMPROVEMENT_REMARK_6_2;
                        BridgeSuperStructure.IMPROVEMENT_REMARK_6_3 = qmInsertModel.BRIDGE_QM_SUPERSTRUCTURE.IMPROVEMENT_REMARK_6_3;
                        BridgeSuperStructure.USER_ID = UserId;
                        BridgeSuperStructure.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_SUPERSTRUCTURE.Add(BridgeSuperStructure);
                        eformdbContext.SaveChanges();

                        if (TemplateStatus != true)
                        {
                            if (StructureType.SelectedValue == "RCC")
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE eFORM_BRIDGE_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE();

                                int Rcc_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE select item.RCC_ID).Max() + 1 : 1;

                                eFORM_BRIDGE_QM_.RCC_ID = Rcc_ID;
                                eFORM_BRIDGE_QM_.PR_ROAD_CODE = RoadCode;
                                eFORM_BRIDGE_QM_.STRUCTURE_ID = StructID;
                                eFORM_BRIDGE_QM_.EFORM_ID = eformId;
                                eFORM_BRIDGE_QM_.WORK_TYPE = workStatus;
                                eFORM_BRIDGE_QM_.IS_CEMENT_TEST_CONDUCTED = qmInsertModel.BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.IS_CEMENT_TEST_CONDUCTED;
                                eFORM_BRIDGE_QM_.IS_NDT_CONDUCTED = null;
                                eFORM_BRIDGE_QM_.USER_ID = UserId;
                                eFORM_BRIDGE_QM_.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.Add(eFORM_BRIDGE_QM_);
                                eformdbContext.SaveChanges();


                                int RccQomONID = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE select item.RCC_QOM_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE QomOnRccStruct = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE();

                                    QomOnRccStruct.RCC_QOM_ID = RccQomONID;
                                    QomOnRccStruct.PR_ROAD_CODE = RoadCode;
                                    QomOnRccStruct.RCC_ID = Rcc_ID;
                                    QomOnRccStruct.EFORM_ID = eformId;
                                    QomOnRccStruct.STRUCTURE_ID = StructID;
                                    QomOnRccStruct.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].RD_LOC_17;
                                    QomOnRccStruct.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].CONCRETE_GRADE_17;
                                    QomOnRccStruct.CEMENT_QUALITY = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].CEMENT_QUALITY_17;
                                    QomOnRccStruct.COARSE_AGGR_QUALITY = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].COARSE_AGGR_QUALITY_17;
                                    QomOnRccStruct.FINE_AGGR_QUALITY = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].FINE_AGGR_QUALITY_17;
                                    QomOnRccStruct.STEEL_REIN_QUALITY = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].STEEL_REIN_QUALITY_17;
                                    QomOnRccStruct.STAG_WORKMEN_CHECK = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].STAG_WORKMEN_CHECK_17;
                                    QomOnRccStruct.REINFORCEMENT_CHECK_AUTH = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].REINFORCEMENT_CHECK_AUTH_17;
                                    QomOnRccStruct.CONCRETE_WORKABILITY = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].CONCRETE_WORKABILITY_17;
                                    QomOnRccStruct.COMPACTION_ARRANGEMENT = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].COMPACTION_ARRANGEMENT_17;
                                    QomOnRccStruct.CAMBER = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].CAMBER_17;
                                    QomOnRccStruct.DRAINAGE_SPOUT_STD = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].DRAINAGE_SPOUTS_STD_17;
                                    QomOnRccStruct.GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST[i].GRADE_17;
                                    QomOnRccStruct.IPADD = ipAdd;
                                    QomOnRccStruct.USER_ID = UserId;
                                    eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE.Add(QomOnRccStruct);
                                    eformdbContext.SaveChanges();
                                    RccQomONID++;
                                }


                            }

                            if (StructureType.SelectedValue == "STEEL")
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE eFORM_BRIDGE_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE();

                                int Steel_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE select item.STEEL_ON_ID).Max() + 1 : 1;

                                eFORM_BRIDGE_QM_.STEEL_ON_ID = Steel_ID;
                                eFORM_BRIDGE_QM_.PR_ROAD_CODE = RoadCode;
                                eFORM_BRIDGE_QM_.STRUCTURE_ID = StructID;
                                eFORM_BRIDGE_QM_.EFORM_ID = eformId;
                                eFORM_BRIDGE_QM_.WORK_TYPE = workStatus;
                                eFORM_BRIDGE_QM_.IS_PRESENCE_MOISTURE = qmInsertModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.IS_PRESENCE_MOISTURE; ;
                                eFORM_BRIDGE_QM_.IS_INDUSTRIAL_UNIT_NEARBY = qmInsertModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.IS_INDUSTRIAL_UNIT_NEARBY; ;
                                eFORM_BRIDGE_QM_.IS_SANITY_IN_ATMOSPHERE = qmInsertModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.IS_SALINITY_IN_ATMOSPHERE;
                                eFORM_BRIDGE_QM_.USER_ID = UserId;
                                eFORM_BRIDGE_QM_.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.Add(eFORM_BRIDGE_QM_);
                                eformdbContext.SaveChanges();


                                int RccQomONID = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE select item.STEEL_QOM_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE QomOnRccStruct = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE();

                                    QomOnRccStruct.STEEL_QOM_ID = RccQomONID;
                                    QomOnRccStruct.PR_ROAD_CODE = RoadCode;
                                    QomOnRccStruct.EFORM_ID = eformId;
                                    QomOnRccStruct.STRUCTURE_ID = StructID;
                                    QomOnRccStruct.STEEL_ON_ID = Steel_ID;
                                    QomOnRccStruct.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].RD_LOC_19;
                                    QomOnRccStruct.STEEL_GRADE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].STEEL_GRADE_19;
                                    QomOnRccStruct.TENSILE_STRENGTH = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].TENSILE_STRENGTH_19;
                                    QomOnRccStruct.YIELD_STRESS_PER_QC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].YIELD_STRESS_PER_QC_19;
                                    QomOnRccStruct.ELONGATION_PER_QC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].ELONGATION_PER_QC_19;
                                    QomOnRccStruct.IS_CHEMICAL_ANALYSIS_DONE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].IS_CHEMICAL_ANALYSIS_DONE_19;
                                    QomOnRccStruct.IS_CHEMICAL_ANALYSIS_ADEQUATE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].IS_CHEM_ANALYSIS_ADEQUATE_19;
                                    QomOnRccStruct.IS_NDT_WELDING_DONE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].IS_NDT_WELDING_DONE_19;
                                    QomOnRccStruct.IS_TESTING_OF_STEEL_BOLT = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].IS_TESTING_OF_STEEL_BOLT_19;
                                    QomOnRccStruct.IS_PAINTING_PROPER = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].IS_PAINTING_PROPER_19;
                                    QomOnRccStruct.IS_HFL_CLEARANCE_ADEQUATE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST[i].IS_HFL_CLEARANCE_ADEQUATE_19;
                                    QomOnRccStruct.IPADD = ipAdd;
                                    QomOnRccStruct.USER_ID = UserId;
                                    eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE.Add(QomOnRccStruct);
                                    eformdbContext.SaveChanges();
                                    RccQomONID++;
                                }

                            }

                            if (StructureType.SelectedValue == "BAILEY")
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE eFORM_BRIDGE_Steel_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE();

                                int Bailey_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE select item.BAILEY_ID).Max() + 1 : 1;

                                eFORM_BRIDGE_Steel_QM_.BAILEY_ID = Bailey_ID;
                                eFORM_BRIDGE_Steel_QM_.PR_ROAD_CODE = RoadCode;
                                eFORM_BRIDGE_Steel_QM_.STRUCTURE_ID = StructID;
                                eFORM_BRIDGE_Steel_QM_.EFORM_ID = eformId;
                                eFORM_BRIDGE_Steel_QM_.WORK_TYPE = workStatus;
                                eFORM_BRIDGE_Steel_QM_.IS_BOLT_PLATES_MISSING = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.IS_BOLT_PLATES_MISSING;
                                eFORM_BRIDGE_Steel_QM_.IS_SWAY_BRACES_MISSING = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.IS_SWAY_BRACES_MISSING;
                                eFORM_BRIDGE_Steel_QM_.IS_ANY_CRACK_IN_BAILEY_BRIDGE = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.IS_ANY_CRACK_IN_BAILEY_BRIDGE;
                                eFORM_BRIDGE_Steel_QM_.IS_BEND_IN_BRIDGE_MEMBER = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.IS_BEND_IN_BRIDGE_MEMBER;
                                eFORM_BRIDGE_Steel_QM_.USER_ID = UserId;
                                eFORM_BRIDGE_Steel_QM_.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.Add(eFORM_BRIDGE_Steel_QM_);
                                eformdbContext.SaveChanges();


                                int BaileyQomONID = eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE select item.BAILY_QOM_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE QomOnSteelStruct = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE();

                                    QomOnSteelStruct.BAILY_QOM_ID = BaileyQomONID;
                                    QomOnSteelStruct.PR_ROAD_CODE = RoadCode;
                                    QomOnSteelStruct.EFORM_ID = eformId;
                                    QomOnSteelStruct.STRUCTURE_ID = StructID;
                                    QomOnSteelStruct.BAILEY_ID = Bailey_ID;
                                    QomOnSteelStruct.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].RD_LOC_21;
                                    QomOnSteelStruct.TYPES_OF_BAILY_BRIDGE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].TYPES_OF_BAILY_BRIDGE_21;
                                    QomOnSteelStruct.IS_ALL_COMPONENT_AVAILABLE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].IS_ALL_COMPONENT_AVAILABLE_21;
                                    QomOnSteelStruct.IS_COMPONENT_CORROSION_FREE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].IS_COMPONENT_CORROSION_FREE_21;
                                    QomOnSteelStruct.IS_LAUNCHING_ROLLER_AVAILABLE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].IS_LAUNCHING_ROLLER_AVAILABLE_21;
                                    QomOnSteelStruct.IS_PANEL_PINS_PLACED_PROPERLY = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].IS_PANEL_PINS_PLACED_PROPERLY_21;
                                    QomOnSteelStruct.IS_PAINTING_PROPER = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].IS_PAINTING_PROPER_21;
                                    QomOnSteelStruct.IS_HFL_CLEARANCE_ADEQUATE = qmInsertModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST[i].IS_HFL_CLEARANCE_ADEQUATE_21;
                                    QomOnSteelStruct.IPADD = ipAdd;
                                    QomOnSteelStruct.USER_ID = UserId;
                                    eformdbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE.Add(QomOnSteelStruct);
                                    eformdbContext.SaveChanges();
                                    BaileyQomONID++;
                                }
                            }
                        }
                        else
                        {
                            if (StructureType.SelectedValue == "RCC")
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE eFORM_Rcc_QM = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE();

                                int Rcc_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE select item.RCC_ID).Max() + 1 : 1;

                                eFORM_Rcc_QM.RCC_ID = Rcc_ID;
                                eFORM_Rcc_QM.PR_ROAD_CODE = RoadCode;
                                eFORM_Rcc_QM.EFORM_ID = eformId;
                                eFORM_Rcc_QM.STRUCTURE_ID = StructID;
                                eFORM_Rcc_QM.WORK_TYPE = workStatus;
                                eFORM_Rcc_QM.IS_CEMENT_TEST_CONDUCTED = qmInsertModel.BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_COMPLETED.IS_CEMENT_TEST_CONDUCTED_18;
                                eFORM_Rcc_QM.IS_NDT_CONDUCTED = qmInsertModel.BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_COMPLETED.IS_NDT_CONDUCTED_18;
                                eFORM_Rcc_QM.USER_ID = UserId;
                                eFORM_Rcc_QM.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.Add(eFORM_Rcc_QM);
                                eformdbContext.SaveChanges();


                                int RccQomONID = eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE select item.RCC_QOM_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE QomOnRccStruct = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE();

                                    QomOnRccStruct.RCC_QOM_ID = RccQomONID;
                                    QomOnRccStruct.PR_ROAD_CODE = RoadCode;
                                    QomOnRccStruct.EFORM_ID = eformId;
                                    QomOnRccStruct.STRUCTURE_ID = StructID;
                                    QomOnRccStruct.RCC_ID = Rcc_ID;
                                    QomOnRccStruct.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].RD_LOC_18;
                                    QomOnRccStruct.CONCRETE_GRADE = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].CONCRETE_GRADE_18;
                                    QomOnRccStruct.CONCRETE_STRENGTH_PER_QUALITY = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].CONCRETE_STRENGTH_PER_QUALITY_18;
                                    QomOnRccStruct.TEST_CONCRETE_CUBE_QM = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].TEST_CONCRETE_CUBE_QM_18;
                                    QomOnRccStruct.SURFACE_ACCEPTABILITY = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].SURFACE_ACCEPTABLITY_18;
                                    QomOnRccStruct.DESIGN_SIZE_SHAPE = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].DESIGN_SIZE_SHAPE_18;
                                    QomOnRccStruct.CAMBER = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].CAMBER_18;
                                    QomOnRccStruct.BEARING = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].BEARING_18;
                                    QomOnRccStruct.KERBS = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].KERBS_18;
                                    QomOnRccStruct.CRASH_BARRIER = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].CRASH_BARRIER_18;
                                    QomOnRccStruct.WEARING_COAT = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].WEARING_COAT_18;
                                    QomOnRccStruct.RAILING = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].RAILING_18;
                                    QomOnRccStruct.EXP_JOINTS = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].EXP_JOINTS_18;
                                    QomOnRccStruct.DRAINAGE_SPOUTS = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].DRAINAGE_SPOUTS_18;
                                    QomOnRccStruct.APPROACH_SLAB = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].APPROACH_SLAB_18;
                                    QomOnRccStruct.STOPPER = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].STOPPER_18;
                                    QomOnRccStruct.PROTECTION_WORK = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].PROTECTION_WORK_18;
                                    QomOnRccStruct.AWARDED_GRADE = qmInsertModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST[i].AWARDED_GRADE_18;
                                    QomOnRccStruct.IPADD = ipAdd;
                                    QomOnRccStruct.USER_ID = UserId;
                                    eformdbContext.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE.Add(QomOnRccStruct);
                                    eformdbContext.SaveChanges();
                                    RccQomONID++;
                                }

                            }

                            if (StructureType.SelectedValue == "STEEL")
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE eFORM_BRIDGE_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE();

                                int Steel_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE select item.STEEL_ON_ID).Max() + 1 : 1;

                                eFORM_BRIDGE_QM_.STEEL_ON_ID = Steel_ID;
                                eFORM_BRIDGE_QM_.PR_ROAD_CODE = RoadCode;
                                eFORM_BRIDGE_QM_.STRUCTURE_ID = StructID;
                                eFORM_BRIDGE_QM_.EFORM_ID = eformId;
                                eFORM_BRIDGE_QM_.WORK_TYPE = workStatus;
                                eFORM_BRIDGE_QM_.IS_PRESENCE_MOISTURE = qmInsertModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_COMPLETED.IS_PRESENCE_MOISTURE; ;
                                eFORM_BRIDGE_QM_.IS_INDUSTRIAL_UNIT_NEARBY = qmInsertModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_COMPLETED.IS_INDUSTRIAL_UNIT_NEARBY; ;
                                eFORM_BRIDGE_QM_.IS_SANITY_IN_ATMOSPHERE = qmInsertModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_COMPLETED.IS_SALINITY_IN_ATMOSPHERE;
                                eFORM_BRIDGE_QM_.USER_ID = UserId;
                                eFORM_BRIDGE_QM_.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.Add(eFORM_BRIDGE_QM_);
                                eformdbContext.SaveChanges();



                                int SteelMaterialID = eformdbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE select item.MATERIAL_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE MaterialSteelStruct = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE();

                                    MaterialSteelStruct.MATERIAL_ID = SteelMaterialID;
                                    MaterialSteelStruct.PR_ROAD_CODE = RoadCode;
                                    MaterialSteelStruct.EFORM_ID = eformId;
                                    MaterialSteelStruct.STRUCTURE_ID = StructID;
                                    MaterialSteelStruct.STEEL_ON_ID = Steel_ID;
                                    MaterialSteelStruct.IS_PRESENCE_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].IS_PRESENCE_CORROSION_20;
                                    MaterialSteelStruct.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].RD_LOC_20;
                                    MaterialSteelStruct.STEEL_GRADE = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].STEEL_GRADE_20;
                                    MaterialSteelStruct.IS_LAMELLAR_TRAINING = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].IS_LAMELLAR_TRAINING_20;
                                    MaterialSteelStruct.IS_FATIGUE_CRACKING = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].IS_FATIGUE_CRACKING_20;
                                    MaterialSteelStruct.ATMOSPHERE_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].ATMOSPHERE_CORROSION_20;
                                    MaterialSteelStruct.CHEMICAL_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].CHEMICAL_CORROSION_20;
                                    MaterialSteelStruct.STRESS_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].STRESS_CORROSION_20;
                                    MaterialSteelStruct.IS_PRESENCE_BRITTLE_FRACTURE = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].IS_PRESENCE_BRITTLE_FRACTURE_20;
                                    MaterialSteelStruct.IS_PRESENCE_BUCKLING = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].IS_PRESENCE_BUCKLING_20;
                                    MaterialSteelStruct.IS_CHANGE_LOAD_CLASSIFICATION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST[i].IS_CHANGE_LOAD_CLASSIFICATION_20;
                                    MaterialSteelStruct.IPADD = ipAdd;
                                    MaterialSteelStruct.USER_ID = UserId;
                                    eformdbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE.Add(MaterialSteelStruct);
                                    eformdbContext.SaveChanges();
                                    SteelMaterialID++;
                                }

                            }

                            if (StructureType.SelectedValue == "BAILEY")
                            {
                                PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE eFORM_CO_Steel_QM_ = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE();

                                int Bailey_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE select item.BAILEY_ID).Max() + 1 : 1;

                                eFORM_CO_Steel_QM_.BAILEY_ID = Bailey_ID;
                                eFORM_CO_Steel_QM_.PR_ROAD_CODE = RoadCode;
                                eFORM_CO_Steel_QM_.STRUCTURE_ID = StructID;
                                eFORM_CO_Steel_QM_.EFORM_ID = eformId;
                                eFORM_CO_Steel_QM_.WORK_TYPE = workStatus;
                                eFORM_CO_Steel_QM_.IS_BOLT_PLATES_MISSING = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED.IS_BOLT_PLATES_MISSING;
                                eFORM_CO_Steel_QM_.IS_SWAY_BRACES_MISSING = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED.IS_SWAY_BRACES_MISSING;
                                eFORM_CO_Steel_QM_.IS_ANY_CRACK_IN_BAILEY_BRIDGE = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED.IS_ANY_CRACK_IN_BAILEY_BRIDGE;
                                eFORM_CO_Steel_QM_.IS_BEND_IN_BRIDGE_MEMBER = qmInsertModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED.IS_BEND_IN_BRIDGE_MEMBER;
                                eFORM_CO_Steel_QM_.USER_ID = UserId;
                                eFORM_CO_Steel_QM_.IPADD = ipAdd;
                                eformdbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.Add(eFORM_CO_Steel_QM_);
                                eformdbContext.SaveChanges();


                                int BaileyMaterialID = eformdbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE select item.BAILEY_MATERIAL_ID).Max() + 1 : 1;

                                for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST.Count; i++)
                                {
                                    PMGSY.Models.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE MaterialSteelStruct = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE();

                                    MaterialSteelStruct.BAILEY_MATERIAL_ID = BaileyMaterialID;
                                    MaterialSteelStruct.PR_ROAD_CODE = RoadCode;
                                    MaterialSteelStruct.EFORM_ID = eformId;
                                    MaterialSteelStruct.STRUCTURE_ID = StructID;
                                    MaterialSteelStruct.BAILEY_ID = Bailey_ID;
                                    MaterialSteelStruct.IS_PRESENCE_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].IS_PRESENCE_CORROSION_22;
                                    MaterialSteelStruct.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].RD_LOC_22;
                                    MaterialSteelStruct.TYPES_OF_BAILY_BRIDGE = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].TYPES_OF_BAILY_BRIDGE_22;
                                    MaterialSteelStruct.IS_LAMMELLAR_TRAINING = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].IS_LAMELLAR_TRAINING_22;
                                    MaterialSteelStruct.IS_FATIGUE_CRACKING = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].IS_FATIGUE_CRACKING_22;
                                    MaterialSteelStruct.ATMOSPHERIC_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].ATMOSPHERE_CORROSION_22;
                                    MaterialSteelStruct.CHEMICAL_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].CHEMICAL_CORROSION_22;
                                    MaterialSteelStruct.STRESS_CORROSION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].STRESS_CORROSION_22;
                                    MaterialSteelStruct.IS_PANEL_PINS_PLACED_PROPERLY = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].IS_PANEL_PINS_PLACED_PROPERLY_22;
                                    MaterialSteelStruct.IS_CHANGE_IN_LOAD_CLASSIFICATION = qmInsertModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST[i].IS_CHANGE_IN_LOAD_CLASSIFICATION_22;
                                    MaterialSteelStruct.IPADD = ipAdd;
                                    MaterialSteelStruct.USER_ID = UserId;
                                    eformdbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE.Add(MaterialSteelStruct);
                                    eformdbContext.SaveChanges();
                                    BaileyMaterialID++;
                                }
                            }

                        }

                    }


                    #endregion

                    #region vikky 23-28

                    #region Page 23 : EFORM_BRIDGE_QM_LOAD_TEST

                    if (chkBoxArr[7] == 'Y')
                    {

                        int loadId = eformdbContext.EFORM_BRIDGE_QM_LOAD_TEST.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_LOAD_TEST select item.LOAD_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_BRIDGE_QM_LOAD_TEST LoadTest = new PMGSY.Models.EFORM_BRIDGE_QM_LOAD_TEST();
                        LoadTest.LOAD_ID = loadId;
                        LoadTest.EFORM_ID = detailId;
                        LoadTest.USER_ID = UserId;
                        LoadTest.PR_ROAD_CODE = prRoadCode;
                        LoadTest.LOAD_TEST_RESULT = qmInsertModel.BRIDGE_QM_LOAD_TEST.LOAD_TEST_RESULT;
                        LoadTest.ITEM_GRADING_7 = qmInsertModel.BRIDGE_QM_LOAD_TEST.ITEM_GRADING_7;
                        LoadTest.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_LOAD_TEST.IMPROVEMENT_REMARK_7;
                        LoadTest.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_LOAD_TEST.Add(LoadTest);
                        eformdbContext.SaveChanges();

                    }

                    #endregion

                    #region Page 23 : EFORM_BRIDGE_QM_BEARING

                    if (chkBoxArr[8] == 'Y')
                    {

                        int bearId = eformdbContext.EFORM_BRIDGE_QM_BEARING.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_BEARING select item.BEARING_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_BRIDGE_QM_BEARING bearingDetails = new PMGSY.Models.EFORM_BRIDGE_QM_BEARING();
                        bearingDetails.BEARING_ID = bearId;
                        bearingDetails.EFORM_ID = detailId;
                        bearingDetails.USER_ID = UserId;
                        bearingDetails.PR_ROAD_CODE = prRoadCode;
                        bearingDetails.ROLLER_ROCKER_BEARING = qmInsertModel.BRIDGE_QM_BEARING.ROLLER_ROCKER_BEARING;
                        bearingDetails.ELASTOMERIC_BEARING = qmInsertModel.BRIDGE_QM_BEARING.ELASTOMERIC_BEARING;
                        bearingDetails.POT_BEARING = qmInsertModel.BRIDGE_QM_BEARING.POT_BEARING;
                        bearingDetails.SPHERICAL_BEARING = qmInsertModel.BRIDGE_QM_BEARING.SPHERICAL_BEARING;
                        bearingDetails.CYLINDRICAL_BEARING = qmInsertModel.BRIDGE_QM_BEARING.CYLINDRICAL_BEARING;
                        bearingDetails.IS_OTHER_BEARING_TYPE = qmInsertModel.BRIDGE_QM_BEARING.IS_OTHER_BEARING_TYPE;
                        bearingDetails.OTHER_BEARING_TYPE = qmInsertModel.BRIDGE_QM_BEARING.OTHER_BEARING_TYPE;
                        bearingDetails.ITEM_GRADING_8 = qmInsertModel.BRIDGE_QM_BEARING.ITEM_GRADING_8;
                        bearingDetails.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_BEARING.IMPROVEMENT_REMARK_8;
                        bearingDetails.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_BEARING.Add(bearingDetails);
                        eformdbContext.SaveChanges();

                        #region Page 23,24 : EFORM_BRIDGE_QM_CHILD_BEARING_TYPE

                        int condId = eformdbContext.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE select item.CONDITION_ID).Max() + 1 : 1;


                        PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE bearingTypeDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE();
                        bearingTypeDetails.CONDITION_ID = condId;
                        bearingTypeDetails.BEARING_ID = bearId;
                        bearingTypeDetails.EFORM_ID = detailId;
                        bearingTypeDetails.USER_ID = UserId;
                        bearingTypeDetails.PR_ROAD_CODE = prRoadCode;
                        bearingTypeDetails.IS_METALLIC_BEARING = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_METALLIC_BEARING;
                        PdfLoadedCheckBoxField Check_IS_METALLIC_BEARING = loadedForm.Fields["IS_METALLIC_BEARING"] as PdfLoadedCheckBoxField;
                        if (Check_IS_METALLIC_BEARING.Checked)
                        {
                            bearingTypeDetails.IS_RUSTED = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_RUSTED;
                            bearingTypeDetails.IS_FUNCTIONING = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_FUNCTIONING;
                            bearingTypeDetails.IS_GREASE_REQUIRED = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_GREASE_REQUIRED;
                            bearingTypeDetails.IS_CRACK_IN_SUPPORRT_MEMBER = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_CRACK_IN_SUPPORRT_MEMBER;
                            bearingTypeDetails.IS_EFFECTIVE_ANCHOR_BOLT = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_EFFECTIVE_ANCHOR_BOLT;
                            bearingTypeDetails.OTHER_DEFECT_IN_METALLIC = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.OTHER_DEFECT_IN_METALLIC;

                        }

                        bearingTypeDetails.IS_ELASTOMETRIC_BEARING = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_ELASTOMETRIC_BEARING;
                        PdfLoadedCheckBoxField Check_IS_ELASTOMETRIC_BEARING = loadedForm.Fields["IS_ELASTOMETRIC_BEARING"] as PdfLoadedCheckBoxField;
                        if (Check_IS_ELASTOMETRIC_BEARING.Checked)
                        {
                            bearingTypeDetails.IS_PAD_COND_BAD = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_PAD_COND_BAD;
                            bearingTypeDetails.IS_BEARING_CLEAN = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_BEARING_CLEAN;
                            bearingTypeDetails.OTHER_DEFECT_IN_ELASTOMERIC = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.OTHER_DEFECT_IN_ELASTOMERIC;

                        }
                        bearingTypeDetails.OTHER_DEFECT_THAN_BOTH = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.OTHER_DEFECT_THAN_BOTH;
                        bearingTypeDetails.IS_TEST_RESULT_BEARING_AVL = qmInsertModel.BRIDGE_QM_CHILD_BEARING_TYPE.IS_TEST_RESULT_BEARING_AVL;
                        bearingTypeDetails.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE.Add(bearingTypeDetails);
                        eformdbContext.SaveChanges();
                        #endregion
                    }

                    #endregion

                    #region Page 25 : EFORM_BRIDGE_QM_EXPANSION

                    if (chkBoxArr[9] == 'Y')
                    {

                        int expId = eformdbContext.EFORM_BRIDGE_QM_EXPANSION.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_EXPANSION select item.EXPANSION_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_BRIDGE_QM_EXPANSION expDetails = new PMGSY.Models.EFORM_BRIDGE_QM_EXPANSION();
                        expDetails.EXPANSION_ID = expId;
                        expDetails.EFORM_ID = detailId;
                        expDetails.USER_ID = UserId;
                        expDetails.PR_ROAD_CODE = prRoadCode;
                        expDetails.BURIED_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.BURIED_OF_EXPANSION;
                        expDetails.FILLER_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.FILLER_OF_EXPANSION;
                        expDetails.ASPHALTIC_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.ASPHALTIC_OF_EXPANSION;
                        expDetails.COMPRESSION_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.COMPRESSION_OF_EXPANSION;
                        expDetails.SINGLE_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.SINGLE_OF_EXPANSION;
                        expDetails.REINFORCED_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.REINFORCED_OF_EXPANSION;
                        expDetails.MODULAR_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.MODULAR_OF_EXPANSION;
                        expDetails.FINGER_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.FINGER_OF_EXPANSION;
                        expDetails.REINFORCED_COUPLED_OF_EXPANSION = qmInsertModel.BRIDGE_QM_EXPANSION.REINFORCED_COUPLED_OF_EXPANSION;
                        expDetails.IS_ANY_CRACK_IN_COAT = qmInsertModel.BRIDGE_QM_EXPANSION.IS_ANY_CRACK_IN_COAT;
                        expDetails.IS_EXISTING_GAP_IMPROPER = qmInsertModel.BRIDGE_QM_EXPANSION.IS_EXISTING_GAP_IMPROPER;
                        expDetails.IS_CRACKING_IN_BITUMAN = qmInsertModel.BRIDGE_QM_EXPANSION.IS_CRACKING_IN_BITUMEN;
                        expDetails.IS_SPLITTING_IN_NEOPRENE = qmInsertModel.BRIDGE_QM_EXPANSION.IS_SPLITTING_IN_NEOPRENE;
                        expDetails.IS_CORROSION_IS_VISIBLE = qmInsertModel.BRIDGE_QM_EXPANSION.IS_CORROSION_IS_VISIBLE;
                        expDetails.IS_DEBRIS_IN_JOINTS = qmInsertModel.BRIDGE_QM_EXPANSION.IS_DEBRIS_IN_JOINTS;
                        expDetails.OBSERVATION_FOUND = qmInsertModel.BRIDGE_QM_EXPANSION.OBSERVATION_FOUND;
                        expDetails.OTHER_OBSER_FOUND = qmInsertModel.BRIDGE_QM_EXPANSION.OTHER_OBSER_FOUND;
                        expDetails.ITEM_GRADING_9 = qmInsertModel.BRIDGE_QM_EXPANSION.ITEM_GRADING_9;
                        expDetails.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_EXPANSION.IMPROVEMENT_REMARK_9;
                        expDetails.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_EXPANSION.Add(expDetails);
                        eformdbContext.SaveChanges();

                    }

                    #endregion


                    #region Page 26 : EFORM_BRIDGE_QM_APPROACH

                    if (chkBoxArr[10] == 'Y')
                    {

                        int approachid = eformdbContext.EFORM_BRIDGE_QM_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_APPROACH select item.APPROACH_ID).Max() + 1 : 1;

                        PMGSY.Models.EFORM_BRIDGE_QM_APPROACH approachDetails = new PMGSY.Models.EFORM_BRIDGE_QM_APPROACH();
                        approachDetails.APPROACH_ID = approachid;
                        approachDetails.EFORM_ID = detailId;
                        approachDetails.USER_ID = UserId;
                        approachDetails.PR_ROAD_CODE = prRoadCode;
                        approachDetails.ITEM_GRADING_10 = qmInsertModel.BRIDGE_QM_APPROACH.ITEM_GRADING_10;
                        approachDetails.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_APPROACH.IMPROVEMENT_REMARK_10;
                        approachDetails.IPADD = ipAdd;
                        eformdbContext.EFORM_BRIDGE_QM_APPROACH.Add(approachDetails);
                        eformdbContext.SaveChanges();

                        #region Page 26 :EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH
                        int embId = eformdbContext.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH select item.EMBANKMENT_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST.Count; i++)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH embarkDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH();
                            embarkDetails.EMBANKMENT_ID = embId;
                            embarkDetails.APPROACH_ID = approachid;
                            embarkDetails.EFORM_ID = detailId;
                            embarkDetails.USER_ID = UserId;
                            embarkDetails.PR_ROAD_CODE = prRoadCode;
                            embarkDetails.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST[i].RD_LOC_26_1;
                            embarkDetails.SOIL_SUITABILITY = qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST[i].SOIL_SUITABILITY_26_1;
                            embarkDetails.COMPACTION = qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST[i].COMPACTION_26_1;
                            embarkDetails.SIDE_SLOPES = qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST[i].SIDE_SLOPES_26_1;
                            embarkDetails.SHOULDERS = qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST[i].SHOULDERS_26_1;
                            embarkDetails.GRADE = qmInsertModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST[i].GRADE_26_1;
                            embarkDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH.Add(embarkDetails);
                            eformdbContext.SaveChanges();
                            embId++;
                        }

                        #endregion

                        #region Page 26 :EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH
                        int subBaseId = eformdbContext.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH select item.SUB_BASE_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST.Count; i++)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH suBaseDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH();

                            suBaseDetails.SUB_BASE_ID = subBaseId;
                            suBaseDetails.APPROACH_ID = approachid;
                            suBaseDetails.EFORM_ID = detailId;
                            suBaseDetails.USER_ID = UserId;
                            suBaseDetails.PR_ROAD_CODE = prRoadCode;
                            suBaseDetails.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].RD_LOC_26_2;
                            suBaseDetails.IS_GRADING_CONFORM = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].IS_GRADING_CONFORM_26_2;
                            suBaseDetails.IS_MATERIAL_SUITABLE = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].IS_MATERIAL_SUITABLE_26_2;
                            suBaseDetails.IS_DRY_DENSITY = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].IS_DRY_DENSITY_26_2;
                            suBaseDetails.COMPACTION = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].COMPACTION_26_2;
                            suBaseDetails.IS_COMPACTION_INADEQUATE = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].IS_COMPACTION_INADEQUATE_26_2;
                            suBaseDetails.THICKNESS_PER_DPR = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].THICKNESS_PER_DPR_26_2;
                            suBaseDetails.MEASURED_THICKNESS = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].MEASURED_THICKNESS_26_2;
                            suBaseDetails.IS_PRESCRIBED_THICKNESS_PROV = qmInsertModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST[i].IS_PRESCRIBED_THICKNESS_PROV_26_2;
                            suBaseDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH.Add(suBaseDetails);
                            eformdbContext.SaveChanges();
                            subBaseId++;
                        }

                        #endregion

                        #region Page 26 :EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH
                        int baseCourseId = eformdbContext.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH select item.BASE_COURSE_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST.Count; i++)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH suBaseDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH();

                            suBaseDetails.BASE_COURSE_ID = baseCourseId;
                            suBaseDetails.APPROACH_ID = approachid;
                            suBaseDetails.EFORM_ID = detailId;
                            suBaseDetails.USER_ID = UserId;
                            suBaseDetails.PR_ROAD_CODE = prRoadCode;
                            suBaseDetails.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].RD_LOC_26_3;
                            suBaseDetails.GRADING_AGGREGATE = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].GRADING_AGGREGATE_26_3;
                            suBaseDetails.PLASTICITY_FILLER = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].PLASTICITY_FILLER_26_3;
                            suBaseDetails.MATERIAL_VOLUME_AGGR = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].MATERIAL_VOLUME_AGGR_26_3;
                            suBaseDetails.COMP_BASED_VOLUMETRIC = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].COMP_BASED_VOLUMETRIC_26_3;
                            suBaseDetails.DESIGN_THICKNESS = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].DESIGN_THICKNESS_26_3;
                            suBaseDetails.WBM_THICKNESS = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].WBM_THICKNESS_26_3;
                            suBaseDetails.IS_THICKNESS_ADEQUATE = qmInsertModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST[i].IS_THICKNESS_ADEQUATE_26_3;
                            suBaseDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH.Add(suBaseDetails);
                            eformdbContext.SaveChanges();
                            baseCourseId++;
                        }

                        #endregion

                        #region Page 27 :EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH
                        int wearingCourseId = eformdbContext.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH select item.WEARING_COURSE_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST.Count; i++)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH wearingCourseDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH();

                            wearingCourseDetails.WEARING_COURSE_ID = wearingCourseId;
                            wearingCourseDetails.APPROACH_ID = approachid;
                            wearingCourseDetails.EFORM_ID = detailId;
                            wearingCourseDetails.USER_ID = UserId;
                            wearingCourseDetails.PR_ROAD_CODE = prRoadCode;
                            wearingCourseDetails.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].RD_LOC_27_1;
                            wearingCourseDetails.GRADE_COARSE_AGGR = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].GRAD_COARSE_AGGR_27_1;
                            wearingCourseDetails.TEMP_PER_QCR = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].TEMP_PER_QCR_27_1;
                            wearingCourseDetails.BITUMEN_AGGR_PER_QCR = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].BITUMEN_AGGR_PER_QCR_27_1;
                            wearingCourseDetails.BITUMEN_CONTENT = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].BITUMEN_CONTENT_27_1;
                            wearingCourseDetails.THICKNESS_BY_QM = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].THICKNESS_BY_QM_27_1;
                            wearingCourseDetails.THICKNESS_LAYER_GRADE = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].THICKNESS_LAYER_GRADE_27_1;
                            wearingCourseDetails.SURFACE_UNEVENNESS = qmInsertModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST[i].SURFACE_UNEVENNESS_27_1;
                            wearingCourseDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH.Add(wearingCourseDetails);
                            eformdbContext.SaveChanges();
                            wearingCourseId++;
                        }

                        #endregion


                        #region Page 27 : EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH

                        PdfLoadedCheckBoxField Check_Item_10_5 = loadedForm.Fields["Item_10_5"] as PdfLoadedCheckBoxField;
                        if (Check_Item_10_5.Checked)
                        {

                            int protId = eformdbContext.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH select item.PROTECH_ID).Max() + 1 : 1;

                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH protDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH();
                            protDetails.PROTECH_ID = protId;
                            protDetails.EFORM_ID = detailId;
                            protDetails.USER_ID = UserId;
                            protDetails.PR_ROAD_CODE = prRoadCode;
                            protDetails.APPROACH_ID = approachid;
                            protDetails.IS_DPR_PROV_PROTE_WORKS = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_DPR_PROV_PROTE_WORKS;
                            protDetails.IS_RETAINING_WALL = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_RETAINING_WALL;
                            protDetails.IS_BREAST_WALL = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_BREAST_WALL;
                            protDetails.IS_PARAPET_WALL = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_PARAPET_WALL;
                            protDetails.IS_ANY_OTHER_PROT_WORK = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_ANY_OTHER_PROT_WORK;
                            protDetails.IS_ANY_OTHER_PROT_WORKA = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_ANY_OTHER_PROT_WORK_A;
                            protDetails.IS_ANY_OTHER_PROT_WORKB = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_ANY_OTHER_PROT_WORK_B;
                            protDetails.WORKMENSHIP_STONE_ACCEP = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.WORKMENSHIP_STONE_ACCEP;
                            protDetails.IS_BOND_STONE_PROVIDED = qmInsertModel.BRIDGE_QM_CHILD_PROTECH_APPROACH.IS_BOND_STONE_PROVIDED;
                            protDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH.Add(protDetails);
                            eformdbContext.SaveChanges();

                        }

                        #endregion

                        #region Page 27 :EFORM_BRIDGE_QM_CHILD_QOM_APPROACH
                        int qomId = eformdbContext.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH select item.QOM_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST.Count; i++)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH qomDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH();

                            qomDetails.QOM_ID = qomId;
                            qomDetails.APPROACH_ID = approachid;
                            qomDetails.EFORM_ID = detailId;
                            qomDetails.USER_ID = UserId;
                            qomDetails.PR_ROAD_CODE = prRoadCode;
                            qomDetails.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST[i].RD_LOC_27_2;
                            qomDetails.STRUCTURE_TYPE = qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST[i].STRUCTURE_TYPE_27_2;
                            qomDetails.PROTECTION_TYPE = qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST[i].PROTECTION_TYPE_27_2;
                            qomDetails.QOM_SPECIFI = qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST[i].QOM_SPECIFI_27_2;
                            qomDetails.DESIGN_SHAPE = qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST[i].DESIGN_SHAPE_27_2;
                            qomDetails.QUALITY_ASSESMENT = qmInsertModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST[i].QUALITY_ASSESMENT_27_2;
                            qomDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH.Add(qomDetails);
                            eformdbContext.SaveChanges();
                            qomId++;
                        }

                        #endregion

                        #region Page 28 :EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH
                        int retId = eformdbContext.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH.Any() ? (from item in eformdbContext.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH select item.RETAIN_ID).Max() + 1 : 1;
                        for (int i = 0; i < qmInsertModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST.Count; i++)
                        {
                            PMGSY.Models.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH workmanshipDetails = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH();

                            workmanshipDetails.RETAIN_ID = retId;
                            workmanshipDetails.APPROACH_ID = approachid;
                            workmanshipDetails.EFORM_ID = detailId;
                            workmanshipDetails.USER_ID = UserId;
                            workmanshipDetails.PR_ROAD_CODE = prRoadCode;
                            workmanshipDetails.RD_LOC = qmInsertModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST[i].RD_LOC_28;
                            workmanshipDetails.RETAIN_STRUCTURE = qmInsertModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST[i].RETAIN_STRUCTURE_28;
                            workmanshipDetails.IS_ANY_DEFECT = qmInsertModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST[i].IS_ANY_DEFECT__28;
                            workmanshipDetails.IS_WEEP_HOLES_PROVIDED = qmInsertModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST[i].IS_WEEP_HOLES_PROVIDED_28;
                            workmanshipDetails.IS_ADEQUACY_WEEP_HOLES = qmInsertModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST[i].IS_ADEQUACY_WEEP_HOLES_28;
                            workmanshipDetails.IPADD = ipAdd;
                            eformdbContext.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH.Add(workmanshipDetails);
                            eformdbContext.SaveChanges();
                            retId++;
                        }

                        #endregion



                    }

                    #endregion








                    #endregion


                    #region Bhushan 29 to 35
                    PdfLoadedCheckBoxField Item_11 = loadedForm.Fields["Item_11"] as PdfLoadedCheckBoxField;
                    if (chkBoxArr[11] == 'Y')
                    {
                        #region 11.1 Observations
                        PMGSY.Models.EFORM_BRIDGE_QM_FURNITURE_MARKINGS bridgeQmFurnMark = new PMGSY.Models.EFORM_BRIDGE_QM_FURNITURE_MARKINGS();

                        bridgeQmFurnMark.FM_ID = eformdbContext.EFORM_BRIDGE_QM_FURNITURE_MARKINGS.Any() ? eformdbContext.EFORM_BRIDGE_QM_FURNITURE_MARKINGS.Select(x => x.FM_ID).Max() + 1 : 1;
                        bridgeQmFurnMark.EFORM_ID = detailId;
                        bridgeQmFurnMark.PR_ROAD_CODE = prRoadCode;
                        bridgeQmFurnMark.IS_MAIN_INFO_BOARD_FIXED = qmInsertModel.BRIDGE_QM_FURNITURE_MARKINGS.IS_MAIN_INFO_BOARD_FIXED;
                        bridgeQmFurnMark.IS_CITIZEN_INFO_BOARD_FIXED = qmInsertModel.BRIDGE_QM_FURNITURE_MARKINGS.IS_CITIZEN_INFO_BOARD_FIXED;
                        bridgeQmFurnMark.ITEM_GRADING_11_1 = qmInsertModel.BRIDGE_QM_FURNITURE_MARKINGS.ITEM_GRADING_11_1;
                        bridgeQmFurnMark.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_FURNITURE_MARKINGS.IMPROVEMENT_REMARK_11_1 == null ? null : qmInsertModel.BRIDGE_QM_FURNITURE_MARKINGS.IMPROVEMENT_REMARK_11_1;
                        bridgeQmFurnMark.IPADD = ipAdd;
                        bridgeQmFurnMark.USER_ID = UserId;
                        eformdbContext.EFORM_BRIDGE_QM_FURNITURE_MARKINGS.Add(bridgeQmFurnMark);
                        eformdbContext.SaveChanges();
                        #endregion

                        #region 11.2 Observations
                        PMGSY.Models.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING bridgeQmChildObsFurnMark = new PMGSY.Models.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING();
                        bridgeQmChildObsFurnMark.OBS_ID = eformdbContext.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.Any() ? eformdbContext.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.Select(x => x.OBS_ID).Max() + 1 : 1;
                        bridgeQmChildObsFurnMark.EFORM_ID = detailId;
                        bridgeQmChildObsFurnMark.FM_ID = bridgeQmFurnMark.FM_ID;
                        bridgeQmChildObsFurnMark.PR_ROAD_CODE = prRoadCode;
                        bridgeQmChildObsFurnMark.IS_GUARD_STONES_FIXED = qmInsertModel.BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.IS_GUARD_STONES_FIXED;
                        bridgeQmChildObsFurnMark.IS_MANADATORY_CAUTION_SIGNAGE = qmInsertModel.BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.IS_MANDATORY_CAUTION_SIGNAGE;
                        bridgeQmChildObsFurnMark.ITEM_GRADING_11_2 = qmInsertModel.BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.ITEM_GRADING_11_2;
                        bridgeQmChildObsFurnMark.IMPROVEMENT_REMARK = qmInsertModel.BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.IMPROVEMENT_REMARK_11_2 == null ? null : qmInsertModel.BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.IMPROVEMENT_REMARK_11_2;
                        bridgeQmChildObsFurnMark.IPADD = ipAdd;
                        bridgeQmChildObsFurnMark.USER_ID = UserId;
                        eformdbContext.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.Add(bridgeQmChildObsFurnMark);
                        eformdbContext.SaveChanges();
                        #endregion

                    }
                    //  scope.Complete();

                    #region EFORM_BRIDGE_QM_DEFICIENCY

                    PMGSY.Models.EFORM_BRIDGE_QM_DEFICIENCY deficiencyModel = new PMGSY.Models.EFORM_BRIDGE_QM_DEFICIENCY();

                    deficiencyModel.DEF_ID = eformdbContext.EFORM_BRIDGE_QM_DEFICIENCY.Any() ? eformdbContext.EFORM_BRIDGE_QM_DEFICIENCY.Select(x => x.DEF_ID).Max() + 1 : 1;
                    deficiencyModel.EFORM_ID = detailId;
                    deficiencyModel.PR_ROAD_CODE = prRoadCode;
                    deficiencyModel.IS_NO_DEFICIENCY = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_NO_DEFICIENCY;
                    deficiencyModel.IS_BOQ_NOT_CLEAR = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_BOQ_NOT_CLEAR;
                    deficiencyModel.IS_NO_SPANS_INSUFFICIENT = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_NO_SPANS_INSUFFICIENT;
                    deficiencyModel.IS_NO_PROVISION_PROTECTION_WORK = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_NO_PROVISION_PROTECTIVE_WORK;
                    deficiencyModel.IS_HYDROLIC_DESIGN_DPR = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_HYDROLIC_DESIGN_DPR;
                    deficiencyModel.IS_GUARD_STONE_IN_DPR = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_GUARD_STONE_IN_DPR;
                    deficiencyModel.IS_DEVIATION_ALIGNMENT = qmInsertModel.BRIDGE_QM_DEFICIENCY.IS_DEVIATION_ALIGNMENT;
                    deficiencyModel.OTHER_COMMENT = qmInsertModel.BRIDGE_QM_DEFICIENCY.OTHR_COMMENT;
                    deficiencyModel.IPADD = ipAdd;
                    deficiencyModel.USER_ID = UserId;
                    eformdbContext.EFORM_BRIDGE_QM_DEFICIENCY.Add(deficiencyModel);
                    eformdbContext.SaveChanges();

                    #endregion


                    #region EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG
                    PMGSY.Models.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG inProgAsPerProgModel = new PMGSY.Models.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG();

                    inProgAsPerProgModel.STATUS_ID = eformdbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Any() ? eformdbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Select(x => x.STATUS_ID).Max() + 1 : 1;
                    inProgAsPerProgModel.EFORM_ID = detailId;
                    inProgAsPerProgModel.PR_ROAD_CODE = prRoadCode;
                    inProgAsPerProgModel.WORK_STATUS = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.WORK_STATUS_30;
                    inProgAsPerProgModel.C_IS_COMPLETED_WITH_DELAY = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.C_IS_COMPLETED_WITH_DELAY;
                    inProgAsPerProgModel.C_IS_PERIOD_OF_DELAY = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.C_PERIOD_OF_DELAY;
                    inProgAsPerProgModel.C_AMOUNT_STATUS = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.C_AMOUNT_STATUS;
                    inProgAsPerProgModel.C_AMOUNT = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.C_AMOUNT;
                    inProgAsPerProgModel.C_COMMENT = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.C_COMMENT;
                    inProgAsPerProgModel.P_IS_AS_PER_SCHEDULE = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.P_IS_AS_PER_SCHEDULE;
                    inProgAsPerProgModel.P_EXT_MONTHS = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.P_EXT_MONTHS;
                    inProgAsPerProgModel.P_IS_AMOUNT_REFUNDED = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.P_IS_AMOUNT_REFUNDED;
                    inProgAsPerProgModel.P_AMOUNT = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.P_AMOUNT;
                    inProgAsPerProgModel.P_PANELTY_AMOUNT = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.P_PANELTY_AMOUNT;
                    inProgAsPerProgModel.P_COMMENT = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.P_COMMENT;
                    inProgAsPerProgModel.IPADD = ipAdd;
                    inProgAsPerProgModel.USER_ID = UserId;
                    eformdbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Add(inProgAsPerProgModel);
                    eformdbContext.SaveChanges();
                    #endregion


                    #region EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST
                    PMGSY.Models.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST inProgAsPerCostModel = new PMGSY.Models.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST();

                    inProgAsPerCostModel.STATUS_ID = eformdbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Any() ? eformdbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Select(x => x.STATUS_ID).Max() + 1 : 1;
                    inProgAsPerCostModel.EFORM_ID = detailId;
                    inProgAsPerCostModel.PR_ROAD_CODE = prRoadCode;
                    inProgAsPerCostModel.WORK_STATUS = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.WORK_STATUS_31;
                    inProgAsPerCostModel.SANCTION_COST = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.SANCTION_COST;
                    inProgAsPerCostModel.COMPLETION_COST = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.COMPLETION_COST;
                    inProgAsPerCostModel.REASON_EXTRA_COST = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.REASON_EXTRA_COST;
                    inProgAsPerCostModel.ACTION_BY_PIU = qmInsertModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.ACTION_BY_PIU;
                    inProgAsPerCostModel.IPADD = ipAdd;
                    inProgAsPerCostModel.USER_ID = UserId;
                    eformdbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Add(inProgAsPerCostModel);
                    eformdbContext.SaveChanges();
                    #endregion


                    #region EFORM_BRIDGE_QM_ACTION_TAKEN_PIU


                    int actionId = eformdbContext.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU.Any() ? eformdbContext.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU.Select(x => x.ACTION_ID).Max() + 1 : 1;
                    for (int i = 0; i < qmInsertModel.BRIDGE_QM_ACTION_TAKEN_PIU_LIST.Count; i++)
                    {
                        PMGSY.Models.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU actionTakenModel = new PMGSY.Models.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU();
                        actionTakenModel.ACTION_ID = actionId;
                        actionTakenModel.EFORM_ID = detailId;
                        actionTakenModel.PR_ROAD_CODE = prRoadCode;
                        actionTakenModel.PREV_QM_DESIG = qmInsertModel.BRIDGE_QM_ACTION_TAKEN_PIU_LIST[i].PREV_QM_DESIG;
                        actionTakenModel.PREV_QM_OBSERVATION = qmInsertModel.BRIDGE_QM_ACTION_TAKEN_PIU_LIST[i].PREV_QM_OBSERVATION;
                        actionTakenModel.ACTION_TAKEN_PIU = qmInsertModel.BRIDGE_QM_ACTION_TAKEN_PIU_LIST[i].ACTION_TAKEN_PIU;
                        actionTakenModel.OBSERVATION_ON_PIU_ACTION = qmInsertModel.BRIDGE_QM_ACTION_TAKEN_PIU_LIST[i].OBSERVATION_ON_PIU_ACTION;
                        actionTakenModel.IPADD = ipAdd;
                        actionTakenModel.USER_ID = UserId;
                        eformdbContext.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU.Add(actionTakenModel);
                        eformdbContext.SaveChanges();
                        actionId++;
                    }


                    #endregion

                    #region EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION
                    PMGSY.Models.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION diffInObsModel = new PMGSY.Models.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION();

                    diffInObsModel.DIFFERENCE_ID = eformdbContext.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.Any() ? eformdbContext.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.Select(x => x.DIFFERENCE_ID).Max() + 1 : 1;
                    diffInObsModel.EFORM_ID = detailId;
                    diffInObsModel.PR_ROAD_CODE = prRoadCode;
                    diffInObsModel.IS_DIFFERENCE_FOUND = qmInsertModel.BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.IS_DIFFERENCE_FOUND;
                    diffInObsModel.COMMENT_ON_DIFFERENCE = qmInsertModel.BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.COMMENT_ON_DIFFERENCE;
                    diffInObsModel.OTHER_OBSERVATION = qmInsertModel.BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.OTHER_OBSERVATION;
                    diffInObsModel.IPADD = ipAdd;
                    diffInObsModel.USER_ID = UserId;
                    eformdbContext.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.Add(diffInObsModel);
                    eformdbContext.SaveChanges();


                    #endregion

                    #region EFORM_BRIDGE_QM_OVERALL_GRADING
                    PMGSY.Models.EFORM_BRIDGE_QM_OVERALL_GRADING overallGradModel = new PMGSY.Models.EFORM_BRIDGE_QM_OVERALL_GRADING();

                    overallGradModel.GRADING_ID = eformdbContext.EFORM_BRIDGE_QM_OVERALL_GRADING.Any() ? eformdbContext.EFORM_BRIDGE_QM_OVERALL_GRADING.Select(x => x.GRADING_ID).Max() + 1 : 1;
                    overallGradModel.EFORM_ID = detailId;
                    overallGradModel.PR_ROAD_CODE = prRoadCode;
                    overallGradModel.QUALITY_ARRANGEMENT = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.QUALITY_ARRANGEMENT;
                    overallGradModel.ATT_TO_QUALITY = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.ATT_TO_QUALITY;
                    overallGradModel.FOUNDATION = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.FOUNDATION;
                    overallGradModel.SUBSTRUCTURE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.SUBSTRUCTURE;
                    overallGradModel.SUPERSTRUCTURE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.SUPERSTRUCTURE;
                    overallGradModel.LOAD_TEST = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.LOAD_TEST;
                    overallGradModel.BEARING = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BEARING;
                    overallGradModel.BEARING_A = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BEARING_A;
                    overallGradModel.BEARING_B = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BEARING_B;
                    overallGradModel.EXPANSION_JOINTS = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.EXPANSION_JOINTS;
                    overallGradModel.EXPANSION_JOINTS_A = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.EXPANSION_JOINTS_A;
                    overallGradModel.EXPANSION_JOINTS_B = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.EXPANSION_JOINTS_B;
                    overallGradModel.APPROACH = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.APPROACHES;
                    overallGradModel.APPROACH_EMBANKMENT = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.APPROACH_EMBANKMENT;
                    overallGradModel.APPROACH_SUBBASE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.APPROACH_SUBBASE;
                    overallGradModel.APPROACH_BASECOURSE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.APPROACH_BASECOURSE;
                    overallGradModel.APPROACH_WEARINGCOURSE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.APPROACH_WEARINGCOURSE;
                    overallGradModel.APPROACH_PROTECTIONWORK = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.APPROACH_PROTECTIONWORK;
                    overallGradModel.BRIDGE_FURNITURE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BRIDGE_FURNITURE;
                    overallGradModel.BRIDGE_FURNITURE_MAIN_INFO = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BRIDGE_FURNITURE_MAIN_INFO;
                    overallGradModel.BRIDGE_FURN_CITIZEN_BOARD = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BRIDGE_FURN_CITIZEN_BOARD;
                    overallGradModel.BRIDGE_FURN_GUARD_STONE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BRIDGE_FURN_GUARD_STONE;
                    overallGradModel.BRIDGE_FURN_CAUTION_SIGNAGE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.BRIDGE_FURN_CAUTION_SIGNAGE;
                    overallGradModel.OVERALL_GRADING = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.OVERALL_GRADING;
                    overallGradModel.QM_NAME = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.QM_NAME_34;
                    overallGradModel.UPLOAD_DATE = qmInsertModel.BRIDGE_QM_OVERALL_GRADING.UPLOAD_DATE_34;
                    overallGradModel.IPADD = ipAdd;
                    overallGradModel.USER_ID = UserId;
                    eformdbContext.EFORM_BRIDGE_QM_OVERALL_GRADING.Add(overallGradModel);
                    eformdbContext.SaveChanges();

                    #endregion


                    #region EFORM_BRIDGE_QM_QUALITY_GRADING
                    PMGSY.Models.EFORM_BRIDGE_QM_QUALITY_GRADING qualityGradModel = new PMGSY.Models.EFORM_BRIDGE_QM_QUALITY_GRADING();

                    qualityGradModel.GRADING_ID = eformdbContext.EFORM_BRIDGE_QM_QUALITY_GRADING.Any() ? eformdbContext.EFORM_BRIDGE_QM_QUALITY_GRADING.Select(x => x.GRADING_ID).Max() + 1 : 1;
                    qualityGradModel.EFORM_ID = detailId;
                    qualityGradModel.PR_ROAD_CODE = prRoadCode;
                    qualityGradModel.I2_QUALITY_ARRANGEMENTS = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I2_QUALITY_ARRANGEMENTS;
                    qualityGradModel.I3_ATTENTION_QUALITY = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I3_ATTENTION_QUALITY;
                    qualityGradModel.I4_FOUNDATION = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I4_FOUNDATION;
                    qualityGradModel.I5_SUBSTRUCTURE = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I5_SUBSTRUCTURE;
                    qualityGradModel.I6_SUPERSTRUCTURE = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I6_SUPERSTRUCTURE;
                    qualityGradModel.I7_LOAD_TEST = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I7_LOAD_TEST;
                    qualityGradModel.I8_CONDITION_BEARING = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I8_CONDITION_BEARING;
                    qualityGradModel.I9_EXPANSION_JOINT = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I9_EXPANSION_JOINT;
                    qualityGradModel.I10_APPROACHES = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I10_APPROACHES;
                    qualityGradModel.I11_BRIDGE_FURNITURE = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.I11_BRIDGE_FURNITURE;
                    qualityGradModel.UPLOAD_DATE = qmInsertModel.BRIDGE_QM_QUALITY_GRADING.UPLOAD_DATE_35;
                    qualityGradModel.IPADD = ipAdd;
                    qualityGradModel.USER_ID = UserId;
                    eformdbContext.EFORM_BRIDGE_QM_QUALITY_GRADING.Add(qualityGradModel);
                    eformdbContext.SaveChanges();

                    #endregion
                    #endregion



                    string checksum = eformdbContext.EFORM_DU_LOG.Where(s => s.EFORM_ID == detailId && (s.USER_TYPE == "N" || s.USER_TYPE == "S")).OrderByDescending(x => x.LOG_ID).Select(m => m.PDF_CHECKSUM).FirstOrDefault();

                    int logId = Convert.ToInt32(eformdbContext.EFORM_DU_LOG.Any() ? (from item in eformdbContext.EFORM_DU_LOG select item.LOG_ID).Max() + 1 : 1);
                    if (checksum != null)
                    {
                        EFORM_DU_LOG model = new EFORM_DU_LOG();
                        model.EFORM_ID = detailId;
                        model.LOG_ID = logId;
                        model.USER_ACTIVITY = "U";
                        model.USER_TYPE = type;
                        model.ACTIVITY_DATE = DateTime.Now;
                        model.USERID = UserId;
                        model.PDF_CHECKSUM = checksum;
                        model.IPADD = ipAdd;
                        if (templateVersionValue != "")
                        {
                            model.TEMPLATE_VERSION = templateVersionValue;
                        }
                        else
                        {
                            model.TEMPLATE_VERSION = "V1.0";
                        }
                        eformdbContext.EFORM_DU_LOG.Add(model);
                        eformdbContext.SaveChanges();

                    }
                    uploaded_File = Path.Combine(Uploaded_Path + "\\" + schdYear + "\\" + schdMonth, fname);
                    loadedDocument.Save(uploaded_File);
                    loadedDocument.Close(true);


                    #region COMBINE PDF
                    ////COMBINE pdf
                    //PdfDocument finalDoc = new PdfDocument();



                    //if (!Directory.Exists(combine_uploaded_path))
                    //    Directory.CreateDirectory(combine_uploaded_path);
                    //string uploaded_path_Piu = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId && x.USER_TYPE == "P").Select(s => s.FILE_PATH).FirstOrDefault();
                    //var fileNamePIU = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId && x.USER_TYPE == "P").Select(s => s.FILE_NAME).FirstOrDefault();

                    //string fullPath = Path.Combine(Uploaded_Path, uploaded_File);
                    //byte[] FileBytesQM = System.IO.File.ReadAllBytes(fullPath);
                    //Stream streamQM = new MemoryStream(FileBytesQM);

                    //string fullPathPIU = Path.Combine(uploaded_path_Piu, fileNamePIU);
                    //byte[] FileBytesPIU = System.IO.File.ReadAllBytes(fullPathPIU);
                    //Stream streamPIU = new MemoryStream(FileBytesPIU);

                    //Stream[] streams = { streamPIU, streamQM };

                    //PdfDocument.Merge(finalDoc, streams);
                    //string MergeFile = "C_" + fname;

                    //var fullFilePath = Path.Combine(combine_uploaded_path + "\\" + schdYear + "\\" + schdMonth, MergeFile);

                    //finalDoc.Save(fullFilePath);
                    #endregion

                    scope.Complete();

                }


            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.SaveToBridgeQMDb");
                validationList.Add(new SelectListItem { Text = "Error occured while uploading the file, please contact OMMAS team" });

            }
            finally
            {

                if (dbContext != null)
                {
                    dbContext.Dispose();
                }
                loadedDocument.Close(true);
                file.InputStream.Flush();
                file.InputStream.Close();
            }
            return validationList;

        }

        public EFORM_BRIDGE_QM_PREVIEW_MODEL PreviewBridgeQM_SavedDataDAL(int eformId)
        {

            #region model assigning

            PMGSYEntities dbContext = new PMGSYEntities();

            #region saurabh

            EFORM_BRIDGE_QM_PREVIEW_MODEL objQMBridge_PreviewModel = new EFORM_BRIDGE_QM_PREVIEW_MODEL();

            PIU_BRIDGE_GET_PREFILLRD_DETAILS objPiuBridge_Prefilled_viewModel = new PIU_BRIDGE_GET_PREFILLRD_DETAILS();
            EFORM_BRIDGE_QM_GENERAL_DETAILS_VIEW objPiuBridge_General_ViewModel = new EFORM_BRIDGE_QM_GENERAL_DETAILS_VIEW();
            EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS_VIEW QM_ARRANGEMENTS_OBS_DETAILS_VIEW = new EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS_VIEW();
            EFORM_BRIDGE_QM_QUALITY_ATTENTION_VIEW eFORM_BRIDGE_QM_QUALITY = new EFORM_BRIDGE_QM_QUALITY_ATTENTION_VIEW();
            List<EFORM_BRIDGE_QM_QC_TEST_DETAILS_VIEW> eFORM_BRIDGE_QM_QC_TEST = new List<EFORM_BRIDGE_QM_QC_TEST_DETAILS_VIEW>();
            List<EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_VIEW> VERIFICATION_DETAILS_VIEW = new List<EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_VIEW>();

            EFORM_BRIDGE_QM_ONGOING_FOUNDATION_VIEW eFORM_BRIDGE_QM_ONGOING = new EFORM_BRIDGE_QM_ONGOING_FOUNDATION_VIEW();
            List<EFORM_BRIDGE_PIU_PRGS_DETAILS_VIEW> objPiuBridge_Progress_ViewList = new List<EFORM_BRIDGE_PIU_PRGS_DETAILS_VIEW>();
            EFORM_BRIDGE_QM_FOUNDATION_VIEW eFORM_BRIDGE_QM_FOUNDATION_ = new EFORM_BRIDGE_QM_FOUNDATION_VIEW();
            EFORM_BRIDGE_QM_COMPLETED_FOUNDATION_VIEW COMPLETE_FOUNDATION = new EFORM_BRIDGE_QM_COMPLETED_FOUNDATION_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_VIEW> QOM_FOUNDATION_VIEW = new List<EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_VIEW> QM_CHILD_ON_WORKMENSHIP = new List<EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_VIEW> COMPL_QOM_FOUNDATION = new List<EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_VIEW>();

            EFORM_BRIDGE_QM_SUBSTRUCTURE_VIEW BRIDGE_Substructure = new EFORM_BRIDGE_QM_SUBSTRUCTURE_VIEW();
            EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE_VIEW ONGOING_SUBSTRUCTURE = new EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_VIEW> ONGOING_QOM_SUBSTRUCTURE = new List<EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_VIEW> ONGOING_WOM_SUBSTRUCTURE = new List<EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_VIEW>();
            EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE_VIEW Completed_SUBSTRUCTURE = new EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_VIEW> Completed_QOM_SUBSTRUCTURE = new List<EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_VIEW>();
            #endregion

            #region rohit
            EFORM_BRIDGE_QM_SUPERSTRUCTURE_VIEW objQMBridge_SuperStructure = new EFORM_BRIDGE_QM_SUPERSTRUCTURE_VIEW();

            EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_ONGOING_VIEW objQMBridge_SuperStruct_RCC_ON = new EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_ONGOING_VIEW();
            EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_COMPLETED_VIEW objQMBridge_SuperStruct_RCC_COMP = new EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_COMPLETED_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_VIEW> objQMBridge_SuperStruct_RCC_ON_List = new List<EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_VIEW> objQMBridge_SuperStruct_RCC_COMP_List = new List<EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_VIEW>();

            EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_ONGOING_VIEW objQMBridge_SuperStruct_Steel_ON = new EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_ONGOING_VIEW();
            EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_COMPLETED_VIEW objQMBridge_SuperStruct_Steel_COMP = new EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_COMPLETED_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_VIEW> objQMBridge_SuperStruct_Steel_ON_List = new List<EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_VIEW> objQMBridge_SuperStruct_Steel_COMP_List = new List<EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_VIEW>();

            EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_ONGOING_VIEW objQMBridge_SuperStruct_Bailey_ON = new EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_ONGOING_VIEW();
            EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED_VIEW objQMBridge_SuperStruct_Bailey_COMP = new EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_VIEW> objQMBridge_SuperStruct_Bailey_ON_List = new List<EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_VIEW> objQMBridge_SuperStruct_Bailey_COMP_List = new List<EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_VIEW>();

            EFORM_BRIDGE_QM_LOAD_TEST_VIEW objQMBridge_LoadTestModel = new EFORM_BRIDGE_QM_LOAD_TEST_VIEW();

            EFORM_BRIDGE_QM_BEARING_VIEW objQMBridge_Bearing = new EFORM_BRIDGE_QM_BEARING_VIEW();
            QMBridgeViewPdfModel.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE objQMBridge_BearingCondition = new QMBridgeViewPdfModel.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE();

            EFORM_BRIDGE_QM_EXPANSION_VIEW objQMBridge_ExpansionJoint = new EFORM_BRIDGE_QM_EXPANSION_VIEW();

            EFORM_BRIDGE_QM_APPROACH_VIEW objQMBridge_Approach = new EFORM_BRIDGE_QM_APPROACH_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_VIEW> objQMBridge_EmbankmentList = new List<EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH_VIEW> objQMBridge_SubBaseList = new List<EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_VIEW> objQMBridge_BaseCourseList = new List<EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_VIEW> objQMBridge_WearingList = new List<EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_VIEW>();
            EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH_VIEW objQMBridge_ProtectionList = new EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH_VIEW();
            List<EFORM_BRIDGE_QM_CHILD_QOM_APPROACH_VIEW> objQMBridge_QOM_List = new List<EFORM_BRIDGE_QM_CHILD_QOM_APPROACH_VIEW>();
            List<EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_VIEW> objQMBridge_WorkmenshipList = new List<EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_VIEW>();

            #endregion

            #region vikky
            EFORM_BRIDGE_QM_FURNITURE_MARKINGS_VIEW objQMBridge_Furniture1 = new EFORM_BRIDGE_QM_FURNITURE_MARKINGS_VIEW();
            EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING_VIEW objQMBridge_Furniture2 = new EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING_VIEW();

            EFORM_BRIDGE_QM_DEFICIENCY_VIEW objQMBridge_Deficiency = new EFORM_BRIDGE_QM_DEFICIENCY_VIEW();
            EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_VIEW objQMBridge_ASPER_PROG = new EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_VIEW();
            EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_VIEW objQMBridge_ASPER_COST = new EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_VIEW();
            List<EFORM_BRIDGE_QM_ACTION_TAKEN_PIU_VIEW> objQMBridge_ActionPIU = new List<EFORM_BRIDGE_QM_ACTION_TAKEN_PIU_VIEW>();
            EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION_VIEW objQMBridge_Diff_OBS = new EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION_VIEW();

            EFORM_BRIDGE_QM_OVERALL_GRADING_VIEW objQMBridge_OverallGrading = new EFORM_BRIDGE_QM_OVERALL_GRADING_VIEW();
            EFORM_BRIDGE_QM_QUALITY_GRADING_VIEW objQMBridge_QualityGrading = new EFORM_BRIDGE_QM_QUALITY_GRADING_VIEW();

            #endregion

            #endregion

            try
            {
                #region database queries
                #region saurabh
                var isApplicablelist = dbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var QMprefilledData_bridge = dbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == eformId).First() : null;
                var generalDetail_bridge = dbContext.EFORM_BRIDGE_QM_GENERAL_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_GENERAL_DETAILS.Where(x => x.EFORM_ID == eformId).First() : null;

                var QM_Arrangement_bridge = dbContext.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS.Where(x => x.EFORM_ID == eformId).First() : null;

                var QualityAttention_bridge = dbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_QUALITY_ATTENTION.Where(x => x.EFORM_ID == eformId).First() : null;

                var QcTestDetail_bridge = dbContext.EFORM_BRIDGE_QM_QC_TEST_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_QC_TEST_DETAILS.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var QcTestVerifiList_bridge = dbContext.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var WorkItemlist = dbContext.EFORM_BRIDGE_MASTER_WORK_ITEM.ToList();   // EFORM_BRIDGE_QM_ONGOING_FOUNDATION

                var FoundationBridge = dbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_ONGOING_FOUNDATION.Where(x => x.EFORM_ID == eformId).First() : null;

                var BRIDGE_QM_FOUNDATION = dbContext.EFORM_BRIDGE_QM_FOUNDATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_FOUNDATION.Where(x => x.EFORM_ID == eformId).First() : null;

                var compFoundation = dbContext.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_COMPLETED_FOUNDATION.Where(x => x.EFORM_ID == eformId).First() : null;

                var QomONFoundation = dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var WomONFoundation = dbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var QomCO_Foundation = dbContext.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION.Where(x => x.EFORM_ID == eformId).ToList() : null;

                //-------------------------------------------------
                var substructure = dbContext.EFORM_BRIDGE_QM_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;

                var ongoingSubstructure = dbContext.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;

                var CompleteSubstructure = dbContext.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;

                var QomONSubstructure = dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var WomONSubstructure = dbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var QomCompleteSubstructure = dbContext.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;

                #endregion                       
                #region rohit
                // 6 SUPER STRUCTURE RCC, Steel, Bailey Bridge Common Tables
                var queryObj_SuperStructure = dbContext.EFORM_BRIDGE_QM_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_SuperStructure_RCC = dbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_SuperStructure_Steel = dbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_SuperStructure_BaileyBridge = dbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).First() : null;

                // 6 SUPER STRUCTURE RCC, Steel, Bailey Bridge Ongoing Tables
                var queryList_SuperStructure_RCC_Ongoing = dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_SuperStructure_Steel_Ongoing = dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_SuperStructure_BaileyBridge_Ongoing = dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;

                // 6 SUPER STRUCTURE RCC, Steel, Bailey Bridge Completed Tables
                var queryList_SuperStructure_RCC_Completed = dbContext.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_SuperStructure_Steel_Completed = dbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_SuperStructure_BaileyBridge_Completed = dbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE.Where(x => x.EFORM_ID == eformId).ToList() : null;

                // 7 LOAD_TEST
                var queryObj_LoadTest = dbContext.EFORM_BRIDGE_QM_LOAD_TEST.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_LOAD_TEST.Where(x => x.EFORM_ID == eformId).First() : null;

                // 8 BEARINGS
                var queryObj_Bearings_Type = dbContext.EFORM_BRIDGE_QM_BEARING.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_BEARING.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_Bearings_Condition = dbContext.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_BEARING_TYPE.Where(x => x.EFORM_ID == eformId).First() : null;

                // 9 EXPANSION JOINTS
                var queryObj_ExpansionJoint = dbContext.EFORM_BRIDGE_QM_EXPANSION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_EXPANSION.Where(x => x.EFORM_ID == eformId).First() : null;

                // 10 APPROACHES
                var queryObj_Approach = dbContext.EFORM_BRIDGE_QM_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_APPROACH.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryList_Embankment_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_SubBase_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_BaseCourse_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_WearingCourse_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_Protection_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryList_QOM_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_QOM_APPROACH.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryList_Workmenship_Approach = dbContext.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH.Where(x => x.EFORM_ID == eformId).ToList() : null;

                #endregion

                #region vikky

                // 11 BRIDGE FURNITURE AND MARKINGS
                var queryObj_FurnitureMarkings1 = dbContext.EFORM_BRIDGE_QM_FURNITURE_MARKINGS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_FURNITURE_MARKINGS.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_FurnitureMarkings2 = dbContext.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING.Where(x => x.EFORM_ID == eformId).First() : null;

                // 12 General Observations of QM
                var queryObj_GOB_Deficiency = dbContext.EFORM_BRIDGE_QM_DEFICIENCY.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_DEFICIENCY.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_GOB_Prog = dbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_GOB_Cost = dbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryList_GOB_ActionPIU = dbContext.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_ACTION_TAKEN_PIU.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var queryObj_GOB = dbContext.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION.Where(x => x.EFORM_ID == eformId).First() : null;

                var queryObj_OverallGrading = dbContext.EFORM_BRIDGE_QM_OVERALL_GRADING.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_OVERALL_GRADING.Where(x => x.EFORM_ID == eformId).First() : null;
                var queryObj_QualityGrading = dbContext.EFORM_BRIDGE_QM_QUALITY_GRADING.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_QUALITY_GRADING.Where(x => x.EFORM_ID == eformId).First() : null;
                #endregion
                // Item Applicable Details
                //   var queryObj_Applicable = dbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId).Any() ? dbContext.EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId).First() : null;

                #endregion

                #region Objects Value Assign

                #region saurabh

                {
                    List<EFORM_WORK_ITEM> Work_Items_List = new List<EFORM_WORK_ITEM>();
                    foreach (var thd in WorkItemlist)
                    {
                        Work_Items_List.Add(new EFORM_WORK_ITEM
                        {
                            ITEM_ID = thd.ITEM_ID,
                            ITEM_DESC = thd.ITEM_DESC,
                            ITEM_FLAG = thd.ITEM_FLAG
                        });
                    }
                    objQMBridge_PreviewModel.WorkItemlistViewModel = Work_Items_List;
                }

                if (isApplicablelist != null)
                {
                    ApplicableCheck objApplicableCheck = new ApplicableCheck();

                    foreach (var item in isApplicablelist)
                    {
                        objApplicableCheck.isApplicable_2 = item.ITEM_2.Trim();
                        objApplicableCheck.isApplicable_3 = item.ITEM_3.Trim();
                        objApplicableCheck.isApplicable_4 = item.ITEM_4.Trim();
                        objApplicableCheck.isApplicable_5 = item.ITEM_5.Trim();
                        objApplicableCheck.isApplicable_6 = item.ITEM_6.Trim();
                        objApplicableCheck.isApplicable_7 = item.ITEM_7.Trim();
                        objApplicableCheck.isApplicable_8 = item.ITEM_8.Trim();
                        objApplicableCheck.isApplicable_9 = item.ITEM_9.Trim();
                        objApplicableCheck.isApplicable_10 = item.ITEM_10.Trim();
                        objApplicableCheck.isApplicable_11 = item.ITEM_11.Trim();
                    }
                    objQMBridge_PreviewModel.ApplicableCheck = objApplicableCheck;
                }

                if (QMprefilledData_bridge != null)
                {
                    objPiuBridge_Prefilled_viewModel.WORK_STATUS = QMprefilledData_bridge.PHYSICAL_WORK_STATUS == null ? "NN" : QMprefilledData_bridge.PHYSICAL_WORK_STATUS.Trim();
                    objPiuBridge_Prefilled_viewModel.State = QMprefilledData_bridge.STATE;
                    objPiuBridge_Prefilled_viewModel.District = QMprefilledData_bridge.DISTRICT;
                    objPiuBridge_Prefilled_viewModel.Block = QMprefilledData_bridge.BLOCK;
                    objPiuBridge_Prefilled_viewModel.RoadName = QMprefilledData_bridge.ROAD_NAME;
                    objPiuBridge_Prefilled_viewModel.QM_TYPE = QMprefilledData_bridge.QM_TYPE;
                    objPiuBridge_Prefilled_viewModel.QM_NAME = QMprefilledData_bridge.QM_NAME;
                    objPiuBridge_Prefilled_viewModel.PkgNumber = QMprefilledData_bridge.PACKAGE_ID;
                    objPiuBridge_Prefilled_viewModel.Eform_Id = QMprefilledData_bridge.EFORM_ID;

                    objQMBridge_PreviewModel.BRIDGE_PIU_PREFILLED_VIEW = objPiuBridge_Prefilled_viewModel;
                }

                if (generalDetail_bridge != null)
                {
                    objPiuBridge_General_ViewModel.IS_VIDEO_RECORDS = generalDetail_bridge.IS_VIDEO_RECORDS == null ? "NN" : generalDetail_bridge.IS_VIDEO_RECORDS.Trim();
                    objPiuBridge_General_ViewModel.INSPECTION_DATE = generalDetail_bridge.INSPECTION_DATE.ToString().Split(' ')[0].Replace('-', '/');
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_APPROACH = generalDetail_bridge.IS_WORK_STAT_APPROACH == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_APPROACH.Trim();
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_FINISHING_STAGE = generalDetail_bridge.IS_WORK_STAT_FINISHING_STAGE == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_FINISHING_STAGE.Trim();
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_FOUNDATION = generalDetail_bridge.IS_WORK_STAT_FOUNDATION == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_FOUNDATION.Trim();
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_LAYOUT = generalDetail_bridge.IS_WORK_STAT_LAYOUT == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_LAYOUT.Trim();
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_PROT_WORK = generalDetail_bridge.IS_WORK_STAT_PROT_WORK == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_PROT_WORK.Trim();
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_SUBSTRUCTURE = generalDetail_bridge.IS_WORK_STAT_SUBSTRUCTURE == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_SUBSTRUCTURE.Trim();
                    objPiuBridge_General_ViewModel.IS_WORK_STAT_SUPERSTRUCTURE = generalDetail_bridge.IS_WORK_STAT_SUPERSTRUCTURE == null ? "NN" : generalDetail_bridge.IS_WORK_STAT_SUPERSTRUCTURE.Trim();
                    objPiuBridge_General_ViewModel.TemplateVersion = dbContext.EFORM_PDF_UPLOAD_DETAIL.Where(x => x.EFORM_ID == eformId && x.USER_TYPE == "Q").Select(x => x.TEMPLATE_VERSION).FirstOrDefault();

                    objQMBridge_PreviewModel.BRIDGE_QM_GENERAL_DETAILS_VIEW = objPiuBridge_General_ViewModel;

                }

                if (QM_Arrangement_bridge != null)
                {
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_ALT_ENGG_ARR_SATISFIED = QM_Arrangement_bridge.IS_ALT_ENGG_ARR_SATISFIED == null ? "NN" : QM_Arrangement_bridge.IS_ALT_ENGG_ARR_SATISFIED.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_ENGG_AVAILABLE = QM_Arrangement_bridge.IS_ENGG_AVAILABLE == null ? "NN" : QM_Arrangement_bridge.IS_ENGG_AVAILABLE.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_CALIBRATION_OF_EQUIPMENT = QM_Arrangement_bridge.IS_CALIBRATION_OF_EQUIPMENT == null ? "NN" : QM_Arrangement_bridge.IS_CALIBRATION_OF_EQUIPMENT.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_EQUIP_AVAILABLE = QM_Arrangement_bridge.IS_EQUIP_AVAILABLE == null ? "NN" : QM_Arrangement_bridge.IS_EQUIP_AVAILABLE.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_EQUIP_AVAIL_VERIFY = QM_Arrangement_bridge.IS_EQUIP_AVAIL_VERIFY == null ? "NN" : QM_Arrangement_bridge.IS_EQUIP_AVAIL_VERIFY.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_EQUIP_USED = QM_Arrangement_bridge.IS_EQUIP_USED == null ? "NN" : QM_Arrangement_bridge.IS_EQUIP_USED.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_FIELD_LAB_ESTD = QM_Arrangement_bridge.IS_FIELD_LAB_ESTB == null ? "NN" : QM_Arrangement_bridge.IS_FIELD_LAB_ESTB.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_LAB_LOC_SAME = QM_Arrangement_bridge.IS_LAB_LOC_SAME == null ? "NN" : QM_Arrangement_bridge.IS_LAB_LOC_SAME.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IS_LAB_TECH_AVAILABLE = QM_Arrangement_bridge.IS_LAB_TECH_AVAILABLE == null ? "NN" : QM_Arrangement_bridge.IS_LAB_TECH_AVAILABLE.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.ITEM_GRADING_2 = QM_Arrangement_bridge.ITEM_GRADING_2 == null ? "NN" : QM_Arrangement_bridge.ITEM_GRADING_2.Trim();
                    QM_ARRANGEMENTS_OBS_DETAILS_VIEW.IMPROVEMENT_REMARK = QM_Arrangement_bridge.IMPROVEMENT_REMARK == null ? "NN" : QM_Arrangement_bridge.IMPROVEMENT_REMARK.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_ARRANGEMENT_OBS_DETAIL_VIEW = QM_ARRANGEMENTS_OBS_DETAILS_VIEW;
                }

                if (QualityAttention_bridge != null)
                {
                    eFORM_BRIDGE_QM_QUALITY.IS_ALL_TEST_CONDUCTED = QualityAttention_bridge.IS_ALL_TEST_CONDUCTED == null ? "NN" : QualityAttention_bridge.IS_ALL_TEST_CONDUCTED.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_LOE = QualityAttention_bridge.IS_LOE == null ? "NN" : QualityAttention_bridge.IS_LOE.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_LOK = QualityAttention_bridge.IS_LOK == null ? "NN" : QualityAttention_bridge.IS_LOK.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_NDT_CONDUCTED = QualityAttention_bridge.IS_NDT_CONDUCTED == null ? "NN" : QualityAttention_bridge.IS_NDT_CONDUCTED.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_NEGLIGENCE = QualityAttention_bridge.IS_NEGLIGENCE == null ? "NN" : QualityAttention_bridge.IS_NEGLIGENCE.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_NON_CONFORMITIES_QCR2 = QualityAttention_bridge.IS_NON_CONFORMITIES_QCR2 == null ? "NN" : QualityAttention_bridge.IS_NON_CONFORMITIES_QCR2.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_OTHER = QualityAttention_bridge.IS_OTHER == null ? "NN" : QualityAttention_bridge.IS_OTHER.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_QC_REG_P1_MAINTAINED = QualityAttention_bridge.IS_QC_REG_P1_MAINTAINED == null ? "NN" : QualityAttention_bridge.IS_QC_REG_P1_MAINTAINED.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IS_QC_REG_P2_MAINTAINED = QualityAttention_bridge.IS_QC_REG_P2_MAINTAINED == null ? "NN" : QualityAttention_bridge.IS_QC_REG_P2_MAINTAINED.Trim();
                    eFORM_BRIDGE_QM_QUALITY.ITEM_GRADING_3 = QualityAttention_bridge.ITEM_GRADING_3 == null ? "NN" : QualityAttention_bridge.ITEM_GRADING_3.Trim();
                    eFORM_BRIDGE_QM_QUALITY.OTHER_REASON = QualityAttention_bridge.OTHER_REASON == null ? "NN" : QualityAttention_bridge.OTHER_REASON.Trim();
                    eFORM_BRIDGE_QM_QUALITY.IMPROVEMENT_REMARK = QualityAttention_bridge.IMPROVEMENT_REMARK == null ? "NN" : QualityAttention_bridge.IMPROVEMENT_REMARK.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_QUALITY_ATTENTION_VIEW = eFORM_BRIDGE_QM_QUALITY;
                }

                if (QcTestDetail_bridge != null)
                {
                    foreach (var php in QcTestDetail_bridge)
                    {
                        eFORM_BRIDGE_QM_QC_TEST.Add(new EFORM_BRIDGE_QM_QC_TEST_DETAILS_VIEW
                        {
                            DPR_QUANTITY = php.DPR_QUANTITY == null ? "" : php.DPR_QUANTITY.ToString(),
                            ITEM_ID = php.ITEM_ID,
                            EXECUTED_QUANTITY = php.EXECUTED_QUANTITY == null ? "" : php.EXECUTED_QUANTITY.ToString(),
                            TEST_NAME = php.TEST_NAME == null ? "" : php.TEST_NAME,
                            REQD_TEST_NUMBER = php.REQD_TEST_NUMBER == null ? "" : php.REQD_TEST_NUMBER.ToString(),
                            CONDUCTED_TEST_NUMBER = php.CONDUCTED_TEST_NUMBER == null ? "" : php.CONDUCTED_TEST_NUMBER.ToString(),
                            IS_TESTING_ADEQUATE = php.IS_TESTING_ADEQUATE == null ? "" : php.IS_TESTING_ADEQUATE.Trim().Equals("Y") ? "Yes" : "No",
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_QC_TEST_DETAILS_LIST_VIEW = eFORM_BRIDGE_QM_QC_TEST;
                }

                if (QcTestVerifiList_bridge != null)
                {
                    foreach (var php in QcTestVerifiList_bridge)
                    {
                        VERIFICATION_DETAILS_VIEW.Add(new EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_VIEW
                        {
                            ROAD_LOC = php.ROAD_LOC == null ? "" : php.ROAD_LOC.ToString(),
                            TEST_NAME = php.TEST_NAME == null ? "" : php.TEST_NAME,
                            TEST_CONDUCTED_RESULT = php.TEST_CONDUCTED_RESULT == null ? "" : php.TEST_CONDUCTED_RESULT,
                            TEST_RESULT_QCR1 = php.TEST_RESULT_QCR1 == null ? "" : php.TEST_RESULT_QCR1,
                            TEST_RESULT_PREVIOUS = php.TEST_RESULT_PREVIOUS == null ? "" : php.TEST_RESULT_PREVIOUS,
                            TEST_RESULT_CONFRM = php.TEST_RESULT_CONFRM == null ? "" : php.TEST_RESULT_CONFRM.Trim().Equals("C") ? "Conforming" : "Non-conforming",
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS_LIST_VIEW = VERIFICATION_DETAILS_VIEW;
                }

                if (FoundationBridge != null)
                {
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_ABUTMENT1 = FoundationBridge.FOUNDATION_ABUTMENT1 == null ? "" : FoundationBridge.FOUNDATION_ABUTMENT1.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_ABUTMENT2 = FoundationBridge.FOUNDATION_ABUTMENT2 == null ? "" : FoundationBridge.FOUNDATION_ABUTMENT2.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS1 = FoundationBridge.FOUNDATION_PIERS1 == null ? "" : FoundationBridge.FOUNDATION_PIERS1.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS2 = FoundationBridge.FOUNDATION_PIERS2 == null ? "" : FoundationBridge.FOUNDATION_PIERS2.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS3 = FoundationBridge.FOUNDATION_PIERS3 == null ? "" : FoundationBridge.FOUNDATION_PIERS3.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS4 = FoundationBridge.FOUNDATION_PIERS4 == null ? "" : FoundationBridge.FOUNDATION_PIERS4.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS5 = FoundationBridge.FOUNDATION_PIERS5 == null ? "" : FoundationBridge.FOUNDATION_PIERS5.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS6 = FoundationBridge.FOUNDATION_PIERS6 == null ? "" : FoundationBridge.FOUNDATION_PIERS6.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS7 = FoundationBridge.FOUNDATION_PIERS7 == null ? "" : FoundationBridge.FOUNDATION_PIERS7.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS8 = FoundationBridge.FOUNDATION_PIERS8 == null ? "" : FoundationBridge.FOUNDATION_PIERS8.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_PIERS9 = FoundationBridge.FOUNDATION_PIERS9 == null ? "" : FoundationBridge.FOUNDATION_PIERS9.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_RETURN1 = FoundationBridge.FOUNDATION_RETURN1 == null ? "" : FoundationBridge.FOUNDATION_RETURN1.ToString();
                    eFORM_BRIDGE_QM_ONGOING.FOUNDATION_RETURN2 = FoundationBridge.FOUNDATION_RETURN2 == null ? "" : FoundationBridge.FOUNDATION_RETURN2.ToString();
                    eFORM_BRIDGE_QM_ONGOING.IS_TEST_CONDUCTED = FoundationBridge.IS_TEST_CONDUCTED == null ? "NN" : FoundationBridge.IS_TEST_CONDUCTED.Trim();
                    eFORM_BRIDGE_QM_ONGOING.IS_REINFORCEMENT_DONE = FoundationBridge.IS_REINFORCEMENT_DONE == null ? "NN" : FoundationBridge.IS_REINFORCEMENT_DONE.Trim();
                    eFORM_BRIDGE_QM_ONGOING.IS_LAITANCE_PLUGGING = FoundationBridge.IS_LAITANCE_PLUGGING == null ? "NN" : FoundationBridge.IS_LAITANCE_PLUGGING.Trim();
                    eFORM_BRIDGE_QM_ONGOING.IS_BOTTOM_PLUGGING = FoundationBridge.IS_BOTTOM_PLUGGING == null ? "NN" : FoundationBridge.IS_BOTTOM_PLUGGING.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_ONGOING_FOUNDATION_VIEW = eFORM_BRIDGE_QM_ONGOING;
                }

                if (BRIDGE_QM_FOUNDATION != null)
                {
                    eFORM_BRIDGE_QM_FOUNDATION_.IMPROVEMENT_REMARK = BRIDGE_QM_FOUNDATION.IMPROVEMENT_REMARK == null ? "NN" : BRIDGE_QM_FOUNDATION.IMPROVEMENT_REMARK;
                    eFORM_BRIDGE_QM_FOUNDATION_.ITEM_GRADING_4 = BRIDGE_QM_FOUNDATION.ITEM_GRADING_4 == null ? "NN" : BRIDGE_QM_FOUNDATION.ITEM_GRADING_4.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_FOUNDATION_VIEW = eFORM_BRIDGE_QM_FOUNDATION_;
                }

                if (compFoundation != null)
                {
                    COMPLETE_FOUNDATION.IS_CONDUCTED_INDEP_LAB = compFoundation.IS_CONDUCTED_INDEP_LAB == null ? "NN" : compFoundation.IS_CONDUCTED_INDEP_LAB.Trim();
                    COMPLETE_FOUNDATION.IS_NDT_CONDUCTED = compFoundation.IS_NDT_CONDUCTED == null ? "NN" : compFoundation.IS_NDT_CONDUCTED.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_COMPLETED_FOUNDATION_VIEW = COMPLETE_FOUNDATION;
                }

                if (QomONFoundation != null)
                {
                    foreach (var php in QomONFoundation)
                    {
                        QOM_FOUNDATION_VIEW.Add(new EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_VIEW
                        {
                            WORK_ITEM_LOC = php.WORK_ITEM_LOC == null ? "" : php.WORK_ITEM_LOC.ToString(),
                            CONCRETE_GRADE = php.CONCRETE_GRADE == null ? "" : php.CONCRETE_GRADE.ToString(),
                            QM_CEMENT_QCR = php.QM_CEMENT_QCR == null ? "" : php.QM_CEMENT_QCR.ToString(),
                            QM_COARSE_AGG_QCR = php.QM_COARSE_AGG_QCR == null ? "" : php.QM_COARSE_AGG_QCR.ToString(),
                            QM_FINE_AGG_QCR = php.QM_FINE_AGG_QCR == null ? "" : php.QM_FINE_AGG_QCR.ToString(),
                            QM_STEEL_QCR = php.QM_STEEL_QCR == null ? "" : php.QM_STEEL_QCR.ToString(),
                            CONCRETE_TEST_NQM = php.CONCRETE_TEST_NQM == null ? "" : php.CONCRETE_TEST_NQM.ToString(),
                            GRADE = php.GRADE == null ? "" : php.GRADE.Trim()
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_QOM_FOUNDATION_LIST_VIEW = QOM_FOUNDATION_VIEW;
                }

                if (WomONFoundation != null)
                {
                    foreach (var php in WomONFoundation)
                    {
                        QM_CHILD_ON_WORKMENSHIP.Add(new EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_VIEW
                        {
                            WORK_ITEM_LOC = php.WORK_ITEM_LOC == null ? "" : php.WORK_ITEM_LOC.ToString(),
                            CONCRETE_GRADE = php.CONCRETE_GRADE == null ? "" : php.CONCRETE_GRADE.ToString(),
                            WORK_QUALITY_ARRG = php.WORK_QUALITY_ARRG == null ? "" : php.WORK_QUALITY_ARRG.ToString(),
                            REINFORCEMENT_CHECK_AUTH = php.REINFORCEMENT_CHECK_AUTH == null ? "" : php.REINFORCEMENT_CHECK_AUTH.ToString(),
                            CONCRETE_WORKABILITY = php.CONCRETE_WORKABILITY == null ? "" : php.CONCRETE_WORKABILITY.ToString(),
                            COMPACTION_ARRG = php.COMPACTION_ARRG == null ? "" : php.COMPACTION_ARRG.ToString(),
                            CURING_ARRG = php.CURING_ARRG == null ? "" : php.CURING_ARRG.ToString(),
                            GRADE = php.GRADE == null ? "" : php.GRADE.Trim(),
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION_LIST_VIEW = QM_CHILD_ON_WORKMENSHIP;
                }

                if (QomCO_Foundation != null)
                {
                    foreach (var php in QomCO_Foundation)
                    {
                        COMPL_QOM_FOUNDATION.Add(new EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_VIEW
                        {
                            WORK_ITEM_LOC = php.WORK_ITEM_LOC == null ? "" : php.WORK_ITEM_LOC.ToString(),
                            CONCRETE_GRADE = php.CONCRETE_GRADE == null ? "" : php.CONCRETE_GRADE.ToString(),
                            COMP_STRENGTH_CONCRETE_QCR = php.COMP_STRENGTH_CONCRETE_QCR == null ? "" : php.COMP_STRENGTH_CONCRETE_QCR.ToString(),
                            CONCRETE_TEST_NQM = php.CONCRETE_TEST_NQM == null ? "" : php.CONCRETE_TEST_NQM.ToString(),
                            SURFACE_ACCEPTABILITY_WK = php.SURFACE_ACCEPTABILITY_WK == null ? "" : php.SURFACE_ACCEPTABILITY_WK.ToString(),
                            DESIGN_SIZE_SHAPE = php.DESIGN_SIZE_SHAPE == null ? "" : php.DESIGN_SIZE_SHAPE.ToString(),
                            QUALITY_PERSONAL_JUDG = php.QUALITY_PERSONAL_JUDG == null ? "" : php.QUALITY_PERSONAL_JUDG.ToString(),
                            GRADE = php.GRADE == null ? "" : php.GRADE.Trim(),
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION_LIST_VIEW = COMPL_QOM_FOUNDATION;
                }

                if (substructure != null)  // BRIDGE_Substructure
                {
                    BRIDGE_Substructure.ITEM_GRADING = substructure.ITEM_GRADING_5 == null ? "NN" : substructure.ITEM_GRADING_5.Trim();
                    BRIDGE_Substructure.IMPROVEMENT_REMARK = substructure.IMPROVEMENT_REMARK == null ? "NN" : substructure.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_SUBSTRUCTURE_VIEW = BRIDGE_Substructure;
                }

                if (ongoingSubstructure != null) // ONGOING_SUBSTRUCTURE
                {
                    ONGOING_SUBSTRUCTURE.IS_GRANULAR_SANDY_DONE = ongoingSubstructure.IS_GRANULAR_SANDY_DONE == null ? "NN" : ongoingSubstructure.IS_GRANULAR_SANDY_DONE.Trim();
                    ONGOING_SUBSTRUCTURE.IS_PAINT_MARKING_DONE = ongoingSubstructure.IS_PAINT_MARKING_DONE == null ? "NN" : ongoingSubstructure.IS_PAINT_MARKING_DONE.Trim();
                    ONGOING_SUBSTRUCTURE.IS_CONDUCTED_INDEP_LAB = ongoingSubstructure.IS_CONDUCTED_INDEP_LAB == null ? "NN" : ongoingSubstructure.IS_CONDUCTED_INDEP_LAB.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_ONGOING_SUBSTRUCTURE_VIEW = ONGOING_SUBSTRUCTURE;
                }

                if (CompleteSubstructure != null)  // Completed_SUBSTRUCTURE
                {
                    Completed_SUBSTRUCTURE.IS_CONDUCTED_INDEP_LAB = CompleteSubstructure.IS_CONDUCTED_INDEP_LAB == null ? "NN" : CompleteSubstructure.IS_CONDUCTED_INDEP_LAB.Trim();
                    Completed_SUBSTRUCTURE.IS_NDT_CONDUCTED = CompleteSubstructure.IS_NDT_CONDUCTED == null ? "NN" : CompleteSubstructure.IS_NDT_CONDUCTED.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_COMPLETED_SUBSTRUCTURE_VIEW = Completed_SUBSTRUCTURE;
                }

                if (QomONSubstructure != null)  // ONGOING_QOM_SUBSTRUCTURE
                {
                    foreach (var php in QomONSubstructure)
                    {
                        ONGOING_QOM_SUBSTRUCTURE.Add(new EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_VIEW
                        {
                            WORK_ITEM_LOC = php.WORK_ITEM_LOC == null ? "" : php.WORK_ITEM_LOC,
                            CONCRETE_GRADE = php.CONCRETE_GRADE == null ? "" : php.CONCRETE_GRADE,
                            QM_CEMENT_QCR = php.QM_CEMENT_QCR == null ? "" : php.QM_CEMENT_QCR,
                            QM_COARSE_AGGR_QCR = php.QM_COARSE_AGGR_QCR == null ? "" : php.QM_COARSE_AGGR_QCR,
                            QM_FINE_AGGR_QCR = php.QM_FINE_AGGR_QCR == null ? "" : php.QM_FINE_AGGR_QCR,
                            QM_STEEL_QCR = php.QM_STEEL_QCR == null ? "" : php.QM_STEEL_QCR,
                            CONCRETE_TEST_NQM = php.CONCRETE_TEST_NQM == null ? "" : php.CONCRETE_TEST_NQM,
                            GRADE = php.GRADE == null ? "" : php.GRADE.Trim(),
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE_LIST_VIEW = ONGOING_QOM_SUBSTRUCTURE;
                }

                if (WomONSubstructure != null) // ONGOING_WOM_SUBSTRUCTURE
                {
                    foreach (var php in WomONSubstructure)
                    {
                        ONGOING_WOM_SUBSTRUCTURE.Add(new EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_VIEW
                        {
                            WORK_ITEM_LOC = php.WORK_ITEM_LOC == null ? "" : php.WORK_ITEM_LOC,
                            CONCRETE_GRADE = php.CONCRETE_GRADE == null ? "" : php.CONCRETE_GRADE,
                            WORK_QUALITY_ARRG = php.WORK_QUALITY_ARRG == null ? "" : php.WORK_QUALITY_ARRG,
                            REINFORCEMENT_CHECK_AUTH = php.REINFORCEMENT_CHECK__AUTH == null ? "" : php.REINFORCEMENT_CHECK__AUTH,
                            CONCRETE_WORKABILITY = php.CONCRETE_WORKABILITY == null ? "" : php.CONCRETE_WORKABILITY,
                            COMPACTION_ARRG = php.COMPACTION_ARRG == null ? "" : php.COMPACTION_ARRG,
                            CURING_ARRG = php.CURING_ARRG == null ? "" : php.CURING_ARRG,
                            GRADE = php.GRADE == null ? "" : php.GRADE.Trim(),
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE_LIST_VIEW = ONGOING_WOM_SUBSTRUCTURE;
                }

                if (QomCompleteSubstructure != null) // Completed_QOM_SUBSTRUCTURE
                {
                    foreach (var php in QomCompleteSubstructure)
                    {
                        Completed_QOM_SUBSTRUCTURE.Add(new EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_VIEW
                        {
                            WORK_ITEM_LOC = php.WORK_ITEM_LOC == null ? "" : php.WORK_ITEM_LOC,
                            CONCRETE_GRADE = php.CONCRETE_GRADE == null ? "" : php.CONCRETE_GRADE,
                            COMP_STRENGTH_CONCRETE_QCR = php.COMP_STRENGTH_CONCRETE_QCR == null ? "" : php.COMP_STRENGTH_CONCRETE_QCR,
                            CONCRETE_TEST_NQM = php.CONCRETE_TEST_NQM == null ? "" : php.CONCRETE_TEST_NQM,
                            SURFACE_ACCEPTABLITY_WK = php.SURFACE_ACCEPTABILITY_WK == null ? "" : php.SURFACE_ACCEPTABILITY_WK,
                            DESIGN_SIZE_SHAPE = php.DESIGN_SIZE_SHAPE == null ? "" : php.DESIGN_SIZE_SHAPE,
                            QUALITY_ASS_PERSONAL_JUDG = php.QUALITY_PERSONAL_JUDG == null ? "" : php.QUALITY_PERSONAL_JUDG,
                            WEEP_HOLES_ADEQUACY = php.WEEP_HOLES_ADEQUACY == null ? "" : php.WEEP_HOLES_ADEQUACY,
                            RIDING_RETURNS = php.RIDING_RETURNS == null ? "" : php.RIDING_RETURNS,
                            GRADE = php.GRADE == null ? "" : php.GRADE.Trim(),
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE_LIST_VIEW = Completed_QOM_SUBSTRUCTURE;
                }

                #endregion

                #region rohit

                #region ----------- SUPER STRUCTURE

                if (queryObj_SuperStructure != null)
                {
                    objQMBridge_SuperStructure.STRUCTURE_TYPE = queryObj_SuperStructure.STRUCTURE_TYPE == null ? "NN" : queryObj_SuperStructure.STRUCTURE_TYPE.Trim();
                    objQMBridge_SuperStructure.ITEM_GRADING_6_1 = queryObj_SuperStructure.ITEM_GRADING_6_1 == null ? "NN" : queryObj_SuperStructure.ITEM_GRADING_6_1.Trim();
                    objQMBridge_SuperStructure.ITEM_GRADING_6_2 = queryObj_SuperStructure.ITEM_GRADING_6_2 == null ? "NN" : queryObj_SuperStructure.ITEM_GRADING_6_2.Trim();
                    objQMBridge_SuperStructure.ITEM_GRADING_6_3 = queryObj_SuperStructure.ITEM_GRADING_6_3 == null ? "NN" : queryObj_SuperStructure.ITEM_GRADING_6_3.Trim();
                    objQMBridge_SuperStructure.IMPROVEMENT_REMARK_6_1 = queryObj_SuperStructure.IMPROVEMENT_REMARK_6_1;
                    objQMBridge_SuperStructure.IMPROVEMENT_REMARK_6_2 = queryObj_SuperStructure.IMPROVEMENT_REMARK_6_2;
                    objQMBridge_SuperStructure.IMPROVEMENT_REMARK_6_3 = queryObj_SuperStructure.IMPROVEMENT_REMARK_6_3;

                    objQMBridge_PreviewModel.BRIDGE_QM_SUPERSTRUCTURE_VIEW = objQMBridge_SuperStructure;
                }

                #region ----------- RCC
                // RCC Ongoing Model
                if (queryObj_SuperStructure_RCC != null)
                {
                    objQMBridge_SuperStruct_RCC_ON.WORK_TYPE = queryObj_SuperStructure_RCC.WORK_TYPE == null ? "NN" : queryObj_SuperStructure_RCC.WORK_TYPE.Trim();
                    objQMBridge_SuperStruct_RCC_ON.IS_CEMENT_TEST_CONDUCTED = queryObj_SuperStructure_RCC.IS_CEMENT_TEST_CONDUCTED == null ? "NN" : queryObj_SuperStructure_RCC.IS_CEMENT_TEST_CONDUCTED.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_VIEW = objQMBridge_SuperStruct_RCC_ON;
                }

                // RCC Completed Model
                if (queryObj_SuperStructure_RCC != null)
                {
                    objQMBridge_SuperStruct_RCC_COMP.WORK_TYPE = queryObj_SuperStructure_RCC.WORK_TYPE == null ? "NN" : queryObj_SuperStructure_RCC.WORK_TYPE.Trim();
                    objQMBridge_SuperStruct_RCC_COMP.IS_CEMENT_TEST_CONDUCTED = queryObj_SuperStructure_RCC.IS_CEMENT_TEST_CONDUCTED == null ? "NN" : queryObj_SuperStructure_RCC.IS_CEMENT_TEST_CONDUCTED.Trim();
                    objQMBridge_SuperStruct_RCC_COMP.IS_NDT_CONDUCTED = queryObj_SuperStructure_RCC.IS_NDT_CONDUCTED == null ? "NN" : queryObj_SuperStructure_RCC.IS_NDT_CONDUCTED.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE_COMPLETED_VIEW = objQMBridge_SuperStruct_RCC_COMP;
                }


                if (queryList_SuperStructure_RCC_Ongoing != null)
                {
                    foreach (var iterator in queryList_SuperStructure_RCC_Ongoing)
                    {
                        objQMBridge_SuperStruct_RCC_ON_List.Add(new EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            CONCRETE_GRADE = iterator.CONCRETE_GRADE,
                            CEMENT_QUALITY = iterator.CEMENT_QUALITY,
                            COARSE_AGGR_QUALITY = iterator.COARSE_AGGR_QUALITY,
                            FINE_AGGR_QUALITY = iterator.FINE_AGGR_QUALITY,
                            STEEL_REIN_QUALITY = iterator.STEEL_REIN_QUALITY,
                            STAG_WORKMEN_CHECK = iterator.STAG_WORKMEN_CHECK,
                            REINFORCEMENT_CHECK_AUTH = iterator.REINFORCEMENT_CHECK_AUTH,
                            CONCRETE_WORKABILITY = iterator.CONCRETE_WORKABILITY,
                            COMPACTION_ARRANGEMENT = iterator.COMPACTION_ARRANGEMENT,
                            CAMBER = iterator.CAMBER,
                            DRAINAGE_SPOUTS_STD = iterator.DRAINAGE_SPOUT_STD,
                            GRADE = iterator.GRADE,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE_LIST_VIEW = objQMBridge_SuperStruct_RCC_ON_List;
                }

                if (queryList_SuperStructure_RCC_Completed != null)
                {
                    foreach (var iterator in queryList_SuperStructure_RCC_Completed)
                    {
                        objQMBridge_SuperStruct_RCC_COMP_List.Add(new EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            CONCRETE_GRADE = iterator.CONCRETE_GRADE,
                            CONCRETE_STRENGTH_PER_QUALITY = iterator.CONCRETE_STRENGTH_PER_QUALITY,
                            TEST_CONCRETE_CUBE_QM = iterator.TEST_CONCRETE_CUBE_QM,
                            SURFACE_ACCEPTABLITY = iterator.SURFACE_ACCEPTABILITY,
                            DESIGN_SIZE_SHAPE = iterator.DESIGN_SIZE_SHAPE,
                            CAMBER = iterator.CAMBER,
                            BEARING = iterator.BEARING,
                            KERBS = iterator.KERBS,
                            CRASH_BARRIER = iterator.CRASH_BARRIER,
                            WEARING_COAT = iterator.WEARING_COAT,
                            RAILING = iterator.RAILING,
                            EXP_JOINTS = iterator.EXP_JOINTS,
                            DRAINAGE_SPOUTS = iterator.DRAINAGE_SPOUTS,
                            APPROACH_SLAB = iterator.APPROACH_SLAB,
                            STOPPER = iterator.STOPPER,
                            PROTECTION_WORK = iterator.PROTECTION_WORK,
                            AWARDED_GRADE = iterator.AWARDED_GRADE,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE_LIST_VIEW = objQMBridge_SuperStruct_RCC_COMP_List;
                }

                #endregion

                #region ----------- STEEL
                // Steel Ongoing Model
                if (queryObj_SuperStructure_Steel != null)
                {
                    objQMBridge_SuperStruct_Steel_ON.WORK_TYPE = queryObj_SuperStructure_Steel.WORK_TYPE == null ? "NN" : queryObj_SuperStructure_Steel.WORK_TYPE.Trim();
                    objQMBridge_SuperStruct_Steel_ON.IS_PRESENCE_MOISTURE = queryObj_SuperStructure_Steel.IS_PRESENCE_MOISTURE == null ? "NN" : queryObj_SuperStructure_Steel.IS_PRESENCE_MOISTURE.Trim();
                    objQMBridge_SuperStruct_Steel_ON.IS_INDUSTRIAL_UNIT_NEARBY = queryObj_SuperStructure_Steel.IS_INDUSTRIAL_UNIT_NEARBY == null ? "NN" : queryObj_SuperStructure_Steel.IS_INDUSTRIAL_UNIT_NEARBY.Trim();
                    objQMBridge_SuperStruct_Steel_ON.IS_SALINITY_IN_ATMOSPHERE = queryObj_SuperStructure_Steel.IS_SANITY_IN_ATMOSPHERE == null ? "NN" : queryObj_SuperStructure_Steel.IS_SANITY_IN_ATMOSPHERE.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_VIEW = objQMBridge_SuperStruct_Steel_ON;
                }

                // Steel Completed Model
                if (queryObj_SuperStructure_Steel != null)
                {
                    objQMBridge_SuperStruct_Steel_COMP.WORK_TYPE = queryObj_SuperStructure_Steel.WORK_TYPE == null ? "NN" : queryObj_SuperStructure_Steel.WORK_TYPE.Trim();
                    objQMBridge_SuperStruct_Steel_COMP.IS_PRESENCE_MOISTURE = queryObj_SuperStructure_Steel.IS_PRESENCE_MOISTURE == null ? "NN" : queryObj_SuperStructure_Steel.IS_PRESENCE_MOISTURE.Trim();
                    objQMBridge_SuperStruct_Steel_COMP.IS_INDUSTRIAL_UNIT_NEARBY = queryObj_SuperStructure_Steel.IS_INDUSTRIAL_UNIT_NEARBY == null ? "NN" : queryObj_SuperStructure_Steel.IS_INDUSTRIAL_UNIT_NEARBY.Trim();
                    objQMBridge_SuperStruct_Steel_COMP.IS_SALINITY_IN_ATMOSPHERE = queryObj_SuperStructure_Steel.IS_SANITY_IN_ATMOSPHERE == null ? "NN" : queryObj_SuperStructure_Steel.WORK_TYPE.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE_COMPLETED_VIEW = objQMBridge_SuperStruct_Steel_COMP;
                }

                if (queryList_SuperStructure_Steel_Ongoing != null)
                {
                    foreach (var iterator in queryList_SuperStructure_Steel_Ongoing)
                    {
                        objQMBridge_SuperStruct_Steel_ON_List.Add(new EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            STEEL_GRADE = iterator.STEEL_GRADE,
                            TENSILE_STRENGTH = iterator.TENSILE_STRENGTH,
                            YIELD_STRESS_PER_QC = iterator.YIELD_STRESS_PER_QC,
                            ELONGATION_PER_QC = iterator.ELONGATION_PER_QC.ToString(),
                            IS_CHEMICAL_ANALYSIS_DONE = iterator.IS_CHEMICAL_ANALYSIS_DONE,
                            IS_CHEM_ANALYSIS_ADEQUATE = iterator.IS_CHEMICAL_ANALYSIS_ADEQUATE,
                            IS_NDT_WELDING_DONE = iterator.IS_NDT_WELDING_DONE,
                            IS_TESTING_OF_STEEL_BOLT = iterator.IS_TESTING_OF_STEEL_BOLT,
                            IS_PAINTING_PROPER = iterator.IS_PAINTING_PROPER,
                            IS_HFL_CLEARANCE_ADEQUATE = iterator.IS_HFL_CLEARANCE_ADEQUATE,
                        });
                    }

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE_LIST_VIEW = objQMBridge_SuperStruct_Steel_ON_List;
                }

                if (queryList_SuperStructure_Steel_Completed != null)
                {
                    foreach (var iterator in queryList_SuperStructure_Steel_Completed)
                    {
                        objQMBridge_SuperStruct_Steel_COMP_List.Add(new EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            STEEL_GRADE = iterator.STEEL_GRADE,
                            IS_LAMELLAR_TRAINING = iterator.IS_LAMELLAR_TRAINING,
                            IS_FATIGUE_CRACKING = iterator.IS_FATIGUE_CRACKING,
                            IS_PRESENCE_CORROSION = iterator.IS_PRESENCE_CORROSION,
                            ATMOSPHERE_CORROSION = iterator.ATMOSPHERE_CORROSION,
                            CHEMICAL_CORROSION = iterator.CHEMICAL_CORROSION,
                            STRESS_CORROSION = iterator.STRESS_CORROSION,
                            IS_PRESENCE_BRITTLE_FRACTURE = iterator.IS_PRESENCE_BRITTLE_FRACTURE,
                            IS_PRESENCE_BUCKLING = iterator.IS_PRESENCE_BUCKLING,
                            IS_CHANGE_LOAD_CLASSIFICATION = iterator.IS_CHANGE_LOAD_CLASSIFICATION,
                        });
                    }

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE_LIST_VIEW = objQMBridge_SuperStruct_Steel_COMP_List;
                }


                #endregion

                #region ----------- BAILEY BRIDGE

                // BaileyBridge Ongoing Model
                if (queryObj_SuperStructure_BaileyBridge != null)
                {
                    objQMBridge_SuperStruct_Bailey_ON.WORK_TYPE = queryObj_SuperStructure_BaileyBridge.WORK_TYPE;
                    objQMBridge_SuperStruct_Bailey_ON.IS_BOLT_PLATES_MISSING = queryObj_SuperStructure_BaileyBridge.IS_BOLT_PLATES_MISSING == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_BOLT_PLATES_MISSING.Trim();
                    objQMBridge_SuperStruct_Bailey_ON.IS_SWAY_BRACES_MISSING = queryObj_SuperStructure_BaileyBridge.IS_SWAY_BRACES_MISSING == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_SWAY_BRACES_MISSING.Trim();
                    objQMBridge_SuperStruct_Bailey_ON.IS_ANY_CRACK_IN_BAILEY_BRIDGE = queryObj_SuperStructure_BaileyBridge.IS_ANY_CRACK_IN_BAILEY_BRIDGE == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_ANY_CRACK_IN_BAILEY_BRIDGE.Trim();
                    objQMBridge_SuperStruct_Bailey_ON.IS_BEND_IN_BRIDGE_MEMBER = queryObj_SuperStructure_BaileyBridge.IS_BEND_IN_BRIDGE_MEMBER == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_BEND_IN_BRIDGE_MEMBER.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_VIEW = objQMBridge_SuperStruct_Bailey_ON;
                }

                // BaileyBridge Completed Model
                if (queryObj_SuperStructure_BaileyBridge != null)
                {
                    objQMBridge_SuperStruct_Bailey_COMP.WORK_TYPE = queryObj_SuperStructure_BaileyBridge.WORK_TYPE == null ? "NN" : queryObj_SuperStructure_BaileyBridge.WORK_TYPE.Trim();
                    objQMBridge_SuperStruct_Bailey_COMP.IS_BOLT_PLATES_MISSING = queryObj_SuperStructure_BaileyBridge.IS_BOLT_PLATES_MISSING == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_BOLT_PLATES_MISSING.Trim();
                    objQMBridge_SuperStruct_Bailey_COMP.IS_SWAY_BRACES_MISSING = queryObj_SuperStructure_BaileyBridge.IS_SWAY_BRACES_MISSING == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_SWAY_BRACES_MISSING.Trim();
                    objQMBridge_SuperStruct_Bailey_COMP.IS_ANY_CRACK_IN_BAILEY_BRIDGE = queryObj_SuperStructure_BaileyBridge.IS_ANY_CRACK_IN_BAILEY_BRIDGE == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_ANY_CRACK_IN_BAILEY_BRIDGE.Trim();
                    objQMBridge_SuperStruct_Bailey_COMP.IS_BEND_IN_BRIDGE_MEMBER = queryObj_SuperStructure_BaileyBridge.IS_BEND_IN_BRIDGE_MEMBER == null ? "NN" : queryObj_SuperStructure_BaileyBridge.IS_BEND_IN_BRIDGE_MEMBER.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE_COMPLETED_VIEW = objQMBridge_SuperStruct_Bailey_COMP;
                }

                if (queryList_SuperStructure_BaileyBridge_Ongoing != null)
                {
                    foreach (var iterator in queryList_SuperStructure_BaileyBridge_Ongoing)
                    {
                        objQMBridge_SuperStruct_Bailey_ON_List.Add(new EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            TYPES_OF_BAILY_BRIDGE = iterator.TYPES_OF_BAILY_BRIDGE,
                            IS_ALL_COMPONENT_AVAILABLE = iterator.IS_ALL_COMPONENT_AVAILABLE,
                            IS_COMPONENT_CORROSION_FREE = iterator.IS_COMPONENT_CORROSION_FREE,
                            IS_LAUNCHING_ROLLER_AVAILABLE = iterator.IS_LAUNCHING_ROLLER_AVAILABLE,
                            IS_PANEL_PINS_PLACED_PROPERLY = iterator.IS_PANEL_PINS_PLACED_PROPERLY,
                            IS_PAINTING_PROPER = iterator.IS_PAINTING_PROPER,
                            IS_HFL_CLEARANCE_ADEQUATE = iterator.IS_HFL_CLEARANCE_ADEQUATE,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE_LIST_VIEW = objQMBridge_SuperStruct_Bailey_ON_List;
                }

                if (queryList_SuperStructure_BaileyBridge_Completed != null)
                {

                    foreach (var iterator in queryList_SuperStructure_BaileyBridge_Completed)
                    {
                        objQMBridge_SuperStruct_Bailey_COMP_List.Add(new EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            TYPES_OF_BAILY_BRIDGE = iterator.TYPES_OF_BAILY_BRIDGE,
                            IS_LAMELLAR_TRAINING = iterator.IS_LAMMELLAR_TRAINING,
                            IS_FATIGUE_CRACKING = iterator.IS_FATIGUE_CRACKING,
                            IS_PRESENCE_CORROSION = iterator.IS_PRESENCE_CORROSION,
                            ATMOSPHERE_CORROSION = iterator.ATMOSPHERIC_CORROSION,
                            CHEMICAL_CORROSION = iterator.CHEMICAL_CORROSION,
                            STRESS_CORROSION = iterator.STRESS_CORROSION,
                            IS_PANEL_PINS_PLACED_PROPERLY = iterator.IS_PANEL_PINS_PLACED_PROPERLY,
                            IS_CHANGE_IN_LOAD_CLASSIFICATION = iterator.IS_CHANGE_IN_LOAD_CLASSIFICATION,
                        });
                    }

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE_LIST_VIEW = objQMBridge_SuperStruct_Bailey_COMP_List;
                }


                #endregion

                #endregion

                #region ----------- LOAD TEST

                if (queryObj_LoadTest != null)
                {
                    objQMBridge_LoadTestModel.LOAD_TEST_RESULT = queryObj_LoadTest.LOAD_TEST_RESULT == null ? "NN" : queryObj_LoadTest.LOAD_TEST_RESULT.Trim();
                    objQMBridge_LoadTestModel.ITEM_GRADING_7 = queryObj_LoadTest.ITEM_GRADING_7 == null ? "NN" : queryObj_LoadTest.ITEM_GRADING_7.Trim();
                    objQMBridge_LoadTestModel.IMPROVEMENT_REMARK = queryObj_LoadTest.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_LOAD_TEST_VIEW = objQMBridge_LoadTestModel;
                }

                #endregion

                #region ----------- BEARINGS

                if (queryObj_Bearings_Type != null)
                {
                    objQMBridge_Bearing.ROLLER_ROCKER_BEARING = queryObj_Bearings_Type.ROLLER_ROCKER_BEARING == null ? "NN" : queryObj_Bearings_Type.ROLLER_ROCKER_BEARING.Trim();
                    objQMBridge_Bearing.ELASTOMERIC_BEARING = queryObj_Bearings_Type.ELASTOMERIC_BEARING == null ? "NN" : queryObj_Bearings_Type.ELASTOMERIC_BEARING.Trim();
                    objQMBridge_Bearing.POT_BEARING = queryObj_Bearings_Type.POT_BEARING == null ? "NN" : queryObj_Bearings_Type.POT_BEARING.Trim();
                    objQMBridge_Bearing.SPHERICAL_BEARING = queryObj_Bearings_Type.SPHERICAL_BEARING == null ? "NN" : queryObj_Bearings_Type.SPHERICAL_BEARING.Trim();
                    objQMBridge_Bearing.CYLINDRICAL_BEARING = queryObj_Bearings_Type.CYLINDRICAL_BEARING == null ? "NN" : queryObj_Bearings_Type.CYLINDRICAL_BEARING.Trim();
                    objQMBridge_Bearing.IS_OTHER_BEARING_TYPE = queryObj_Bearings_Type.IS_OTHER_BEARING_TYPE == null ? "NN" : queryObj_Bearings_Type.IS_OTHER_BEARING_TYPE.Trim();
                    objQMBridge_Bearing.OTHER_BEARING_TYPE = queryObj_Bearings_Type.OTHER_BEARING_TYPE;
                    objQMBridge_Bearing.ITEM_GRADING_8 = queryObj_Bearings_Type.ITEM_GRADING_8 == null ? "NN" : queryObj_Bearings_Type.ITEM_GRADING_8.Trim();
                    objQMBridge_Bearing.IMPROVEMENT_REMARK = queryObj_Bearings_Type.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_BEARING_VIEW = objQMBridge_Bearing;
                }

                if (queryObj_Bearings_Condition != null)
                {
                    objQMBridge_BearingCondition.IS_METALLIC_BEARING = queryObj_Bearings_Condition.IS_METALLIC_BEARING == null ? "NN" : queryObj_Bearings_Condition.IS_METALLIC_BEARING.Trim();
                    objQMBridge_BearingCondition.IS_RUSTED = queryObj_Bearings_Condition.IS_RUSTED == null ? "NN" : queryObj_Bearings_Condition.IS_RUSTED.Trim();
                    objQMBridge_BearingCondition.IS_FUNCTIONING = queryObj_Bearings_Condition.IS_FUNCTIONING == null ? "NN" : queryObj_Bearings_Condition.IS_FUNCTIONING.Trim();
                    objQMBridge_BearingCondition.IS_GREASE_REQUIRED = queryObj_Bearings_Condition.IS_GREASE_REQUIRED == null ? "NN" : queryObj_Bearings_Condition.IS_GREASE_REQUIRED.Trim();
                    objQMBridge_BearingCondition.IS_CRACK_IN_SUPPORRT_MEMBER = queryObj_Bearings_Condition.IS_CRACK_IN_SUPPORRT_MEMBER == null ? "NN" : queryObj_Bearings_Condition.IS_CRACK_IN_SUPPORRT_MEMBER.Trim();
                    objQMBridge_BearingCondition.IS_EFFECTIVE_ANCHOR_BOLT = queryObj_Bearings_Condition.IS_EFFECTIVE_ANCHOR_BOLT == null ? "NN" : queryObj_Bearings_Condition.IS_EFFECTIVE_ANCHOR_BOLT.Trim();
                    objQMBridge_BearingCondition.OTHER_DEFECT_IN_METALLIC = queryObj_Bearings_Condition.OTHER_DEFECT_IN_METALLIC;
                    objQMBridge_BearingCondition.IS_ELASTOMETRIC_BEARING = queryObj_Bearings_Condition.IS_ELASTOMETRIC_BEARING == null ? "NN" : queryObj_Bearings_Condition.IS_ELASTOMETRIC_BEARING.Trim();
                    objQMBridge_BearingCondition.IS_PAD_COND_BAD = queryObj_Bearings_Condition.IS_PAD_COND_BAD == null ? "NN" : queryObj_Bearings_Condition.IS_PAD_COND_BAD.Trim();
                    objQMBridge_BearingCondition.IS_BEARING_CLEAN = queryObj_Bearings_Condition.IS_BEARING_CLEAN == null ? "NN" : queryObj_Bearings_Condition.IS_BEARING_CLEAN.Trim();
                    objQMBridge_BearingCondition.OTHER_DEFECT_IN_ELASTOMERIC = queryObj_Bearings_Condition.OTHER_DEFECT_IN_ELASTOMERIC;
                    objQMBridge_BearingCondition.OTHER_DEFECT_THAN_BOTH = queryObj_Bearings_Condition.OTHER_DEFECT_THAN_BOTH;
                    objQMBridge_BearingCondition.IS_TEST_RESULT_BEARING_AVL = queryObj_Bearings_Condition.IS_TEST_RESULT_BEARING_AVL == null ? "NN" : queryObj_Bearings_Condition.IS_TEST_RESULT_BEARING_AVL.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_BEARING_TYPE_VIEW = objQMBridge_BearingCondition;
                }

                #endregion

                #region ----------- EXPANSION JOINTS

                if (queryObj_ExpansionJoint != null)
                {
                    objQMBridge_ExpansionJoint.BURIED_OF_EXPANSION = queryObj_ExpansionJoint.BURIED_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.BURIED_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.FILLER_OF_EXPANSION = queryObj_ExpansionJoint.FILLER_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.FILLER_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.ASPHALTIC_OF_EXPANSION = queryObj_ExpansionJoint.ASPHALTIC_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.ASPHALTIC_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.COMPRESSION_OF_EXPANSION = queryObj_ExpansionJoint.COMPRESSION_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.COMPRESSION_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.SINGLE_OF_EXPANSION = queryObj_ExpansionJoint.SINGLE_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.SINGLE_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.REINFORCED_OF_EXPANSION = queryObj_ExpansionJoint.REINFORCED_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.REINFORCED_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.MODULAR_OF_EXPANSION = queryObj_ExpansionJoint.MODULAR_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.MODULAR_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.FINGER_OF_EXPANSION = queryObj_ExpansionJoint.FINGER_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.FINGER_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.REINFORCED_COUPLED_OF_EXPANSION = queryObj_ExpansionJoint.REINFORCED_COUPLED_OF_EXPANSION == null ? "NN" : queryObj_ExpansionJoint.REINFORCED_COUPLED_OF_EXPANSION.Trim();
                    objQMBridge_ExpansionJoint.IS_ANY_CRACK_IN_COAT = queryObj_ExpansionJoint.IS_ANY_CRACK_IN_COAT == null ? "NN" : queryObj_ExpansionJoint.IS_ANY_CRACK_IN_COAT.Trim();
                    objQMBridge_ExpansionJoint.IS_EXISTING_GAP_IMPROPER = queryObj_ExpansionJoint.IS_EXISTING_GAP_IMPROPER == null ? "NN" : queryObj_ExpansionJoint.IS_EXISTING_GAP_IMPROPER.Trim();
                    objQMBridge_ExpansionJoint.IS_CRACKING_IN_BITUMAN = queryObj_ExpansionJoint.IS_CRACKING_IN_BITUMAN == null ? "NN" : queryObj_ExpansionJoint.IS_CRACKING_IN_BITUMAN.Trim();
                    objQMBridge_ExpansionJoint.IS_SPLITTING_IN_NEOPRENE = queryObj_ExpansionJoint.IS_SPLITTING_IN_NEOPRENE == null ? "NN" : queryObj_ExpansionJoint.IS_SPLITTING_IN_NEOPRENE.Trim();
                    objQMBridge_ExpansionJoint.IS_CORROSION_IS_VISIBLE = queryObj_ExpansionJoint.IS_CORROSION_IS_VISIBLE == null ? "NN" : queryObj_ExpansionJoint.IS_CORROSION_IS_VISIBLE.Trim();
                    objQMBridge_ExpansionJoint.IS_DEBRIS_IN_JOINTS = queryObj_ExpansionJoint.IS_DEBRIS_IN_JOINTS == null ? "NN" : queryObj_ExpansionJoint.IS_DEBRIS_IN_JOINTS.Trim();
                    objQMBridge_ExpansionJoint.OBSERVATION_FOUND = queryObj_ExpansionJoint.OBSERVATION_FOUND == null ? "NN" : queryObj_ExpansionJoint.OBSERVATION_FOUND.Trim();
                    objQMBridge_ExpansionJoint.OTHER_OBSER_FOUND = queryObj_ExpansionJoint.OTHER_OBSER_FOUND;
                    objQMBridge_ExpansionJoint.ITEM_GRADING_9 = queryObj_ExpansionJoint.ITEM_GRADING_9 == null ? "NN" : queryObj_ExpansionJoint.ITEM_GRADING_9.Trim();
                    objQMBridge_ExpansionJoint.IMPROVEMENT_REMARK = queryObj_ExpansionJoint.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_EXPANSION_VIEW = objQMBridge_ExpansionJoint;
                }

                #endregion

                #region ----------- APPROACHES

                if (queryObj_Approach != null)
                {
                    objQMBridge_Approach.ITEM_GRADING_10 = queryObj_Approach.ITEM_GRADING_10 == null ? "NN" : queryObj_Approach.ITEM_GRADING_10.Trim();
                    objQMBridge_Approach.IMPROVEMENT_REMARK = queryObj_Approach.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_APPROACH_VIEW = objQMBridge_Approach;
                }

                if (queryList_Embankment_Approach != null)
                {
                    foreach (var iterator in queryList_Embankment_Approach)
                    {
                        objQMBridge_EmbankmentList.Add(new EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            SOIL_SUITABILITY = iterator.SOIL_SUITABILITY,
                            COMPACTION = iterator.COMPACTION,
                            SIDE_SLOPES = iterator.SIDE_SLOPES,
                            SHOULDERS = iterator.SHOULDERS,
                            GRADE = iterator.GRADE,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_EMBANKMENT_APPROACH_LIST_VIEW = objQMBridge_EmbankmentList;
                }

                if (queryList_SubBase_Approach != null)
                {

                    foreach (var iterator in queryList_SubBase_Approach)
                    {
                        objQMBridge_SubBaseList.Add(new EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            IS_GRADING_CONFORM = iterator.IS_GRADING_CONFORM,
                            IS_MATERIAL_SUITABLE = iterator.IS_MATERIAL_SUITABLE,
                            IS_DRY_DENSITY = iterator.IS_DRY_DENSITY,
                            COMPACTION = iterator.COMPACTION,
                            IS_COMPACTION_INADEQUATE = iterator.IS_COMPACTION_INADEQUATE,
                            THICKNESS_PER_DPR = iterator.THICKNESS_PER_DPR,
                            MEASURED_THICKNESS = iterator.MEASURED_THICKNESS,
                            IS_PRESCRIBED_THICKNESS_PROV = iterator.IS_PRESCRIBED_THICKNESS_PROV,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_SUB_BASE_APPROACH_LIST_VIEW = objQMBridge_SubBaseList;
                }

                if (queryList_BaseCourse_Approach != null)
                {

                    foreach (var iterator in queryList_BaseCourse_Approach)
                    {
                        objQMBridge_BaseCourseList.Add(new EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            GRADING_AGGREGATE = iterator.GRADING_AGGREGATE,
                            PLASTICITY_FILLER = iterator.PLASTICITY_FILLER,
                            MATERIAL_VOLUME_AGGR = iterator.MATERIAL_VOLUME_AGGR,
                            COMP_BASED_VOLUMETRIC = iterator.COMP_BASED_VOLUMETRIC,
                            DESIGN_THICKNESS = iterator.DESIGN_THICKNESS,
                            WBM_THICKNESS = iterator.WBM_THICKNESS,
                            IS_THICKNESS_ADEQUATE = iterator.IS_THICKNESS_ADEQUATE,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_BASE_COURSE_APPROACH_LIST_VIEW = objQMBridge_BaseCourseList;
                }

                if (queryList_WearingCourse_Approach != null)
                {

                    foreach (var iterator in queryList_WearingCourse_Approach)
                    {
                        objQMBridge_WearingList.Add(new EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            GRADE_COARSE_AGGR = iterator.GRADE_COARSE_AGGR,
                            TEMP_PER_QCR = iterator.TEMP_PER_QCR,
                            BITUMEN_AGGR_PER_QCR = iterator.BITUMEN_AGGR_PER_QCR,
                            BITUMEN_CONTENT = iterator.BITUMEN_CONTENT,
                            THICKNESS_BY_QM = iterator.THICKNESS_BY_QM,
                            THICKNESS_LAYER_GRADE = iterator.THICKNESS_LAYER_GRADE,
                            SURFACE_UNEVENNESS = iterator.SURFACE_UNEVENNESS,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH_LIST_VIEW = objQMBridge_WearingList;
                }

                if (queryList_Protection_Approach != null)
                {

                    objQMBridge_ProtectionList.IS_DPR_PROV_PROTE_WORKS = queryList_Protection_Approach.IS_DPR_PROV_PROTE_WORKS == null ? "NN" : queryList_Protection_Approach.IS_DPR_PROV_PROTE_WORKS.Trim();
                    objQMBridge_ProtectionList.IS_RETAINING_WALL = queryList_Protection_Approach.IS_RETAINING_WALL == null ? "NN" : queryList_Protection_Approach.IS_RETAINING_WALL.Trim();
                    objQMBridge_ProtectionList.IS_BREAST_WALL = queryList_Protection_Approach.IS_BREAST_WALL == null ? "NN" : queryList_Protection_Approach.IS_BREAST_WALL.Trim();
                    objQMBridge_ProtectionList.IS_PARAPET_WALL = queryList_Protection_Approach.IS_PARAPET_WALL == null ? "NN" : queryList_Protection_Approach.IS_PARAPET_WALL.Trim();
                    objQMBridge_ProtectionList.IS_ANY_OTHER_PROT_WORK = queryList_Protection_Approach.IS_ANY_OTHER_PROT_WORK == null ? "NN" : queryList_Protection_Approach.IS_ANY_OTHER_PROT_WORK.Trim();
                    objQMBridge_ProtectionList.IS_ANY_OTHER_PROT_WORKA = queryList_Protection_Approach.IS_ANY_OTHER_PROT_WORKA;
                    objQMBridge_ProtectionList.IS_ANY_OTHER_PROT_WORKB = queryList_Protection_Approach.IS_ANY_OTHER_PROT_WORKB;
                    objQMBridge_ProtectionList.WORKMENSHIP_STONE_ACCEP = queryList_Protection_Approach.WORKMENSHIP_STONE_ACCEP == null ? "NN" : queryList_Protection_Approach.WORKMENSHIP_STONE_ACCEP.Trim();
                    objQMBridge_ProtectionList.IS_BOND_STONE_PROVIDED = queryList_Protection_Approach.IS_BOND_STONE_PROVIDED == null ? "NN" : queryList_Protection_Approach.IS_BOND_STONE_PROVIDED.Trim();

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_PROTECH_APPROACH_VIEW = objQMBridge_ProtectionList;
                }

                if (queryList_QOM_Approach != null)
                {
                    foreach (var iterator in queryList_QOM_Approach)
                    {
                        objQMBridge_QOM_List.Add(new EFORM_BRIDGE_QM_CHILD_QOM_APPROACH_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            STRUCTURE_TYPE = iterator.STRUCTURE_TYPE,
                            PROTECTION_TYPE = iterator.PROTECTION_TYPE,
                            QOM_SPECIFI = iterator.QOM_SPECIFI,
                            DESIGN_SHAPE = iterator.DESIGN_SHAPE,
                            QUALITY_ASSESMENT = iterator.QUALITY_ASSESMENT,
                        });
                    }

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_QOM_APPROACH_LIST_VIEW = objQMBridge_QOM_List;
                }

                if (queryList_Workmenship_Approach != null)
                {
                    foreach (var iterator in queryList_Workmenship_Approach)
                    {
                        objQMBridge_WorkmenshipList.Add(new EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_VIEW
                        {
                            RD_LOC = iterator.RD_LOC,
                            RETAIN_STRUCTURE = iterator.RETAIN_STRUCTURE,
                            IS_ANY_DEFECT = iterator.IS_ANY_DEFECT,
                            IS_WEEP_HOLES_PROVIDED = iterator.IS_WEEP_HOLES_PROVIDED,
                            IS_ADEQUACY_WEEP_HOLES = iterator.IS_ADEQUACY_WEEP_HOLES,
                        });
                    }

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH_LIST_VIEW = objQMBridge_WorkmenshipList;
                }

                #endregion

                #endregion

                #region vikky

                #region ----------- FURNITURE_MARKINGS

                if (queryObj_FurnitureMarkings1 != null)
                {
                    objQMBridge_Furniture1.IS_MAIN_INFO_BOARD_FIXED = queryObj_FurnitureMarkings1.IS_MAIN_INFO_BOARD_FIXED == null ? "NN" : queryObj_FurnitureMarkings1.IS_MAIN_INFO_BOARD_FIXED.Trim();
                    objQMBridge_Furniture1.IS_CITIZEN_INFO_BOARD_FIXED = queryObj_FurnitureMarkings1.IS_CITIZEN_INFO_BOARD_FIXED == null ? "NN" : queryObj_FurnitureMarkings1.IS_CITIZEN_INFO_BOARD_FIXED.Trim();
                    objQMBridge_Furniture1.ITEM_GRADING_11_1 = queryObj_FurnitureMarkings1.ITEM_GRADING_11_1 == null ? "NN" : queryObj_FurnitureMarkings1.ITEM_GRADING_11_1.Trim();
                    objQMBridge_Furniture1.IMPROVEMENT_REMARK = queryObj_FurnitureMarkings1.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_FURNITURE_MARKINGS_VIEW = objQMBridge_Furniture1;
                }

                if (queryObj_FurnitureMarkings2 != null)
                {
                    objQMBridge_Furniture2.IS_GUARD_STONES_FIXED = queryObj_FurnitureMarkings2.IS_GUARD_STONES_FIXED == null ? "NN" : queryObj_FurnitureMarkings2.IS_GUARD_STONES_FIXED.Trim();
                    objQMBridge_Furniture2.IS_MANADATORY_CAUTION_SIGNAGE = queryObj_FurnitureMarkings2.IS_MANADATORY_CAUTION_SIGNAGE == null ? "NN" : queryObj_FurnitureMarkings2.IS_MANADATORY_CAUTION_SIGNAGE.Trim();
                    objQMBridge_Furniture2.ITEM_GRADING_11_2 = queryObj_FurnitureMarkings2.ITEM_GRADING_11_2 == null ? "NN" : queryObj_FurnitureMarkings2.ITEM_GRADING_11_2.Trim();
                    objQMBridge_Furniture2.IMPROVEMENT_REMARK = queryObj_FurnitureMarkings2.IMPROVEMENT_REMARK;

                    objQMBridge_PreviewModel.BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING_VIEW = objQMBridge_Furniture2;

                }

                #endregion

                #region ----------- DEFICIENCY

                if (queryObj_GOB_Deficiency != null)
                {
                    objQMBridge_Deficiency.IS_NO_DEFICIENCY = queryObj_GOB_Deficiency.IS_NO_DEFICIENCY == null ? "NN" : queryObj_GOB_Deficiency.IS_NO_DEFICIENCY.Trim();
                    objQMBridge_Deficiency.IS_BOQ_NOT_CLEAR = queryObj_GOB_Deficiency.IS_BOQ_NOT_CLEAR == null ? "NN" : queryObj_GOB_Deficiency.IS_BOQ_NOT_CLEAR.Trim();
                    objQMBridge_Deficiency.IS_NO_SPANS_INSUFFICIENT = queryObj_GOB_Deficiency.IS_NO_SPANS_INSUFFICIENT == null ? "NN" : queryObj_GOB_Deficiency.IS_NO_SPANS_INSUFFICIENT.Trim();
                    objQMBridge_Deficiency.IS_NO_PROVISION_PROTECTION_WORK = queryObj_GOB_Deficiency.IS_NO_PROVISION_PROTECTION_WORK == null ? "NN" : queryObj_GOB_Deficiency.IS_NO_PROVISION_PROTECTION_WORK.Trim();
                    objQMBridge_Deficiency.IS_HYDROLIC_DESIGN_DPR = queryObj_GOB_Deficiency.IS_HYDROLIC_DESIGN_DPR == null ? "NN" : queryObj_GOB_Deficiency.IS_HYDROLIC_DESIGN_DPR.Trim();
                    objQMBridge_Deficiency.IS_GUARD_STONE_IN_DPR = queryObj_GOB_Deficiency.IS_GUARD_STONE_IN_DPR == null ? "NN" : queryObj_GOB_Deficiency.IS_GUARD_STONE_IN_DPR.Trim();
                    objQMBridge_Deficiency.IS_DEVIATION_ALIGNMENT = queryObj_GOB_Deficiency.IS_DEVIATION_ALIGNMENT == null ? "NN" : queryObj_GOB_Deficiency.IS_DEVIATION_ALIGNMENT.Trim();
                    objQMBridge_Deficiency.OTHER_COMMENT = queryObj_GOB_Deficiency.OTHER_COMMENT;

                    objQMBridge_PreviewModel.BRIDGE_QM_DEFICIENCY_VIEW = objQMBridge_Deficiency;
                }

                if (queryObj_GOB_Prog != null)
                {
                    objQMBridge_ASPER_PROG.WORK_STATUS = queryObj_GOB_Prog.WORK_STATUS == null ? "NN" : queryObj_GOB_Prog.WORK_STATUS.Trim();
                    objQMBridge_ASPER_PROG.C_IS_COMPLETED_WITH_DELAY = queryObj_GOB_Prog.C_IS_COMPLETED_WITH_DELAY == null ? "NN" : queryObj_GOB_Prog.C_IS_COMPLETED_WITH_DELAY.Trim();
                    objQMBridge_ASPER_PROG.C_IS_PERIOD_OF_DELAY = queryObj_GOB_Prog.C_IS_PERIOD_OF_DELAY;
                    objQMBridge_ASPER_PROG.C_AMOUNT_STATUS = queryObj_GOB_Prog.C_AMOUNT_STATUS == null ? "NN" : queryObj_GOB_Prog.C_AMOUNT_STATUS.Trim();
                    objQMBridge_ASPER_PROG.C_AMOUNT = queryObj_GOB_Prog.C_AMOUNT;
                    objQMBridge_ASPER_PROG.C_COMMENT = queryObj_GOB_Prog.C_COMMENT;
                    objQMBridge_ASPER_PROG.P_IS_AS_PER_SCHEDULE = queryObj_GOB_Prog.P_IS_AS_PER_SCHEDULE == null ? "NN" : queryObj_GOB_Prog.P_IS_AS_PER_SCHEDULE.Trim();
                    objQMBridge_ASPER_PROG.P_EXT_MONTHS = queryObj_GOB_Prog.P_EXT_MONTHS;
                    objQMBridge_ASPER_PROG.P_IS_AMOUNT_REFUNDED = queryObj_GOB_Prog.P_IS_AMOUNT_REFUNDED == null ? "NN" : queryObj_GOB_Prog.P_IS_AMOUNT_REFUNDED.Trim();
                    objQMBridge_ASPER_PROG.P_AMOUNT = queryObj_GOB_Prog.P_AMOUNT;
                    objQMBridge_ASPER_PROG.P_PANELTY_AMOUNT = queryObj_GOB_Prog.P_PANELTY_AMOUNT;
                    objQMBridge_ASPER_PROG.P_COMMENT = queryObj_GOB_Prog.P_COMMENT;

                    objQMBridge_PreviewModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG_VIEW = objQMBridge_ASPER_PROG;
                }

                if (queryObj_GOB_Cost != null)
                {
                    objQMBridge_ASPER_COST.WORK_STATUS = queryObj_GOB_Cost.WORK_STATUS == null ? "NN" : queryObj_GOB_Cost.WORK_STATUS.Trim();
                    objQMBridge_ASPER_COST.SANCTION_COST = queryObj_GOB_Cost.SANCTION_COST;
                    objQMBridge_ASPER_COST.COMPLETION_COST = queryObj_GOB_Cost.COMPLETION_COST;
                    objQMBridge_ASPER_COST.REASON_EXTRA_COST = queryObj_GOB_Cost.REASON_EXTRA_COST;
                    objQMBridge_ASPER_COST.ACTION_BY_PIU = queryObj_GOB_Cost.ACTION_BY_PIU;

                    objQMBridge_PreviewModel.BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST_VIEW = objQMBridge_ASPER_COST;
                }

                if (queryList_GOB_ActionPIU != null)
                {
                    foreach (var iterator in queryList_GOB_ActionPIU)
                    {
                        objQMBridge_ActionPIU.Add(new EFORM_BRIDGE_QM_ACTION_TAKEN_PIU_VIEW
                        {
                            PREV_QM_DESIG = iterator.PREV_QM_DESIG,
                            PREV_QM_OBSERVATION = iterator.PREV_QM_OBSERVATION,
                            ACTION_TAKEN_PIU = iterator.ACTION_TAKEN_PIU,
                            OBSERVATION_ON_PIU_ACTION = iterator.OBSERVATION_ON_PIU_ACTION,
                        });
                    }
                    objQMBridge_PreviewModel.BRIDGE_QM_ACTION_TAKEN_PIU_LIST_VIEW = objQMBridge_ActionPIU;
                }



                if (queryObj_GOB != null)
                {
                    objQMBridge_Diff_OBS.IS_DIFFERENCE_FOUND = queryObj_GOB.IS_DIFFERENCE_FOUND == null ? "NN" : queryObj_GOB.IS_DIFFERENCE_FOUND.Trim();
                    objQMBridge_Diff_OBS.COMMENT_ON_DIFFERENCE = queryObj_GOB.COMMENT_ON_DIFFERENCE;
                    objQMBridge_Diff_OBS.OTHER_OBSERVATION = queryObj_GOB.OTHER_OBSERVATION;

                    objQMBridge_PreviewModel.BRIDGE_QM_DIFFERENCE_IN_OBSERVATION_VIEW = objQMBridge_Diff_OBS;
                }

                #endregion

                #region Grading Tables
                if (queryObj_OverallGrading != null)
                {
                    objQMBridge_OverallGrading.QUALITY_ARRANGEMENT = queryObj_OverallGrading.QUALITY_ARRANGEMENT;
                    objQMBridge_OverallGrading.ATT_TO_QUALITY = queryObj_OverallGrading.ATT_TO_QUALITY;
                    objQMBridge_OverallGrading.FOUNDATION = queryObj_OverallGrading.FOUNDATION;
                    objQMBridge_OverallGrading.SUBSTRUCTURE = queryObj_OverallGrading.SUBSTRUCTURE;
                    objQMBridge_OverallGrading.SUPERSTRUCTURE = queryObj_OverallGrading.SUPERSTRUCTURE;
                    objQMBridge_OverallGrading.LOAD_TEST = queryObj_OverallGrading.LOAD_TEST;
                    objQMBridge_OverallGrading.BEARING = queryObj_OverallGrading.BEARING;
                    objQMBridge_OverallGrading.BEARING_A = queryObj_OverallGrading.BEARING_A;
                    objQMBridge_OverallGrading.BEARING_B = queryObj_OverallGrading.BEARING_B;
                    objQMBridge_OverallGrading.EXPANSION_JOINTS = queryObj_OverallGrading.EXPANSION_JOINTS;
                    objQMBridge_OverallGrading.EXPANSION_JOINTS_A = queryObj_OverallGrading.EXPANSION_JOINTS_A;
                    objQMBridge_OverallGrading.EXPANSION_JOINTS_B = queryObj_OverallGrading.EXPANSION_JOINTS_B;
                    objQMBridge_OverallGrading.APPROACH = queryObj_OverallGrading.APPROACH;
                    objQMBridge_OverallGrading.APPROACH_EMBANKMENT = queryObj_OverallGrading.APPROACH_EMBANKMENT;
                    objQMBridge_OverallGrading.APPROACH_SUBBASE = queryObj_OverallGrading.APPROACH_SUBBASE;
                    objQMBridge_OverallGrading.APPROACH_BASECOURSE = queryObj_OverallGrading.APPROACH_BASECOURSE;
                    objQMBridge_OverallGrading.APPROACH_WEARINGCOURSE = queryObj_OverallGrading.APPROACH_WEARINGCOURSE;
                    objQMBridge_OverallGrading.APPROACH_PROTECTIONWORK = queryObj_OverallGrading.APPROACH_PROTECTIONWORK;
                    objQMBridge_OverallGrading.BRIDGE_FURNITURE = queryObj_OverallGrading.BRIDGE_FURNITURE;
                    objQMBridge_OverallGrading.BRIDGE_FURNITURE_MAIN_INFO = queryObj_OverallGrading.BRIDGE_FURNITURE_MAIN_INFO;
                    objQMBridge_OverallGrading.BRIDGE_FURN_CITIZEN_BOARD = queryObj_OverallGrading.BRIDGE_FURN_CITIZEN_BOARD;
                    objQMBridge_OverallGrading.BRIDGE_FURN_GUARD_STONE = queryObj_OverallGrading.BRIDGE_FURN_GUARD_STONE;
                    objQMBridge_OverallGrading.BRIDGE_FURN_CAUTION_SIGNAGE = queryObj_OverallGrading.BRIDGE_FURN_CAUTION_SIGNAGE;
                    objQMBridge_OverallGrading.OVERALL_GRADING = queryObj_OverallGrading.OVERALL_GRADING;
                    objQMBridge_OverallGrading.QM_NAME = queryObj_OverallGrading.QM_NAME;
                    objQMBridge_OverallGrading.UPLOAD_DATE = queryObj_OverallGrading.UPLOAD_DATE == null ? "" : (Convert.ToDateTime(queryObj_OverallGrading.UPLOAD_DATE)).ToString().Split(' ')[0].Replace('-', '/');

                    objQMBridge_PreviewModel.BRIDGE_QM_OVERALL_GRADING_VIEW = objQMBridge_OverallGrading;
                }

                if (queryObj_QualityGrading != null)
                {
                    objQMBridge_QualityGrading.I2_QUALITY_ARRANGEMENTS = queryObj_QualityGrading.I2_QUALITY_ARRANGEMENTS;
                    objQMBridge_QualityGrading.I3_ATTENTION_QUALITY = queryObj_QualityGrading.I3_ATTENTION_QUALITY;
                    objQMBridge_QualityGrading.I4_FOUNDATION = queryObj_QualityGrading.I4_FOUNDATION;
                    objQMBridge_QualityGrading.I5_SUBSTRUCTURE = queryObj_QualityGrading.I5_SUBSTRUCTURE;
                    objQMBridge_QualityGrading.I6_SUPERSTRUCTURE = queryObj_QualityGrading.I6_SUPERSTRUCTURE;
                    objQMBridge_QualityGrading.I7_LOAD_TEST = queryObj_QualityGrading.I7_LOAD_TEST;
                    objQMBridge_QualityGrading.I8_CONDITION_BEARING = queryObj_QualityGrading.I8_CONDITION_BEARING;
                    objQMBridge_QualityGrading.I9_EXPANSION_JOINT = queryObj_QualityGrading.I9_EXPANSION_JOINT;
                    objQMBridge_QualityGrading.I10_APPROACHES = queryObj_QualityGrading.I10_APPROACHES;
                    objQMBridge_QualityGrading.I11_BRIDGE_FURNITURE = queryObj_QualityGrading.I11_BRIDGE_FURNITURE;
                    objQMBridge_QualityGrading.UPLOAD_DATE = queryObj_QualityGrading.UPLOAD_DATE == null ? "" : (Convert.ToDateTime(queryObj_QualityGrading.UPLOAD_DATE).ToString().Split(' ')[0].Replace('-', '/'));


                    objQMBridge_PreviewModel.BRIDGE_QM_QUALITY_GRADING_VIEW = objQMBridge_QualityGrading;
                }

                #endregion
                #endregion

                #endregion
            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "EFORMArea.PdfDataDAL.PreviewBridgeQM_SavedDataDAL()");
                return objQMBridge_PreviewModel;
            }
            finally
            {
                if (dbContext != null)
                    dbContext.Dispose();
            }
            return objQMBridge_PreviewModel;
        }
        #endregion

        #region Test Report
        public List<SelectListItem> SaveToTRDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_TR_VIEWMODEL qmInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, bool TemplateStatus, char[] chkBoxArr)
        {

            PdfLoadedDocument loadedDocument = new PdfLoadedDocument(filePath);
            List<SelectListItem> validationList = new List<SelectListItem>();
            PMGSYEntities dbContext = new PMGSYEntities();
            //   EFORMCommonFunctions cm = new EFORMCommonFunctions();
            try
            {
                PdfLoadedForm loadedForm = loadedDocument.Form;
                loadedForm.ReadOnly = true;
                string type = string.Empty;
                int detailId = 0;


                int eformId = Convert.ToInt32(eformIDFromGrid);
                int RoadCode = dbContext.EFORM_MASTER.Where(s => s.EFORM_ID == eformId).Select(m => m.IMS_PR_ROAD_CODE).FirstOrDefault();
                Int32 admnNdCode = PMGSYSession.Current.AdminNdCode;
                Int32 prRoadCode = RoadCode;
                Int32 UserId = PMGSYSession.Current.UserId;
                string ipAdd = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                detailId = eformId;


                string templateVersionValue = string.Empty;
                try
                {

                    PdfLoadedTextBoxField templateVersion = loadedForm.Fields["TEMPLATE_VERSION"] as PdfLoadedTextBoxField;
                    templateVersionValue = templateVersion.Text;
                }
                catch (Exception ex)
                {
                    ErrorLog.LogError(ex, "PdfDataDAL.SaveToTRDb()");
                }
                using (var scope = new TransactionScope())
                {

                    PMGSYEntities eformdbContext = new PMGSYEntities();

                    if (eformdbContext.EFORM_TEST_REPORT_FILE.Any(s => s.EFORM_ID == eformId && s.IS_EFORM == "Y"))
                    {
                        validationList.Add(new SelectListItem { Text = "Pdf is already uploaded. If you want to upload again, please delete the existing file" });
                        return validationList;
                    }
                    EFORM_TEST_REPORT_FILE uploadModel = new EFORM_TEST_REPORT_FILE();
                    int uploadId = eformdbContext.EFORM_TEST_REPORT_FILE.Any() ? (from item in eformdbContext.EFORM_TEST_REPORT_FILE select item.FILE_ID).Max() + 1 : 1;
                    uploadModel.FILE_ID = uploadId;
                    uploadModel.EFORM_ID = detailId;
                    uploadModel.FILE_NAME = fname;
                    uploadModel.FILE_PATH = Uploaded_Path + "\\" + schdYear + "\\" + schdMonth;
                    uploadModel.FILE_UPLOAD_DATE = System.DateTime.Now;
                    uploadModel.IS_FINALISED = "N";
                    uploadModel.USERID = UserId;
                    uploadModel.IPADD = ipAdd;
                    if (templateVersionValue != "")
                    {
                        uploadModel.TEMPLATE_VERSION = templateVersionValue;
                    }
                    else
                    {
                        uploadModel.TEMPLATE_VERSION = "V1.0";
                    }
                    uploadModel.IS_EFORM = "Y";
                    eformdbContext.EFORM_TEST_REPORT_FILE.Add(uploadModel);
                    eformdbContext.SaveChanges();




                    EFORM_TR_ITEM_APPLICABLE_DETAILS itemDetails = new EFORM_TR_ITEM_APPLICABLE_DETAILS();
                    int itemId = eformdbContext.EFORM_TR_ITEM_APPLICABLE_DETAILS.Any() ? (from item in eformdbContext.EFORM_TR_ITEM_APPLICABLE_DETAILS select item.ITEM_ID).Max() + 1 : 1;

                    itemDetails.ITEM_ID = itemId;
                    itemDetails.EFORM_ID = detailId;
                    itemDetails.IMS_PR_ROAD_CODE = prRoadCode;
                    itemDetails.ITEM_1 = chkBoxArr[1].ToString();
                    itemDetails.ITEM_2 = chkBoxArr[2].ToString();
                    itemDetails.ITEM_3 = chkBoxArr[3].ToString();
                    itemDetails.ITEM_4 = chkBoxArr[4].ToString();
                    itemDetails.ITEM_5 = chkBoxArr[5].ToString();
                    itemDetails.ITEM_6 = chkBoxArr[6].ToString();
                    itemDetails.ITEM_7 = chkBoxArr[7].ToString();
                    itemDetails.ITEM_8 = chkBoxArr[8].ToString();
                    itemDetails.ITEM_9 = chkBoxArr[9].ToString();
                    itemDetails.ITEM_10 = chkBoxArr[10].ToString();
                    itemDetails.ITEM_11 = chkBoxArr[11].ToString();
                    itemDetails.ITEM_12 = chkBoxArr[12].ToString();
                    itemDetails.ITEM_13 = chkBoxArr[13].ToString();
                    itemDetails.ITEM_14 = chkBoxArr[14].ToString();
                    itemDetails.ITEM_15 = chkBoxArr[15].ToString();
                    itemDetails.ITEM_16 = chkBoxArr[16].ToString();
                    itemDetails.ITEM_17 = chkBoxArr[17].ToString();
                    itemDetails.ITEM_18 = chkBoxArr[18].ToString();
                    itemDetails.ITEM_19 = chkBoxArr[19].ToString();
                    itemDetails.ITEM_20 = chkBoxArr[20].ToString();
                    itemDetails.ITEM_21 = chkBoxArr[21].ToString();
                    itemDetails.ITEM_22 = chkBoxArr[22].ToString();
                    itemDetails.ITEM_23 = chkBoxArr[23].ToString();
                    itemDetails.ITEM_24 = chkBoxArr[24].ToString();
                    itemDetails.ITEM_25 = chkBoxArr[25].ToString();
                    itemDetails.ITEM_26 = chkBoxArr[26].ToString();
                    itemDetails.ITEM_27 = chkBoxArr[27].ToString();
                    itemDetails.ITEM_28 = chkBoxArr[28].ToString();
                    itemDetails.ITEM_29 = chkBoxArr[29].ToString();
                    itemDetails.ITEM_30 = chkBoxArr[30].ToString();
                    itemDetails.ITEM_31 = chkBoxArr[31].ToString();
                    itemDetails.ITEM_32 = chkBoxArr[32].ToString();
                    itemDetails.ITEM_33 = chkBoxArr[33].ToString();
                    itemDetails.ITEM_34 = chkBoxArr[34].ToString();
                    itemDetails.ITEM_35 = chkBoxArr[35].ToString();
                    itemDetails.ITEM_36 = chkBoxArr[36].ToString();
                    itemDetails.ITEM_37 = chkBoxArr[37].ToString();
                    itemDetails.ITEM_38 = chkBoxArr[38].ToString();
                    itemDetails.ITEM_39 = chkBoxArr[39].ToString();
                    itemDetails.ITEM_40 = chkBoxArr[40].ToString();
                    itemDetails.ITEM_41 = chkBoxArr[41].ToString();
                    itemDetails.ITEM_42 = chkBoxArr[42].ToString();
                    itemDetails.ITEM_43 = chkBoxArr[43].ToString();
                    itemDetails.ITEM_44 = chkBoxArr[44].ToString();
                    itemDetails.ITEM_45 = chkBoxArr[45].ToString();
                    itemDetails.ITEM_46 = chkBoxArr[46].ToString();
                    itemDetails.ITEM_47 = chkBoxArr[47].ToString();
                    itemDetails.ITEM_48 = chkBoxArr[48].ToString();
                    itemDetails.ITEM_49 = chkBoxArr[49].ToString();
                    itemDetails.ITEM_50 = chkBoxArr[50].ToString();
                    itemDetails.ITEM_51 = chkBoxArr[51].ToString();
                    itemDetails.ITEM_52 = chkBoxArr[52].ToString();
                    itemDetails.ITEM_53 = chkBoxArr[53].ToString();
                    itemDetails.ITEM_54 = chkBoxArr[54].ToString();


                    itemDetails.USER_ID = UserId;
                    itemDetails.IPADD = ipAdd;
                    eformdbContext.EFORM_TR_ITEM_APPLICABLE_DETAILS.Add(itemDetails);
                    eformdbContext.SaveChanges();

                    for (int i = 0; i < qmInsertModel.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_List.Count; i++)
                    {
                        PMGSY.Models.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL MAINITEM_OPTIONS_SELECTED_DETAIL = new PMGSY.Models.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL();

                        MAINITEM_OPTIONS_SELECTED_DETAIL.MAIN_SELECT_ID = eformdbContext.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL select item.MAIN_SELECT_ID).Max() + 1 : 1;
                        MAINITEM_OPTIONS_SELECTED_DETAIL.MAIN_ITEM_ID = qmInsertModel.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_List[i].MAIN_ITEM_ID;
                        MAINITEM_OPTIONS_SELECTED_DETAIL.EFORM_ID = detailId;
                        MAINITEM_OPTIONS_SELECTED_DETAIL.OPTION_ID = qmInsertModel.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_List[i].OPTION_ID;
                        MAINITEM_OPTIONS_SELECTED_DETAIL.USER_ID = UserId;
                        MAINITEM_OPTIONS_SELECTED_DETAIL.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL.Add(MAINITEM_OPTIONS_SELECTED_DETAIL);
                        eformdbContext.SaveChanges();
                    }

                    for (int i = 0; i < qmInsertModel.SUBITEM_OPTIONS_SELECTED_DETAIL_List.Count; i++)
                    {
                        PMGSY.Models.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL SUBITEM_OPTIONS_SELECTED_DETAIL = new PMGSY.Models.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL();

                        SUBITEM_OPTIONS_SELECTED_DETAIL.SUB_SELECT_ID = eformdbContext.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL select item.SUB_SELECT_ID).Max() + 1 : 1;
                        SUBITEM_OPTIONS_SELECTED_DETAIL.MAIN_ITEM_ID = qmInsertModel.SUBITEM_OPTIONS_SELECTED_DETAIL_List[i].MAIN_ITEM_ID;
                        SUBITEM_OPTIONS_SELECTED_DETAIL.SUBITEM_ID = qmInsertModel.SUBITEM_OPTIONS_SELECTED_DETAIL_List[i].SUBITEM_ID;
                        SUBITEM_OPTIONS_SELECTED_DETAIL.EFORM_ID = detailId;
                        SUBITEM_OPTIONS_SELECTED_DETAIL.OPTION_ID = qmInsertModel.SUBITEM_OPTIONS_SELECTED_DETAIL_List[i].OPTION_ID;
                        SUBITEM_OPTIONS_SELECTED_DETAIL.USER_ID = UserId;
                        SUBITEM_OPTIONS_SELECTED_DETAIL.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL.Add(SUBITEM_OPTIONS_SELECTED_DETAIL);
                        eformdbContext.SaveChanges();
                    }


                    #region ----Vikky Pages(Type-A):1,5,7,9,11,15,16,18,19,22------
                    if (chkBoxArr[1] == 'Y')
                    {
                        #region Page 1: EFORM_TR_TYPEA_SUMMARY_PAGE1_SRM_1


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE1_SRM_1 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE1_SRM_1.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE1_SRM_1.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE1_SRM_1.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE1_SRM_1.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.TABLE_ID;
                        TYPEA_SUMMARY_PAGE1_SRM_1.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.IS_HEAVY_COMPACTION_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH1_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH2_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH3_1_1;

                        TYPEA_SUMMARY_PAGE1_SRM_1.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.TESTING_DATE_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.MOISTURE_CONTENT_METHOD_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.REMARK_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.COMMENT_1_1;
                        TYPEA_SUMMARY_PAGE1_SRM_1.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE1_SRM_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE1_SRM_1.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE1_SRM_1.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE1_SRM_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 1: EFORM_TR_TYPEA_DETAIL_PAGE1_SRM_1
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE1_SRM_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE1_SRM_1 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE1_SRM_1.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE1_SRM_1.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE1_SRM_1.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_SRM_1.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE1_SRM_1.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE1_SRM_1_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE1_SRM_1.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE1_SRM_1.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE1_SRM_1.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE1_SRM_1.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE1_SRM_1_List[i].CH1;
                            TYPEA_DETAIL_PAGE1_SRM_1.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE1_SRM_1_List[i].CH2;
                            TYPEA_DETAIL_PAGE1_SRM_1.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE1_SRM_1_List[i].CH3;
                            TYPEA_DETAIL_PAGE1_SRM_1.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE1_SRM_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE1_SRM_1);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[2] == 'Y')
                    {
                        #region Page 1: EFORM_TR_TYPEA_SUMMARY_PAGE1_CCM_2


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE1_CCM_2 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE1_CCM_2.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE1_CCM_2.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE1_CCM_2.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE1_CCM_2.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE1_CCM_2.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.TABLE_ID;
                        TYPEA_SUMMARY_PAGE1_CCM_2.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.IS_HEAVY_COMPACTION_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH1_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH2_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH3_1_2;

                        TYPEA_SUMMARY_PAGE1_CCM_2.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.TESTING_DATE_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.MOISTURE_CONTENT_METHOD_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.REMARK_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.COMMENT_1_2;
                        TYPEA_SUMMARY_PAGE1_CCM_2.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE1_CCM_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE1_CCM_2.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE1_CCM_2.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE1_CCM_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 1: EFORM_TR_TYPEA_DETAIL_PAGE1_CCM_2
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE1_CCM_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE1_CCM_2 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE1_CCM_2.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE1_CCM_2.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE1_CCM_2.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE1_CCM_2.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE1_CCM_2.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE1_CCM_2_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE1_CCM_2.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE1_CCM_2.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE1_CCM_2.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE1_CCM_2.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE1_CCM_2_List[i].CH1;
                            TYPEA_DETAIL_PAGE1_CCM_2.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE1_CCM_2_List[i].CH2;
                            TYPEA_DETAIL_PAGE1_CCM_2.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE1_CCM_2_List[i].CH3;
                            TYPEA_DETAIL_PAGE1_CCM_2.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE1_CCM_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE1_CCM_2);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }


                    if (chkBoxArr[12] == 'Y')
                    {
                        #region Page 5: EFORM_TR_TYPEA_SUMMARY_PAGE5_SRM_12


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE5_SRM_12 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE5_SRM_12.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE5_SRM_12.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE5_SRM_12.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE5_SRM_12.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.TABLE_ID;
                        TYPEA_SUMMARY_PAGE5_SRM_12.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.IS_HEAVY_COMPACTION_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH1_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH2_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH3_5_1;

                        TYPEA_SUMMARY_PAGE5_SRM_12.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.TESTING_DATE_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.MOISTURE_CONTENT_METHOD_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.REMARK_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.COMMENT_5_1;
                        TYPEA_SUMMARY_PAGE5_SRM_12.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE5_SRM_12.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE5_SRM_12.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE5_SRM_12.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE5_SRM_12);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 5: EFORM_TR_TYPEA_DETAIL_PAGE5_SRM_12
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE5_SRM_12_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE5_SRM_12 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE5_SRM_12.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE5_SRM_12.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE5_SRM_12.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE5_SRM_12.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE5_SRM_12.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE5_SRM_12_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE5_SRM_12.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE5_SRM_12.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE5_SRM_12.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE5_SRM_12.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE5_SRM_12_List[i].CH1;
                            TYPEA_DETAIL_PAGE5_SRM_12.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE5_SRM_12_List[i].CH2;
                            TYPEA_DETAIL_PAGE5_SRM_12.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE5_SRM_12_List[i].CH3;
                            TYPEA_DETAIL_PAGE5_SRM_12.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE5_SRM_12.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE5_SRM_12);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[16] == 'Y')
                    {
                        #region Page 7: EFORM_TR_TYPEA_SUMMARY_PAGE7_SRM_16


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE7_SRM_16 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE7_SRM_16.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE7_SRM_16.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE7_SRM_16.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE7_SRM_16.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.TABLE_ID;
                        TYPEA_SUMMARY_PAGE7_SRM_16.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.IS_HEAVY_COMPACTION_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH1_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH2_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH3_7_1;

                        TYPEA_SUMMARY_PAGE7_SRM_16.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.TESTING_DATE_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.MOISTURE_CONTENT_METHOD_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.REMARK_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.COMMENT_7_1;
                        TYPEA_SUMMARY_PAGE7_SRM_16.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE7_SRM_16.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE7_SRM_16.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE7_SRM_16.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE7_SRM_16);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 7: EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_16
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_16_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE7_SRM_16 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE7_SRM_16.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE7_SRM_16.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE7_SRM_16.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_16.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE7_SRM_16.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_16_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE7_SRM_16.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE7_SRM_16.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE7_SRM_16.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE7_SRM_16.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_16_List[i].CH1;
                            TYPEA_DETAIL_PAGE7_SRM_16.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_16_List[i].CH2;
                            TYPEA_DETAIL_PAGE7_SRM_16.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_16_List[i].CH3;
                            TYPEA_DETAIL_PAGE7_SRM_16.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE7_SRM_16.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE7_SRM_16);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    PdfLoadedRadioButtonListField Base_Course_1_select = loadedForm.Fields["Base_Course_1"] as PdfLoadedRadioButtonListField;
                    if (chkBoxArr[17] == 'Y' && (Base_Course_1_select.SelectedValue == "8" || Base_Course_1_select.SelectedValue == "9" || Base_Course_1_select.SelectedValue == "10"))
                    {
                        #region Page 7: EFORM_TR_TYPEA_SUMMARY_PAGE7_SRM_17


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE7_SRM_17 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE7_SRM_17.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE7_SRM_17.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE7_SRM_17.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE7_SRM_17.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE7_SRM_17.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.TABLE_ID;
                        TYPEA_SUMMARY_PAGE7_SRM_17.L = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.L_7_2;
                        TYPEA_SUMMARY_PAGE7_SRM_17.H = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.H_7_2;
                        TYPEA_SUMMARY_PAGE7_SRM_17.B = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.B_7_2;
                        TYPEA_SUMMARY_PAGE7_SRM_17.VOL = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.VOL_7_2;

                        TYPEA_SUMMARY_PAGE7_SRM_17.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.TESTING_DATE_7_2;
                        TYPEA_SUMMARY_PAGE7_SRM_17.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.REMARK_7_2;
                        TYPEA_SUMMARY_PAGE7_SRM_17.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.COMMENT_7_2;
                        TYPEA_SUMMARY_PAGE7_SRM_17.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE7_SRM_17.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE7_SRM_17.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE7_SRM_17.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE7_SRM_17);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 7: EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_17
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_17_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE7_SRM_17 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE7_SRM_17.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE7_SRM_17.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE7_SRM_17.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE7_SRM_17.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE7_SRM_17.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_17_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE7_SRM_17.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE7_SRM_17.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE7_SRM_17.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE7_SRM_17.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_17_List[i].CH1;
                            TYPEA_DETAIL_PAGE7_SRM_17.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_17_List[i].CH2;
                            TYPEA_DETAIL_PAGE7_SRM_17.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE7_SRM_17_List[i].CH3;
                            TYPEA_DETAIL_PAGE7_SRM_17.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE7_SRM_17.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE7_SRM_17);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }


                    if (chkBoxArr[21] == 'Y')
                    {
                        #region Page 9: EFORM_TR_TYPEA_SUMMARY_PAGE9_SRM_21


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE9_SRM_21 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE9_SRM_21.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE9_SRM_21.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE9_SRM_21.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE9_SRM_21.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.TABLE_ID;
                        TYPEA_SUMMARY_PAGE9_SRM_21.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.IS_HEAVY_COMPACTION_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH1_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH2_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH3_9_1;

                        TYPEA_SUMMARY_PAGE9_SRM_21.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.TESTING_DATE_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.MOISTURE_CONTENT_METHOD_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.REMARK_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.COMMENT_9_1;
                        TYPEA_SUMMARY_PAGE9_SRM_21.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE9_SRM_21.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE9_SRM_21.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE9_SRM_21.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE9_SRM_21);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 9: EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_21
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_21_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE9_SRM_21 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE9_SRM_21.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE9_SRM_21.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE9_SRM_21.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_21.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE9_SRM_21.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_21_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE9_SRM_21.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE9_SRM_21.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE9_SRM_21.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE9_SRM_21.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_21_List[i].CH1;
                            TYPEA_DETAIL_PAGE9_SRM_21.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_21_List[i].CH2;
                            TYPEA_DETAIL_PAGE9_SRM_21.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_21_List[i].CH3;
                            TYPEA_DETAIL_PAGE9_SRM_21.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE9_SRM_21.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE9_SRM_21);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    PdfLoadedRadioButtonListField Base_Course_2_select = loadedForm.Fields["Base_Course_2"] as PdfLoadedRadioButtonListField;
                    if (chkBoxArr[22] == 'Y' && (Base_Course_2_select.SelectedValue == "14" || Base_Course_2_select.SelectedValue == "15" || Base_Course_2_select.SelectedValue == "16"))
                    {
                        #region Page 9: EFORM_TR_TYPEA_SUMMARY_PAGE9_SRM_22


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE9_SRM_22 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE9_SRM_22.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE9_SRM_22.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE9_SRM_22.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE9_SRM_22.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE9_SRM_22.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.TABLE_ID;
                        TYPEA_SUMMARY_PAGE9_SRM_22.L = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.L_9_2;
                        TYPEA_SUMMARY_PAGE9_SRM_22.B = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.B_9_2;
                        TYPEA_SUMMARY_PAGE9_SRM_22.H = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.H_9_2;
                        TYPEA_SUMMARY_PAGE9_SRM_22.VOL = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.VOL_9_2;

                        TYPEA_SUMMARY_PAGE9_SRM_22.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.TESTING_DATE_9_2;
                        TYPEA_SUMMARY_PAGE9_SRM_22.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.REMARK_9_2;
                        TYPEA_SUMMARY_PAGE9_SRM_22.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.COMMENT_9_2;
                        TYPEA_SUMMARY_PAGE9_SRM_22.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE9_SRM_22.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE9_SRM_22.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE9_SRM_22.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE9_SRM_22);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 9: EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_22
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_22_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE9_SRM_22 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE9_SRM_22.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE9_SRM_22.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE9_SRM_22.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE9_SRM_22.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE9_SRM_22.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_22_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE9_SRM_22.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE9_SRM_22.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE9_SRM_22.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE9_SRM_22.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_22_List[i].CH1;
                            TYPEA_DETAIL_PAGE9_SRM_22.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_22_List[i].CH2;
                            TYPEA_DETAIL_PAGE9_SRM_22.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE9_SRM_22_List[i].CH3;
                            TYPEA_DETAIL_PAGE9_SRM_22.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE9_SRM_22.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE9_SRM_22);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[26] == 'Y')
                    {
                        #region Page 11: EFORM_TR_TYPEA_SUMMARY_PAGE11_SRM_26


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE11_SRM_26 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE11_SRM_26.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE11_SRM_26.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE11_SRM_26.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE11_SRM_26.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.TABLE_ID;
                        TYPEA_SUMMARY_PAGE11_SRM_26.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.IS_HEAVY_COMPACTION_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH1_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH2_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH3_11_1;

                        TYPEA_SUMMARY_PAGE11_SRM_26.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.TESTING_DATE_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.MOISTURE_CONTENT_METHOD_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.REMARK_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.COMMENT_11_1;
                        TYPEA_SUMMARY_PAGE11_SRM_26.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE11_SRM_26.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE11_SRM_26.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE11_SRM_26.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE11_SRM_26);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 11: EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_26
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_26_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE11_SRM_26 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE11_SRM_26.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE11_SRM_26.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE11_SRM_26.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_26.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE11_SRM_26.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_26_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE11_SRM_26.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE11_SRM_26.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE11_SRM_26.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE11_SRM_26.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_26_List[i].CH1;
                            TYPEA_DETAIL_PAGE11_SRM_26.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_26_List[i].CH2;
                            TYPEA_DETAIL_PAGE11_SRM_26.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_26_List[i].CH3;
                            TYPEA_DETAIL_PAGE11_SRM_26.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE11_SRM_26.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE11_SRM_26);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    PdfLoadedRadioButtonListField Base_Course_3_select = loadedForm.Fields["Base_Course_3"] as PdfLoadedRadioButtonListField;
                    if (chkBoxArr[27] == 'Y' && (Base_Course_3_select.SelectedValue == "20" || Base_Course_3_select.SelectedValue == "21" || Base_Course_3_select.SelectedValue == "22"))
                    {
                        #region Page 11: EFORM_TR_TYPEA_SUMMARY_PAGE11_SRM_27


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE11_SRM_27 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE11_SRM_27.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE11_SRM_27.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE11_SRM_27.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE11_SRM_27.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE11_SRM_27.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.TABLE_ID;
                        TYPEA_SUMMARY_PAGE11_SRM_27.L = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.L_11_2;
                        TYPEA_SUMMARY_PAGE11_SRM_27.B = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.B_11_2;
                        TYPEA_SUMMARY_PAGE11_SRM_27.H = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.H_11_2;
                        TYPEA_SUMMARY_PAGE11_SRM_27.VOL = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.VOL_11_2;

                        TYPEA_SUMMARY_PAGE11_SRM_27.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.TESTING_DATE_11_2;
                        TYPEA_SUMMARY_PAGE11_SRM_27.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.REMARK_11_2;
                        TYPEA_SUMMARY_PAGE11_SRM_27.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.COMMENT_11_2;
                        TYPEA_SUMMARY_PAGE11_SRM_27.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE11_SRM_27.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE11_SRM_27.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE11_SRM_27.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE11_SRM_27);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 11: EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_27
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_27_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE11_SRM_27 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE11_SRM_27.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE11_SRM_27.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE11_SRM_27.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE11_SRM_27.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE11_SRM_27.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_27_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE11_SRM_27.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE11_SRM_27.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE11_SRM_27.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE11_SRM_27.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_27_List[i].CH1;
                            TYPEA_DETAIL_PAGE11_SRM_27.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_27_List[i].CH2;
                            TYPEA_DETAIL_PAGE11_SRM_27.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE11_SRM_27_List[i].CH3;
                            TYPEA_DETAIL_PAGE11_SRM_27.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE11_SRM_27.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE11_SRM_27);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[37] == 'Y')
                    {
                        #region Page 15: EFORM_TR_TYPEA_SUMMARY_PAGE15_SRM_37


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE15_SRM_37 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE15_SRM_37.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE15_SRM_37.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE15_SRM_37.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE15_SRM_37.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.TABLE_ID;
                        TYPEA_SUMMARY_PAGE15_SRM_37.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.IS_HEAVY_COMPACTION_15_1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH1_15_1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH2_15_1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH3_15_1;

                        TYPEA_SUMMARY_PAGE15_SRM_37.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.TESTING_DATE_15_1;
                        // TYPEA_SUMMARY_PAGE15_SRM_37.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.MOISTURE_CONTENT_METHOD_15_1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.REMARK_15_1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.COMMENT_15_1;
                        TYPEA_SUMMARY_PAGE15_SRM_37.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE15_SRM_37.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE15_SRM_37.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE15_SRM_37.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE15_SRM_37);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 15: EFORM_TR_TYPEA_DETAIL_PAGE15_SRM_37
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE15_SRM_37_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE15_SRM_37 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE15_SRM_37.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE15_SRM_37.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE15_SRM_37.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE15_SRM_37.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE15_SRM_37.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE15_SRM_37_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE15_SRM_37.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE15_SRM_37.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE15_SRM_37.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE15_SRM_37.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE15_SRM_37_List[i].CH1;
                            TYPEA_DETAIL_PAGE15_SRM_37.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE15_SRM_37_List[i].CH2;
                            TYPEA_DETAIL_PAGE15_SRM_37.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE15_SRM_37_List[i].CH3;
                            TYPEA_DETAIL_PAGE15_SRM_37.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE15_SRM_37.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE15_SRM_37);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[38] == 'Y')
                    {
                        #region Page 15: EFORM_TR_TYPEA_SUMMARY_PAGE16_CCM_38


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE16_CCM_38 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE16_CCM_38.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE16_CCM_38.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE16_CCM_38.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE16_CCM_38.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE16_CCM_38.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.TABLE_ID;
                        TYPEA_SUMMARY_PAGE16_CCM_38.IS_HEAVY_COMPACTION = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.IS_HEAVY_COMPACTION_15_2;
                        TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH1_15_2;
                        TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH2_15_2;
                        TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH3_15_2;

                        TYPEA_SUMMARY_PAGE16_CCM_38.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.TESTING_DATE_15_2;
                        // TYPEA_SUMMARY_PAGE16_CCM_38.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.MOISTURE_CONTENT_METHOD_15_2;
                        TYPEA_SUMMARY_PAGE16_CCM_38.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.REMARK_15_2;
                        TYPEA_SUMMARY_PAGE16_CCM_38.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.COMMENT_15_2;
                        TYPEA_SUMMARY_PAGE16_CCM_38.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE16_CCM_38.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE16_CCM_38.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE16_CCM_38.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE16_CCM_38);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 15: EFORM_TR_TYPEA_DETAIL_PAGE15_CCM_38
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE16_CCM_38_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE15_CCM_38 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE15_CCM_38.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE15_CCM_38.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE15_CCM_38.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_CCM_38.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE15_CCM_38.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE16_CCM_38_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE15_CCM_38.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE15_CCM_38.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE15_CCM_38.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE15_CCM_38.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE16_CCM_38_List[i].CH1;
                            TYPEA_DETAIL_PAGE15_CCM_38.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE16_CCM_38_List[i].CH2;
                            TYPEA_DETAIL_PAGE15_CCM_38.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE16_CCM_38_List[i].CH3;
                            TYPEA_DETAIL_PAGE15_CCM_38.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE15_CCM_38.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE15_CCM_38);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[39] == 'Y')
                    {
                        #region Page 16: EFORM_TR_TYPEA_SUMMARY_PAGE16_SRM_39


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE16_SRM_39 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE16_SRM_39.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE16_SRM_39.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE16_SRM_39.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE16_SRM_39.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE16_SRM_39.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.TABLE_ID;
                        TYPEA_SUMMARY_PAGE16_SRM_39.B_CONTENT = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.B_CONTENT_16_1;

                        TYPEA_SUMMARY_PAGE16_SRM_39.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.TESTING_DATE_16_1;
                        TYPEA_SUMMARY_PAGE16_SRM_39.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.REMARK_16_1;
                        TYPEA_SUMMARY_PAGE16_SRM_39.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.COMMENT_16_1;
                        TYPEA_SUMMARY_PAGE16_SRM_39.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE16_SRM_39.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE16_SRM_39.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE16_SRM_39.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE16_SRM_39);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 16: EFORM_TR_TYPEA_DETAIL_PAGE16_SRM_39
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE16_SRM_39_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE16_SRM_39 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE16_SRM_39.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE16_SRM_39.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE16_SRM_39.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE16_SRM_39.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE16_SRM_39.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE16_SRM_39_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE16_SRM_39.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE16_SRM_39.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE16_SRM_39.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE16_SRM_39.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE16_SRM_39_List[i].CH1;
                            TYPEA_DETAIL_PAGE16_SRM_39.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE16_SRM_39_List[i].CH2;
                            TYPEA_DETAIL_PAGE16_SRM_39.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE16_SRM_39_List[i].CH3;
                            TYPEA_DETAIL_PAGE16_SRM_39.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE16_SRM_39.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE16_SRM_39);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[43] == 'Y')
                    {
                        #region Page 18: EFORM_TR_TYPEA_SUMMARY_PAGE18_SRM_43


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE18_SRM_43 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE18_SRM_43.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE18_SRM_43.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE18_SRM_43.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE18_SRM_43.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE18_SRM_43.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.TABLE_ID;
                        TYPEA_SUMMARY_PAGE18_SRM_43.B_CONTENT = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.B_CONTENT_18_2;

                        TYPEA_SUMMARY_PAGE18_SRM_43.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.TESTING_DATE_18_2;
                        TYPEA_SUMMARY_PAGE18_SRM_43.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.REMARK_18_2;
                        TYPEA_SUMMARY_PAGE18_SRM_43.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.COMMENT_18_2;
                        TYPEA_SUMMARY_PAGE18_SRM_43.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE18_SRM_43.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE18_SRM_43.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE18_SRM_43.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE18_SRM_43);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 18: EFORM_TR_TYPEA_DETAIL_PAGE18_SRM_43
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE18_SRM_43_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE18_SRM_43 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE18_SRM_43.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE18_SRM_43.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE18_SRM_43.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE18_SRM_43.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE18_SRM_43.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE18_SRM_43_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE18_SRM_43.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE18_SRM_43.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE18_SRM_43.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE18_SRM_43.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE18_SRM_43_List[i].CH1;
                            TYPEA_DETAIL_PAGE18_SRM_43.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE18_SRM_43_List[i].CH2;
                            TYPEA_DETAIL_PAGE18_SRM_43.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE18_SRM_43_List[i].CH3;
                            TYPEA_DETAIL_PAGE18_SRM_43.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE18_SRM_43.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE18_SRM_43);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    PdfLoadedRadioButtonListField Shoulder = loadedForm.Fields["Shoulder"] as PdfLoadedRadioButtonListField;
                    if (chkBoxArr[44] == 'Y' && (Shoulder.SelectedValue == "36" || Shoulder.SelectedValue == "37"))
                    {
                        #region Page 19: EFORM_TR_TYPEA_SUMMARY_PAGE19_SRM_44


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE19_SRM_44 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE19_SRM_44.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE19_SRM_44.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE19_SRM_44.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE19_SRM_44.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.TABLE_ID;
                        TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH1_19_1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH2_19_1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH3_19_1;

                        TYPEA_SUMMARY_PAGE19_SRM_44.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.TESTING_DATE_19_1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.MOISTURE_CONTENT_METHOD_19_1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.REMARK_19_1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.COMMENT_19_1;
                        TYPEA_SUMMARY_PAGE19_SRM_44.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE19_SRM_44.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE19_SRM_44.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE19_SRM_44.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE19_SRM_44);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 19: EFORM_TR_TYPEA_DETAIL_PAGE19_SRM_44
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE19_SRM_44_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE19_SRM_44 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE19_SRM_44.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE19_SRM_44.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE19_SRM_44.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_SRM_44.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE19_SRM_44.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE19_SRM_44_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE19_SRM_44.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE19_SRM_44.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE19_SRM_44.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE19_SRM_44.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE19_SRM_44_List[i].CH1;
                            TYPEA_DETAIL_PAGE19_SRM_44.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE19_SRM_44_List[i].CH2;
                            TYPEA_DETAIL_PAGE19_SRM_44.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE19_SRM_44_List[i].CH3;
                            TYPEA_DETAIL_PAGE19_SRM_44.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE19_SRM_44.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE19_SRM_44);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }


                    if (chkBoxArr[45] == 'Y' && (Shoulder.SelectedValue == "35" || Shoulder.SelectedValue == "36"))
                    {
                        #region Page 19: EFORM_TR_TYPEA_SUMMARY_PAGE19_CCM_45


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE19_CCM_45 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE19_CCM_45.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE19_CCM_45.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE19_CCM_45.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE19_CCM_45.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE19_CCM_45.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.TABLE_ID;
                        TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH1_19_2;
                        TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH2_19_2;
                        TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH3_19_2;

                        TYPEA_SUMMARY_PAGE19_CCM_45.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.TESTING_DATE_19_2;
                        TYPEA_SUMMARY_PAGE19_CCM_45.MOISTURE_CONTENT_METHOD = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.MOISTURE_CONTENT_METHOD_19_2;
                        TYPEA_SUMMARY_PAGE19_CCM_45.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.REMARK_19_2;
                        TYPEA_SUMMARY_PAGE19_CCM_45.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.COMMENT_19_2;
                        TYPEA_SUMMARY_PAGE19_CCM_45.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE19_CCM_45.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE19_CCM_45.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE19_CCM_45.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE19_CCM_45);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 19: EFORM_TR_TYPEA_DETAIL_PAGE19_CCM_45
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE19_CCM_45_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE19_CCM_45 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE19_CCM_45.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE19_CCM_45.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE19_CCM_45.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE19_CCM_45.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE19_CCM_45.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE19_CCM_45_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE19_CCM_45.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE19_CCM_45.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE19_CCM_45.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE19_CCM_45.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE19_CCM_45_List[i].CH1;
                            TYPEA_DETAIL_PAGE19_CCM_45.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE19_CCM_45_List[i].CH2;
                            TYPEA_DETAIL_PAGE19_CCM_45.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE19_CCM_45_List[i].CH3;
                            TYPEA_DETAIL_PAGE19_CCM_45.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE19_CCM_45.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE19_CCM_45);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }


                    if (chkBoxArr[52] == 'Y')
                    {
                        #region Page 22: EFORM_TR_TYPEA_SUMMARY_PAGE22_SRM_52


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE22_SRM_52 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE22_SRM_52.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE22_SRM_52.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE22_SRM_52.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE22_SRM_52.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE22_SRM_52.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.TABLE_ID;

                        TYPEA_SUMMARY_PAGE22_SRM_52.LAYER_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.Layer_22_1;
                        TYPEA_SUMMARY_PAGE22_SRM_52.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.TESTING_DATE_22_1;
                        TYPEA_SUMMARY_PAGE22_SRM_52.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.REMARK_22_1;
                        TYPEA_SUMMARY_PAGE22_SRM_52.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.COMMENT_22_1;
                        TYPEA_SUMMARY_PAGE22_SRM_52.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE22_SRM_52.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE22_SRM_52.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE22_SRM_52.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE22_SRM_52);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 22: EFORM_TR_TYPEA_DETAIL_PAGE22_SRM_52
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE22_SRM_52_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE22_SRM_52 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE22_SRM_52.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE22_SRM_52.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE22_SRM_52.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_52.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE22_SRM_52.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE22_SRM_52_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE22_SRM_52.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE22_SRM_52.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE22_SRM_52.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE22_SRM_52.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE22_SRM_52_List[i].CH1;
                            TYPEA_DETAIL_PAGE22_SRM_52.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE22_SRM_52_List[i].CH2;
                            TYPEA_DETAIL_PAGE22_SRM_52.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE22_SRM_52_List[i].CH3;
                            TYPEA_DETAIL_PAGE22_SRM_52.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE22_SRM_52.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE22_SRM_52);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[53] == 'Y')
                    {
                        #region Page 22: EFORM_TR_TYPEA_SUMMARY_PAGE22_SRM_53


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE22_SRM_53 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE22_SRM_53.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE22_SRM_53.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE22_SRM_53.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE22_SRM_53.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE22_SRM_53.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.TABLE_ID;
                        TYPEA_SUMMARY_PAGE22_SRM_53.SAMPLE_AGE = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.SAMPLE_AGE_22_2;
                        TYPEA_SUMMARY_PAGE22_SRM_53.LAYER_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.Layer_22_2;

                        TYPEA_SUMMARY_PAGE22_SRM_53.UCS_DPR = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.UCS_DPR_22_2;
                        TYPEA_SUMMARY_PAGE22_SRM_53.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.TESTING_DATE_22_2;
                        TYPEA_SUMMARY_PAGE22_SRM_53.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.REMARK_22_2;
                        TYPEA_SUMMARY_PAGE22_SRM_53.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.COMMENT_22_2;
                        TYPEA_SUMMARY_PAGE22_SRM_53.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE22_SRM_53.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE22_SRM_53.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE22_SRM_53.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE22_SRM_53);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 22: EFORM_TR_UCS_TEST_DETAIL_PAGE22_SRM_53
                        for (int i = 0; i < qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_UCS_TEST_DETAILS UCS_TEST_DETAIL_PAGE22_SRM_53 = new PMGSY.Models.EFORM_TR_UCS_TEST_DETAILS();
                            UCS_TEST_DETAIL_PAGE22_SRM_53.DETAILS_ID = eformdbContext.EFORM_TR_UCS_TEST_DETAILS.Any() ? (from item in eformdbContext.EFORM_TR_UCS_TEST_DETAILS select item.DETAILS_ID).Max() + 1 : 1;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.MAIN_ITEM_ID;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE22_SRM_53.SUBITEM_ID;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.TYPEA_SUMM_ID = summId;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.EFORM_ID = detailId;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.ROAD_ID = prRoadCode;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.CHAINAGE = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].CHAINAGE_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.SAMPLE_WT = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].SAMPLE_WT_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.DENSITY = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].DENSITY_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.TESTING_DATE = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].TESTING_DATE_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.SAMPLE_VOL = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].SAMPLE_VOL_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.LOAD_KN = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].LOAD_KN_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.COMPR_STREANGTH = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].COMPR_STREANGTH_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.IS_STD_CONFIRM = qmInsertModel.UCS_TEST_DETAIL_PAGE22_SRM_53_List[i].IS_STD_CONFIRM_22_2;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.USER_ID = UserId;
                            UCS_TEST_DETAIL_PAGE22_SRM_53.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_UCS_TEST_DETAILS.Add(UCS_TEST_DETAIL_PAGE22_SRM_53);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }

                    if (chkBoxArr[54] == 'Y')
                    {
                        #region Page 22: EFORM_TR_TYPEA_SUMMARY_PAGE23_SRM_54


                        PMGSY.Models.EFORM_TR_TYPEA_SUMMARY TYPEA_SUMMARY_PAGE23_SRM_54 = new PMGSY.Models.EFORM_TR_TYPEA_SUMMARY();
                        int summId = eformdbContext.EFORM_TR_TYPEA_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_SUMMARY select item.TYPEA_SUMM_ID).Max() + 1 : 1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.TYPEA_SUMM_ID = summId;
                        TYPEA_SUMMARY_PAGE23_SRM_54.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.MAIN_ITEM_ID;
                        TYPEA_SUMMARY_PAGE23_SRM_54.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.SUBITEM_ID;
                        TYPEA_SUMMARY_PAGE23_SRM_54.EFORM_ID = detailId;
                        TYPEA_SUMMARY_PAGE23_SRM_54.TABLE_ID = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.TABLE_ID;
                        TYPEA_SUMMARY_PAGE23_SRM_54.SAMPLE_AGE = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.SAMPLE_AGE_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH1 = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH1_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH2 = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH2_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH3 = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH3_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.DESIGN_STRENGTH = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.DESIGN_STRENGTH_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.TESTING_DATE = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.TESTING_DATE_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.REMARK = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.REMARK_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.COMMENT = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.COMMENT_23_1;
                        TYPEA_SUMMARY_PAGE23_SRM_54.TESTED_BY_PIU = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.TESTED_BY_PIU;
                        TYPEA_SUMMARY_PAGE23_SRM_54.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEA_SUMMARY_PAGE23_SRM_54.USER_ID = UserId;
                        TYPEA_SUMMARY_PAGE23_SRM_54.IPADD = ipAdd;

                        eformdbContext.EFORM_TR_TYPEA_SUMMARY.Add(TYPEA_SUMMARY_PAGE23_SRM_54);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page 22: EFORM_TR_TYPEA_DETAIL_PAGE22_SRM_54
                        for (int i = 0; i < qmInsertModel.TYPEA_DETAIL_PAGE23_SRM_54_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEA_DETAIL TYPEA_DETAIL_PAGE22_SRM_54 = new PMGSY.Models.EFORM_TR_TYPEA_DETAIL();
                            TYPEA_DETAIL_PAGE22_SRM_54.TYPEA_DETAIL_ID = eformdbContext.EFORM_TR_TYPEA_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEA_DETAIL select item.TYPEA_DETAIL_ID).Max() + 1 : 1;
                            TYPEA_DETAIL_PAGE22_SRM_54.MAIN_ITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.MAIN_ITEM_ID;
                            TYPEA_DETAIL_PAGE22_SRM_54.SUBITEM_ID = qmInsertModel.TYPEA_SUMMARY_PAGE23_SRM_54.SUBITEM_ID;
                            TYPEA_DETAIL_PAGE22_SRM_54.DETAIL_ITEM_ID = qmInsertModel.TYPEA_DETAIL_PAGE23_SRM_54_List[i].DETAIL_ITEM_ID;
                            TYPEA_DETAIL_PAGE22_SRM_54.TYPEA_SUMM_ID = summId;
                            TYPEA_DETAIL_PAGE22_SRM_54.EFORM_ID = detailId;
                            TYPEA_DETAIL_PAGE22_SRM_54.ROAD_ID = prRoadCode;
                            TYPEA_DETAIL_PAGE22_SRM_54.CH1_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE23_SRM_54_List[i].CH1;
                            TYPEA_DETAIL_PAGE22_SRM_54.CH2_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE23_SRM_54_List[i].CH2;
                            TYPEA_DETAIL_PAGE22_SRM_54.CH3_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE23_SRM_54_List[i].CH3;


                            //      TYPEA_DETAIL_PAGE22_SRM_54.CH4_VALUE = qmInsertModel.TYPEA_DETAIL_PAGE23_SRM_54_List[i].CH4;
                            TYPEA_DETAIL_PAGE22_SRM_54.USER_ID = UserId;
                            TYPEA_DETAIL_PAGE22_SRM_54.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEA_DETAIL.Add(TYPEA_DETAIL_PAGE22_SRM_54);
                            eformdbContext.SaveChanges();
                        }
                        #endregion

                    }
                    #endregion


                    #region Saurabh db Model Save

                    #region  Page : 2

                    if (chkBoxArr[3] == 'Y')
                    {
                        #region Page:2 - 2.1 Gradation Analysis of Aggregates - Granular Subbase , Chainage - 1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE2_GranSubbase_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.CHAINAGE_ID_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.WEIGHT_SAMPLE_TAKEN_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.TESTING_DATE_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.GSB_GRADING_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.REMARK_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.COMMENT_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.CON_PRESCRIBED_LIMIT_2_1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE2_GranSubbase_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:2 - 2.1 Gradation Analysis of Aggregates - Granular Subbase , Chainage - 1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE2_GranSubbase_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE2_GranSubbase_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_1_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE2_GranSubbase_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE2_GranSubbase_1);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    if (chkBoxArr[4] == 'Y')
                    {
                        #region Page:2 - 2.2 Gradation Analysis of Aggregates - Granular Subbase , Chainage - 2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE2_GranSubbase_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.CHAINAGE_ID_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.WEIGHT_SAMPLE_TAKEN_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.TESTING_DATE_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.GSB_GRADING_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.REMARK_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.COMMENT_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.CON_PRESCRIBED_LIMIT_2_2;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE2_GranSubbase_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:2 - 2.2 Gradation Analysis of Aggregates - Granular Subbase , Chainage - 2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE2_GranSubbase_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE2_GranSubbase_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_2_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE2_GranSubbase_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE2_GranSubbase_2);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    if (chkBoxArr[5] == 'Y')
                    {
                        #region Page:2 - 2.3 Gradation Analysis of Aggregates - Granular Subbase , Chainage -3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE2_GranSubbase_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.CHAINAGE_ID_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.WEIGHT_SAMPLE_TAKEN_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.TESTING_DATE_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.GSB_GRADING_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.REMARK_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.COMMENT_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.CON_PRESCRIBED_LIMIT_2_3;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE2_GranSubbase_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE2_GranSubbase_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:2 - 2.3 Gradation Analysis of Aggregates - Granular Subbase , Chainage - 3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE2_GranSubbase_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE2_GS_BASE_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE2_GranSubbase_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE2_GS_BASE_3_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE2_GranSubbase_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE2_GranSubbase_3);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    #endregion

                    #region  Page : 3
                    if (chkBoxArr[6] == 'Y')
                    {
                        #region Page:3 - 2.1 Gradation Analysis of Aggregates - Gravel Subbase , Chainage - 1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE3_GravelSubbase_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.CHAINAGE_ID_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.WEIGHT_SAMPLE_TAKEN_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.TESTING_DATE_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.GSB_GRADING_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.REMARK_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.COMMENT_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.CON_PRESCRIBED_LIMIT_3_1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE3_GravelSubbase_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:3 - 2.1 Gradation Analysis of Aggregates - Gravel Subbase , Chainage - 1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE3_GravelSubbase_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE3_GravelSubbase_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE3_GravelSubbase_1);
                            eformdbContext.SaveChanges();

                        }
                        #endregion
                    }
                    if (chkBoxArr[7] == 'Y')
                    {
                        #region Page:3 - 2.2 Gradation Analysis of Aggregates - Gravel Subbase , Chainage - 2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE3_GravelSubbase_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.CHAINAGE_ID_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.WEIGHT_SAMPLE_TAKEN_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.TESTING_DATE_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.GSB_GRADING_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.REMARK_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.COMMENT_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.CON_PRESCRIBED_LIMIT_3_2;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE3_GravelSubbase_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:3 - 2.2 Gradation Analysis of Aggregates - Gravel Subbase , Chainage - 2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE3_GravelSubbase_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE3_GravelSubbase_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE3_GravelSubbase_2);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    if (chkBoxArr[8] == 'Y')
                    {
                        #region Page:3 - 2.3 Gradation Analysis of Aggregates - Gravel Subbase , Chainage - 3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE3_GravelSubbase_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.CHAINAGE_ID_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.WEIGHT_SAMPLE_TAKEN_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.TESTING_DATE_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.GSB_GRADING_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.REMARK_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.COMMENT_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.CON_PRESCRIBED_LIMIT_3_3;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE3_GravelSubbase_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE3_GravelSubbase_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:3 - 2.3 Gradation Analysis of Aggregates - Gravel Subbase , Chainage - 3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE3_GravelSubbase_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE3_GravelSubbase_3.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE3_GravelSubbase_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE3_GravelSubbase_3);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    #endregion

                    #region  Page : 4
                    if (TemplateStatus == false)
                    {
                        if (chkBoxArr[9] == 'Y')
                        {
                            #region Page:4 - 2.1 Gradation Analysis of Aggregates - Cement Stabilized Subbase , Chainage -1 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE4_CementSubbase_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.TABLE_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.CHAINAGE_ID_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.WEIGHT_SAMPLE_TAKEN_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.TESTING_DATE_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.GSB_GRADING_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.REMARK_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.COMMENT_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.CON_PRESCRIBED_LIMIT_4_1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE4_CementSubbase_1);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:4 - 2.1 Gradation Analysis of Aggregates - Cement Stabilized Subbase , Chainage - 1 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE4_CementSubbase_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE4_CementSubbase_1.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE4_CementSubbase_1.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE4_CementSubbase_1);
                                eformdbContext.SaveChanges();
                            }
                            #endregion
                        }
                        if (chkBoxArr[10] == 'Y')
                        {
                            #region Page:4 - 2.2 Gradation Analysis of Aggregates - Cement Stabilized Subbase , Chainage -2 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE4_CementSubbase_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.TABLE_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.CHAINAGE_ID_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.WEIGHT_SAMPLE_TAKEN_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.TESTING_DATE_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.GSB_GRADING_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.REMARK_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.COMMENT_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.CON_PRESCRIBED_LIMIT_4_2;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE4_CementSubbase_2);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:4 - 2.2 Gradation Analysis of Aggregates - Cement Stabilized Subbase , Chainage - 2 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE4_CementSubbase_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE4_CementSubbase_2.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE4_CementSubbase_2.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE4_CementSubbase_2);
                                eformdbContext.SaveChanges();
                            }
                            #endregion
                        }
                        if (chkBoxArr[11] == 'Y')
                        {
                            #region Page:4 - 2.3 Gradation Analysis of Aggregates - Cement Stabilized Subbase , Chainage -3 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE4_CementSubbase_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.TABLE_ID;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.CHAINAGE_ID_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.WEIGHT_SAMPLE_TAKEN_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.TESTING_DATE_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.GSB_GRADING_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.REMARK_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.COMMENT_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.CON_PRESCRIBED_LIMIT_4_3;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE4_CementSubbase_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE4_CementSubbase_3);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:4 - 2.3 Gradation Analysis of Aggregates - Cement Stabilized Subbase , Chainage - 3 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE4_CementSubbase_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE4_CementSubbase_3.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE4_CementSubbase_3.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE4_CementSubbase_3);
                                eformdbContext.SaveChanges();
                            }
                            #endregion
                        }

                    }
                    #endregion

                    #region  Page : 6
                    if (chkBoxArr[13] == 'Y')
                    {
                        #region Page:6 - 4.1 Gradation Analysis of Aggregates - Base Course 1st Layer , Chainage -1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE6_BaseCourse_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.CHAINAGE_ID_6_1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.WEIGHT_SAMPLE_TAKEN_6_1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.TESTING_DATE_6_1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.GSB_GRADING_6;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.REMARK_6_1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.COMMENT_6_1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.CON_PRESCRIBED_LIMIT_6_1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE6_BaseCourse_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:6 - 4.1 Gradation Analysis of Aggregates - Base Course 1st Layer , Chainage -1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE6_BaseCourse_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE6_BaseCourse_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List[i].SAMPLE_WEIGHT_6_1;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List[i].RETAINED_WEIGHT_6_1;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List[i].CUMULATIVE_WEIGHT_6_1;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List[i].PASSING_WEIGHT_6_1;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE6_BaseCourse_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE6_BaseCourse_1);
                            eformdbContext.SaveChanges();
                        }
                        #endregion
                    }
                    if (chkBoxArr[14] == 'Y')
                    {
                        #region Page:6 - 4.2 Gradation Analysis of Aggregates - Base Course 1st Layer , Chainage -2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE6_BaseCourse_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.CHAINAGE_ID_6_2;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.WEIGHT_SAMPLE_TAKEN_6_2;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.TESTING_DATE_6_2;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.GSB_GRADING_6;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.REMARK_6_2;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.COMMENT_6_2;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.CON_PRESCRIBED_LIMIT_6_2;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE6_BaseCourse_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:6 - 4.2 Gradation Analysis of Aggregates - Base Course 1st Layer , Chainage -2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE6_BaseCourse_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE6_BaseCourse_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List[i].SAMPLE_WEIGHT_6_2;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List[i].RETAINED_WEIGHT_6_2;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List[i].CUMULATIVE_WEIGHT_6_2;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List[i].PASSING_WEIGHT_6_2;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE6_BaseCourse_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE6_BaseCourse_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[15] == 'Y')
                    {
                        #region Page:6 - 4.3 Gradation Analysis of Aggregates - Base Course 1st Layer , Chainage -3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE6_BaseCourse_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.CHAINAGE_ID_6_3;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.WEIGHT_SAMPLE_TAKEN_6_3;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.TESTING_DATE_6_3;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.GSB_GRADING_6;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.REMARK_6_3;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.COMMENT_6_3;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.CON_PRESCRIBED_LIMIT_6_3;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE6_BaseCourse_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE6_BaseCourse_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:6 - 4.3 Gradation Analysis of Aggregates - Base Course 1st Layer , Chainage -3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE6_BASE_COURSE_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE6_BASE_COURSE_3.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List[i].SAMPLE_WEIGHT_6_3;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List[i].RETAINED_WEIGHT_6_3;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List[i].CUMULATIVE_WEIGHT_6_3;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List[i].PASSING_WEIGHT_6_3;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE6_BASE_COURSE_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE6_BASE_COURSE_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion

                    #region  Page : 8
                    if (chkBoxArr[18] == 'Y')
                    {
                        #region Page:8 - 7.1 Gradation Analysis of Aggregates - Base Course 2nd Layer , Chainage -1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE8_BaseCourse2_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.CHAINAGE_ID_8_1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.WEIGHT_SAMPLE_TAKEN_8_1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.TESTING_DATE_8_1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.GSB_GRADING_8;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.REMARK_8_1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.COMMENT_8_1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.CON_PRESCRIBED_LIMIT_8_1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE8_BaseCourse2_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:8 - 7.1 Gradation Analysis of Aggregates - Base Course 2nd Layer , Chainage -1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE8_BASE_COURSE2_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List[i].SAMPLE_WEIGHT_8_1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List[i].RETAINED_WEIGHT_8_1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List[i].CUMULATIVE_WEIGHT_8_1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List[i].PASSING_WEIGHT_8_1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE8_BASE_COURSE2_1);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[19] == 'Y')
                    {
                        #region Page:8 - 7.2 Gradation Analysis of Aggregates - Base Course 2nd Layer , Chainage -2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE8_BaseCourse2_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.CHAINAGE_ID_8_2;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.WEIGHT_SAMPLE_TAKEN_8_2;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.TESTING_DATE_8_2;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.GSB_GRADING_8;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.REMARK_8_2;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.COMMENT_8_2;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.CON_PRESCRIBED_LIMIT_8_2;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE8_BaseCourse2_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:8 - 7.2 Gradation Analysis of Aggregates - Base Course 2nd Layer , Chainage -2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE8_BASE_COURSE2_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List[i].SAMPLE_WEIGHT_8_2;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List[i].RETAINED_WEIGHT_8_2;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List[i].CUMULATIVE_WEIGHT_8_2;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List[i].PASSING_WEIGHT_8_2;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE8_BASE_COURSE2_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[20] == 'Y')
                    {
                        #region Page:8 - 7.3 Gradation Analysis of Aggregates - Base Course 2nd Layer , Chainage -3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE8_BaseCourse2_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.CHAINAGE_ID_8_3;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.WEIGHT_SAMPLE_TAKEN_8_3;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.TESTING_DATE_8_3;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.GSB_GRADING_8;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.REMARK_8_3;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.COMMENT_8_3;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.CON_PRESCRIBED_LIMIT_8_3;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE8_BaseCourse2_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE8_BaseCourse2_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:8 - 7.3 Gradation Analysis of Aggregates - Base Course 2nd Layer , Chainage -3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE8_BASE_COURSE2_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List[i].SAMPLE_WEIGHT_8_3;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List[i].RETAINED_WEIGHT_8_3;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List[i].CUMULATIVE_WEIGHT_8_3;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List[i].PASSING_WEIGHT_8_3;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE8_BASE_COURSE2_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE8_BASE_COURSE2_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion

                    #region  Page : 10
                    if (chkBoxArr[23] == 'Y')
                    {
                        #region Page:10 - 10.1 Gradation Analysis of Aggregates - Base Course 3rd Layer , Chainage -1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE10_BaseCourse3_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.CHAINAGE_ID_10_1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.WEIGHT_SAMPLE_TAKEN_10_1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.TESTING_DATE_10_1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.GSB_GRADING_10;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.REMARK_10_1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.COMMENT_10_1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.CON_PRESCRIBED_LIMIT_10_1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE10_BaseCourse3_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:10 - 10.1 Gradation Analysis of Aggregates - Base Course 3rd Layer , Chainage -1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE10_BASE_COURSE3_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List[i].SAMPLE_WEIGHT_10_1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List[i].RETAINED_WEIGHT_10_1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List[i].CUMULATIVE_WEIGHT_10_1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List[i].PASSING_WEIGHT_10_1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE10_BASE_COURSE3_1);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[24] == 'Y')
                    {
                        #region Page:10 - 10.2 Gradation Analysis of Aggregates - Base Course 3rd Layer , Chainage -2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE10_BaseCourse3_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.CHAINAGE_ID_10_2;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.WEIGHT_SAMPLE_TAKEN_10_2;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.TESTING_DATE_10_2;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.GSB_GRADING_10;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.REMARK_10_2;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.COMMENT_10_2;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.CON_PRESCRIBED_LIMIT_10_2;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE10_BaseCourse3_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:10 - 10.2 Gradation Analysis of Aggregates - Base Course 3rd Layer , Chainage -2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE10_BASE_COURSE3_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List[i].SAMPLE_WEIGHT_10_2;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List[i].RETAINED_WEIGHT_10_2;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List[i].CUMULATIVE_WEIGHT_10_2;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List[i].PASSING_WEIGHT_10_2;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE10_BASE_COURSE3_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[25] == 'Y')
                    {
                        #region Page:10 - 10.3 Gradation Analysis of Aggregates - Base Course 3rd Layer , Chainage -3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE10_BaseCourse3_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.CHAINAGE_ID_10_3;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.WEIGHT_SAMPLE_TAKEN_10_3;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.TESTING_DATE_10_3;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.GSB_GRADING_10;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.REMARK_10_3;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.COMMENT_10_3;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.CON_PRESCRIBED_LIMIT_10_3;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE10_BaseCourse3_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE10_BaseCourse3_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:10 - 10.3 Gradation Analysis of Aggregates - Base Course 3rd Layer , Chainage -3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE10_BASE_COURSE3_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List[i].SAMPLE_WEIGHT_10_3;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List[i].RETAINED_WEIGHT_10_3;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List[i].CUMULATIVE_WEIGHT_10_3;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List[i].PASSING_WEIGHT_10_3;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE10_BASE_COURSE3_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE10_BASE_COURSE3_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion

                    #region  Page : 12
                    if (TemplateStatus == false)
                    {
                        if (chkBoxArr[28] == 'Y')
                        {
                            #region Page:12 - 13.1 Gradation Analysis of Aggregates - Cement Stabilised Base , Chainage -1 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE12_CementBsCourse3_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.TABLE_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.CHAINAGE_ID_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.WEIGHT_SAMPLE_TAKEN_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.TESTING_DATE_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.GSB_GRADING_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.REMARK_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.COMMENT_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.CON_PRESCRIBED_LIMIT_12_1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE12_CementBsCourse3_1);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:12 - 13.1 Gradation Analysis of Aggregates - Cement Stabilised Base , Chainage -1 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE12_CementBsCourse3_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE12_CementBsCourse3_1.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_1.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE12_CementBsCourse3_1);
                                eformdbContext.SaveChanges();
                            }

                            #endregion
                        }
                        if (chkBoxArr[29] == 'Y')
                        {
                            #region Page:12 - 13.2 Gradation Analysis of Aggregates - Cement Stabilised Base , Chainage -2 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE12_CementBsCourse3_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.TABLE_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.CHAINAGE_ID_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.WEIGHT_SAMPLE_TAKEN_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.TESTING_DATE_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.GSB_GRADING_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.REMARK_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.COMMENT_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.CON_PRESCRIBED_LIMIT_12_2;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE12_CementBsCourse3_2);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:12 - 13.2 Gradation Analysis of Aggregates - Cement Stabilised Base , Chainage -2 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE12_CementBsCourse3_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE12_CementBsCourse3_2.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_2.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE12_CementBsCourse3_2);
                                eformdbContext.SaveChanges();
                            }

                            #endregion
                        }
                        if (chkBoxArr[30] == 'Y')
                        {
                            #region Page:12 - 13.3 Gradation Analysis of Aggregates - Cement Stabilised Base , Chainage -3 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE12_CementBsCourse3_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.TABLE_ID;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.CHAINAGE_ID_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.WEIGHT_SAMPLE_TAKEN_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.TESTING_DATE_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.GSB_GRADING_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.REMARK_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.COMMENT_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.CON_PRESCRIBED_LIMIT_12_3;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE12_CementBsCourse3_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE12_CementBsCourse3_3);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:12 - 13.3 Gradation Analysis of Aggregates - Cement Stabilised Base , Chainage -3 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE12_CementBsCourse3_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE12_CementBsCourse3_3.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE12_CementBsCourse3_3.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE12_CementBsCourse3_3);
                                eformdbContext.SaveChanges();
                            }

                            #endregion
                        }
                    }
                    #endregion

                    #region  Page : 13
                    if (TemplateStatus == false)
                    {
                        if (chkBoxArr[31] == 'Y')
                        {
                            #region Page:13 - 14.1 Gradation Analysis of Aggregates - Cement Stabilised Base (FDR), Chainage -1 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE13_CementFDR_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.TABLE_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.CHAINAGE_ID_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.WEIGHT_SAMPLE_TAKEN_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.TESTING_DATE_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.GSB_GRADING_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.REMARK_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.COMMENT_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.CON_PRESCRIBED_LIMIT_13_1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE13_CementFDR_1);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:13 - 14.1 Gradation Analysis of Aggregates - Cement Stabilised Base (FDR), Chainage -1 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE13_CementFDR_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE13_CementFDR_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE13_CementFDR_1.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE13_CementFDR_1.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE13_CementFDR_1);
                                eformdbContext.SaveChanges();
                            }

                            #endregion
                        }
                        if (chkBoxArr[32] == 'Y')
                        {
                            #region Page:13 - 14.2 Gradation Analysis of Aggregates - Cement Stabilised Base (FDR), Chainage -2 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE13_CementFDR_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.TABLE_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.CHAINAGE_ID_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.WEIGHT_SAMPLE_TAKEN_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.TESTING_DATE_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.GSB_GRADING_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.REMARK_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.COMMENT_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.CON_PRESCRIBED_LIMIT_13_2;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE13_CementFDR_2);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:13 - 14.2 Gradation Analysis of Aggregates - Cement Stabilised Base (FDR), Chainage -2 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE13_CementFDR_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE13_CementFDR_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE13_CementFDR_2.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE13_CementFDR_2.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE13_CementFDR_2);
                                eformdbContext.SaveChanges();
                            }

                            #endregion
                        }
                        if (chkBoxArr[33] == 'Y')
                        {
                            #region Page:13 - 14.3 Gradation Analysis of Aggregates - Cement Stabilised Base (FDR), Chainage -3 Summary

                            PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE13_CementFDR_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                            int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.MAIN_ITEM_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.SUBITEM_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.TABLE_ID;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.EFORM_ID = detailId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.CHAINAGE_ID_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.WEIGHT_SAMPLE_TAKEN_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.TESTING_DATE_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.GSB_GRADING_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.REMARK_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.COMMENT_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.TESTED_BY_PIU;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.TEST_CONDUCTED_IN_PRESENCE;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.CON_PRESCRIBED_LIMIT_13_3;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.USER_ID = UserId;
                            TYPEB_SUMMARY_PAGE13_CementFDR_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE13_CementFDR_3);
                            eformdbContext.SaveChanges();

                            #endregion

                            #region Page:13 - 14.3 Gradation Analysis of Aggregates - Cement Stabilised Base (FDR), Chainage -3 Detail

                            for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List.Count; i++)
                            {
                                PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE13_CementFDR_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                                TYPEB_DETAIL_PAGE13_CementFDR_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.MAIN_ITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3.SUBITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List[i].DETAIL_ITEM_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List[i].TABLE_ID;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.TYPEB_SUMM_ID = TypeBSummId;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.EFORM_ID = detailId;
                                // TYPEB_DETAIL_PAGE13_CementFDR_3.ROAD_ID = prRoadCode;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List[i].SAMPLE_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List[i].RETAINED_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List[i].CUMULATIVE_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List[i].PASSING_WEIGHT;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.USER_ID = UserId;
                                TYPEB_DETAIL_PAGE13_CementFDR_3.IPADD = ipAdd;
                                eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE13_CementFDR_3);
                                eformdbContext.SaveChanges();
                            }

                            #endregion
                        }
                    }
                    #endregion

                    #region  Page : 14
                    if (chkBoxArr[34] == 'Y')
                    {
                        #region Page:14 - 15.1 BITUMINOUS BASE COURSE, Chainage -1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE14_BitumnCourse_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.CHAINAGE_ID_14_1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.WEIGHT_SAMPLE_TAKEN_14_1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.TESTING_DATE_14_1;
                        //TYPEB_SUMMARY_PAGE14_BitumnCourse_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.G;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.REMARK_14_1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.COMMENT_14_1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.CON_PRESCRIBED_LIMIT_14_1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE14_BitumnCourse_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:14 - 15.1 BITUMINOUS BASE COURSE, Chainage -1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE14_BitumnCourse_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE14_BitumnCourse_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE14_BitumnCourse_1);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[35] == 'Y')
                    {
                        #region Page:14 - 15.2 BITUMINOUS BASE COURSE, Chainage -2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE14_BitumnCourse_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.CHAINAGE_ID_14_2;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.WEIGHT_SAMPLE_TAKEN_14_2;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.TESTING_DATE_14_2;
                        //TYPEB_SUMMARY_PAGE14_BitumnCourse_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.G;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.REMARK_14_2;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.COMMENT_14_2;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.CON_PRESCRIBED_LIMIT_14_2;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE14_BitumnCourse_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:14 - 15.2 BITUMINOUS BASE COURSE, Chainage -2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE14_BitumnCourse_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE14_BitumnCourse_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE14_BitumnCourse_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[36] == 'Y')
                    {
                        #region Page:14 - 15.3 BITUMINOUS BASE COURSE, Chainage -3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE14_BitumnCourse_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.CHAINAGE_ID_14_3;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.WEIGHT_SAMPLE_TAKEN_14_3;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.TESTING_DATE_14_3;
                        //TYPEB_SUMMARY_PAGE14_BitumnCourse_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.G;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.REMARK_14_3;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.COMMENT_14_3;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.CON_PRESCRIBED_LIMIT_14_3;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE14_BitumnCourse_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE14_BitumnCourse_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:14 - 15.3 BITUMINOUS BASE COURSE, Chainage -3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE14_BitumnCourse_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE14_BitumnCourse_3.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE14_BitumnCourse_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE14_BitumnCourse_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion

                    #region  Page : 17-18
                    if (chkBoxArr[40] == 'Y')
                    {
                        #region Page:17 - 18.1 BITUMINOUS SURFACE COURSE, Chainage -1 Summary

                        PMGSY.Models.EFORM_TR_TYPEC_SUMMARY TYPEC_SUMMARY_PAGE17_SurfaceCourse_1 = new PMGSY.Models.EFORM_TR_TYPEC_SUMMARY();
                        int TypeCSummId = eformdbContext.EFORM_TR_TYPEC_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEC_SUMMARY select item.TYPEC_SUMM_ID).Max() + 1 : 1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.TYPEC_SUMM_ID = TypeCSummId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.MAIN_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.MAIN_ITEM_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.SUBITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.SUBITEM_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.TABLE_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.TABLE_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.EFORM_ID = detailId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.CHAINGE_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.CHAINAGE_ID_17_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.WEIGHT_SAMPLE_TAKEN_17_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.TESING_DATE = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.TESTING_DATE_17_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.GRADATION_TYPE_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.GRADATION_TYPE_ITEM_ID_17_1;
                        //TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.g = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.G;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.REMARK = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.REMARK_17_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.COMMENT = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.COMMENT_17_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.TESTED_BY_PIU = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.TESTED_BY_PIU;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.CON_PRESCRIBED_LIMIT_17_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.USER_ID = UserId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEC_SUMMARY.Add(TYPEC_SUMMARY_PAGE17_SurfaceCourse_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:17 - 18.1 BITUMINOUS SURFACE COURSE, Chainage -1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEC_DETAIL TYPEC_DETAIL_PAGE17_SurfaceCourse_1 = new PMGSY.Models.EFORM_TR_TYPEC_DETAIL();
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.TYPEC_DETAIL_ID = eformdbContext.EFORM_TR_TYPEC_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEC_DETAIL select item.TYPEC_DETAIL_ID).Max() + 1 : 1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.MAIN_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.MAIN_ITEM_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.SUBITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1.SUBITEM_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.DETAIL_ITEM_ID = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].DETAIL_ITEM_ID_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.TABLE_ID = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].TABLE_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.EFORM_ID = detailId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.TYPEC_SUMM_ID = TypeCSummId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.SIEVE_DESIGNATION = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].SIEVE_DESIGNATION_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.SAMPLE_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].SAMPLE_WEIGHT_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.RETAINED_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].RETAINED_WEIGHT_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].CUMULATIVE_WEIGHT_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.PASSING_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].PASSING_WEIGHT_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.PERMISSIBLE_RANGE = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List[i].PERMISSIBLE_RANGE_17_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.USER_ID = UserId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEC_DETAIL.Add(TYPEC_DETAIL_PAGE17_SurfaceCourse_1);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[41] == 'Y')
                    {
                        #region Page:17 - 18.2 BITUMINOUS SURFACE COURSE, Chainage -2 Summary

                        PMGSY.Models.EFORM_TR_TYPEC_SUMMARY TYPEC_SUMMARY_PAGE17_SurfaceCourse_2 = new PMGSY.Models.EFORM_TR_TYPEC_SUMMARY();
                        int TypeCSummId = eformdbContext.EFORM_TR_TYPEC_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEC_SUMMARY select item.TYPEC_SUMM_ID).Max() + 1 : 1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.TYPEC_SUMM_ID = TypeCSummId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.MAIN_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.MAIN_ITEM_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.SUBITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.SUBITEM_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.TABLE_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.TABLE_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.EFORM_ID = detailId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.CHAINGE_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.CHAINAGE_ID_17_2;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.WEIGHT_SAMPLE_TAKEN_17_2;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.TESING_DATE = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.TESTING_DATE_17_2;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.GRADATION_TYPE_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.GRADATION_TYPE_ITEM_ID_17_2;

                        //TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.g = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.G;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.REMARK = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.REMARK_17_2;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.COMMENT = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.COMMENT_17_2;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.TESTED_BY_PIU = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.TESTED_BY_PIU;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.CON_PRESCRIBED_LIMIT_17_2;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.USER_ID = UserId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEC_SUMMARY.Add(TYPEC_SUMMARY_PAGE17_SurfaceCourse_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:17 - 18.2 BITUMINOUS SURFACE COURSE, Chainage -2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEC_DETAIL TYPEC_DETAIL_PAGE17_SurfaceCourse_2 = new PMGSY.Models.EFORM_TR_TYPEC_DETAIL();
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.TYPEC_DETAIL_ID = eformdbContext.EFORM_TR_TYPEC_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEC_DETAIL select item.TYPEC_DETAIL_ID).Max() + 1 : 1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.MAIN_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.MAIN_ITEM_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.SUBITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2.SUBITEM_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.DETAIL_ITEM_ID = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].DETAIL_ITEM_ID_17_2;

                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.TABLE_ID = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].TABLE_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.TYPEC_SUMM_ID = TypeCSummId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.EFORM_ID = detailId;

                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.SIEVE_DESIGNATION = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].SIEVE_DESIGNATION_17_2;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.SAMPLE_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].SAMPLE_WEIGHT_17_2;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.RETAINED_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].RETAINED_WEIGHT_17_2;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].CUMULATIVE_WEIGHT_17_2;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.PASSING_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].PASSING_WEIGHT_17_2;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.PERMISSIBLE_RANGE = qmInsertModel.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List[i].PERMISSIBLE_RANGE_17_2;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.USER_ID = UserId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEC_DETAIL.Add(TYPEC_DETAIL_PAGE17_SurfaceCourse_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[42] == 'Y')
                    {
                        #region Page:17 - 18.3 BITUMINOUS SURFACE COURSE, Chainage -3 Summary

                        PMGSY.Models.EFORM_TR_TYPEC_SUMMARY TYPEC_SUMMARY_PAGE17_SurfaceCourse_3 = new PMGSY.Models.EFORM_TR_TYPEC_SUMMARY();
                        int TypeCSummId = eformdbContext.EFORM_TR_TYPEC_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEC_SUMMARY select item.TYPEC_SUMM_ID).Max() + 1 : 1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.TYPEC_SUMM_ID = TypeCSummId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.MAIN_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.MAIN_ITEM_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.SUBITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.SUBITEM_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.TABLE_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.TABLE_ID;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.EFORM_ID = detailId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.CHAINGE_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.CHAINAGE_ID_18_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.WEIGHT_SAMPLE_TAKEN_18_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.TESING_DATE = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.TESTING_DATE_18_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.GRADATION_TYPE_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.GRADATION_TYPE_ITEM_ID_18_1;

                        //TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.g = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.G;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.REMARK = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.REMARK_18_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.COMMENT = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.COMMENT_18_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.TESTED_BY_PIU = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.TESTED_BY_PIU;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.CON_PRESCRIBED_LIMIT_18_1;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.USER_ID = UserId;
                        TYPEC_SUMMARY_PAGE17_SurfaceCourse_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEC_SUMMARY.Add(TYPEC_SUMMARY_PAGE17_SurfaceCourse_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page:17 - 18.2 BITUMINOUS SURFACE COURSE, Chainage -2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEC_DETAIL TYPEC_DETAIL_PAGE17_SurfaceCourse_3 = new PMGSY.Models.EFORM_TR_TYPEC_DETAIL();
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.TYPEC_DETAIL_ID = eformdbContext.EFORM_TR_TYPEC_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEC_DETAIL select item.TYPEC_DETAIL_ID).Max() + 1 : 1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.MAIN_ITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.MAIN_ITEM_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.SUBITEM_ID = qmInsertModel.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3.SUBITEM_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.DETAIL_ITEM_ID = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].DETAIL_ITEM_ID_18_1;

                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.TABLE_ID = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].TABLE_ID;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.TYPEC_SUMM_ID = TypeCSummId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.EFORM_ID = detailId;

                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.SIEVE_DESIGNATION = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].SIEVE_DESIGNATION_18_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.SAMPLE_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].SAMPLE_WEIGHT_18_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.RETAINED_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].RETAINED_WEIGHT_18_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].CUMULATIVE_WEIGHT_18_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.PASSING_WEIGHT = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].PASSING_WEIGHT_18_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.PERMISSIBLE_RANGE = qmInsertModel.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List[i].PERMISSIBLE_RANGE_18_1;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.USER_ID = UserId;
                            TYPEC_DETAIL_PAGE17_SurfaceCourse_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEC_DETAIL.Add(TYPEC_DETAIL_PAGE17_SurfaceCourse_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion

                    #region  Page : 20
                    if (chkBoxArr[46] == 'Y')
                    {
                        #region Page: 20 - 21.1 SHOULDER, Chainage - 1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE20_Shoulder_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.CHAINAGE_ID_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.WEIGHT_SAMPLE_TAKEN_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.TESTING_DATE_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.GSB_GRADING_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.REMARK_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.COMMENT_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.CON_PRESCRIBED_LIMIT_20_1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE20_Shoulder_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page: 20 - 21.1 SHOULDER, Chainage - 1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE20_Shoulder_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE20_Shoulder_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE14_Shoulder_1.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_1_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE20_Shoulder_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE20_Shoulder_1);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[47] == 'Y')
                    {
                        #region Page: 20 - 21.2 SHOULDER, Chainage - 2 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE20_Shoulder_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.CHAINAGE_ID_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.WEIGHT_SAMPLE_TAKEN_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.TESTING_DATE_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.GSB_GRADING_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.REMARK_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.COMMENT_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.CON_PRESCRIBED_LIMIT_20_2;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE20_Shoulder_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page: 20 - 21.2 SHOULDER, Chainage - 2 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE20_Shoulder_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE20_Shoulder_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE20_Shoulder_2.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_2_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE20_Shoulder_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE20_Shoulder_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[48] == 'Y')
                    {
                        #region Page: 20 - 21.3 SHOULDER, Chainage - 3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE20_Shoulder_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.CHAINAGE_ID_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.WEIGHT_SAMPLE_TAKEN_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.TESTING_DATE_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.GSB_GRADING_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.REMARK_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.COMMENT_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.CON_PRESCRIBED_LIMIT_20_3;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE20_Shoulder_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE20_Shoulder_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page: 20 - 21.3 SHOULDER, Chainage - 3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE20_Shoulder_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE20_Shoulder_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE20_SHOULDER_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.EFORM_ID = detailId;
                            // TYPEB_DETAIL_PAGE20_Shoulder_3.ROAD_ID = prRoadCode;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE20_SHOULDER_3_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE20_Shoulder_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE20_Shoulder_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion

                    #region  Page : 21
                    if (chkBoxArr[49] == 'Y')
                    {
                        #region Page: 21 - 21.1 SHOULDER, Chainage - 1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE21_Shoulder_1 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.TABLE_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.CHAINAGE_ID_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.WEIGHT_SAMPLE_TAKEN_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.TESTING_DATE_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.GSB_GRADING_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.REMARK_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.COMMENT_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.CON_PRESCRIBED_LIMIT_21_1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_1.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE21_Shoulder_1);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page: 21 - 21.1 SHOULDER, Chainage - 1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE21_Shoulder_1 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE21_Shoulder_1.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_1.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.EFORM_ID = detailId;

                            TYPEB_DETAIL_PAGE21_Shoulder_1.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_1_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE21_Shoulder_1.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE21_Shoulder_1);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[50] == 'Y')
                    {
                        #region Page: 21 - 21.2 SHOULDER, Chainage - 1 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE21_Shoulder_2 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.TABLE_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.CHAINAGE_ID_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.WEIGHT_SAMPLE_TAKEN_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.TESTING_DATE_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.GSB_GRADING_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.REMARK_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.COMMENT_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.CON_PRESCRIBED_LIMIT_21_2;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_2.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE21_Shoulder_2);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page: 21 - 21.2 SHOULDER, Chainage - 1 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE21_Shoulder_2 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE21_Shoulder_2.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_2.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.EFORM_ID = detailId;

                            TYPEB_DETAIL_PAGE21_Shoulder_2.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_2_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE21_Shoulder_2.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE21_Shoulder_2);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    if (chkBoxArr[51] == 'Y')
                    {
                        #region Page: 21 - 21.3 SHOULDER, Chainage - 3 Summary

                        PMGSY.Models.EFORM_TR_TYPEB_SUMMARY TYPEB_SUMMARY_PAGE21_Shoulder_3 = new PMGSY.Models.EFORM_TR_TYPEB_SUMMARY();
                        int TypeBSummId = eformdbContext.EFORM_TR_TYPEB_SUMMARY.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_SUMMARY select item.TYPEB_SUMM_ID).Max() + 1 : 1;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.TYPEB_SUMM_ID = TypeBSummId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.MAIN_ITEM_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.SUBITEM_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.TABLE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.TABLE_ID;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.EFORM_ID = detailId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.CHAINAGE_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.CHAINAGE_ID_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.WEIGHT_SAMPLE_TAKEN = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.WEIGHT_SAMPLE_TAKEN_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.TESTING_DATE = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.TESTING_DATE_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.GSB_GRADING = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.GSB_GRADING_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.REMARK = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.REMARK_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.COMMENT = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.COMMENT_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.TESTED_BY_PIU = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.TESTED_BY_PIU;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.TEST_CONDUCTED_IN_PRESENCE = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.TEST_CONDUCTED_IN_PRESENCE;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.CON_PRESCRIBED_LIMIT = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.CON_PRESCRIBED_LIMIT_21_3;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.USER_ID = UserId;
                        TYPEB_SUMMARY_PAGE21_Shoulder_3.IPADD = ipAdd;
                        eformdbContext.EFORM_TR_TYPEB_SUMMARY.Add(TYPEB_SUMMARY_PAGE21_Shoulder_3);
                        eformdbContext.SaveChanges();

                        #endregion

                        #region Page: 21 - 21.3 SHOULDER, Chainage - 3 Detail

                        for (int i = 0; i < qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List.Count; i++)
                        {
                            PMGSY.Models.EFORM_TR_TYPEB_DETAIL TYPEB_DETAIL_PAGE21_Shoulder_3 = new PMGSY.Models.EFORM_TR_TYPEB_DETAIL();
                            TYPEB_DETAIL_PAGE21_Shoulder_3.TYPEB_DETAIL_ID = eformdbContext.EFORM_TR_TYPEB_DETAIL.Any() ? (from item in eformdbContext.EFORM_TR_TYPEB_DETAIL select item.TYPEB_DETAIL_ID).Max() + 1 : 1;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.MAIN_ITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.MAIN_ITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.SUBITEM_ID = qmInsertModel.TYPEB_SUMMARY_PAGE21_SHOULDER_3.SUBITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.DETAIL_ITEM_ID = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List[i].DETAIL_ITEM_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.TABLE_ID = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List[i].TABLE_ID;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.TYPEB_SUMM_ID = TypeBSummId;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.EFORM_ID = detailId;

                            TYPEB_DETAIL_PAGE21_Shoulder_3.SAMPLE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List[i].SAMPLE_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.RETAINED_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List[i].RETAINED_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.CUMULATIVE_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List[i].CUMULATIVE_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.PASSING_WEIGHT = qmInsertModel.TYPEB_DETAIL_PAGE21_SHOULDER_3_List[i].PASSING_WEIGHT;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.USER_ID = UserId;
                            TYPEB_DETAIL_PAGE21_Shoulder_3.IPADD = ipAdd;
                            eformdbContext.EFORM_TR_TYPEB_DETAIL.Add(TYPEB_DETAIL_PAGE21_Shoulder_3);
                            eformdbContext.SaveChanges();
                        }

                        #endregion
                    }
                    #endregion


                    #endregion


                    string checksum = eformdbContext.EFORM_DU_LOG.Where(s => s.EFORM_ID == detailId && s.USER_TYPE == "T").OrderByDescending(x => x.LOG_ID).Select(m => m.PDF_CHECKSUM).FirstOrDefault();

                    int logId = Convert.ToInt32(eformdbContext.EFORM_DU_LOG.Any() ? (from item in eformdbContext.EFORM_DU_LOG select item.LOG_ID).Max() + 1 : 1);
                    if (checksum != null)
                    {
                        EFORM_DU_LOG model = new EFORM_DU_LOG();
                        model.EFORM_ID = detailId;
                        model.LOG_ID = logId;
                        model.USER_ACTIVITY = "U";
                        model.USER_TYPE = "T";
                        model.ACTIVITY_DATE = DateTime.Now;
                        model.USERID = UserId;
                        model.PDF_CHECKSUM = checksum;
                        model.IPADD = ipAdd;
                        if (templateVersionValue != "")
                        {
                            model.TEMPLATE_VERSION = templateVersionValue;
                        }
                        else
                        {
                            model.TEMPLATE_VERSION = "V1.0";
                        }
                        eformdbContext.EFORM_DU_LOG.Add(model);
                        eformdbContext.SaveChanges();
                    }
                    uploaded_File = Path.Combine(Uploaded_Path + "\\" + schdYear + "\\" + schdMonth, fname);
                    loadedDocument.Save(uploaded_File);
                    loadedDocument.Close(true);
                    scope.Complete();

                }



            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.SaveToTRDb");
                validationList.Add(new SelectListItem { Text = "Error occured while uploading the file, please contact OMMAS team" });

            }
            finally
            {

                if (dbContext != null)
                {
                    dbContext.Dispose();
                }
                loadedDocument.Close(true);
                file.InputStream.Flush();
                file.InputStream.Close();
            }
            return validationList;

        }

        public EFORM_TR_PREVIEW_MODEL GetTestReportsPreviewDetails(int eformId)
        {
            dbContext = new PMGSYEntities();
            EFORM_TR_PREVIEW_MODEL objTR_PREVIEW_MODEL = new EFORM_TR_PREVIEW_MODEL();
            try
            {
                #region Model Assigning
                PMGSYEntities dbContext = new PMGSYEntities();

                #region Vikky

                EFORM_TR_PREFILLED_DETAILS PREFILLRD_DETAILS_OBJ = new EFORM_TR_PREFILLED_DETAILS();


                EFORM_TR_ITEM_APPLICABLE_DETAILS_VIEW ITEM_APPLICABLE_DETAILS_OBJ = new EFORM_TR_ITEM_APPLICABLE_DETAILS_VIEW();

                List<EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW> MAIN_ITEM_OPTIONS_SELECTED_DETAIL_OBJ_List = new List<EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW>();

                List<EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL_VIEW> SUBITEM_OPTIONS_SELECTED_DETAIL_OBJ_List = new List<EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL_VIEW>();



                EFORM_TR_TYPEA_SUMMARY_PAGE1_SRM_1_VIEW TYPEA_SUMMARY_PAGE1_SRM_1_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE1_SRM_1_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE1_SRM_1_VIEW> TYPEA_DETAIL_PAGE1_SRM_1_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE1_SRM_1_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE1_CCM_2_VIEW TYPEA_SUMMARY_PAGE1_CCM_2_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE1_CCM_2_VIEW();

                List<EFORM_TR_TYPEA_DETAIL_PAGE1_CCM_2_VIEW> TYPEA_DETAIL_PAGE1_CCM_2_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE1_CCM_2_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE5_SRM_12_VIEW TYPEA_SUMMARY_PAGE5_SRM_12_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE5_SRM_12_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE5_SRM_12_VIEW> TYPEA_DETAIL_PAGE5_SRM_12_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE5_SRM_12_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE7_SRM_16_VIEW TYPEA_SUMMARY_PAGE7_SRM_16_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE7_SRM_16_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_16_VIEW> TYPEA_DETAIL_PAGE7_SRM_16_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_16_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE7_SRM_17_VIEW TYPEA_SUMMARY_PAGE7_SRM_17_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE7_SRM_17_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_17_VIEW> TYPEA_DETAIL_PAGE7_SRM_17_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_17_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE9_SRM_21_VIEW TYPEA_SUMMARY_PAGE9_SRM_21_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE9_SRM_21_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_21_VIEW> TYPEA_DETAIL_PAGE9_SRM_21_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_21_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE9_SRM_22_VIEW TYPEA_SUMMARY_PAGE9_SRM_22_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE9_SRM_22_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_22_VIEW> TYPEA_DETAIL_PAGE9_SRM_22_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_22_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE11_SRM_26_VIEW TYPEA_SUMMARY_PAGE11_SRM_26_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE11_SRM_26_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_26_VIEW> TYPEA_DETAIL_PAGE11_SRM_26_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_26_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE11_SRM_27_VIEW TYPEA_SUMMARY_PAGE11_SRM_27_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE11_SRM_27_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_27_VIEW> TYPEA_DETAIL_PAGE11_SRM_27_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_27_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE15_SRM_37_VIEW TYPEA_SUMMARY_PAGE15_SRM_37_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE15_SRM_37_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE15_SRM_37_VIEW> TYPEA_DETAIL_PAGE15_SRM_37_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE15_SRM_37_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE16_CCM_38_VIEW TYPEA_SUMMARY_PAGE16_CCM_38_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE16_CCM_38_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE16_CCM_38_VIEW> TYPEA_DETAIL_PAGE15_CCM_38_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE16_CCM_38_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE16_SRM_39_VIEW TYPEA_SUMMARY_PAGE16_SRM_39_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE16_SRM_39_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE16_SRM_39_VIEW> TYPEA_DETAIL_PAGE16_SRM_39_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE16_SRM_39_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE18_SRM_43_VIEW TYPEA_SUMMARY_PAGE18_SRM_43_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE18_SRM_43_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE18_SRM_43_VIEW> TYPEA_DETAIL_PAGE18_SRM_43_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE18_SRM_43_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE19_SRM_44_VIEW TYPEA_SUMMARY_PAGE19_SRM_44_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE19_SRM_44_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE19_SRM_44_VIEW> TYPEA_DETAIL_PAGE19_SRM_44_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE19_SRM_44_VIEW>();


                EFORM_TR_TYPEA_SUMMARY_PAGE19_CCM_45_VIEW TYPEA_SUMMARY_PAGE19_CCM_45_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE19_CCM_45_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE19_CCM_45_VIEW> TYPEA_DETAIL_PAGE19_CCM_45_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE19_CCM_45_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE22_SRM_52_VIEW TYPEA_SUMMARY_PAGE22_SRM_52_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE22_SRM_52_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE22_SRM_52_VIEW> TYPEA_DETAIL_PAGE22_SRM_52_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE22_SRM_52_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE22_SRM_53_VIEW TYPEA_SUMMARY_PAGE22_SRM_53_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE22_SRM_53_VIEW();
                List<EFORM_TR_UCS_TEST_DETAIL_PAGE22_SRM_53_VIEW> UCS_TEST_DETAIL_PAGE22_SRM_53_OBJ_List = new List<EFORM_TR_UCS_TEST_DETAIL_PAGE22_SRM_53_VIEW>();

                EFORM_TR_TYPEA_SUMMARY_PAGE23_SRM_54_VIEW TYPEA_SUMMARY_PAGE23_SRM_54_OBJ = new EFORM_TR_TYPEA_SUMMARY_PAGE23_SRM_54_VIEW();
                List<EFORM_TR_TYPEA_DETAIL_PAGE23_SRM_54_VIEW> TYPEA_DETAIL_PAGE22_SRM_54_OBJ_List = new List<EFORM_TR_TYPEA_DETAIL_PAGE23_SRM_54_VIEW>();

                TypeASummaryPage1SRM1AssignedModel typeASummaryPage1SRM1AssignedModel = new TypeASummaryPage1SRM1AssignedModel();
                TypeASummaryPage1CCM2AssignedModel typeASummaryPage1CCM2AssignedModel = new TypeASummaryPage1CCM2AssignedModel();
                TypeASummaryPage5SRM12AssignedModel typeASummaryPage5SRM12AssignedModel = new TypeASummaryPage5SRM12AssignedModel();
                TypeASummaryPage7SRM16AssignedModel typeASummaryPage7SRM16AssignedModel = new TypeASummaryPage7SRM16AssignedModel();
                TypeASummaryPage7SRM17AssignedModel typeASummaryPage7SRM17AssignedModel = new TypeASummaryPage7SRM17AssignedModel();
                TypeASummaryPage9SRM21AssignedModel typeASummaryPage9SRM21AssignedModel = new TypeASummaryPage9SRM21AssignedModel();
                TypeASummaryPage9SRM22AssignedModel typeASummaryPage9SRM22AssignedModel = new TypeASummaryPage9SRM22AssignedModel();
                TypeASummaryPage11SRM26AssignedModel typeASummaryPage11SRM26AssignedModel = new TypeASummaryPage11SRM26AssignedModel();
                TypeASummaryPage11SRM27AssignedModel typeASummaryPage11SRM27AssignedModel = new TypeASummaryPage11SRM27AssignedModel();
                TypeASummaryPage15SRM37AssignedModel typeASummaryPage15SRM37AssignedModel = new TypeASummaryPage15SRM37AssignedModel();
                TypeASummaryPage15CCM38AssignedModel typeASummaryPage15CCM38AssignedModel = new TypeASummaryPage15CCM38AssignedModel();
                TypeASummaryPage16SRM39AssignedModel typeASummaryPage16SRM39AssignedModel = new TypeASummaryPage16SRM39AssignedModel();
                TypeASummaryPage18SRM43AssignedModel typeASummaryPage18SRM43AssignedModel = new TypeASummaryPage18SRM43AssignedModel();
                TypeASummaryPage19SRM44AssignedModel typeASummaryPage19SRM44AssignedModel = new TypeASummaryPage19SRM44AssignedModel();
                TypeASummaryPage19CCM45AssignedModel typeASummaryPage19CCM45AssignedModel = new TypeASummaryPage19CCM45AssignedModel();
                TypeASummaryPage22SRM52AssignedModel typeASummaryPage22SRM52AssignedModel = new TypeASummaryPage22SRM52AssignedModel();
                TypeASummaryPage22SRM53AssignedModel typeASummaryPage22SRM53AssignedModel = new TypeASummaryPage22SRM53AssignedModel();
                TypeASummaryPage22SRM54AssignedModel typeASummaryPage22SRM54AssignedModel = new TypeASummaryPage22SRM54AssignedModel();

                #endregion

                #region Saurabh 

                #region Page : 2
                EFORM_TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW();

                TypeBSummaryPage2GranSubBase1AssignModel typeBSummaryPage2GranSub1 = new TypeBSummaryPage2GranSubBase1AssignModel();
                TypeBSummaryPage2GranSubBase2AssignModel typeBSummaryPage2GranSub2 = new TypeBSummaryPage2GranSubBase2AssignModel();
                TypeBSummaryPage2GranSubBase3AssignModel typeBSummaryPage2GranSub3 = new TypeBSummaryPage2GranSubBase3AssignModel();

                List<EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW> TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW> TYPEB_DETAIL_PAGE2_GS_BASE_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW> TYPEB_DETAIL_PAGE2_GS_BASE_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW>();

                #endregion

                #region Page : 3
                TypeBSummaryPage3GravelSubBase1AssignModel typeBSummaryPage3GravelSubBase1 = new TypeBSummaryPage3GravelSubBase1AssignModel();
                TypeBSummaryPage3GravelSubBase2AssignModel typeBSummaryPage3GravelSubBase2 = new TypeBSummaryPage3GravelSubBase2AssignModel();
                TypeBSummaryPage3GravelSubBase3AssignModel typeBSummaryPage3GravelSubBase3 = new TypeBSummaryPage3GravelSubBase3AssignModel();

                EFORM_TR_TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE3_Gravel_BASE_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE3_Gravel_BASE_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE3_Gravel_BASE_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW>();

                #endregion

                #region Page : 4
                TypeBSummaryPage4CementSubBase1AssignModel typeBSummaryPage4CS1 = new TypeBSummaryPage4CementSubBase1AssignModel();
                TypeBSummaryPage4CementSubBase2AssignModel typeBSummaryPage4CS2 = new TypeBSummaryPage4CementSubBase2AssignModel();
                TypeBSummaryPage4CementSubBase3AssignModel typeBSummaryPage4CS3 = new TypeBSummaryPage4CementSubBase3AssignModel();

                EFORM_TR_TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE4_CS_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE4_CS_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE4_CS_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW>();


                #endregion

                #region Page : 6
                EFORM_TR_TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW> TYPEB_DETAIL_PAGE6_BC1_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW> TYPEB_DETAIL_PAGE6_BC1_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW> TYPEB_DETAIL_PAGE6_BC1_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW>();


                #endregion

                #region Page : 8


                EFORM_TR_TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW> TYPEB_DETAIL_PAGE8_BC2_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW> TYPEB_DETAIL_PAGE8_BC2_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW> TYPEB_DETAIL_PAGE8_BC2_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW>();

                #endregion

                #region Page : 10


                EFORM_TR_TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW> TYPEB_DETAIL_PAGE10_BC3_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW> TYPEB_DETAIL_PAGE10_BC3_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW> TYPEB_DETAIL_PAGE10_BC3_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW>();


                #endregion

                #region Page : 12

                TypeBSummaryPage12BaseCourse3Cement1AssignModel typeBSummaryPage12Cement1 = new TypeBSummaryPage12BaseCourse3Cement1AssignModel();
                TypeBSummaryPage12BaseCourse3Cement2AssignModel typeBSummaryPage12Cement2 = new TypeBSummaryPage12BaseCourse3Cement2AssignModel();
                TypeBSummaryPage12BaseCourse3Cement3AssignModel typeBSummaryPage12Cement3 = new TypeBSummaryPage12BaseCourse3Cement3AssignModel();

                EFORM_TR_TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE12_CS_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE12_CS_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW> TYPEB_DETAIL_PAGE12_CS_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW>();

                #endregion

                #region Page : 13

                TypeBSummaryPage13BaseCourse3CS_FDR1AssignModel typeBSummaryPage13CS_FDR1 = new TypeBSummaryPage13BaseCourse3CS_FDR1AssignModel();
                TypeBSummaryPage13BaseCourse3CS_FDR2AssignModel typeBSummaryPage13CS_FDR2 = new TypeBSummaryPage13BaseCourse3CS_FDR2AssignModel();
                TypeBSummaryPage13BaseCourse3CS_FDR3AssignModel typeBSummaryPage13CS_FDR3 = new TypeBSummaryPage13BaseCourse3CS_FDR3AssignModel();

                EFORM_TR_TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW> TYPEB_DETAIL_PAGE13_FDR_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW> TYPEB_DETAIL_PAGE13_FDR_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW> TYPEB_DETAIL_PAGE13_FDR_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW>();

                #endregion

                #region Page : 14

                TypeBSummaryPage14BitumnBaseCourse1AssignModel typeBSummaryPage14BitumnBaseCourse1 = new TypeBSummaryPage14BitumnBaseCourse1AssignModel();
                TypeBSummaryPage14BitumnBaseCourse2AssignModel typeBSummaryPage14BitumnBaseCourse2 = new TypeBSummaryPage14BitumnBaseCourse2AssignModel();
                TypeBSummaryPage14BitumnBaseCourse3AssignModel typeBSummaryPage14BitumnBaseCourse3 = new TypeBSummaryPage14BitumnBaseCourse3AssignModel();

                EFORM_TR_TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW();

                EFORM_TR_TYPEC_SUMMARY_PAGE17_OPTION_SELECTED_3_VIEW TYPEB_SUMMARY_PAGE14_OPTION_SELECTED = new EFORM_TR_TYPEC_SUMMARY_PAGE17_OPTION_SELECTED_3_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW> TYPEB_DETAIL_PAGE14_Bitumn_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW> TYPEB_DETAIL_PAGE14_Bitumn_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW> TYPEB_DETAIL_PAGE14_Bitumn_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW>();


                #endregion

                #region Page :17-18

                TypeBSummaryPage17BitumnSurfaceCourse1AssignModel typeBSummaryPage17BitumnSurfaceCourse1 = new TypeBSummaryPage17BitumnSurfaceCourse1AssignModel();
                TypeBSummaryPage17BitumnSurfaceCourse2AssignModel typeBSummaryPage17BitumnSurfaceCourse2 = new TypeBSummaryPage17BitumnSurfaceCourse2AssignModel();
                TypeBSummaryPage17BitumnSurfaceCourse3AssignModel typeBSummaryPage17BitumnSurfaceCourse3 = new TypeBSummaryPage17BitumnSurfaceCourse3AssignModel();

                EFORM_TR_TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW = new EFORM_TR_TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW();
                EFORM_TR_TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW = new EFORM_TR_TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW();
                EFORM_TR_TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW = new EFORM_TR_TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW();

                EFORM_TR_TYPEC_SUMMARY_PAGE17_OPTION_SELECTED_3_VIEW TYPEC_SUMMARY_PAGE17_OPTION_SELECTED = new EFORM_TR_TYPEC_SUMMARY_PAGE17_OPTION_SELECTED_3_VIEW();

                List<EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW> TYPEB_DETAIL_PAGE17_BitumnSurFace_1_VIEW_List = new List<EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW>();
                List<EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW> TYPEB_DETAIL_PAGE17_BitumnSurFace_2_VIEW_List = new List<EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW>();
                List<EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW> TYPEB_DETAIL_PAGE18_BitumnSurFace_3_VIEW_List = new List<EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW>();

                #endregion

                #region Page : 20

                TypeBSummaryPage20Shoulder1AssignModel typeBSummaryPage20Shoulder1 = new TypeBSummaryPage20Shoulder1AssignModel();
                TypeBSummaryPage20Shoulder2AssignModel typeBSummaryPage20Shoulder2 = new TypeBSummaryPage20Shoulder2AssignModel();
                TypeBSummaryPage20Shoulder3AssignModel typeBSummaryPage20Shoulder3 = new TypeBSummaryPage20Shoulder3AssignModel();

                EFORM_TR_TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW> TYPEB_DETAIL_PAGE20_Shoulder_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW> TYPEB_DETAIL_PAGE20_Shoulder_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW> TYPEB_DETAIL_PAGE20_Shoulder_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW>();


                #endregion

                #region Page : 21


                EFORM_TR_TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW();
                EFORM_TR_TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW = new EFORM_TR_TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW();

                List<EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW> TYPEB_DETAIL_PAGE21_Shoulder_1_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW> TYPEB_DETAIL_PAGE21_Shoulder_2_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW>();
                List<EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW> TYPEB_DETAIL_PAGE21_Shoulder_3_VIEW_List = new List<EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW>();

                TypeBSummaryPage21Shoulder1AssignModel typeBSummaryPage21Shoulder1 = new TypeBSummaryPage21Shoulder1AssignModel();
                TypeBSummaryPage21Shoulder2AssignModel typeBSummaryPage21Shoulder2 = new TypeBSummaryPage21Shoulder2AssignModel();
                TypeBSummaryPage21Shoulder3AssignModel typeBSummaryPage21Shoulder3 = new TypeBSummaryPage21Shoulder3AssignModel();

                #endregion


                #endregion

                #endregion


                #region Database Queries

                #region vikky
                var prefilledDetails = dbContext.EFORM_PREFILLED_DETAILS.Where(s => s.EFORM_ID == eformId).Any() ? dbContext.EFORM_PREFILLED_DETAILS.Where(x => x.EFORM_ID == eformId).FirstOrDefault() : null;

                var isApplicable = dbContext.EFORM_TR_ITEM_APPLICABLE_DETAILS.Where(s => s.EFORM_ID == eformId).Any() ? dbContext.EFORM_TR_ITEM_APPLICABLE_DETAILS.Where(x => x.EFORM_ID == eformId).FirstOrDefault() : null;
                var SUBITEM_OPTIONS_SELECTED_DETAIL_List = dbContext.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL.Where(s => s.EFORM_ID == eformId).Any() ? dbContext.EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL.Where(x => x.EFORM_ID == eformId).ToList() : null;
                var MAINITEM_OPTIONS_SELECTED_DETAIL_List = dbContext.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL.Where(s => s.EFORM_ID == eformId).Any() ? dbContext.EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL.Where(x => x.EFORM_ID == eformId).ToList() : null;

                var TYPEA_SUMMARY_PAGE1_SRM_1 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE1_SRM_1_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1SRM1AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE1_CCM_2 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.SUBITEM_ID).Any()
                   ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE1_CCM_2_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage1CCM2AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE5_SRM_12 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE5_SRM_12_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage5SRM12AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE7_SRM_16 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.SUBITEM_ID).Any()
               ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE7_SRM_16_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM16AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE7_SRM_17 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.SUBITEM_ID).Any()
           ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE7_SRM_17_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage7SRM17AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE9_SRM_21 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.SUBITEM_ID).Any()
         ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE9_SRM_21_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM21AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE9_SRM_22 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.SUBITEM_ID).Any()
       ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE9_SRM_22_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage9SRM22AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE11_SRM_26 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.SUBITEM_ID).Any()
              ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE11_SRM_26_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM26AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE11_SRM_27 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.SUBITEM_ID).Any()
            ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE11_SRM_27_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage11SRM27AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE15_SRM_37 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.SUBITEM_ID).Any()
           ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE15_SRM_37_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE16_CCM_38 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.SUBITEM_ID).Any()
         ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE16_CCM_38_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15SRM37AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage15CCM38AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE16_SRM_39 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.SUBITEM_ID).Any()
           ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE16_SRM_39_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage16SRM39AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE18_SRM_43 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.SUBITEM_ID).Any()
         ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE18_SRM_43_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage18SRM43AssignedModel.Model.SUBITEM_ID).ToList() : null;


                var TYPEA_SUMMARY_PAGE19_SRM_44 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.SUBITEM_ID).Any()
           ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE19_SRM_44_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19SRM44AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE19_CCM_45 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.SUBITEM_ID).Any()
           ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE19_CCM_45_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage19CCM45AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE22_SRM_52 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.SUBITEM_ID).Any()
    ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE22_SRM_52_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM52AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE22_SRM_53 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.SUBITEM_ID).Any()
   ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var UCS_TEST_DETAIL_PAGE22_SRM_53_List = dbContext.EFORM_TR_UCS_TEST_DETAILS.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_UCS_TEST_DETAILS.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM53AssignedModel.Model.SUBITEM_ID).ToList() : null;

                var TYPEA_SUMMARY_PAGE23_SRM_54 = dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.SUBITEM_ID).Any()
  ? dbContext.EFORM_TR_TYPEA_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.SUBITEM_ID).FirstOrDefault() : null;
                var TYPEA_DETAIL_PAGE23_SRM_54_List = dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEA_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeASummaryPage22SRM54AssignedModel.Model.SUBITEM_ID).ToList() : null;


                #endregion

                #region Saurabh

                #region Page : 2

                var TYPEB_SUMMARY_PAGE2_GS_BASE_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub1.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_SUMMARY_PAGE2_GS_BASE_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub2.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_SUMMARY_PAGE2_GS_BASE_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub3.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE2_GS_BASE_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub1.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_DETAIL_PAGE2_GS_BASE_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_DETAIL_PAGE2_GS_BASE_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage2GranSub3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage2GranSub3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 3
                var TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase1.Model.SUBITEM_ID).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE3_GRAVEL_BASE_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase2.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE3_GRAVEL_BASE_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase3.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE3_GRAVEL_BASE_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage3GravelSubBase3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage3GravelSubBase3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 4
                var TYPEB_SUMMARY_PAGE4_CS_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS1.Model.SUBITEM_ID).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE4_CS_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE4_CS_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS2.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE4_CS_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE4_CS_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS3.Model.SUBITEM_ID).Any()
                    ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE4_CS_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage4CS3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage4CS3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 6

                var TYPEB_SUMMARY_PAGE6_BC1_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 13 && s.TABLE_ID == 13).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 13 && s.TABLE_ID == 13).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE6_BC1_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 13 && s.TABLE_ID == 13).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 13 && s.TABLE_ID == 13).ToList() : null;

                var TYPEB_SUMMARY_PAGE6_BC1_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 14 && s.TABLE_ID == 14).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 14 && s.TABLE_ID == 14).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE6_BC1_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 14 && s.TABLE_ID == 14).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 14 && s.TABLE_ID == 14).ToList() : null;

                var TYPEB_SUMMARY_PAGE6_BC1_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 15 && s.TABLE_ID == 15).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 15 && s.TABLE_ID == 15).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE6_BC1_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 15 && s.TABLE_ID == 15).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 3 && s.SUBITEM_ID == 15 && s.TABLE_ID == 15).ToList() : null;

                #endregion

                #region Page : 8

                var TYPEB_SUMMARY_PAGE8_BC2_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 18 && s.TABLE_ID == 18).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 18 && s.TABLE_ID == 18).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE8_BC2_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 18 && s.TABLE_ID == 18).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 18 && s.TABLE_ID == 18).ToList() : null;

                var TYPEB_SUMMARY_PAGE8_BC2_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 19 && s.TABLE_ID == 19).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 19 && s.TABLE_ID == 19).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE8_BC2_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 19 && s.TABLE_ID == 19).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 19 && s.TABLE_ID == 19).ToList() : null;

                var TYPEB_SUMMARY_PAGE8_BC2_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 20 && s.TABLE_ID == 20).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 20 && s.TABLE_ID == 20).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE8_BC2_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 20 && s.TABLE_ID == 20).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 4 && s.SUBITEM_ID == 20 && s.TABLE_ID == 20).ToList() : null;

                #endregion

                #region Page :10

                var TYPEB_SUMMARY_PAGE10_BC3_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 23 && s.TABLE_ID == 23).Any()
                   ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 23 && s.TABLE_ID == 23).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE10_BC3_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 23 && s.TABLE_ID == 23).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 23 && s.TABLE_ID == 23).ToList() : null;

                var TYPEB_SUMMARY_PAGE10_BC3_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 24 && s.TABLE_ID == 24).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 24 && s.TABLE_ID == 24).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE10_BC3_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 24 && s.TABLE_ID == 24).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 24 && s.TABLE_ID == 24).ToList() : null;

                var TYPEB_SUMMARY_PAGE10_BC3_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 25 && s.TABLE_ID == 25).Any()
                 ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 25 && s.TABLE_ID == 25).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE10_BC3_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 25 && s.TABLE_ID == 25).Any()
                  ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == 5 && s.SUBITEM_ID == 25 && s.TABLE_ID == 25).ToList() : null;

                #endregion

                #region Page : 12

                var TYPEB_SUMMARY_PAGE12_CS_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement1.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE12_CS_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE12_CS_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE12_CS_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE12_CS_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE12_CS_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage12Cement3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage12Cement3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 13

                var TYPEB_SUMMARY_PAGE13_FDR_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR1.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE13_FDR_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE13_FDR_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE13_FDR_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE13_FDR_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE13_FDR_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage13CS_FDR3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage13CS_FDR3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 14

                var TYPEB_SUMMARY_PAGE14_Bitumn_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE14_Bitumn_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE14_Bitumn_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE14_Bitumn_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE14_Bitumn_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE14_Bitumn_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage14BitumnBaseCourse3.Model.SUBITEM_ID).ToList() : null;


                #endregion

                #region Page : 17-18

                var TYPEC_SUMMARY_PAGE17_Surface_1 = dbContext.EFORM_TR_TYPEC_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEC_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEC_DETAIL_PAGE17_Surface_1_List = dbContext.EFORM_TR_TYPEC_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEC_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse1.Model.SUBITEM_ID).ToList() : null;

                var TYPEC_SUMMARY_PAGE17_Surface_2 = dbContext.EFORM_TR_TYPEC_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEC_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEC_DETAIL_PAGE17_Surface_2_List = dbContext.EFORM_TR_TYPEC_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEC_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse2.Model.SUBITEM_ID).ToList() : null;

                var TYPEC_SUMMARY_PAGE17_Surface_3 = dbContext.EFORM_TR_TYPEC_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEC_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEC_DETAIL_PAGE17_Surface_3_List = dbContext.EFORM_TR_TYPEC_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEC_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage17BitumnSurfaceCourse3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 20

                var TYPEB_SUMMARY_PAGE20_ShoulderGranular_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder1.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE20_ShoulderGranular_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE20_ShoulderGranular_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE20_ShoulderGranular_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE20_ShoulderGranular_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE20_ShoulderGranular_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage20Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage20Shoulder3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #region Page : 21

                var TYPEB_SUMMARY_PAGE21_ShoulderGravel_1 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder1.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder1.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE21_ShoulderGravel_1_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder1.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder1.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder1.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE21_ShoulderGravel_2 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder2.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder2.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE21_ShoulderGravel_2_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder2.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder2.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder2.Model.SUBITEM_ID).ToList() : null;

                var TYPEB_SUMMARY_PAGE21_ShoulderGravel_3 = dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder3.Model.SUBITEM_ID).Any()
                  ? dbContext.EFORM_TR_TYPEB_SUMMARY.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder3.Model.SUBITEM_ID).FirstOrDefault() : null;

                var TYPEB_DETAIL_PAGE21_ShoulderGravel_3_List = dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder3.Model.SUBITEM_ID).Any()
                 ? dbContext.EFORM_TR_TYPEB_DETAIL.Where(s => s.EFORM_ID == eformId && s.MAIN_ITEM_ID == typeBSummaryPage21Shoulder3.Model.MAIN_ITEM_ID && s.SUBITEM_ID == typeBSummaryPage21Shoulder3.Model.SUBITEM_ID).ToList() : null;

                #endregion

                #endregion

                #endregion


                #region Query Assigning to model

                #region Vikky

                if (prefilledDetails != null)
                {
                    if (prefilledDetails.ROAD_NAME != null)
                    {
                        PREFILLRD_DETAILS_OBJ.ROAD_NAME += prefilledDetails.ROAD_NAME + " / ";
                    }
                    if (prefilledDetails.PACKAGE_ID != null)
                    {
                        PREFILLRD_DETAILS_OBJ.ROAD_NAME += prefilledDetails.PACKAGE_ID;
                    }
                    PREFILLRD_DETAILS_OBJ.ROAD_NAME = PREFILLRD_DETAILS_OBJ.ROAD_NAME == null ? "" : PREFILLRD_DETAILS_OBJ.ROAD_NAME;
                    PREFILLRD_DETAILS_OBJ.EFORM_ID = prefilledDetails.EFORM_ID.ToString();
                    PREFILLRD_DETAILS_OBJ.TEMPLATE_VERSION = dbContext.EFORM_TEST_REPORT_FILE.Where(s => s.EFORM_ID == eformId && s.IS_EFORM == "Y").Select(m => m.TEMPLATE_VERSION).FirstOrDefault();
                    objTR_PREVIEW_MODEL.PREFILLED_DETAILS = PREFILLRD_DETAILS_OBJ;
                }

                int lastApplicableItemNo = 1;




                string[] itemIsApplicableArray = { isApplicable.ITEM_54, isApplicable.ITEM_53, isApplicable.ITEM_52, isApplicable.ITEM_51, isApplicable.ITEM_50,
                    isApplicable.ITEM_49, isApplicable.ITEM_48, isApplicable.ITEM_47, isApplicable.ITEM_46, isApplicable.ITEM_45,
                    isApplicable.ITEM_44, isApplicable.ITEM_43, isApplicable.ITEM_42, isApplicable.ITEM_41, isApplicable.ITEM_40,
                    isApplicable.ITEM_39, isApplicable.ITEM_38, isApplicable.ITEM_37, isApplicable.ITEM_36, isApplicable.ITEM_35,
                    isApplicable.ITEM_34, isApplicable.ITEM_33, isApplicable.ITEM_32, isApplicable.ITEM_31, isApplicable.ITEM_30,
                    isApplicable.ITEM_29, isApplicable.ITEM_28, isApplicable.ITEM_27, isApplicable.ITEM_26, isApplicable.ITEM_25,
                    isApplicable.ITEM_24, isApplicable.ITEM_23, isApplicable.ITEM_22, isApplicable.ITEM_21, isApplicable.ITEM_20,
                    isApplicable.ITEM_19, isApplicable.ITEM_18, isApplicable.ITEM_17, isApplicable.ITEM_16, isApplicable.ITEM_15,
                    isApplicable.ITEM_14, isApplicable.ITEM_13, isApplicable.ITEM_12, isApplicable.ITEM_11, isApplicable.ITEM_10,
                    isApplicable.ITEM_9, isApplicable.ITEM_8, isApplicable.ITEM_7, isApplicable.ITEM_6, isApplicable.ITEM_5,
                    isApplicable.ITEM_4, isApplicable.ITEM_3, isApplicable.ITEM_2, isApplicable.ITEM_1  };

                for (int i = 0; i < 54; i++)
                {
                    if (itemIsApplicableArray[i] == "Y")
                    {
                        lastApplicableItemNo = 54 - i;
                        break;
                    }
                }
                ITEM_APPLICABLE_DETAILS_OBJ.LAST_APPLICABLE_ITEM = lastApplicableItemNo;

                if (isApplicable != null)
                {
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_1 = isApplicable.ITEM_1;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_2 = isApplicable.ITEM_2;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_3 = isApplicable.ITEM_3;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_4 = isApplicable.ITEM_4;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_5 = isApplicable.ITEM_5;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_6 = isApplicable.ITEM_6;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_7 = isApplicable.ITEM_7;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_8 = isApplicable.ITEM_8;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_9 = isApplicable.ITEM_9;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_10 = isApplicable.ITEM_10;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_11 = isApplicable.ITEM_11;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_12 = isApplicable.ITEM_12;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_13 = isApplicable.ITEM_13;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_14 = isApplicable.ITEM_14;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_15 = isApplicable.ITEM_15;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_16 = isApplicable.ITEM_16;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_17 = isApplicable.ITEM_17;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_18 = isApplicable.ITEM_18;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_19 = isApplicable.ITEM_19;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_20 = isApplicable.ITEM_20;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_21 = isApplicable.ITEM_21;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_22 = isApplicable.ITEM_22;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_23 = isApplicable.ITEM_23;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_24 = isApplicable.ITEM_24;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_25 = isApplicable.ITEM_25;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_26 = isApplicable.ITEM_26;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_27 = isApplicable.ITEM_27;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_28 = isApplicable.ITEM_28;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_29 = isApplicable.ITEM_29;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_30 = isApplicable.ITEM_30;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_31 = isApplicable.ITEM_31;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_32 = isApplicable.ITEM_32;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_33 = isApplicable.ITEM_33;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_34 = isApplicable.ITEM_34;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_35 = isApplicable.ITEM_35;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_36 = isApplicable.ITEM_36;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_37 = isApplicable.ITEM_37;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_38 = isApplicable.ITEM_38;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_39 = isApplicable.ITEM_39;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_40 = isApplicable.ITEM_40;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_41 = isApplicable.ITEM_41;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_42 = isApplicable.ITEM_42;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_43 = isApplicable.ITEM_43;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_44 = isApplicable.ITEM_44;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_45 = isApplicable.ITEM_45;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_46 = isApplicable.ITEM_46;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_47 = isApplicable.ITEM_47;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_48 = isApplicable.ITEM_48;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_49 = isApplicable.ITEM_49;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_50 = isApplicable.ITEM_50;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_51 = isApplicable.ITEM_51;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_52 = isApplicable.ITEM_52;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_53 = isApplicable.ITEM_53;
                    ITEM_APPLICABLE_DETAILS_OBJ.ITEM_54 = isApplicable.ITEM_54;

                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_1 = 1;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_2 = 2;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_3 = 3;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_4 = 4;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_5 = 5;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_6 = 6;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_7 = 7;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_8 = 8;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_9 = 9;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_10 = 10;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_11 = 11;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_12 = 12;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_13 = 13;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_14 = 14;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_15 = 15;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_16 = 16;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_17 = 17;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_18 = 18;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_19 = 19;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_20 = 20;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_21 = 21;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_22 = 22;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_23 = 23;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_24 = 24;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_25 = 25;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_26 = 26;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_27 = 27;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_28 = 28;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_29 = 29;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_30 = 30;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_31 = 31;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_32 = 32;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_33 = 33;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_34 = 34;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_35 = 35;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_36 = 36;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_37 = 37;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_38 = 38;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_39 = 39;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_40 = 40;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_41 = 41;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_42 = 42;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_43 = 43;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_44 = 44;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_45 = 45;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_46 = 46;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_47 = 47;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_48 = 48;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_49 = 49;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_50 = 50;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_51 = 51;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_52 = 52;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_53 = 53;
                    ITEM_APPLICABLE_DETAILS_OBJ.ASSIGN_NO_ITEM_54 = 54;

                    objTR_PREVIEW_MODEL.ITEM_APPLICABLE_DETAILS_VIEW = ITEM_APPLICABLE_DETAILS_OBJ;
                }

                if (SUBITEM_OPTIONS_SELECTED_DETAIL_List != null)
                {
                    foreach (var item in SUBITEM_OPTIONS_SELECTED_DETAIL_List)
                    {
                        SUBITEM_OPTIONS_SELECTED_DETAIL_OBJ_List.Add(new EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL_VIEW
                        {
                            MAIN_ITEM_ID = item.MAIN_ITEM_ID,
                            SUBITEM_ID = item.SUBITEM_ID,
                            OPTION_ID = item.OPTION_ID,
                            OPTION_DESC = dbContext.EFORM_TR_ITEM_OPTIONS_MASTER.Where(s => s.MAIN_ITEM_ID == item.MAIN_ITEM_ID && s.SUBITEM_ID == item.SUBITEM_ID && s.OPTION_ID == item.OPTION_ID).Select(x => x.OPTION_DESC).FirstOrDefault() == null ? "" :
                            dbContext.EFORM_TR_ITEM_OPTIONS_MASTER.Where(s => s.MAIN_ITEM_ID == item.MAIN_ITEM_ID && s.SUBITEM_ID == item.SUBITEM_ID && s.OPTION_ID == item.OPTION_ID).Select(x => x.OPTION_DESC).FirstOrDefault(),
                        });

                    }
                    objTR_PREVIEW_MODEL.SUBITEM_OPTIONS_SELECTED_DETAIL_VIEW_List = SUBITEM_OPTIONS_SELECTED_DETAIL_OBJ_List;
                }

                if (MAINITEM_OPTIONS_SELECTED_DETAIL_List != null)
                {
                    foreach (var item in MAINITEM_OPTIONS_SELECTED_DETAIL_List)
                    {
                        MAIN_ITEM_OPTIONS_SELECTED_DETAIL_OBJ_List.Add(new EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW
                        {
                            MAIN_ITEM_ID = item.MAIN_ITEM_ID,
                            OPTION_ID = item.OPTION_ID,
                            OPTION_DESC = dbContext.EFORM_TR_ITEM_OPTIONS_MASTER.Where(s => s.MAIN_ITEM_ID == item.MAIN_ITEM_ID && s.OPTION_ID == item.OPTION_ID).Select(x => x.OPTION_DESC).FirstOrDefault() == null ? "" :
                            dbContext.EFORM_TR_ITEM_OPTIONS_MASTER.Where(s => s.MAIN_ITEM_ID == item.MAIN_ITEM_ID && s.OPTION_ID == item.OPTION_ID).Select(x => x.OPTION_DESC).FirstOrDefault(),
                        });

                    }
                    objTR_PREVIEW_MODEL.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW_List = MAIN_ITEM_OPTIONS_SELECTED_DETAIL_OBJ_List;
                }


                if (TYPEA_SUMMARY_PAGE1_SRM_1 != null)
                {
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE1_SRM_1.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE1_SRM_1.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE1_SRM_1.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE1_SRM_1.EFORM_ID;
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE1_SRM_1.TABLE_ID;
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE1_SRM_1.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE1_SRM_1.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE1_SRM_1.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE1_SRM_1.LAYER_ID;
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE1_SRM_1.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE1_SRM_1.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.REMARK = TYPEA_SUMMARY_PAGE1_SRM_1.REMARK == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.COMMENT = TYPEA_SUMMARY_PAGE1_SRM_1.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE1_SRM_1.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE1_SRM_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE1_SRM_1_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE1_SRM_1.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE1_SRM_1.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE1_SRM_1_VIEW = TYPEA_SUMMARY_PAGE1_SRM_1_OBJ;
                }
                if (TYPEA_DETAIL_PAGE1_SRM_1_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE1_SRM_1_List)
                    {
                        TYPEA_DETAIL_PAGE1_SRM_1_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE1_SRM_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE1_SRM_1_VIEW_List = TYPEA_DETAIL_PAGE1_SRM_1_OBJ_List;


                }


                if (TYPEA_SUMMARY_PAGE1_CCM_2 != null)
                {
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE1_CCM_2.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE1_CCM_2.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE1_CCM_2.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE1_CCM_2.EFORM_ID;
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE1_CCM_2.TABLE_ID;
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE1_CCM_2.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE1_CCM_2.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE1_CCM_2.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE1_CCM_2.LAYER_ID;
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE1_CCM_2.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE1_CCM_2.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.REMARK = TYPEA_SUMMARY_PAGE1_CCM_2.REMARK == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.COMMENT = TYPEA_SUMMARY_PAGE1_CCM_2.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE1_CCM_2.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE1_CCM_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE1_CCM_2_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE1_CCM_2.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE1_CCM_2.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE1_CCM_2_VIEW = TYPEA_SUMMARY_PAGE1_CCM_2_OBJ;
                }
                if (TYPEA_DETAIL_PAGE1_CCM_2_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE1_CCM_2_List)
                    {
                        TYPEA_DETAIL_PAGE1_CCM_2_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE1_CCM_2_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE1_CCM_2_VIEW_List = TYPEA_DETAIL_PAGE1_CCM_2_OBJ_List;
                }


                if (TYPEA_SUMMARY_PAGE5_SRM_12 != null)
                {
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE5_SRM_12.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE5_SRM_12.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE5_SRM_12.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE5_SRM_12.EFORM_ID;
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE5_SRM_12.TABLE_ID;
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE5_SRM_12.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE5_SRM_12.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE5_SRM_12.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE5_SRM_12.LAYER_ID;
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE5_SRM_12.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE5_SRM_12.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.REMARK = TYPEA_SUMMARY_PAGE5_SRM_12.REMARK == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.COMMENT = TYPEA_SUMMARY_PAGE5_SRM_12.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE5_SRM_12.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE5_SRM_12.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE5_SRM_12_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE5_SRM_12.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE5_SRM_12.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE5_SRM_12_VIEW = TYPEA_SUMMARY_PAGE5_SRM_12_OBJ;
                }
                if (TYPEA_DETAIL_PAGE5_SRM_12_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE5_SRM_12_List)
                    {
                        TYPEA_DETAIL_PAGE5_SRM_12_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE5_SRM_12_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE5_SRM_12_VIEW_List = TYPEA_DETAIL_PAGE5_SRM_12_OBJ_List;


                }




                if (TYPEA_SUMMARY_PAGE7_SRM_16 != null)
                {
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE7_SRM_16.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE7_SRM_16.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE7_SRM_16.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE7_SRM_16.EFORM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE7_SRM_16.TABLE_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE7_SRM_16.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE7_SRM_16.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE7_SRM_16.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE7_SRM_16.LAYER_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE7_SRM_16.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE7_SRM_16.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.REMARK = TYPEA_SUMMARY_PAGE7_SRM_16.REMARK == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.COMMENT = TYPEA_SUMMARY_PAGE7_SRM_16.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE7_SRM_16.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE7_SRM_16.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_16_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE7_SRM_16.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_16.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE7_SRM_16_VIEW = TYPEA_SUMMARY_PAGE7_SRM_16_OBJ;
                }
                if (TYPEA_DETAIL_PAGE7_SRM_16_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE7_SRM_16_List)
                    {
                        TYPEA_DETAIL_PAGE7_SRM_16_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_16_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE7_SRM_16_VIEW_List = TYPEA_DETAIL_PAGE7_SRM_16_OBJ_List;


                }



                if (TYPEA_SUMMARY_PAGE7_SRM_17 != null)
                {
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE7_SRM_17.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE7_SRM_17.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE7_SRM_17.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE7_SRM_17.EFORM_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE7_SRM_17.TABLE_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE7_SRM_17.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE7_SRM_17.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.L = TYPEA_SUMMARY_PAGE7_SRM_17.L == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.L.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.B = TYPEA_SUMMARY_PAGE7_SRM_17.B == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.B.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.H = TYPEA_SUMMARY_PAGE7_SRM_17.H == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.H.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.VOL = TYPEA_SUMMARY_PAGE7_SRM_17.VOL == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.VOL.ToString().Trim();

                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE7_SRM_17.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE7_SRM_17.LAYER_ID;
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE7_SRM_17.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE7_SRM_17.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.REMARK = TYPEA_SUMMARY_PAGE7_SRM_17.REMARK == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.COMMENT = TYPEA_SUMMARY_PAGE7_SRM_17.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE7_SRM_17.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE7_SRM_17.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE7_SRM_17_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE7_SRM_17.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE7_SRM_17.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE7_SRM_17_VIEW = TYPEA_SUMMARY_PAGE7_SRM_17_OBJ;
                }
                if (TYPEA_DETAIL_PAGE7_SRM_17_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE7_SRM_17_List)
                    {
                        TYPEA_DETAIL_PAGE7_SRM_17_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE7_SRM_17_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE7_SRM_17_VIEW_List = TYPEA_DETAIL_PAGE7_SRM_17_OBJ_List;


                }

                if (TYPEA_SUMMARY_PAGE9_SRM_21 != null)
                {
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE9_SRM_21.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE9_SRM_21.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE9_SRM_21.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE9_SRM_21.EFORM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE9_SRM_21.TABLE_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE9_SRM_21.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE9_SRM_21.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE9_SRM_21.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE9_SRM_21.LAYER_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE9_SRM_21.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE9_SRM_21.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.REMARK = TYPEA_SUMMARY_PAGE9_SRM_21.REMARK == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.COMMENT = TYPEA_SUMMARY_PAGE9_SRM_21.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE9_SRM_21.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE9_SRM_21.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_21_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE9_SRM_21.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_21.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE9_SRM_21_VIEW = TYPEA_SUMMARY_PAGE9_SRM_21_OBJ;
                }
                if (TYPEA_DETAIL_PAGE9_SRM_21_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE9_SRM_21_List)
                    {
                        TYPEA_DETAIL_PAGE9_SRM_21_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_21_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE9_SRM_21_VIEW_List = TYPEA_DETAIL_PAGE9_SRM_21_OBJ_List;


                }


                if (TYPEA_SUMMARY_PAGE9_SRM_22 != null)
                {
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE9_SRM_22.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE9_SRM_22.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE9_SRM_22.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE9_SRM_22.EFORM_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE9_SRM_22.TABLE_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE9_SRM_22.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE9_SRM_22.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.L = TYPEA_SUMMARY_PAGE9_SRM_22.L == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.L.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.B = TYPEA_SUMMARY_PAGE9_SRM_22.B == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.B.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.H = TYPEA_SUMMARY_PAGE9_SRM_22.H == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.H.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.VOL = TYPEA_SUMMARY_PAGE9_SRM_22.VOL == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.VOL.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE9_SRM_22.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE9_SRM_22.LAYER_ID;
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE9_SRM_22.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE9_SRM_22.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.REMARK = TYPEA_SUMMARY_PAGE9_SRM_22.REMARK == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.COMMENT = TYPEA_SUMMARY_PAGE9_SRM_22.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE9_SRM_22.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE9_SRM_22.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE9_SRM_22_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE9_SRM_22.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE9_SRM_22.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE9_SRM_22_VIEW = TYPEA_SUMMARY_PAGE9_SRM_22_OBJ;
                }
                if (TYPEA_DETAIL_PAGE9_SRM_22_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE9_SRM_22_List)
                    {
                        TYPEA_DETAIL_PAGE9_SRM_22_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE9_SRM_22_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE9_SRM_22_VIEW_List = TYPEA_DETAIL_PAGE9_SRM_22_OBJ_List;


                }


                if (TYPEA_SUMMARY_PAGE11_SRM_26 != null)
                {
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE11_SRM_26.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE11_SRM_26.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE11_SRM_26.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE11_SRM_26.EFORM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE11_SRM_26.TABLE_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE11_SRM_26.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE11_SRM_26.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE11_SRM_26.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE11_SRM_26.LAYER_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE11_SRM_26.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE11_SRM_26.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.REMARK = TYPEA_SUMMARY_PAGE11_SRM_26.REMARK == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.COMMENT = TYPEA_SUMMARY_PAGE11_SRM_26.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE11_SRM_26.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE11_SRM_26.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_26_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE11_SRM_26.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_26.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE11_SRM_26_VIEW = TYPEA_SUMMARY_PAGE11_SRM_26_OBJ;
                }
                if (TYPEA_DETAIL_PAGE11_SRM_26_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE11_SRM_26_List)
                    {
                        TYPEA_DETAIL_PAGE11_SRM_26_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_26_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE11_SRM_26_VIEW_List = TYPEA_DETAIL_PAGE11_SRM_26_OBJ_List;


                }


                if (TYPEA_SUMMARY_PAGE11_SRM_27 != null)
                {
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE11_SRM_27.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE11_SRM_27.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE11_SRM_27.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE11_SRM_27.EFORM_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE11_SRM_27.TABLE_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE11_SRM_27.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE11_SRM_27.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.L = TYPEA_SUMMARY_PAGE11_SRM_27.L == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.L.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.B = TYPEA_SUMMARY_PAGE11_SRM_27.B == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.B.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.H = TYPEA_SUMMARY_PAGE11_SRM_27.H == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.H.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.VOL = TYPEA_SUMMARY_PAGE11_SRM_27.VOL == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.VOL.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE11_SRM_27.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE11_SRM_27.LAYER_ID;
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE11_SRM_27.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE11_SRM_27.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.REMARK = TYPEA_SUMMARY_PAGE11_SRM_27.REMARK == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.COMMENT = TYPEA_SUMMARY_PAGE11_SRM_27.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE11_SRM_27.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE11_SRM_27.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE11_SRM_27_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE11_SRM_27.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE11_SRM_27.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE11_SRM_27_VIEW = TYPEA_SUMMARY_PAGE11_SRM_27_OBJ;
                }
                if (TYPEA_DETAIL_PAGE11_SRM_27_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE11_SRM_27_List)
                    {
                        TYPEA_DETAIL_PAGE11_SRM_27_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE11_SRM_27_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE11_SRM_27_VIEW_List = TYPEA_DETAIL_PAGE11_SRM_27_OBJ_List;


                }



                if (TYPEA_SUMMARY_PAGE15_SRM_37 != null)
                {
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE15_SRM_37.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE15_SRM_37.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE15_SRM_37.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE15_SRM_37.EFORM_ID;
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE15_SRM_37.TABLE_ID;
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE15_SRM_37.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE15_SRM_37.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE15_SRM_37.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE15_SRM_37.LAYER_ID;
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE15_SRM_37.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE15_SRM_37.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.REMARK = TYPEA_SUMMARY_PAGE15_SRM_37.REMARK == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.COMMENT = TYPEA_SUMMARY_PAGE15_SRM_37.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE15_SRM_37.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE15_SRM_37.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE15_SRM_37_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE15_SRM_37.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE15_SRM_37.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE15_SRM_37_VIEW = TYPEA_SUMMARY_PAGE15_SRM_37_OBJ;
                }
                if (TYPEA_DETAIL_PAGE15_SRM_37_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE15_SRM_37_List)
                    {
                        TYPEA_DETAIL_PAGE15_SRM_37_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE15_SRM_37_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE15_SRM_37_VIEW_List = TYPEA_DETAIL_PAGE15_SRM_37_OBJ_List;
                }

                if (TYPEA_SUMMARY_PAGE16_CCM_38 != null)
                {
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE16_CCM_38.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE16_CCM_38.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE16_CCM_38.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE16_CCM_38.EFORM_ID;
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE16_CCM_38.TABLE_ID;
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE16_CCM_38.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE16_CCM_38.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE16_CCM_38.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE16_CCM_38.LAYER_ID;
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE16_CCM_38.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE16_CCM_38.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.REMARK = TYPEA_SUMMARY_PAGE16_CCM_38.REMARK == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.COMMENT = TYPEA_SUMMARY_PAGE16_CCM_38.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE16_CCM_38.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE16_CCM_38.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE16_CCM_38_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE16_CCM_38.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE16_CCM_38.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE16_CCM_38_VIEW = TYPEA_SUMMARY_PAGE16_CCM_38_OBJ;
                }
                if (TYPEA_DETAIL_PAGE16_CCM_38_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE16_CCM_38_List)
                    {
                        TYPEA_DETAIL_PAGE15_CCM_38_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE16_CCM_38_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE16_CCM_38_VIEW_List = TYPEA_DETAIL_PAGE15_CCM_38_OBJ_List;
                }


                if (TYPEA_SUMMARY_PAGE16_SRM_39 != null)
                {
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE16_SRM_39.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE16_SRM_39.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE16_SRM_39.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE16_SRM_39.EFORM_ID;
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE16_SRM_39.TABLE_ID;
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE16_SRM_39.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE16_SRM_39.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE16_SRM_39.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE16_SRM_39.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE16_SRM_39.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE16_SRM_39.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE16_SRM_39.LAYER_ID;
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE16_SRM_39.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE16_SRM_39.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.REMARK = TYPEA_SUMMARY_PAGE16_SRM_39.REMARK == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.COMMENT = TYPEA_SUMMARY_PAGE16_SRM_39.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE16_SRM_39.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE16_SRM_39.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE16_SRM_39_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE16_SRM_39.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE16_SRM_39.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE16_SRM_39_VIEW = TYPEA_SUMMARY_PAGE16_SRM_39_OBJ;
                }
                if (TYPEA_DETAIL_PAGE16_SRM_39_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE16_SRM_39_List)
                    {
                        TYPEA_DETAIL_PAGE16_SRM_39_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE16_SRM_39_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE16_SRM_39_VIEW_List = TYPEA_DETAIL_PAGE16_SRM_39_OBJ_List;
                }

                if (TYPEA_SUMMARY_PAGE18_SRM_43 != null)
                {
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE18_SRM_43.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE18_SRM_43.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE18_SRM_43.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE18_SRM_43.EFORM_ID;
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE18_SRM_43.TABLE_ID;
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE18_SRM_43.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE18_SRM_43.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE18_SRM_43.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE18_SRM_43.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE18_SRM_43.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE18_SRM_43.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE18_SRM_43.LAYER_ID;
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE18_SRM_43.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE18_SRM_43.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.REMARK = TYPEA_SUMMARY_PAGE18_SRM_43.REMARK == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.COMMENT = TYPEA_SUMMARY_PAGE18_SRM_43.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE18_SRM_43.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE18_SRM_43.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE18_SRM_43_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE18_SRM_43.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE18_SRM_43.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE18_SRM_43_VIEW = TYPEA_SUMMARY_PAGE18_SRM_43_OBJ;
                }
                if (TYPEA_DETAIL_PAGE18_SRM_43_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE18_SRM_43_List)
                    {
                        TYPEA_DETAIL_PAGE18_SRM_43_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE18_SRM_43_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE18_SRM_43_VIEW_List = TYPEA_DETAIL_PAGE18_SRM_43_OBJ_List;
                }


                if (TYPEA_SUMMARY_PAGE19_SRM_44 != null)
                {
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE19_SRM_44.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE19_SRM_44.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE19_SRM_44.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE19_SRM_44.EFORM_ID;
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE19_SRM_44.TABLE_ID;
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE19_SRM_44.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE19_SRM_44.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE19_SRM_44.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE19_SRM_44.LAYER_ID;
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE19_SRM_44.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE19_SRM_44.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.REMARK = TYPEA_SUMMARY_PAGE19_SRM_44.REMARK == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.COMMENT = TYPEA_SUMMARY_PAGE19_SRM_44.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE19_SRM_44.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE19_SRM_44.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE19_SRM_44_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE19_SRM_44.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE19_SRM_44.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE19_SRM_44_VIEW = TYPEA_SUMMARY_PAGE19_SRM_44_OBJ;
                }
                if (TYPEA_DETAIL_PAGE19_SRM_44_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE19_SRM_44_List)
                    {
                        TYPEA_DETAIL_PAGE19_SRM_44_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE19_SRM_44_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE19_SRM_44_VIEW_List = TYPEA_DETAIL_PAGE19_SRM_44_OBJ_List;
                }

                if (TYPEA_SUMMARY_PAGE19_CCM_45 != null)
                {
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE19_CCM_45.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE19_CCM_45.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE19_CCM_45.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE19_CCM_45.EFORM_ID;
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE19_CCM_45.TABLE_ID;
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE19_CCM_45.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE19_CCM_45.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE19_CCM_45.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.LAYER_ID = TYPEA_SUMMARY_PAGE19_CCM_45.LAYER_ID;
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE19_CCM_45.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE19_CCM_45.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.REMARK = TYPEA_SUMMARY_PAGE19_CCM_45.REMARK == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.COMMENT = TYPEA_SUMMARY_PAGE19_CCM_45.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE19_CCM_45.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE19_CCM_45.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE19_CCM_45_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE19_CCM_45.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE19_CCM_45.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE19_CCM_45_VIEW = TYPEA_SUMMARY_PAGE19_CCM_45_OBJ;
                }
                if (TYPEA_DETAIL_PAGE19_CCM_45_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE19_CCM_45_List)
                    {
                        TYPEA_DETAIL_PAGE19_CCM_45_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE19_CCM_45_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE19_CCM_45_VIEW_List = TYPEA_DETAIL_PAGE19_CCM_45_OBJ_List;
                }


                if (TYPEA_SUMMARY_PAGE22_SRM_52 != null)
                {
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE22_SRM_52.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE22_SRM_52.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE22_SRM_52.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE22_SRM_52.EFORM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE22_SRM_52.TABLE_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE22_SRM_52.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE22_SRM_52.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE22_SRM_52.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE22_SRM_52.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE22_SRM_52.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE22_SRM_52.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.LAYER_NAME = TYPEA_SUMMARY_PAGE22_SRM_52.LAYER_ID == null ? "Select Layer" : (TYPEA_SUMMARY_PAGE22_SRM_52.LAYER_ID == 1 ? "Select Layer" : dbContext.EFORM_TR_LAYER_MASTER.Where(s => s.LAYER_ID == TYPEA_SUMMARY_PAGE22_SRM_52.LAYER_ID).Select(x => x.LAYER_NAME).FirstOrDefault().Trim());
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE22_SRM_52.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE22_SRM_52.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.REMARK = TYPEA_SUMMARY_PAGE22_SRM_52.REMARK == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.COMMENT = TYPEA_SUMMARY_PAGE22_SRM_52.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE22_SRM_52.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE22_SRM_52.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_52_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE22_SRM_52.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_52.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE22_SRM_52_VIEW = TYPEA_SUMMARY_PAGE22_SRM_52_OBJ;
                }
                if (TYPEA_DETAIL_PAGE22_SRM_52_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE22_SRM_52_List)
                    {
                        TYPEA_DETAIL_PAGE22_SRM_52_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE22_SRM_52_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE22_SRM_52_VIEW_List = TYPEA_DETAIL_PAGE22_SRM_52_OBJ_List;
                }

                if (TYPEA_SUMMARY_PAGE22_SRM_53 != null)
                {
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE22_SRM_53.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE22_SRM_53.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE22_SRM_53.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE22_SRM_53.EFORM_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE22_SRM_53.TABLE_ID;
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE22_SRM_53.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE22_SRM_53.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE22_SRM_53.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE22_SRM_53.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE22_SRM_53.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE22_SRM_53.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.SAMPLE_AGE.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.LAYER_NAME = TYPEA_SUMMARY_PAGE22_SRM_53.LAYER_ID == null ? "Select Layer" : (TYPEA_SUMMARY_PAGE22_SRM_53.LAYER_ID == 1 ? "Select Layer" : dbContext.EFORM_TR_LAYER_MASTER.Where(s => s.LAYER_ID == TYPEA_SUMMARY_PAGE22_SRM_53.LAYER_ID).Select(x => x.LAYER_NAME).FirstOrDefault().Trim());
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.UCS_DPR = TYPEA_SUMMARY_PAGE22_SRM_53.UCS_DPR == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.UCS_DPR.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE22_SRM_53.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE22_SRM_53.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.REMARK = TYPEA_SUMMARY_PAGE22_SRM_53.REMARK == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.COMMENT = TYPEA_SUMMARY_PAGE22_SRM_53.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE22_SRM_53.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE22_SRM_53.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE22_SRM_53_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE22_SRM_53.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE22_SRM_53.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE22_SRM_53_VIEW = TYPEA_SUMMARY_PAGE22_SRM_53_OBJ;
                }
                if (UCS_TEST_DETAIL_PAGE22_SRM_53_List != null)
                {
                    foreach (var item in UCS_TEST_DETAIL_PAGE22_SRM_53_List)
                    {
                        UCS_TEST_DETAIL_PAGE22_SRM_53_OBJ_List.Add(new EFORM_TR_UCS_TEST_DETAIL_PAGE22_SRM_53_VIEW
                        {

                            MAIN_ITEM_ID = item.MAIN_ITEM_ID,
                            SUBITEM_ID = item.SUBITEM_ID,
                            TYPEA_SUMM_ID = item.TYPEA_SUMM_ID,
                            EFORM_ID = item.EFORM_ID,
                            ROAD_ID = item.ROAD_ID,
                            CHAINAGE = item.CHAINAGE == null ? "" : item.CHAINAGE.ToString().Trim(),
                            SAMPLE_WT = item.SAMPLE_WT == null ? "" : item.SAMPLE_WT.ToString().Trim(),
                            DENSITY = item.DENSITY == null ? "" : item.DENSITY.ToString().Trim(),
                            TESTING_DATE = item.TESTING_DATE == null ? "" : item.TESTING_DATE.ToString().Split(' ')[0].Trim(),
                            SAMPLE_VOL = item.SAMPLE_VOL == null ? "" : item.SAMPLE_VOL.ToString().Trim(),
                            LOAD_KN = item.LOAD_KN == null ? "" : item.LOAD_KN.ToString().Trim(),
                            COMPR_STREANGTH = item.COMPR_STREANGTH == null ? "" : item.COMPR_STREANGTH.ToString().Trim(),
                            IS_STD_CONFIRM = item.IS_STD_CONFIRM == null ? "O" : item.IS_STD_CONFIRM.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.UCS_TEST_DETAIL_PAGE22_SRM_53_VIEW_List = UCS_TEST_DETAIL_PAGE22_SRM_53_OBJ_List;
                }


                if (TYPEA_SUMMARY_PAGE23_SRM_54 != null)
                {
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.TYPEA_SUMM_ID = TYPEA_SUMMARY_PAGE23_SRM_54.TYPEA_SUMM_ID;
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.MAIN_ITEM_ID = TYPEA_SUMMARY_PAGE23_SRM_54.MAIN_ITEM_ID;
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.SUBITEM_ID = TYPEA_SUMMARY_PAGE23_SRM_54.SUBITEM_ID;
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.EFORM_ID = TYPEA_SUMMARY_PAGE23_SRM_54.EFORM_ID;
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.TABLE_ID = TYPEA_SUMMARY_PAGE23_SRM_54.TABLE_ID;
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.IS_HEAVY_COMPACTION = TYPEA_SUMMARY_PAGE23_SRM_54.IS_HEAVY_COMPACTION == null ? "N" : TYPEA_SUMMARY_PAGE23_SRM_54.IS_HEAVY_COMPACTION.Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.MDD_CH1 = TYPEA_SUMMARY_PAGE23_SRM_54.MDD_CH1 == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.MDD_CH1.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.MDD_CH2 = TYPEA_SUMMARY_PAGE23_SRM_54.MDD_CH2 == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.MDD_CH2.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.MDD_CH3 = TYPEA_SUMMARY_PAGE23_SRM_54.MDD_CH3 == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.MDD_CH3.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.SAMPLE_AGE = TYPEA_SUMMARY_PAGE23_SRM_54.SAMPLE_AGE == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.SAMPLE_AGE.ToString().Trim();
                    //     TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.LAYER_NAME = TYPEA_SUMMARY_PAGE23_SRM_54.LAYER_ID == null ? "Select Layer":(TYPEA_SUMMARY_PAGE23_SRM_54.LAYER_ID == 1 ? "Select Layer" : dbContext.EFORM_TR_LAYER_MASTER.Where(s => s.LAYER_ID == TYPEA_SUMMARY_PAGE23_SRM_54.LAYER_ID).Select(x => x.LAYER_NAME).FirstOrDefault().Trim());
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.CC_PAVEMENT_TYPE_CH1_LAYER_NAME = TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH1 == null ? "Select type" : (TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH1 == 1 ? "Select Layer" : dbContext.EFORM_TR_LAYER_MASTER.Where(s => s.LAYER_ID == TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH1).Select(x => x.LAYER_NAME).FirstOrDefault().Trim());

                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.CC_PAVEMENT_TYPE_CH2_LAYER_NAME = TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH2 == null ? "Select type" : (TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH2 == 1 ? "Select Layer" : dbContext.EFORM_TR_LAYER_MASTER.Where(s => s.LAYER_ID == TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH2).Select(x => x.LAYER_NAME).FirstOrDefault().Trim());
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.CC_PAVEMENT_TYPE_CH3_LAYER_NAME = TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH3 == null ? "Select type" : (TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH3 == 1 ? "Select Layer" : dbContext.EFORM_TR_LAYER_MASTER.Where(s => s.LAYER_ID == TYPEA_SUMMARY_PAGE23_SRM_54.CC_PAVEMENT_TYPE_CH3).Select(x => x.LAYER_NAME).FirstOrDefault().Trim());
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.DESIGN_STRENGTH = TYPEA_SUMMARY_PAGE23_SRM_54.DESIGN_STRENGTH == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.DESIGN_STRENGTH.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.TESTING_DATE = TYPEA_SUMMARY_PAGE23_SRM_54.TESTING_DATE == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.TESTING_DATE.ToString().Split(' ')[0].Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.MOISTURE_CONTENT_METHOD = TYPEA_SUMMARY_PAGE23_SRM_54.MOISTURE_CONTENT_METHOD == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.MOISTURE_CONTENT_METHOD.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.REMARK = TYPEA_SUMMARY_PAGE23_SRM_54.REMARK == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.REMARK.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.COMMENT = TYPEA_SUMMARY_PAGE23_SRM_54.COMMENT == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.COMMENT.ToString().Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.TESTED_BY_PIU = TYPEA_SUMMARY_PAGE23_SRM_54.TESTED_BY_PIU == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.TESTED_BY_PIU.Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.TEST_CONDUCTED_IN_PRESENCE = TYPEA_SUMMARY_PAGE23_SRM_54.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TYPEA_SUMMARY_PAGE23_SRM_54_OBJ.B_CONTENT = TYPEA_SUMMARY_PAGE23_SRM_54.B_CONTENT == null ? "" : TYPEA_SUMMARY_PAGE23_SRM_54.B_CONTENT.ToString().Trim();

                    objTR_PREVIEW_MODEL.TYPEA_SUMMARY_PAGE23_SRM_54_VIEW = TYPEA_SUMMARY_PAGE23_SRM_54_OBJ;
                }
                if (TYPEA_DETAIL_PAGE23_SRM_54_List != null)
                {
                    foreach (var item in TYPEA_DETAIL_PAGE23_SRM_54_List)
                    {
                        TYPEA_DETAIL_PAGE22_SRM_54_OBJ_List.Add(new EFORM_TR_TYPEA_DETAIL_PAGE23_SRM_54_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            CH1_VALUE = item.CH1_VALUE == null ? "" : item.CH1_VALUE.ToString().Trim(),
                            CH2_VALUE = item.CH2_VALUE == null ? "" : item.CH2_VALUE.ToString().Trim(),
                            CH3_VALUE = item.CH3_VALUE == null ? "" : item.CH3_VALUE.ToString().Trim(),
                            CH4_VALUE = item.CH4_VALUE == null ? "" : item.CH4_VALUE.ToString().Trim(),
                        });
                    }



                    objTR_PREVIEW_MODEL.TYPEA_DETAIL_PAGE23_SRM_54_VIEW_List = TYPEA_DETAIL_PAGE22_SRM_54_OBJ_List;
                }

                #endregion

                #region Saurabh

                #region Page 17-18

                if (TYPEC_SUMMARY_PAGE17_Surface_1 != null)
                {
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.CHAINAGE_ID = TYPEC_SUMMARY_PAGE17_Surface_1.CHAINGE_ID == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_1.CHAINGE_ID);
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEC_SUMMARY_PAGE17_Surface_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.GRADATION_TYPE = dbContext.EFORM_TR_GRADATION_TYPE_ITEM_MASTER.Where(s => s.ITEM_ID == TYPEC_SUMMARY_PAGE17_Surface_1.GRADATION_TYPE_ITEM_ID).Select(m => m.ITEM_DISC).FirstOrDefault();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.TESTING_DATE = TYPEC_SUMMARY_PAGE17_Surface_1.TESING_DATE == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_1.TESING_DATE).Trim().Split(' ')[0];
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.REMARK = TYPEC_SUMMARY_PAGE17_Surface_1.REMARK == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_1.REMARK.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.COMMENT = TYPEC_SUMMARY_PAGE17_Surface_1.COMMENT == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_1.COMMENT.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.TESTED_BY_PIU = TYPEC_SUMMARY_PAGE17_Surface_1.TESTED_BY_PIU == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_1.TESTED_BY_PIU.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEC_SUMMARY_PAGE17_Surface_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEC_SUMMARY_PAGE17_Surface_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEC_SUMMARY_PAGE17_Surface_1.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW = TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_1_VIEW;
                }
                if (TYPEC_SUMMARY_PAGE17_Surface_2 != null)
                {
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.CHAINAGE_ID = TYPEC_SUMMARY_PAGE17_Surface_2.CHAINGE_ID == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_2.CHAINGE_ID);
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEC_SUMMARY_PAGE17_Surface_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.GRADATION_TYPE = dbContext.EFORM_TR_GRADATION_TYPE_ITEM_MASTER.Where(s => s.ITEM_ID == TYPEC_SUMMARY_PAGE17_Surface_2.GRADATION_TYPE_ITEM_ID).Select(m => m.ITEM_DISC).FirstOrDefault();

                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.TESTING_DATE = TYPEC_SUMMARY_PAGE17_Surface_2.TESING_DATE == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_2.TESING_DATE).Trim().Split(' ')[0];
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.REMARK = TYPEC_SUMMARY_PAGE17_Surface_2.REMARK == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_2.REMARK.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.COMMENT = TYPEC_SUMMARY_PAGE17_Surface_2.COMMENT == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_2.COMMENT.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.TESTED_BY_PIU = TYPEC_SUMMARY_PAGE17_Surface_2.TESTED_BY_PIU == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_2.TESTED_BY_PIU.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEC_SUMMARY_PAGE17_Surface_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEC_SUMMARY_PAGE17_Surface_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEC_SUMMARY_PAGE17_Surface_2.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEC_SUMMARY_PAGE17_BITUMN_SURFACE_COURSE_2_VIEW = TR_TYPEC_SUMMARY_PAGE17_BitumnSurFace_2_VIEW;
                }
                if (TYPEC_SUMMARY_PAGE17_Surface_3 != null)
                {
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.CHAINAGE_ID = TYPEC_SUMMARY_PAGE17_Surface_3.CHAINGE_ID == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_3.CHAINGE_ID);
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEC_SUMMARY_PAGE17_Surface_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.GRADATION_TYPE = dbContext.EFORM_TR_GRADATION_TYPE_ITEM_MASTER.Where(s => s.ITEM_ID == TYPEC_SUMMARY_PAGE17_Surface_3.GRADATION_TYPE_ITEM_ID).Select(m => m.ITEM_DISC).FirstOrDefault();

                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.TESTING_DATE = TYPEC_SUMMARY_PAGE17_Surface_3.TESING_DATE == null ? " " : Convert.ToString(TYPEC_SUMMARY_PAGE17_Surface_3.TESING_DATE).Trim().Split(' ')[0];
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.REMARK = TYPEC_SUMMARY_PAGE17_Surface_3.REMARK == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_3.REMARK.Trim();
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.COMMENT = TYPEC_SUMMARY_PAGE17_Surface_3.COMMENT == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_3.COMMENT.Trim();
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.TESTED_BY_PIU = TYPEC_SUMMARY_PAGE17_Surface_3.TESTED_BY_PIU == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_3.TESTED_BY_PIU.Trim();
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEC_SUMMARY_PAGE17_Surface_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEC_SUMMARY_PAGE17_Surface_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEC_SUMMARY_PAGE17_Surface_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEC_SUMMARY_PAGE17_Surface_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEC_SUMMARY_PAGE18_BITUMN_SURFACE_COURSE_3_VIEW = TR_TYPEC_SUMMARY_PAGE18_BitumnSurFace_3_VIEW;
                }

                if (TYPEC_DETAIL_PAGE17_Surface_1_List != null)
                {
                    foreach (var item in TYPEC_DETAIL_PAGE17_Surface_1_List)
                    {

                        TYPEB_DETAIL_PAGE17_BitumnSurFace_1_VIEW_List.Add(new EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SIEVE_DESIGNATION = item.SIEVE_DESIGNATION,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                            PERMISSIBLE_RANGE = item.PERMISSIBLE_RANGE,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_List_VIEW = TYPEB_DETAIL_PAGE17_BitumnSurFace_1_VIEW_List;

                }

                if (TYPEC_DETAIL_PAGE17_Surface_2_List != null)
                {
                    foreach (var item in TYPEC_DETAIL_PAGE17_Surface_2_List)
                    {

                        TYPEB_DETAIL_PAGE17_BitumnSurFace_2_VIEW_List.Add(new EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SIEVE_DESIGNATION = item.SIEVE_DESIGNATION,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                            PERMISSIBLE_RANGE = item.PERMISSIBLE_RANGE,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_2_List_VIEW = TYPEB_DETAIL_PAGE17_BitumnSurFace_2_VIEW_List;
                }

                if (TYPEC_DETAIL_PAGE17_Surface_3_List != null)
                {
                    foreach (var item in TYPEC_DETAIL_PAGE17_Surface_3_List)
                    {

                        TYPEB_DETAIL_PAGE18_BitumnSurFace_3_VIEW_List.Add(new EFORM_TR_TYPEC_DETAIL_PAGE17_BITUMN_SURFACE_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SIEVE_DESIGNATION = item.SIEVE_DESIGNATION,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                            PERMISSIBLE_RANGE = item.PERMISSIBLE_RANGE,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEC_DETAIL_PAGE18_BITUMN_SURFACE_COURSE_3_List_VIEW = TYPEB_DETAIL_PAGE18_BitumnSurFace_3_VIEW_List;
                }

                #endregion

                #region Page 20

                if (TYPEB_SUMMARY_PAGE20_ShoulderGranular_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_1.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE20_SHOULDER_1_VIEW = TR_TYPEB_SUMMARY_PAGE20_Shoulder_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE20_ShoulderGranular_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.CON_PRESCRIBED_LIMIT == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.CON_PRESCRIBED_LIMIT.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.GSB_GRADING == null ? "-" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_2.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE20_SHOULDER_2_VIEW = TR_TYPEB_SUMMARY_PAGE20_Shoulder_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE20_ShoulderGranular_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.CON_PRESCRIBED_LIMIT == null ? " " : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.CON_PRESCRIBED_LIMIT.Trim();
                    TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.GSB_GRADING == null ? "-" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE20_ShoulderGranular_3.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE20_SHOULDER_3_VIEW = TR_TYPEB_SUMMARY_PAGE20_Shoulder_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE20_ShoulderGranular_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE20_ShoulderGranular_1_List)
                    {
                        TYPEB_DETAIL_PAGE20_Shoulder_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE20_SHOULDER_1_List_VIEW = TYPEB_DETAIL_PAGE20_Shoulder_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE20_ShoulderGranular_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE20_ShoulderGranular_2_List)
                    {
                        TYPEB_DETAIL_PAGE20_Shoulder_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE20_SHOULDER_2_List_VIEW = TYPEB_DETAIL_PAGE20_Shoulder_2_VIEW_List;

                }

                if (TYPEB_DETAIL_PAGE20_ShoulderGranular_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE20_ShoulderGranular_3_List)
                    {
                        TYPEB_DETAIL_PAGE20_Shoulder_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE20_SHOULDER_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE20_SHOULDER_3_List_VIEW = TYPEB_DETAIL_PAGE20_Shoulder_3_VIEW_List;
                }

                #endregion

                #region Page 21

                if (TYPEB_SUMMARY_PAGE21_ShoulderGravel_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.CON_PRESCRIBED_LIMIT == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.CON_PRESCRIBED_LIMIT.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.GSB_GRADING == null ? "-" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_1.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE21_SHOULDER_1_VIEW = TR_TYPEB_SUMMARY_PAGE21_Shoulder_1_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE21_ShoulderGravel_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.CON_PRESCRIBED_LIMIT == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.CON_PRESCRIBED_LIMIT.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.GSB_GRADING == null ? "-" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_2.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE21_SHOULDER_2_VIEW = TR_TYPEB_SUMMARY_PAGE21_Shoulder_2_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE21_ShoulderGravel_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.CON_PRESCRIBED_LIMIT == null ? " " : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.CON_PRESCRIBED_LIMIT.Trim();
                    TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.GSB_GRADING == null ? "-" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE21_ShoulderGravel_3.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE21_SHOULDER_3_VIEW = TR_TYPEB_SUMMARY_PAGE21_Shoulder_3_VIEW;
                }


                if (TYPEB_DETAIL_PAGE21_ShoulderGravel_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE21_ShoulderGravel_1_List)
                    {
                        TYPEB_DETAIL_PAGE21_Shoulder_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE21_SHOULDER_1_List_VIEW = TYPEB_DETAIL_PAGE21_Shoulder_1_VIEW_List;

                }

                if (TYPEB_DETAIL_PAGE21_ShoulderGravel_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE21_ShoulderGravel_2_List)
                    {
                        TYPEB_DETAIL_PAGE21_Shoulder_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE21_SHOULDER_2_List_VIEW = TYPEB_DETAIL_PAGE21_Shoulder_2_VIEW_List;

                }

                if (TYPEB_DETAIL_PAGE21_ShoulderGravel_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE21_ShoulderGravel_3_List)
                    {
                        TYPEB_DETAIL_PAGE21_Shoulder_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE21_SHOULDER_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE21_SHOULDER_3_List_VIEW = TYPEB_DETAIL_PAGE21_Shoulder_3_VIEW_List;

                }

                #endregion

                #region  MainItem Master Option Selected Detail

                //if (MAINITEM_OPTIONS_SELECTED_DETAIL_List != null)
                //{
                //    foreach (var item in MAINITEM_OPTIONS_SELECTED_DETAIL_List)
                //    {
                //        MAIN_ITEM_OPTIONS_SELECTED_DETAIL_OBJ_List.Add(new EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW
                //        {
                //            MAIN_ITEM_ID = item.MAIN_ITEM_ID,
                //            OPTION_ID = item.OPTION_ID,
                //        });
                //    }
                //    objTR_PREVIEW_MODEL.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW_List = MAIN_ITEM_OPTIONS_SELECTED_DETAIL_OBJ_List;
                //}

                if (objTR_PREVIEW_MODEL.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW_List != null)
                {
                    foreach (var OptionItem in objTR_PREVIEW_MODEL.MAIN_ITEM_OPTIONS_SELECTED_DETAIL_VIEW_List)
                    {
                        if (OptionItem.OPTION_ID == 30)
                        {
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionID = 30;
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionDesc = "OGPC & SEAL COAT";
                        }
                        if (OptionItem.OPTION_ID == 31)
                        {
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionID = 31;
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionDesc = "SDBC";
                        }
                        if (OptionItem.OPTION_ID == 32)
                        {
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionID = 32;
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionDesc = "MSS";
                        }
                        if (OptionItem.OPTION_ID == 33)
                        {
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionID = 33;
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionDesc = "SURAFCE DRESSING";
                        }
                        if (OptionItem.OPTION_ID == 34)
                        {
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionID = 34;
                            TYPEC_SUMMARY_PAGE17_OPTION_SELECTED.OptionDesc = "BC";
                        }
                        if (OptionItem.OPTION_ID == 26)
                        {
                            TYPEB_SUMMARY_PAGE14_OPTION_SELECTED.OptionID = 26;
                            TYPEB_SUMMARY_PAGE14_OPTION_SELECTED.OptionDesc = "BM";
                        }
                        if (OptionItem.OPTION_ID == 27)
                        {
                            TYPEB_SUMMARY_PAGE14_OPTION_SELECTED.OptionID = 27;
                            TYPEB_SUMMARY_PAGE14_OPTION_SELECTED.OptionDesc = "DBM";
                        }

                    }
                    objTR_PREVIEW_MODEL.TYPEC_SUMMARY_PAGE17_OPTION_SELECTED_3_VIEW = TYPEC_SUMMARY_PAGE17_OPTION_SELECTED;
                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE14_OPTION_SELECTED_3_VIEW = TYPEB_SUMMARY_PAGE14_OPTION_SELECTED;
                }

                #endregion

                #region PAGE : 2

                if (TYPEB_SUMMARY_PAGE2_GS_BASE_1 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE2_GS_BASE_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE2_GS_BASE_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE2_GS_BASE_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE2_GS_BASE_1.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_1.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE2_GS_BASE_1.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE2_GS_BASE_1.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE2_GS_BASE_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE2_GS_BASE_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE2_GS_BASE_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE2_GS_BASE_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE2_GS_BASE_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE2_GS_BASE_1.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW = TR_TYPEB_SUMMARY_PAGE2_GS_BASE_1_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE2_GS_BASE_2 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE2_GS_BASE_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE2_GS_BASE_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE2_GS_BASE_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE2_GS_BASE_2.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_2.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE2_GS_BASE_2.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE2_GS_BASE_2.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE2_GS_BASE_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE2_GS_BASE_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE2_GS_BASE_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE2_GS_BASE_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE2_GS_BASE_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE2_GS_BASE_2.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW = TR_TYPEB_SUMMARY_PAGE2_GS_BASE_2_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE2_GS_BASE_3 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE2_GS_BASE_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE2_GS_BASE_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE2_GS_BASE_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE2_GS_BASE_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE2_GS_BASE_3.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_3.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE2_GS_BASE_3.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE2_GS_BASE_3.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE2_GS_BASE_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE2_GS_BASE_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE2_GS_BASE_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE2_GS_BASE_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE2_GS_BASE_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE2_GS_BASE_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE2_GS_BASE_3.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW = TR_TYPEB_SUMMARY_PAGE2_GS_BASE_3_VIEW;
                }


                if (TYPEB_DETAIL_PAGE2_GS_BASE_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE2_GS_BASE_1_List)
                    {
                        TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE2_GS_BASE_1_List_VIEW = TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE2_GS_BASE_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE2_GS_BASE_2_List)
                    {
                        TYPEB_DETAIL_PAGE2_GS_BASE_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE2_GS_BASE_2_List_VIEW = TYPEB_DETAIL_PAGE2_GS_BASE_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE2_GS_BASE_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE2_GS_BASE_3_List)
                    {
                        TYPEB_DETAIL_PAGE2_GS_BASE_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE2_GS_BASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE2_GS_BASE_3_List_VIEW = TYPEB_DETAIL_PAGE2_GS_BASE_3_VIEW_List;
                }

                #endregion

                #region PAGE : 3

                if (TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_1.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_1_VIEW = TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_2.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_2_VIEW = TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.GSB_GRADING.Trim().Equals("1") ? "Grading-I" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.GSB_GRADING.Trim().Equals("2") ? "Grading-II" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.GSB_GRADING.Trim().Equals("0") ? "Select Grading" : "Grading-III";
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE3_GRAVEL_BASE_3.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE3_GRAVEL_SUBBASE_3_VIEW = TR_TYPEB_SUMMARY_PAGE3_Gravel_BASE_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE3_GRAVEL_BASE_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE3_GRAVEL_BASE_1_List)
                    {
                        TYPEB_DETAIL_PAGE3_Gravel_BASE_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_List_VIEW = TYPEB_DETAIL_PAGE3_Gravel_BASE_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE3_GRAVEL_BASE_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE3_GRAVEL_BASE_2_List)
                    {
                        TYPEB_DETAIL_PAGE3_Gravel_BASE_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_2_List_VIEW = TYPEB_DETAIL_PAGE3_Gravel_BASE_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE3_GRAVEL_BASE_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE3_GRAVEL_BASE_3_List)
                    {
                        TYPEB_DETAIL_PAGE3_Gravel_BASE_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE3_GRAVEL_SUBBASE_3_List_VIEW = TYPEB_DETAIL_PAGE3_Gravel_BASE_3_VIEW_List;
                }

                #endregion

                #region PAGE : 4

                if (TYPEB_SUMMARY_PAGE4_CS_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE4_CS_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE4_CS_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE4_CS_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE4_CS_1.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE4_CS_1.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE4_CS_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE4_CS_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE4_CS_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE4_CS_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE4_CS_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE4_CS_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE4_CS_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE4_CS_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE4_CS_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE4_CS_1.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_1_VIEW = TR_TYPEB_SUMMARY_PAGE4_CS_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE4_CS_2 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE4_CS_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE4_CS_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE4_CS_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE4_CS_2.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE4_CS_2.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE4_CS_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE4_CS_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE4_CS_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE4_CS_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE4_CS_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE4_CS_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE4_CS_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE4_CS_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE4_CS_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE4_CS_2.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_2_VIEW = TR_TYPEB_SUMMARY_PAGE4_CS_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE4_CS_3 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE4_CS_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE4_CS_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE4_CS_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE4_CS_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE4_CS_3.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE4_CS_3.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE4_CS_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE4_CS_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE4_CS_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE4_CS_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE4_CS_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE4_CS_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE4_CS_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE4_CS_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE4_CS_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE4_CS_3.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE4_CS_SUBBASE_3_VIEW = TR_TYPEB_SUMMARY_PAGE4_CS_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE4_CS_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE4_CS_1_List)
                    {
                        TYPEB_DETAIL_PAGE4_CS_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_List_VIEW = TYPEB_DETAIL_PAGE4_CS_1_VIEW_List;
                }
                if (TYPEB_DETAIL_PAGE4_CS_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE4_CS_2_List)
                    {
                        TYPEB_DETAIL_PAGE4_CS_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE4_CS_SUBBASE_2_List_VIEW = TYPEB_DETAIL_PAGE4_CS_2_VIEW_List;
                }
                if (TYPEB_DETAIL_PAGE4_CS_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE4_CS_3_List)
                    {
                        TYPEB_DETAIL_PAGE4_CS_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE4_CS_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE4_CS_SUBBASE_3_List_VIEW = TYPEB_DETAIL_PAGE4_CS_3_VIEW_List;
                }

                #endregion

                #region Page : 6

                if (TYPEB_SUMMARY_PAGE6_BC1_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE6_BC1_1.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE6_BC1_1.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE6_BC1_1.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE6_BC1_1.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE6_BC1_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE6_BC1_1.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE6_BC1_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE6_BC1_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE6_BC1_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE6_BC1_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE6_BC1_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE6_BC1_1.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE6_BASE_COURSE_1_VIEW = TR_TYPEB_SUMMARY_PAGE6_BC1_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE6_BC1_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE6_BC1_2.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE6_BC1_2.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE6_BC1_2.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE6_BC1_2.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE6_BC1_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE6_BC1_2.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE6_BC1_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE6_BC1_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE6_BC1_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE6_BC1_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE6_BC1_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE6_BC1_2.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE6_BASE_COURSE_2_VIEW = TR_TYPEB_SUMMARY_PAGE6_BC1_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE6_BC1_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE6_BC1_3.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE6_BC1_3.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE6_BC1_3.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE6_BC1_3.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE6_BC1_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE6_BC1_3.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE6_BC1_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE6_BC1_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE6_BC1_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE6_BC1_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE6_BC1_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE6_BC1_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE6_BASE_COURSE_3_VIEW = TR_TYPEB_SUMMARY_PAGE6_BC1_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE6_BC1_1_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE6_BC1_1_List)
                    {

                        TYPEB_DETAIL_PAGE6_BC1_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE6_BASE_COURSE_1_List_VIEW = TYPEB_DETAIL_PAGE6_BC1_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE6_BC1_2_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE6_BC1_2_List)
                    {

                        TYPEB_DETAIL_PAGE6_BC1_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE6_BASE_COURSE_2_List_VIEW = TYPEB_DETAIL_PAGE6_BC1_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE6_BC1_3_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE6_BC1_3_List)
                    {

                        TYPEB_DETAIL_PAGE6_BC1_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE6_BASE_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE6_BASE_COURSE_3_List_VIEW = TYPEB_DETAIL_PAGE6_BC1_3_VIEW_List;
                }

                #endregion

                #region Page : 8

                if (TYPEB_SUMMARY_PAGE8_BC2_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE8_BC2_1.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE8_BC2_1.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE8_BC2_1.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE8_BC2_1.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE8_BC2_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE8_BC2_1.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE8_BC2_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE8_BC2_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE8_BC2_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE8_BC2_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE8_BC2_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE8_BC2_1.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_1_VIEW = TR_TYPEB_SUMMARY_PAGE8_BC2_1_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE8_BC2_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE8_BC2_2.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE8_BC2_2.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE8_BC2_2.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE8_BC2_2.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE8_BC2_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE8_BC2_2.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE8_BC2_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE8_BC2_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE8_BC2_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE8_BC2_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE8_BC2_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE8_BC2_2.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_2_VIEW = TR_TYPEB_SUMMARY_PAGE8_BC2_2_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE8_BC2_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE8_BC2_3.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE8_BC2_3.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE8_BC2_3.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE8_BC2_3.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE8_BC2_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE8_BC2_3.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE8_BC2_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE8_BC2_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE8_BC2_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE8_BC2_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE8_BC2_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE8_BC2_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE8_BASE_COURSE2_3_VIEW = TR_TYPEB_SUMMARY_PAGE8_BC2_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE8_BC2_1_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE8_BC2_1_List)
                    {

                        TYPEB_DETAIL_PAGE8_BC2_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_List_VIEW = TYPEB_DETAIL_PAGE8_BC2_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE8_BC2_2_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE8_BC2_2_List)
                    {

                        TYPEB_DETAIL_PAGE8_BC2_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE8_BASE_COURSE2_2_List_VIEW = TYPEB_DETAIL_PAGE8_BC2_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE8_BC2_3_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE8_BC2_3_List)
                    {

                        TYPEB_DETAIL_PAGE8_BC2_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE8_BASE_COURSE2_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE8_BASE_COURSE2_3_List_VIEW = TYPEB_DETAIL_PAGE8_BC2_3_VIEW_List;
                }

                #endregion

                #region Page : 10

                if (TYPEB_SUMMARY_PAGE10_BC3_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE10_BC3_1.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE10_BC3_1.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE10_BC3_1.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE10_BC3_1.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE10_BC3_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE10_BC3_1.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE10_BC3_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE10_BC3_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE10_BC3_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE10_BC3_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE10_BC3_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE10_BC3_1.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_1_VIEW = TR_TYPEB_SUMMARY_PAGE10_BC3_1_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE10_BC3_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE10_BC3_2.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE10_BC3_2.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE10_BC3_2.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE10_BC3_2.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE10_BC3_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE10_BC3_2.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE10_BC3_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE10_BC3_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE10_BC3_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE10_BC3_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE10_BC3_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE10_BC3_2.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_2_VIEW = TR_TYPEB_SUMMARY_PAGE10_BC3_2_VIEW;
                }

                if (TYPEB_SUMMARY_PAGE10_BC3_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE10_BC3_3.CHAINAGE_ID == null ? "" : TYPEB_SUMMARY_PAGE10_BC3_3.CHAINAGE_ID.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE10_BC3_3.WEIGHT_SAMPLE_TAKEN == null ? "" : TYPEB_SUMMARY_PAGE10_BC3_3.WEIGHT_SAMPLE_TAKEN.ToString().Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.TESTING_DATE = Convert.ToString(TYPEB_SUMMARY_PAGE10_BC3_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE10_BC3_3.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE10_BC3_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE10_BC3_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE10_BC3_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE10_BC3_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE10_BC3_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE10_BC3_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE10_BASE_COURSE3_3_VIEW = TR_TYPEB_SUMMARY_PAGE10_BC3_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE10_BC3_1_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE10_BC3_1_List)
                    {

                        TYPEB_DETAIL_PAGE10_BC3_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_List_VIEW = TYPEB_DETAIL_PAGE10_BC3_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE10_BC3_2_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE10_BC3_2_List)
                    {

                        TYPEB_DETAIL_PAGE10_BC3_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE10_BASE_COURSE3_2_List_VIEW = TYPEB_DETAIL_PAGE10_BC3_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE10_BC3_3_List != null)
                {

                    foreach (var item in TYPEB_DETAIL_PAGE10_BC3_3_List)
                    {

                        TYPEB_DETAIL_PAGE10_BC3_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE10_BASE_COURSE3_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,

                        });

                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE10_BASE_COURSE3_3_List_VIEW = TYPEB_DETAIL_PAGE10_BC3_3_VIEW_List;
                }

                #endregion

                #region Page : 12

                if (TYPEB_SUMMARY_PAGE12_CS_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE12_CS_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE12_CS_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE12_CS_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE12_CS_1.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE12_CS_1.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE12_CS_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE12_CS_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE12_CS_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE12_CS_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE12_CS_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE12_CS_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE12_CS_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE12_CS_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE12_CS_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE12_CS_1.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_1_VIEW = TR_TYPEB_SUMMARY_PAGE12_CS_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE12_CS_2 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE12_CS_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE12_CS_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE12_CS_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE12_CS_2.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE12_CS_2.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE12_CS_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE12_CS_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE12_CS_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE12_CS_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE12_CS_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE12_CS_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE12_CS_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE12_CS_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE12_CS_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE12_CS_2.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_2_VIEW = TR_TYPEB_SUMMARY_PAGE12_CS_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE12_CS_3 != null)
                {

                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE12_CS_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE12_CS_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE12_CS_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE12_CS_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE12_CS_3.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE12_CS_3.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE12_CS_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE12_CS_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE12_CS_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE12_CS_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE12_CS_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE12_CS_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE12_CS_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE12_CS_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE12_CS_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE12_CS_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE12_CEMENT_SUBBASE_3_VIEW = TR_TYPEB_SUMMARY_PAGE12_CS_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE12_CS_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE12_CS_1_List)
                    {
                        TYPEB_DETAIL_PAGE12_CS_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_List_VIEW = TYPEB_DETAIL_PAGE12_CS_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE12_CS_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE12_CS_2_List)
                    {
                        TYPEB_DETAIL_PAGE12_CS_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_2_List_VIEW = TYPEB_DETAIL_PAGE12_CS_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE12_CS_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE12_CS_3_List)
                    {
                        TYPEB_DETAIL_PAGE12_CS_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE12_CEMENT_SUBBASE_3_List_VIEW = TYPEB_DETAIL_PAGE12_CS_3_VIEW_List;
                }

                #endregion

                #region Page :13

                if (TYPEB_SUMMARY_PAGE13_FDR_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE13_FDR_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE13_FDR_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE13_FDR_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE13_FDR_1.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_1.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE13_FDR_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE13_FDR_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE13_FDR_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE13_FDR_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE13_FDR_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE13_FDR_1.CON_PRESCRIBED_LIMIT.Trim();

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_1_VIEW = TR_TYPEB_SUMMARY_PAGE13_FDR_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE13_FDR_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE13_FDR_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE13_FDR_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE13_FDR_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE13_FDR_2.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_2.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE13_FDR_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE13_FDR_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE13_FDR_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE13_FDR_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE13_FDR_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE13_FDR_2.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_2_VIEW = TR_TYPEB_SUMMARY_PAGE13_FDR_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE13_FDR_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE13_FDR_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE13_FDR_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE13_FDR_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE13_FDR_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.GSB_GRADING = TYPEB_SUMMARY_PAGE13_FDR_3.GSB_GRADING == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_3.GSB_GRADING.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE13_FDR_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE13_FDR_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE13_FDR_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE13_FDR_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE13_FDR_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE13_FDR_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE13_FDR_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE13_CEMENT_FDR_3_VIEW = TR_TYPEB_SUMMARY_PAGE13_FDR_3_VIEW;
                }


                if (TYPEB_DETAIL_PAGE13_FDR_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE13_FDR_1_List)
                    {
                        TYPEB_DETAIL_PAGE13_FDR_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_List_VIEW = TYPEB_DETAIL_PAGE13_FDR_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE13_FDR_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE13_FDR_2_List)
                    {
                        TYPEB_DETAIL_PAGE13_FDR_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE13_CEMENT_FDR_2_List_VIEW = TYPEB_DETAIL_PAGE13_FDR_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE13_FDR_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE13_FDR_3_List)
                    {
                        TYPEB_DETAIL_PAGE13_FDR_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE13_CEMENT_FDR_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE13_CEMENT_FDR_3_List_VIEW = TYPEB_DETAIL_PAGE13_FDR_3_VIEW_List;
                }

                #endregion

                #region Page : 14

                if (TYPEB_SUMMARY_PAGE14_Bitumn_1 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE14_Bitumn_1.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_1.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE14_Bitumn_1.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_1.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE14_Bitumn_1.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_1.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.REMARK = TYPEB_SUMMARY_PAGE14_Bitumn_1.REMARK == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_1.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.COMMENT = TYPEB_SUMMARY_PAGE14_Bitumn_1.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_1.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE14_Bitumn_1.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_1.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE14_Bitumn_1.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_1.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE14_Bitumn_1.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE14_Bitumn_1.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_1_VIEW = TR_TYPEB_SUMMARY_PAGE14_Bitumn_1_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE14_Bitumn_2 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE14_Bitumn_2.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_2.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE14_Bitumn_2.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_2.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE14_Bitumn_2.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_2.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.REMARK = TYPEB_SUMMARY_PAGE14_Bitumn_2.REMARK == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_2.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.COMMENT = TYPEB_SUMMARY_PAGE14_Bitumn_2.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_2.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE14_Bitumn_2.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_2.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE14_Bitumn_2.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_2.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE14_Bitumn_2.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE14_Bitumn_2.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE14_BITUMN_COURSE_2_VIEW = TR_TYPEB_SUMMARY_PAGE14_Bitumn_2_VIEW;
                }
                if (TYPEB_SUMMARY_PAGE14_Bitumn_3 != null)
                {
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.CHAINAGE_ID = TYPEB_SUMMARY_PAGE14_Bitumn_3.CHAINAGE_ID == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_3.CHAINAGE_ID);
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.WEIGHT_SAMPLE_TAKEN = TYPEB_SUMMARY_PAGE14_Bitumn_3.WEIGHT_SAMPLE_TAKEN == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_3.WEIGHT_SAMPLE_TAKEN);
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.TESTING_DATE = TYPEB_SUMMARY_PAGE14_Bitumn_3.TESTING_DATE == null ? " " : Convert.ToString(TYPEB_SUMMARY_PAGE14_Bitumn_3.TESTING_DATE).Trim().Split(' ')[0];
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.REMARK = TYPEB_SUMMARY_PAGE14_Bitumn_3.REMARK == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_3.REMARK.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.COMMENT = TYPEB_SUMMARY_PAGE14_Bitumn_3.COMMENT == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_3.COMMENT.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.TESTED_BY_PIU = TYPEB_SUMMARY_PAGE14_Bitumn_3.TESTED_BY_PIU == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_3.TESTED_BY_PIU.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.TEST_CONDUCTED_IN_PRESENCE = TYPEB_SUMMARY_PAGE14_Bitumn_3.TEST_CONDUCTED_IN_PRESENCE == null ? " " : TYPEB_SUMMARY_PAGE14_Bitumn_3.TEST_CONDUCTED_IN_PRESENCE.Trim();
                    TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW.CON_PRESCRIBED_LIMIT = TYPEB_SUMMARY_PAGE14_Bitumn_3.CON_PRESCRIBED_LIMIT == null ? "-" : TYPEB_SUMMARY_PAGE14_Bitumn_3.CON_PRESCRIBED_LIMIT.Trim(); ;

                    objTR_PREVIEW_MODEL.TYPEB_SUMMARY_PAGE15_BITUMN_COURSE_3_VIEW = TR_TYPEB_SUMMARY_PAGE14_Bitumn_3_VIEW;
                }

                if (TYPEB_DETAIL_PAGE14_Bitumn_1_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE14_Bitumn_1_List)
                    {
                        TYPEB_DETAIL_PAGE14_Bitumn_1_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_List_VIEW = TYPEB_DETAIL_PAGE14_Bitumn_1_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE14_Bitumn_2_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE14_Bitumn_2_List)
                    {
                        TYPEB_DETAIL_PAGE14_Bitumn_2_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE14_BITUMN_COURSE_2_List_VIEW = TYPEB_DETAIL_PAGE14_Bitumn_2_VIEW_List;
                }

                if (TYPEB_DETAIL_PAGE14_Bitumn_3_List != null)
                {
                    foreach (var item in TYPEB_DETAIL_PAGE14_Bitumn_3_List)
                    {
                        TYPEB_DETAIL_PAGE14_Bitumn_3_VIEW_List.Add(new EFORM_TR_TYPEB_DETAIL_PAGE14_BITUMN_COURSE_1_VIEW
                        {
                            DETAIL_ITEM_ID = item.DETAIL_ITEM_ID,
                            SAMPLE_WEIGHT = item.SAMPLE_WEIGHT,
                            RETAINED_WEIGHT = item.RETAINED_WEIGHT,
                            CUMULATIVE_WEIGHT = item.CUMULATIVE_WEIGHT,
                            PASSING_WEIGHT = item.PASSING_WEIGHT,
                        });
                    }
                    objTR_PREVIEW_MODEL.TYPEB_DETAIL_PAGE15_BITUMN_COURSE_3_List_VIEW = TYPEB_DETAIL_PAGE14_Bitumn_3_VIEW_List;
                }

                #endregion

                #endregion

                #endregion


            }
            catch (Exception ex)
            {
                ErrorLog.LogError(ex, "PdfDataDAL.GetTestReportsPreviewDetails()");
                return null;
            }
            finally
            {
                dbContext.Dispose();
            }

            return objTR_PREVIEW_MODEL;
        }
        #endregion

    }


    public interface IPdfDataDAL
    {
        #region PIU demo
        Array GetWorkListDal(int month, int year, int stateCode, int districtCode, string eformStatus, string proposalType, int? page, int? rows, string sidx, string sord, out long totalRecords);

        List<SelectListItem> SaveToDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_PIU_VIEWMODEL piuInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, double tempVersion);


        PIU_GET_PREFILLED_DETAILS getPIUPrefilledList(Int32 roadCode, int eformId);

        string ComputeStringToSha256Hash(string plainText);

        bool InsertDownloadLogDetails(EFORM_DU_LOG LogDetails);
        EFORM_PIU_VIEWMODEL ViewPIU_PdfSavedData(int id);

        #endregion


        #region QM Demo

        Array GetQMWorkListDal(int month, int year, int stateCode, int districtCode, string eformStatus, string eFormType, int? page, int? rows, string sidx, string sord, out long totalRecords);
        List<SelectListItem> SaveToQMDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_QM_VIEWMODEL piuInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, bool TemplateStatus, char[] chkBoxArr, double tempVersion);
        QM_ViewPdfModel ViewQMPdfSavedData(int id);


        #endregion


        #region   PIU BRIDGE
        PIU_BRIDGE_GET_PREFILLRD_DETAILS getPIUBridgePrefilledList(Int32 roadCode, int eformId);

        EFORM_BRIDGE_PIU_PREVIEW_MODEL PreviewBridgePIU_SavedDataDAL(int eformId);
        List<SelectListItem> SaveBridgePIUToDb(string temp_uploaded_File, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_BRIDGE_PIU_VIEW_MODEL objViewModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, double templateVers);

        #endregion


        #region QM Bridge


        List<SelectListItem> SaveToBridgeQMDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_BRIDGE_QM_VIEWMODEL qmInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, bool TemplateStatus, char[] chkBoxArr);
        EFORM_BRIDGE_QM_PREVIEW_MODEL PreviewBridgeQM_SavedDataDAL(int eformId);
        #endregion


        #region Test Report
        List<SelectListItem> SaveToTRDb(string filePath, string eformIDFromGrid, string fname, string Uploaded_Path, HttpPostedFileBase file, string uploaded_File, EFORM_TR_VIEWMODEL qmInsertModel, string schdCode, string schdMonth, string schdYear, string workStatus, string qmCode, string qmType, bool TemplateStatus, char[] chkBoxArr);

        EFORM_TR_PREVIEW_MODEL GetTestReportsPreviewDetails(int eformId);
        #endregion
    }
}