//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PMGSY.GePNICWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PullTenderServiceSoap11Binding", Namespace="http://pretender.webservices.nic.gov")]
    public partial class PullTenderService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getTenderXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMonthWisePublishedTenderStatisticsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPreTenderXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PullTenderService() {
            this.Url = global::PMGSY.Properties.Settings.Default.PMGSY_GePNICWebReference_PullTenderService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getTenderXmlCompletedEventHandler getTenderXmlCompleted;
        
        /// <remarks/>
        public event getMonthWisePublishedTenderStatisticsByDateCompletedEventHandler getMonthWisePublishedTenderStatisticsByDateCompleted;
        
        /// <remarks/>
        public event getPreTenderXMLCompletedEventHandler getPreTenderXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getTenderXml", RequestNamespace="http://pretender.webservices.nic.gov", ResponseNamespace="http://pretender.webservices.nic.gov", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getTenderXml([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uniqueReferenceNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlString) {
            object[] results = this.Invoke("getTenderXml", new object[] {
                        uniqueReferenceNo,
                        xmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTenderXmlAsync(string uniqueReferenceNo, string xmlString) {
            this.getTenderXmlAsync(uniqueReferenceNo, xmlString, null);
        }
        
        /// <remarks/>
        public void getTenderXmlAsync(string uniqueReferenceNo, string xmlString, object userState) {
            if ((this.getTenderXmlOperationCompleted == null)) {
                this.getTenderXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTenderXmlOperationCompleted);
            }
            this.InvokeAsync("getTenderXml", new object[] {
                        uniqueReferenceNo,
                        xmlString}, this.getTenderXmlOperationCompleted, userState);
        }
        
        private void OngetTenderXmlOperationCompleted(object arg) {
            if ((this.getTenderXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTenderXmlCompleted(this, new getTenderXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getMonthWisePublishedTenderStatisticsByDate", RequestNamespace="http://pretender.webservices.nic.gov", ResponseNamespace="http://pretender.webservices.nic.gov", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getMonthWisePublishedTenderStatisticsByDate(int year, [System.Xml.Serialization.XmlIgnoreAttribute()] bool yearSpecified, int month, [System.Xml.Serialization.XmlIgnoreAttribute()] bool monthSpecified) {
            object[] results = this.Invoke("getMonthWisePublishedTenderStatisticsByDate", new object[] {
                        year,
                        yearSpecified,
                        month,
                        monthSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMonthWisePublishedTenderStatisticsByDateAsync(int year, bool yearSpecified, int month, bool monthSpecified) {
            this.getMonthWisePublishedTenderStatisticsByDateAsync(year, yearSpecified, month, monthSpecified, null);
        }
        
        /// <remarks/>
        public void getMonthWisePublishedTenderStatisticsByDateAsync(int year, bool yearSpecified, int month, bool monthSpecified, object userState) {
            if ((this.getMonthWisePublishedTenderStatisticsByDateOperationCompleted == null)) {
                this.getMonthWisePublishedTenderStatisticsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMonthWisePublishedTenderStatisticsByDateOperationCompleted);
            }
            this.InvokeAsync("getMonthWisePublishedTenderStatisticsByDate", new object[] {
                        year,
                        yearSpecified,
                        month,
                        monthSpecified}, this.getMonthWisePublishedTenderStatisticsByDateOperationCompleted, userState);
        }
        
        private void OngetMonthWisePublishedTenderStatisticsByDateOperationCompleted(object arg) {
            if ((this.getMonthWisePublishedTenderStatisticsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMonthWisePublishedTenderStatisticsByDateCompleted(this, new getMonthWisePublishedTenderStatisticsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPreTenderXML", RequestNamespace="http://pretender.webservices.nic.gov", ResponseNamespace="http://pretender.webservices.nic.gov", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getPreTenderXML([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uniqueReferenceNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlString) {
            object[] results = this.Invoke("getPreTenderXML", new object[] {
                        uniqueReferenceNo,
                        xmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPreTenderXMLAsync(string uniqueReferenceNo, string xmlString) {
            this.getPreTenderXMLAsync(uniqueReferenceNo, xmlString, null);
        }
        
        /// <remarks/>
        public void getPreTenderXMLAsync(string uniqueReferenceNo, string xmlString, object userState) {
            if ((this.getPreTenderXMLOperationCompleted == null)) {
                this.getPreTenderXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPreTenderXMLOperationCompleted);
            }
            this.InvokeAsync("getPreTenderXML", new object[] {
                        uniqueReferenceNo,
                        xmlString}, this.getPreTenderXMLOperationCompleted, userState);
        }
        
        private void OngetPreTenderXMLOperationCompleted(object arg) {
            if ((this.getPreTenderXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPreTenderXMLCompleted(this, new getPreTenderXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getTenderXmlCompletedEventHandler(object sender, getTenderXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTenderXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTenderXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getMonthWisePublishedTenderStatisticsByDateCompletedEventHandler(object sender, getMonthWisePublishedTenderStatisticsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMonthWisePublishedTenderStatisticsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMonthWisePublishedTenderStatisticsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getPreTenderXMLCompletedEventHandler(object sender, getPreTenderXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPreTenderXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPreTenderXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591