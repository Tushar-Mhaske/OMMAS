//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMGSY.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PMGSYEntities : DbContext
    {
        public PMGSYEntities()
            : base("name=PMGSYEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ELMAH_Error> ELMAH_Error { get; set; }
        public virtual DbSet<ABA_MIS_DATA> ABA_MIS_DATA { get; set; }
        public virtual DbSet<ABA_MIS_DATA_SERVICE> ABA_MIS_DATA_SERVICE { get; set; }
        public virtual DbSet<ABA_MIS_DATA_TARGET> ABA_MIS_DATA_TARGET { get; set; }
        public virtual DbSet<ACC_ASSET_DETAILS> ACC_ASSET_DETAILS { get; set; }
        public virtual DbSet<ACC_ATR_MASTER> ACC_ATR_MASTER { get; set; }
        public virtual DbSet<ACC_ATR_OBSERVATION_DETAILS> ACC_ATR_OBSERVATION_DETAILS { get; set; }
        public virtual DbSet<ACC_ATR_UPLOAD_DETAILS> ACC_ATR_UPLOAD_DETAILS { get; set; }
        public virtual DbSet<ACC_AUTH_REQUEST_DETAILS> ACC_AUTH_REQUEST_DETAILS { get; set; }
        public virtual DbSet<ACC_AUTH_REQUEST_MASTER> ACC_AUTH_REQUEST_MASTER { get; set; }
        public virtual DbSet<ACC_AUTH_REQUEST_TRACKING> ACC_AUTH_REQUEST_TRACKING { get; set; }
        public virtual DbSet<ACC_BILL_DETAILS> ACC_BILL_DETAILS { get; set; }
        public virtual DbSet<ACC_BILL_MASTER> ACC_BILL_MASTER { get; set; }
        public virtual DbSet<ACC_CANCELLED_CHEQUES> ACC_CANCELLED_CHEQUES { get; set; }
        public virtual DbSet<ACC_CERTIFICATE_DETAILS> ACC_CERTIFICATE_DETAILS { get; set; }
        public virtual DbSet<ACC_CHEQUES_ISSUED> ACC_CHEQUES_ISSUED { get; set; }
        public virtual DbSet<ACC_CHQ_BOOK_DETAILS_TEST> ACC_CHQ_BOOK_DETAILS_TEST { get; set; }
        public virtual DbSet<ACC_EAUTH_AUTHAMT_DETAILS> ACC_EAUTH_AUTHAMT_DETAILS { get; set; }
        public virtual DbSet<ACC_EAUTH_DETAILS> ACC_EAUTH_DETAILS { get; set; }
        public virtual DbSet<ACC_EAUTH_MASTER> ACC_EAUTH_MASTER { get; set; }
        public virtual DbSet<ACC_EAUTH_STATUS_TRACK> ACC_EAUTH_STATUS_TRACK { get; set; }
        public virtual DbSet<ACC_EPAY_MAIL_DETAILS> ACC_EPAY_MAIL_DETAILS { get; set; }
        public virtual DbSet<ACC_EPAY_MAIL_MASTER> ACC_EPAY_MAIL_MASTER { get; set; }
        public virtual DbSet<ACC_EPAY_MAIL_OTHER> ACC_EPAY_MAIL_OTHER { get; set; }
        public virtual DbSet<ACC_EPAY_MAIL_RESEND_DETAILS> ACC_EPAY_MAIL_RESEND_DETAILS { get; set; }
        public virtual DbSet<ACC_FUND_RELEASE_DETAILS> ACC_FUND_RELEASE_DETAILS { get; set; }
        public virtual DbSet<ACC_LEVEL_COMBINATION> ACC_LEVEL_COMBINATION { get; set; }
        public virtual DbSet<ACC_MAP_FA_CHANGE> ACC_MAP_FA_CHANGE { get; set; }
        public virtual DbSet<ACC_MAP_IMPREST_PAYMENT_SETTLEMENT_DETAILS> ACC_MAP_IMPREST_PAYMENT_SETTLEMENT_DETAILS { get; set; }
        public virtual DbSet<ACC_MAP_MENU_REPORTS> ACC_MAP_MENU_REPORTS { get; set; }
        public virtual DbSet<ACC_MAP_STATES_FA> ACC_MAP_STATES_FA { get; set; }
        public virtual DbSet<ACC_MASTER_ASSET> ACC_MASTER_ASSET { get; set; }
        public virtual DbSet<ACC_MASTER_BILL_TYPE> ACC_MASTER_BILL_TYPE { get; set; }
        public virtual DbSet<ACC_MASTER_FUND_TYPE> ACC_MASTER_FUND_TYPE { get; set; }
        public virtual DbSet<ACC_MASTER_HEAD> ACC_MASTER_HEAD { get; set; }
        public virtual DbSet<ACC_MASTER_HEAD_CATEGORY> ACC_MASTER_HEAD_CATEGORY { get; set; }
        public virtual DbSet<ACC_MASTER_LEVEL> ACC_MASTER_LEVEL { get; set; }
        public virtual DbSet<ACC_MASTER_REM_TYPE> ACC_MASTER_REM_TYPE { get; set; }
        public virtual DbSet<ACC_MASTER_REMIT_DEPT> ACC_MASTER_REMIT_DEPT { get; set; }
        public virtual DbSet<ACC_MASTER_TXN> ACC_MASTER_TXN { get; set; }
        public virtual DbSet<ACC_MONTHLY_CLOSING_MASTER> ACC_MONTHLY_CLOSING_MASTER { get; set; }
        public virtual DbSet<ACC_NOTIFICATION_DETAILS> ACC_NOTIFICATION_DETAILS { get; set; }
        public virtual DbSet<ACC_NOTIFICATION_MASTER> ACC_NOTIFICATION_MASTER { get; set; }
        public virtual DbSet<ACC_NOTIFICATION_TRANSACTIONS_MAPPING> ACC_NOTIFICATION_TRANSACTIONS_MAPPING { get; set; }
        public virtual DbSet<ACC_REM_ACCOUNT_DETAILS> ACC_REM_ACCOUNT_DETAILS { get; set; }
        public virtual DbSet<ACC_REPORT_HEADER_INFORMATION> ACC_REPORT_HEADER_INFORMATION { get; set; }
        public virtual DbSet<ACC_RPT_CONT_AGR_ROAD_HEAD_BALANCES> ACC_RPT_CONT_AGR_ROAD_HEAD_BALANCES { get; set; }
        public virtual DbSet<ACC_RPT_FA_HEAD_BALANCES> ACC_RPT_FA_HEAD_BALANCES { get; set; }
        public virtual DbSet<ACC_RPT_FINAL_BILL_PAYMENT_PENDING> ACC_RPT_FINAL_BILL_PAYMENT_PENDING { get; set; }
        public virtual DbSet<ACC_RPT_HEADWISE_BALANCES> ACC_RPT_HEADWISE_BALANCES { get; set; }
        public virtual DbSet<ACC_RPT_MONTHWISE_SUMMARY> ACC_RPT_MONTHWISE_SUMMARY { get; set; }
        public virtual DbSet<ACC_RPT_MONTHWISE_SUMMARY_REVOKE_FINALIZE> ACC_RPT_MONTHWISE_SUMMARY_REVOKE_FINALIZE { get; set; }
        public virtual DbSet<ACC_RPT_PAYMENT_STATUS> ACC_RPT_PAYMENT_STATUS { get; set; }
        public virtual DbSet<ACC_RPT_PAYMENT_STATUS_MONTHLY> ACC_RPT_PAYMENT_STATUS_MONTHLY { get; set; }
        public virtual DbSet<ACC_RPT_REPORT_HEADS> ACC_RPT_REPORT_HEADS { get; set; }
        public virtual DbSet<ACC_RPT_REPORT_ITEMS> ACC_RPT_REPORT_ITEMS { get; set; }
        public virtual DbSet<ACC_RPT_REPORT_MASTER> ACC_RPT_REPORT_MASTER { get; set; }
        public virtual DbSet<ACC_RPT_REPORT_PROPERTY> ACC_RPT_REPORT_PROPERTY { get; set; }
        public virtual DbSet<ACC_SCREEN_DESIGN_PARAM_DETAILS> ACC_SCREEN_DESIGN_PARAM_DETAILS { get; set; }
        public virtual DbSet<ACC_SCREEN_DESIGN_PARAM_MASTER> ACC_SCREEN_DESIGN_PARAM_MASTER { get; set; }
        public virtual DbSet<ACC_TEO_SCREEN_DESIGN_HEADWISE_DETAILS> ACC_TEO_SCREEN_DESIGN_HEADWISE_DETAILS { get; set; }
        public virtual DbSet<ACC_TEO_SCREEN_DESIGN_PARAM_DETAILS> ACC_TEO_SCREEN_DESIGN_PARAM_DETAILS { get; set; }
        public virtual DbSet<ACC_TEO_SCREEN_DESIGN_PARAM_MASTER> ACC_TEO_SCREEN_DESIGN_PARAM_MASTER { get; set; }
        public virtual DbSet<ACC_TEO_SCREEN_TXN_VALIDATIONS> ACC_TEO_SCREEN_TXN_VALIDATIONS { get; set; }
        public virtual DbSet<ACC_TXN_BANK> ACC_TXN_BANK { get; set; }
        public virtual DbSet<ACC_TXN_HEAD_MAPPING> ACC_TXN_HEAD_MAPPING { get; set; }
        public virtual DbSet<ACC_VOUCHER_NUMBER_MASTER> ACC_VOUCHER_NUMBER_MASTER { get; set; }
        public virtual DbSet<ADB_LOAN_BATCH_MAPPING> ADB_LOAN_BATCH_MAPPING { get; set; }
        public virtual DbSet<ADMIN_AGENCY_DISTRICT> ADMIN_AGENCY_DISTRICT { get; set; }
        public virtual DbSet<ADMIN_ALERTS> ADMIN_ALERTS { get; set; }
        public virtual DbSet<ADMIN_AUDIT_LOG> ADMIN_AUDIT_LOG { get; set; }
        public virtual DbSet<ADMIN_AUDIT_LOG_TEMP> ADMIN_AUDIT_LOG_TEMP { get; set; }
        public virtual DbSet<ADMIN_AUTONOMOUS_BODY> ADMIN_AUTONOMOUS_BODY { get; set; }
        public virtual DbSet<ADMIN_DEPARTMENT> ADMIN_DEPARTMENT { get; set; }
        public virtual DbSet<ADMIN_FEEDBACK> ADMIN_FEEDBACK { get; set; }
        public virtual DbSet<ADMIN_FEEDBACK_CONTRACTOR> ADMIN_FEEDBACK_CONTRACTOR { get; set; }
        public virtual DbSet<ADMIN_FEEDBACK_CONTRACTOR_FILES> ADMIN_FEEDBACK_CONTRACTOR_FILES { get; set; }
        public virtual DbSet<ADMIN_FEEDBACK_FILES> ADMIN_FEEDBACK_FILES { get; set; }
        public virtual DbSet<ADMIN_FEEDBACK_REPLY> ADMIN_FEEDBACK_REPLY { get; set; }
        public virtual DbSet<ADMIN_FEEDBACK_REPLY_FILES> ADMIN_FEEDBACK_REPLY_FILES { get; set; }
        public virtual DbSet<ADMIN_MODULE_CONFIGURATION> ADMIN_MODULE_CONFIGURATION { get; set; }
        public virtual DbSet<ADMIN_NEWS> ADMIN_NEWS { get; set; }
        public virtual DbSet<ADMIN_NEWS_FILES> ADMIN_NEWS_FILES { get; set; }
        public virtual DbSet<ADMIN_NO_BANK> ADMIN_NO_BANK { get; set; }
        public virtual DbSet<ADMIN_NODAL_OFFICERS> ADMIN_NODAL_OFFICERS { get; set; }
        public virtual DbSet<ADMIN_QUALITY_MONITORS> ADMIN_QUALITY_MONITORS { get; set; }
        public virtual DbSet<ADMIN_QUALITY_MONITORS_BANK> ADMIN_QUALITY_MONITORS_BANK { get; set; }
        public virtual DbSet<ADMIN_QUALITY_MONITORS_INTER_STATE> ADMIN_QUALITY_MONITORS_INTER_STATE { get; set; }
        public virtual DbSet<ADMIN_SQC> ADMIN_SQC { get; set; }
        public virtual DbSet<ADMIN_TECHNICAL_AGENCY> ADMIN_TECHNICAL_AGENCY { get; set; }
        public virtual DbSet<ADMIN_USER_MASTER_DUMMY> ADMIN_USER_MASTER_DUMMY { get; set; }
        public virtual DbSet<CABINET_CONNECTIVITY_STATUS> CABINET_CONNECTIVITY_STATUS { get; set; }
        public virtual DbSet<CITIZEN_HIT_COUNTER> CITIZEN_HIT_COUNTER { get; set; }
        public virtual DbSet<CONTRACTOR_GRIEVANCE_DETAILS> CONTRACTOR_GRIEVANCE_DETAILS { get; set; }
        public virtual DbSet<CONTRACTOR_GRIEVANCE_FILE_DETAILS> CONTRACTOR_GRIEVANCE_FILE_DETAILS { get; set; }
        public virtual DbSet<CONTRACTOR_GRIEVANCE_ROLE_MAPPING> CONTRACTOR_GRIEVANCE_ROLE_MAPPING { get; set; }
        public virtual DbSet<CONTRACTOR_GRIEVANCE_TRACKING_DETAILS> CONTRACTOR_GRIEVANCE_TRACKING_DETAILS { get; set; }
        public virtual DbSet<CONTRACTOR_REGISTRATION_DETAILS> CONTRACTOR_REGISTRATION_DETAILS { get; set; }
        public virtual DbSet<CUPL_PMGSY3> CUPL_PMGSY3 { get; set; }
        public virtual DbSet<CUPL_PMGSY3_LOG_ON_DELETE> CUPL_PMGSY3_LOG_ON_DELETE { get; set; }
        public virtual DbSet<DASHBORD_PROGRESS_DATA> DASHBORD_PROGRESS_DATA { get; set; }
        public virtual DbSet<EMARG_AUTHORIZATION_DETAILS> EMARG_AUTHORIZATION_DETAILS { get; set; }
        public virtual DbSet<EMARG_FIRST_LEVEL_ACK_SERVICE> EMARG_FIRST_LEVEL_ACK_SERVICE { get; set; }
        public virtual DbSet<EMARG_LOCKED_PACKAGE_RECORD> EMARG_LOCKED_PACKAGE_RECORD { get; set; }
        public virtual DbSet<EMARG_PACKAGE_PIU_MAPPING> EMARG_PACKAGE_PIU_MAPPING { get; set; }
        public virtual DbSet<EMARG_PAYMENT_DETAILS> EMARG_PAYMENT_DETAILS { get; set; }
        public virtual DbSet<EMARG_PAYMENT_DETAILS_NEW> EMARG_PAYMENT_DETAILS_NEW { get; set; }
        public virtual DbSet<EMARG_PAYMENT_DETAILS_NEW_TEMP_RB> EMARG_PAYMENT_DETAILS_NEW_TEMP_RB { get; set; }
        public virtual DbSet<EMARG_PAYMENT_DETAILS_old> EMARG_PAYMENT_DETAILS_old { get; set; }
        public virtual DbSet<EMARG_PAYMENT_MASTER_NEW> EMARG_PAYMENT_MASTER_NEW { get; set; }
        public virtual DbSet<EMARG_PAYMENT_MASTER_new_10_01_2022> EMARG_PAYMENT_MASTER_new_10_01_2022 { get; set; }
        public virtual DbSet<EMARG_PAYMENT_MASTER_NEW_TEMP_RB> EMARG_PAYMENT_MASTER_NEW_TEMP_RB { get; set; }
        public virtual DbSet<EMARG_PAYMENT_MASTER_old> EMARG_PAYMENT_MASTER_old { get; set; }
        public virtual DbSet<EMARG_REJECTION_MASTER> EMARG_REJECTION_MASTER { get; set; }
        public virtual DbSet<EMARG_REPACKAGE_DETAILS> EMARG_REPACKAGE_DETAILS { get; set; }
        public virtual DbSet<EMARG_ROAD_CORRECTION_SERVICEII> EMARG_ROAD_CORRECTION_SERVICEII { get; set; }
        public virtual DbSet<EMARG_ROAD_DETAILS_BALANCE_WORKS> EMARG_ROAD_DETAILS_BALANCE_WORKS { get; set; }
        public virtual DbSet<EMARG_ROAD_DETAILS_TEST_LIVE> EMARG_ROAD_DETAILS_TEST_LIVE { get; set; }
        public virtual DbSet<EMARG_ROAD_WISE_BALANCE_WORK_PACKAGE_DETAILS_New> EMARG_ROAD_WISE_BALANCE_WORK_PACKAGE_DETAILS_New { get; set; }
        public virtual DbSet<EMARG_ROADWISE_EXPENDITURE_BALANCE_WORK> EMARG_ROADWISE_EXPENDITURE_BALANCE_WORK { get; set; }
        public virtual DbSet<EMARG_ROADWISE_EXPENDITURE_BALANCE_WORK_MASTER> EMARG_ROADWISE_EXPENDITURE_BALANCE_WORK_MASTER { get; set; }
        public virtual DbSet<EXEC_BUILDING_PROGRESS> EXEC_BUILDING_PROGRESS { get; set; }
        public virtual DbSet<EXEC_BUILDING_STATUS> EXEC_BUILDING_STATUS { get; set; }
        public virtual DbSet<EXEC_CDWORKS> EXEC_CDWORKS { get; set; }
        public virtual DbSet<EXEC_FILES> EXEC_FILES { get; set; }
        public virtual DbSet<EXEC_HABITATIONS_CONNECTED> EXEC_HABITATIONS_CONNECTED { get; set; }
        public virtual DbSet<EXEC_LOCATION_DETAILS> EXEC_LOCATION_DETAILS { get; set; }
        public virtual DbSet<EXEC_LSB_MONTHLY_STATUS> EXEC_LSB_MONTHLY_STATUS { get; set; }
        public virtual DbSet<EXEC_OFFICER_DETAILS> EXEC_OFFICER_DETAILS { get; set; }
        public virtual DbSet<EXEC_PAYMENT_SCHEDULE> EXEC_PAYMENT_SCHEDULE { get; set; }
        public virtual DbSet<EXEC_PERIODIC_MAINT_PHYSICAL> EXEC_PERIODIC_MAINT_PHYSICAL { get; set; }
        public virtual DbSet<EXEC_PROGRESS> EXEC_PROGRESS { get; set; }
        public virtual DbSet<EXEC_ROADS_MONTHLY_STATUS_PERIODIC_MAINT_FINANCIAL> EXEC_ROADS_MONTHLY_STATUS_PERIODIC_MAINT_FINANCIAL { get; set; }
        public virtual DbSet<EXEC_ROADS_MONTHLY_STATUS_TEMP> EXEC_ROADS_MONTHLY_STATUS_TEMP { get; set; }
        public virtual DbSet<EXEC_ROADS_WEEKLY_STATUS> EXEC_ROADS_WEEKLY_STATUS { get; set; }
        public virtual DbSet<EXEC_RSA_INSPECTION> EXEC_RSA_INSPECTION { get; set; }
        public virtual DbSet<EXEC_RSA_INSPECTION_ATR> EXEC_RSA_INSPECTION_ATR { get; set; }
        public virtual DbSet<EXEC_RSA_INSPECTION_DETAILS> EXEC_RSA_INSPECTION_DETAILS { get; set; }
        public virtual DbSet<EXEC_SAFETY_INSP> EXEC_SAFETY_INSP { get; set; }
        public virtual DbSet<EXEC_TECH_FILES> EXEC_TECH_FILES { get; set; }
        public virtual DbSet<EXEC_TECH_MONTHLY_STATUS> EXEC_TECH_MONTHLY_STATUS { get; set; }
        public virtual DbSet<EXEC_TECH_PROGRESS_DETAILS> EXEC_TECH_PROGRESS_DETAILS { get; set; }
        public virtual DbSet<EXEC_WORK_PROGRAM> EXEC_WORK_PROGRAM { get; set; }
        public virtual DbSet<EXEC_WORK_PROGRESS_CHANGE_REQUEST> EXEC_WORK_PROGRESS_CHANGE_REQUEST { get; set; }
        public virtual DbSet<FACILITY_HABITATION_MAPPING> FACILITY_HABITATION_MAPPING { get; set; }
        public virtual DbSet<FACILITY_IMAGE_DELETION> FACILITY_IMAGE_DELETION { get; set; }
        public virtual DbSet<HABITATION_SHIFTING_TRACTING> HABITATION_SHIFTING_TRACTING { get; set; }
        public virtual DbSet<HOME_LAST_UPDATE_DETAILS> HOME_LAST_UPDATE_DETAILS { get; set; }
        public virtual DbSet<HOME_PAGE_STATUS_DATA> HOME_PAGE_STATUS_DATA { get; set; }
        public virtual DbSet<IMS_BENEFITED_HABS> IMS_BENEFITED_HABS { get; set; }
        public virtual DbSet<IMS_CBR_VALUE> IMS_CBR_VALUE { get; set; }
        public virtual DbSet<IMS_CONNECTIVITY> IMS_CONNECTIVITY { get; set; }
        public virtual DbSet<IMS_COST_COMPONENT> IMS_COST_COMPONENT { get; set; }
        public virtual DbSet<IMS_DROPPED_PROJECTS_PDF> IMS_DROPPED_PROJECTS_PDF { get; set; }
        public virtual DbSet<IMS_EC_CHECKLIST> IMS_EC_CHECKLIST { get; set; }
        public virtual DbSet<IMS_EC_FILE_UPLOAD> IMS_EC_FILE_UPLOAD { get; set; }
        public virtual DbSet<IMS_EC_PDF_GENERATED> IMS_EC_PDF_GENERATED { get; set; }
        public virtual DbSet<IMS_EC_TRAINING_PERSONS> IMS_EC_TRAINING_PERSONS { get; set; }
        public virtual DbSet<IMS_EC_TRAININGS> IMS_EC_TRAININGS { get; set; }
        public virtual DbSet<IMS_FREEZE_DETAILS> IMS_FREEZE_DETAILS { get; set; }
        public virtual DbSet<IMS_GENERATED_INVOICE> IMS_GENERATED_INVOICE { get; set; }
        public virtual DbSet<IMS_GENERATED_INVOICE_PTA> IMS_GENERATED_INVOICE_PTA { get; set; }
        public virtual DbSet<IMS_LOCK_DETAILS> IMS_LOCK_DETAILS { get; set; }
        public virtual DbSet<IMS_LSB_BRIDGE_COMPONENT_DETAIL> IMS_LSB_BRIDGE_COMPONENT_DETAIL { get; set; }
        public virtual DbSet<IMS_LSB_BRIDGE_DETAIL> IMS_LSB_BRIDGE_DETAIL { get; set; }
        public virtual DbSet<IMS_MAINTENANCE_POLICY_FILE_UPLOAD> IMS_MAINTENANCE_POLICY_FILE_UPLOAD { get; set; }
        public virtual DbSet<IMS_MLA_PROPOSAL_STATUS> IMS_MLA_PROPOSAL_STATUS { get; set; }
        public virtual DbSet<IMS_MP_PROPOSAL_STATUS> IMS_MP_PROPOSAL_STATUS { get; set; }
        public virtual DbSet<IMS_PROGRESS_LENGTH_COMPLETION> IMS_PROGRESS_LENGTH_COMPLETION { get; set; }
        public virtual DbSet<IMS_PROJECT_CITIZEN_STATS> IMS_PROJECT_CITIZEN_STATS { get; set; }
        public virtual DbSet<IMS_PROJECTS_STATISTICS> IMS_PROJECTS_STATISTICS { get; set; }
        public virtual DbSet<IMS_PROPOSAL_CHANGE_PIU_LOG> IMS_PROPOSAL_CHANGE_PIU_LOG { get; set; }
        public virtual DbSet<IMS_PROPOSAL_COST_ADD> IMS_PROPOSAL_COST_ADD { get; set; }
        public virtual DbSet<IMS_PROPOSAL_DROP_REQUEST> IMS_PROPOSAL_DROP_REQUEST { get; set; }
        public virtual DbSet<IMS_PROPOSAL_DROP_REQUEST_DETAILS> IMS_PROPOSAL_DROP_REQUEST_DETAILS { get; set; }
        public virtual DbSet<IMS_PROPOSAL_FILES> IMS_PROPOSAL_FILES { get; set; }
        public virtual DbSet<IMS_PROPOSAL_REVISION> IMS_PROPOSAL_REVISION { get; set; }
        public virtual DbSet<IMS_PROPOSAL_SPLIT> IMS_PROPOSAL_SPLIT { get; set; }
        public virtual DbSet<IMS_PROPOSAL_TRACKING> IMS_PROPOSAL_TRACKING { get; set; }
        public virtual DbSet<IMS_PROPOSAL_WORK> IMS_PROPOSAL_WORK { get; set; }
        public virtual DbSet<IMS_PTA_PAYMENTS> IMS_PTA_PAYMENTS { get; set; }
        public virtual DbSet<IMS_SANCTION_FOREST_CLEARANCE> IMS_SANCTION_FOREST_CLEARANCE { get; set; }
        public virtual DbSet<IMS_SANCTIONED_PROJECTS_LWE> IMS_SANCTIONED_PROJECTS_LWE { get; set; }
        public virtual DbSet<IMS_SANCTIONED_PROJECTS_PDF> IMS_SANCTIONED_PROJECTS_PDF { get; set; }
        public virtual DbSet<IMS_STA_PAYMENTS> IMS_STA_PAYMENTS { get; set; }
        public virtual DbSet<IMS_TEST_RESULT> IMS_TEST_RESULT { get; set; }
        public virtual DbSet<IMS_TRAFFIC_INTENSITY> IMS_TRAFFIC_INTENSITY { get; set; }
        public virtual DbSet<LOG_ACC_BILL_MASTER> LOG_ACC_BILL_MASTER { get; set; }
        public virtual DbSet<MABProgressLogDetails> MABProgressLogDetails { get; set; }
        public virtual DbSet<MABProgressUserDetails> MABProgressUserDetails { get; set; }
        public virtual DbSet<MAINE_REPACKAGE_DETAILS> MAINE_REPACKAGE_DETAILS { get; set; }
        public virtual DbSet<MAINTENANCE_FILES> MAINTENANCE_FILES { get; set; }
        public virtual DbSet<MANE_CN_CONTRACT> MANE_CN_CONTRACT { get; set; }
        public virtual DbSet<MANE_CN_PCI_INDEX> MANE_CN_PCI_INDEX { get; set; }
        public virtual DbSet<MANE_CN_PCI_INDEX_PMGSY3> MANE_CN_PCI_INDEX_PMGSY3 { get; set; }
        public virtual DbSet<MANE_ER_PCI_INDEX> MANE_ER_PCI_INDEX { get; set; }
        public virtual DbSet<MANE_IMS_CONTRACT> MANE_IMS_CONTRACT { get; set; }
        public virtual DbSet<MANE_IMS_INSPECTION> MANE_IMS_INSPECTION { get; set; }
        public virtual DbSet<MANE_IMS_PCI_INDEX> MANE_IMS_PCI_INDEX { get; set; }
        public virtual DbSet<MANE_IMS_PROGRESS> MANE_IMS_PROGRESS { get; set; }
        public virtual DbSet<MANE_IMS_PROGRESS_FILES> MANE_IMS_PROGRESS_FILES { get; set; }
        public virtual DbSet<MANE_IMS_TECH> MANE_IMS_TECH { get; set; }
        public virtual DbSet<MANE_MAINTENANCE_DETAILS> MANE_MAINTENANCE_DETAILS { get; set; }
        public virtual DbSet<MANE_PCI_IMAGE_MAPPING_PMGSY3> MANE_PCI_IMAGE_MAPPING_PMGSY3 { get; set; }
        public virtual DbSet<MANE_TREE_PLANT> MANE_TREE_PLANT { get; set; }
        public virtual DbSet<MAST_BEARING_TYPE> MAST_BEARING_TYPE { get; set; }
        public virtual DbSet<MAST_CN_BLOCK_PMGSY3_FINALIZE> MAST_CN_BLOCK_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_CN_BLOCK_PMGSY3_FINALIZE_LOG> MAST_CN_BLOCK_PMGSY3_FINALIZE_LOG { get; set; }
        public virtual DbSet<MAST_CN_DISTRICT_PMGSY3_FINALIZE> MAST_CN_DISTRICT_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_CN_DISTRICT_PMGSY3_FINALIZE_LOG> MAST_CN_DISTRICT_PMGSY3_FINALIZE_LOG { get; set; }
        public virtual DbSet<MAST_DISTRICT_ADJACEND> MAST_DISTRICT_ADJACEND { get; set; }
        public virtual DbSet<MAST_DRRP_BLOCK_PMGSY3_FINALIZE> MAST_DRRP_BLOCK_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_DRRP_DISTRICT_PMGSY3_FINALIZE> MAST_DRRP_DISTRICT_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_FACILITY_BLOCK_PMGSY3_FINALIZE> MAST_FACILITY_BLOCK_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_FACILITY_BLOCK_PMGSY3_FINALIZE_LOG> MAST_FACILITY_BLOCK_PMGSY3_FINALIZE_LOG { get; set; }
        public virtual DbSet<MAST_FACILITY_DISTRICT_PMGSY3_FINALIZE> MAST_FACILITY_DISTRICT_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_FACILITY_DISTRICT_PMGSY3_FINALIZE_LOG> MAST_FACILITY_DISTRICT_PMGSY3_FINALIZE_LOG { get; set; }
        public virtual DbSet<MAST_HAB_CSV_PMGSY3> MAST_HAB_CSV_PMGSY3 { get; set; }
        public virtual DbSet<MAST_HAB_DETAILS_CSV_PMGSY3> MAST_HAB_DETAILS_CSV_PMGSY3 { get; set; }
        public virtual DbSet<MAST_PCI_BLOCK_PMGSY3_FINALIZE> MAST_PCI_BLOCK_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_PCI_DISTRICT_PMGSY3_FINALIZE> MAST_PCI_DISTRICT_PMGSY3_FINALIZE { get; set; }
        public virtual DbSet<MAST_TECH_LAYER_MAPPING> MAST_TECH_LAYER_MAPPING { get; set; }
        public virtual DbSet<MAST_TRACE_DRRP_SCORE_PMGSY3> MAST_TRACE_DRRP_SCORE_PMGSY3 { get; set; }
        public virtual DbSet<MAST_TRACEFILE_PMGSY3> MAST_TRACEFILE_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_AGENCY> MASTER_AGENCY { get; set; }
        public virtual DbSet<MASTER_ARRR_ITEM_HEAD> MASTER_ARRR_ITEM_HEAD { get; set; }
        public virtual DbSet<MASTER_ARRR_ITEM_TAXES> MASTER_ARRR_ITEM_TAXES { get; set; }
        public virtual DbSet<MASTER_ARRR_ITEMS> MASTER_ARRR_ITEMS { get; set; }
        public virtual DbSet<MASTER_ARRR_ITEMS_MASTER> MASTER_ARRR_ITEMS_MASTER { get; set; }
        public virtual DbSet<MASTER_ARRR_LMM_CATEGORY> MASTER_ARRR_LMM_CATEGORY { get; set; }
        public virtual DbSet<MASTER_ARRR_LMM_TYPES> MASTER_ARRR_LMM_TYPES { get; set; }
        public virtual DbSet<MASTER_ARRR_STATES_RATES> MASTER_ARRR_STATES_RATES { get; set; }
        public virtual DbSet<MASTER_ARRR_TAXES> MASTER_ARRR_TAXES { get; set; }
        public virtual DbSet<MASTER_BATCH> MASTER_BATCH { get; set; }
        public virtual DbSet<MASTER_BLOCK> MASTER_BLOCK { get; set; }
        public virtual DbSet<MASTER_BLOCK_LOCALE> MASTER_BLOCK_LOCALE { get; set; }
        public virtual DbSet<MASTER_BUILDING_EXECUTION_ITEMS> MASTER_BUILDING_EXECUTION_ITEMS { get; set; }
        public virtual DbSet<MASTER_CARRIAGE> MASTER_CARRIAGE { get; set; }
        public virtual DbSet<MASTER_CDWORKS_TYPE> MASTER_CDWORKS_TYPE { get; set; }
        public virtual DbSet<MASTER_CDWORKS_TYPE_CONSTRUCTION> MASTER_CDWORKS_TYPE_CONSTRUCTION { get; set; }
        public virtual DbSet<MASTER_CENSUS_YEAR> MASTER_CENSUS_YEAR { get; set; }
        public virtual DbSet<MASTER_CHECKLIST_POINTS> MASTER_CHECKLIST_POINTS { get; set; }
        public virtual DbSet<MASTER_CLUSTER> MASTER_CLUSTER { get; set; }
        public virtual DbSet<MASTER_CLUSTER_HABITATIONS> MASTER_CLUSTER_HABITATIONS { get; set; }
        public virtual DbSet<MASTER_COMPONENT_TYPE> MASTER_COMPONENT_TYPE { get; set; }
        public virtual DbSet<MASTER_CON_CLASS_TYPE> MASTER_CON_CLASS_TYPE { get; set; }
        public virtual DbSet<MASTER_CONTRACTOR> MASTER_CONTRACTOR { get; set; }
        public virtual DbSet<MASTER_CONTRACTOR_GRIEVANCE> MASTER_CONTRACTOR_GRIEVANCE { get; set; }
        public virtual DbSet<MASTER_CONTRACTOR_LEGAL_HEIR> MASTER_CONTRACTOR_LEGAL_HEIR { get; set; }
        public virtual DbSet<MASTER_CONTRACTOR_REGISTRATION> MASTER_CONTRACTOR_REGISTRATION { get; set; }
        public virtual DbSet<MASTER_DAYS> MASTER_DAYS { get; set; }
        public virtual DbSet<MASTER_DESIGNATION> MASTER_DESIGNATION { get; set; }
        public virtual DbSet<MASTER_DISTRICT> MASTER_DISTRICT { get; set; }
        public virtual DbSet<MASTER_DISTRICT_LOCALE> MASTER_DISTRICT_LOCALE { get; set; }
        public virtual DbSet<MASTER_EQUIPMENT> MASTER_EQUIPMENT { get; set; }
        public virtual DbSet<MASTER_ER_CBR_VALUE> MASTER_ER_CBR_VALUE { get; set; }
        public virtual DbSet<MASTER_ER_CBR_VALUE_PMGSY3> MASTER_ER_CBR_VALUE_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_ER_CDWORKS_ROAD> MASTER_ER_CDWORKS_ROAD { get; set; }
        public virtual DbSet<MASTER_ER_CDWORKS_ROAD_PMGSY3> MASTER_ER_CDWORKS_ROAD_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_ER_HABITATION_ROAD> MASTER_ER_HABITATION_ROAD { get; set; }
        public virtual DbSet<MASTER_ER_HABITATION_ROAD_PMGSY3> MASTER_ER_HABITATION_ROAD_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_ER_MAPROAD_PMGSY3> MASTER_ER_MAPROAD_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_ER_SURFACE_TYPES> MASTER_ER_SURFACE_TYPES { get; set; }
        public virtual DbSet<MASTER_ER_SURFACE_TYPES_PMGSY3> MASTER_ER_SURFACE_TYPES_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_ER_TRAFFIC_INTENSITY> MASTER_ER_TRAFFIC_INTENSITY { get; set; }
        public virtual DbSet<MASTER_ER_TRAFFIC_INTENSITY_PMGSY3> MASTER_ER_TRAFFIC_INTENSITY_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_EXECUTION_ITEM> MASTER_EXECUTION_ITEM { get; set; }
        public virtual DbSet<MASTER_EXISTING_ROADS> MASTER_EXISTING_ROADS { get; set; }
        public virtual DbSet<MASTER_EXISTING_ROADS_LOG> MASTER_EXISTING_ROADS_LOG { get; set; }
        public virtual DbSet<MASTER_EXISTING_ROADS_Temp> MASTER_EXISTING_ROADS_Temp { get; set; }
        public virtual DbSet<MASTER_FACILITY> MASTER_FACILITY { get; set; }
        public virtual DbSet<MASTER_FACILITY_CATEGORY> MASTER_FACILITY_CATEGORY { get; set; }
        public virtual DbSet<MASTER_FEEDBACK_CATEGORY> MASTER_FEEDBACK_CATEGORY { get; set; }
        public virtual DbSet<MASTER_FUND_SHARING> MASTER_FUND_SHARING { get; set; }
        public virtual DbSet<MASTER_FUNDING_AGENCY> MASTER_FUNDING_AGENCY { get; set; }
        public virtual DbSet<MASTER_GRADE_TYPE> MASTER_GRADE_TYPE { get; set; }
        public virtual DbSet<MASTER_GROWTH_SCORE> MASTER_GROWTH_SCORE { get; set; }
        public virtual DbSet<MASTER_HABITATIONS> MASTER_HABITATIONS { get; set; }
        public virtual DbSet<MASTER_HABITATIONS_DETAILS> MASTER_HABITATIONS_DETAILS { get; set; }
        public virtual DbSet<MASTER_INFO> MASTER_INFO { get; set; }
        public virtual DbSet<MASTER_LOK_SABHA_TERM> MASTER_LOK_SABHA_TERM { get; set; }
        public virtual DbSet<MASTER_MATRIX> MASTER_MATRIX { get; set; }
        public virtual DbSet<MASTER_MATRIX_PARAMETERS> MASTER_MATRIX_PARAMETERS { get; set; }
        public virtual DbSet<MASTER_MLA_BLOCKS> MASTER_MLA_BLOCKS { get; set; }
        public virtual DbSet<MASTER_MLA_CONSTITUENCY> MASTER_MLA_CONSTITUENCY { get; set; }
        public virtual DbSet<MASTER_MLA_MEMBERS> MASTER_MLA_MEMBERS { get; set; }
        public virtual DbSet<MASTER_MODULE> MASTER_MODULE { get; set; }
        public virtual DbSet<MASTER_MONTH> MASTER_MONTH { get; set; }
        public virtual DbSet<MASTER_MP_BLOCKS> MASTER_MP_BLOCKS { get; set; }
        public virtual DbSet<MASTER_MP_CONSTITUENCY> MASTER_MP_CONSTITUENCY { get; set; }
        public virtual DbSet<MASTER_MP_MEMBERS> MASTER_MP_MEMBERS { get; set; }
        public virtual DbSet<MASTER_OFFICER_CATEGORY> MASTER_OFFICER_CATEGORY { get; set; }
        public virtual DbSet<MASTER_PANCHAYAT> MASTER_PANCHAYAT { get; set; }
        public virtual DbSet<MASTER_PANCHAYAT_HABITATIONS> MASTER_PANCHAYAT_HABITATIONS { get; set; }
        public virtual DbSet<MASTER_PHASE> MASTER_PHASE { get; set; }
        public virtual DbSet<MASTER_PMGSY2> MASTER_PMGSY2 { get; set; }
        public virtual DbSet<MASTER_PMGSY3> MASTER_PMGSY3 { get; set; }
        public virtual DbSet<MASTER_PMGSY3_INCLUSION> MASTER_PMGSY3_INCLUSION { get; set; }
        public virtual DbSet<MASTER_PMGSY3_NON_INCLUSION_REASON> MASTER_PMGSY3_NON_INCLUSION_REASON { get; set; }
        public virtual DbSet<MASTER_PROFILE> MASTER_PROFILE { get; set; }
        public virtual DbSet<MASTER_PUBLICATION_CATEGORY> MASTER_PUBLICATION_CATEGORY { get; set; }
        public virtual DbSet<MASTER_QM_ITEM> MASTER_QM_ITEM { get; set; }
        public virtual DbSet<MASTER_QUALIFICATION> MASTER_QUALIFICATION { get; set; }
        public virtual DbSet<MASTER_REASON> MASTER_REASON { get; set; }
        public virtual DbSet<MASTER_REGION> MASTER_REGION { get; set; }
        public virtual DbSet<MASTER_REGION_DISTRICT_MAP> MASTER_REGION_DISTRICT_MAP { get; set; }
        public virtual DbSet<MASTER_RENEWAL_TYPE> MASTER_RENEWAL_TYPE { get; set; }
        public virtual DbSet<MASTER_ROAD_CATEGORY> MASTER_ROAD_CATEGORY { get; set; }
        public virtual DbSet<MASTER_SCOUR_FOUNDATION_TYPE> MASTER_SCOUR_FOUNDATION_TYPE { get; set; }
        public virtual DbSet<MASTER_SLSC_GB_MEETING> MASTER_SLSC_GB_MEETING { get; set; }
        public virtual DbSet<MASTER_SOIL_TYPE> MASTER_SOIL_TYPE { get; set; }
        public virtual DbSet<MASTER_STATE> MASTER_STATE { get; set; }
        public virtual DbSet<MASTER_STATE_CLUSTER> MASTER_STATE_CLUSTER { get; set; }
        public virtual DbSet<MASTER_STATE_FUND_SHARING_MAPPING> MASTER_STATE_FUND_SHARING_MAPPING { get; set; }
        public virtual DbSet<MASTER_STATE_LOCALE> MASTER_STATE_LOCALE { get; set; }
        public virtual DbSet<MASTER_STATUS> MASTER_STATUS { get; set; }
        public virtual DbSet<MASTER_STREAMS> MASTER_STREAMS { get; set; }
        public virtual DbSet<MASTER_SURFACE> MASTER_SURFACE { get; set; }
        public virtual DbSet<MASTER_TAXES> MASTER_TAXES { get; set; }
        public virtual DbSet<MASTER_TECHNOLOGY> MASTER_TECHNOLOGY { get; set; }
        public virtual DbSet<MASTER_TEND_EMPLOYMENT> MASTER_TEND_EMPLOYMENT { get; set; }
        public virtual DbSet<MASTER_TEND_EQUIPMENT> MASTER_TEND_EQUIPMENT { get; set; }
        public virtual DbSet<MASTER_TERRAIN_TYPE> MASTER_TERRAIN_TYPE { get; set; }
        public virtual DbSet<MASTER_TEST> MASTER_TEST { get; set; }
        public virtual DbSet<MASTER_TIME> MASTER_TIME { get; set; }
        public virtual DbSet<MASTER_TKT_CATEGORY> MASTER_TKT_CATEGORY { get; set; }
        public virtual DbSet<MASTER_TRAFFIC_TYPE> MASTER_TRAFFIC_TYPE { get; set; }
        public virtual DbSet<MASTER_UNITS> MASTER_UNITS { get; set; }
        public virtual DbSet<MASTER_VIDHAN_SABHA_TERM> MASTER_VIDHAN_SABHA_TERM { get; set; }
        public virtual DbSet<MASTER_VILLAGE> MASTER_VILLAGE { get; set; }
        public virtual DbSet<MASTER_VILLAGE_POPULATION> MASTER_VILLAGE_POPULATION { get; set; }
        public virtual DbSet<MASTER_YEAR> MASTER_YEAR { get; set; }
        public virtual DbSet<MATRIX_DISTRICT_MAPPING> MATRIX_DISTRICT_MAPPING { get; set; }
        public virtual DbSet<MATRIX_HEAD_WEIGHTAGE> MATRIX_HEAD_WEIGHTAGE { get; set; }
        public virtual DbSet<MISSION_ANTYODAYA_DETAILS> MISSION_ANTYODAYA_DETAILS { get; set; }
        public virtual DbSet<MPR_FILE_UPLOADED> MPR_FILE_UPLOADED { get; set; }
        public virtual DbSet<MRD_CLEARANCE_LETTERS> MRD_CLEARANCE_LETTERS { get; set; }
        public virtual DbSet<MRD_DROPPED_LETTERS> MRD_DROPPED_LETTERS { get; set; }
        public virtual DbSet<MRD_FUND_ALLOCATION> MRD_FUND_ALLOCATION { get; set; }
        public virtual DbSet<MRD_FUND_RELEASE> MRD_FUND_RELEASE { get; set; }
        public virtual DbSet<MRD_PUBLICATION_FILES> MRD_PUBLICATION_FILES { get; set; }
        public virtual DbSet<MRD_PUBLICATIONS> MRD_PUBLICATIONS { get; set; }
        public virtual DbSet<OFP_CONDITION_IMPOSED> OFP_CONDITION_IMPOSED { get; set; }
        public virtual DbSet<OFP_CONDITION_MASTER> OFP_CONDITION_MASTER { get; set; }
        public virtual DbSet<OFP_DOCUMENT_MASTER> OFP_DOCUMENT_MASTER { get; set; }
        public virtual DbSet<OFP_REQUEST_APPROVAL> OFP_REQUEST_APPROVAL { get; set; }
        public virtual DbSet<OFP_REQUEST_DOCUMENT_MAPPING> OFP_REQUEST_DOCUMENT_MAPPING { get; set; }
        public virtual DbSet<OFP_REQUEST_MASTER> OFP_REQUEST_MASTER { get; set; }
        public virtual DbSet<OFP_ROLE_REQUEST_FORWARD_MAPPING> OFP_ROLE_REQUEST_FORWARD_MAPPING { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_AOC_DETAILS> OMMAS_GEPNIC_AOC_DETAILS { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_AOCINFO_BY_CDATE> OMMAS_GEPNIC_AOCINFO_BY_CDATE { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_CORRINFO_BY_PDATE> OMMAS_GEPNIC_CORRINFO_BY_PDATE { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_INTEGRATION> OMMAS_GEPNIC_INTEGRATION { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_INTEGRATION_MAINTENANCE> OMMAS_GEPNIC_INTEGRATION_MAINTENANCE { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_INTEGRATION_MASTER> OMMAS_GEPNIC_INTEGRATION_MASTER { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_ORGANISATION_MASTER> OMMAS_GEPNIC_ORGANISATION_MASTER { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_PIU_MAPPING> OMMAS_GEPNIC_PIU_MAPPING { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_TENDER_BID_OPENEVAL_DETAILS> OMMAS_GEPNIC_TENDER_BID_OPENEVAL_DETAILS { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_TENDER_BIDDER_DETAILS> OMMAS_GEPNIC_TENDER_BIDDER_DETAILS { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_TENDER_CORRIGENDUM_DETAILS> OMMAS_GEPNIC_TENDER_CORRIGENDUM_DETAILS { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_TENDER_WORKITEM_DETAILS> OMMAS_GEPNIC_TENDER_WORKITEM_DETAILS { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_TENDERINFO_BY_PDATE> OMMAS_GEPNIC_TENDERINFO_BY_PDATE { get; set; }
        public virtual DbSet<OMMAS_GEPNIC_UNIQUE_REF_AVAILABILITY> OMMAS_GEPNIC_UNIQUE_REF_AVAILABILITY { get; set; }
        public virtual DbSet<OMMAS_LDG_BLOCK_MAPPING> OMMAS_LDG_BLOCK_MAPPING { get; set; }
        public virtual DbSet<OMMAS_LDG_DISTRICT_MAPPING> OMMAS_LDG_DISTRICT_MAPPING { get; set; }
        public virtual DbSet<OMMAS_LDG_STATE_MAPPING> OMMAS_LDG_STATE_MAPPING { get; set; }
        public virtual DbSet<PAYMENT_EXEC_VALIDATION_CONFIGURATION> PAYMENT_EXEC_VALIDATION_CONFIGURATION { get; set; }
        public virtual DbSet<PFMS_BANK_BRANCHMASTER> PFMS_BANK_BRANCHMASTER { get; set; }
        public virtual DbSet<PFMS_BANK_MASTER> PFMS_BANK_MASTER { get; set; }
        public virtual DbSet<PFMS_DATA_SEND_DETAILS> PFMS_DATA_SEND_DETAILS { get; set; }
        public virtual DbSet<PFMS_DATA_SEND_DETAILS_TEMP> PFMS_DATA_SEND_DETAILS_TEMP { get; set; }
        public virtual DbSet<PFMS_INITIATING_PARTY_MASTER> PFMS_INITIATING_PARTY_MASTER { get; set; }
        public virtual DbSet<PFMS_OMMAS_CONTRACTOR_CORRECTION> PFMS_OMMAS_CONTRACTOR_CORRECTION { get; set; }
        public virtual DbSet<PFMS_OMMAS_CONTRACTOR_MAPPING> PFMS_OMMAS_CONTRACTOR_MAPPING { get; set; }
        public virtual DbSet<PFMS_OMMAS_CONTRACTOR_MAPPING_TEMP> PFMS_OMMAS_CONTRACTOR_MAPPING_TEMP { get; set; }
        public virtual DbSet<PFMS_OMMAS_DSC_MAPPING> PFMS_OMMAS_DSC_MAPPING { get; set; }
        public virtual DbSet<PFMS_OMMAS_PAYMENT_MAPPING> PFMS_OMMAS_PAYMENT_MAPPING { get; set; }
        public virtual DbSet<PFMS_OMMAS_PAYMENT_SUCCESS> PFMS_OMMAS_PAYMENT_SUCCESS { get; set; }
        public virtual DbSet<PFMS_OMMS_BANK_MAPPING> PFMS_OMMS_BANK_MAPPING { get; set; }
        public virtual DbSet<PFMS_PAYMENT_CONFIGURATION_TABLE> PFMS_PAYMENT_CONFIGURATION_TABLE { get; set; }
        public virtual DbSet<PLAN_ROAD_DRRP> PLAN_ROAD_DRRP { get; set; }
        public virtual DbSet<PLAN_ROAD_HABITATION> PLAN_ROAD_HABITATION { get; set; }
        public virtual DbSet<PLAN_ROAD_HABITATION_PMGSY3> PLAN_ROAD_HABITATION_PMGSY3 { get; set; }
        public virtual DbSet<PLAN_ROAD_LOG> PLAN_ROAD_LOG { get; set; }
        public virtual DbSet<PLAN_ROAD_MRL_PMGSY3> PLAN_ROAD_MRL_PMGSY3 { get; set; }
        public virtual DbSet<PLAN_ROAD_UPLOAD_FILE> PLAN_ROAD_UPLOAD_FILE { get; set; }
        public virtual DbSet<PMGSY3_TARGET_LENGTH> PMGSY3_TARGET_LENGTH { get; set; }
        public virtual DbSet<PMIS_CHAINAGEWISE_COMPLETION_DETAILS> PMIS_CHAINAGEWISE_COMPLETION_DETAILS { get; set; }
        public virtual DbSet<PMIS_EFORM_NQM_SQM_PDF_DEMO> PMIS_EFORM_NQM_SQM_PDF_DEMO { get; set; }
        public virtual DbSet<PMIS_PLAN_DETAILS> PMIS_PLAN_DETAILS { get; set; }
        public virtual DbSet<PMIS_PLAN_MASTER> PMIS_PLAN_MASTER { get; set; }
        public virtual DbSet<PMIS_PROGRESS_DETAILS> PMIS_PROGRESS_DETAILS { get; set; }
        public virtual DbSet<PMIS_PROGRESS_MASTER> PMIS_PROGRESS_MASTER { get; set; }
        public virtual DbSet<QM_AUTO_SCHEDULE_WORK_MAPPING> QM_AUTO_SCHEDULE_WORK_MAPPING { get; set; }
        public virtual DbSet<QM_GENERATED_INVOICE> QM_GENERATED_INVOICE { get; set; }
        public virtual DbSet<QM_MONITOR_PAYMENTS> QM_MONITOR_PAYMENTS { get; set; }
        public virtual DbSet<QM_NQM_NOT_AVAILABLE_INSPECTION> QM_NQM_NOT_AVAILABLE_INSPECTION { get; set; }
        public virtual DbSet<QM_QCR_DETAILS> QM_QCR_DETAILS { get; set; }
        public virtual DbSet<QM_UNLOCK_DETAILS> QM_UNLOCK_DETAILS { get; set; }
        public virtual DbSet<QMS_DISTRICT_WISE_WORK> QMS_DISTRICT_WISE_WORK { get; set; }
        public virtual DbSet<QMS_WORK_LIST_AUTO_SCHEDULE> QMS_WORK_LIST_AUTO_SCHEDULE { get; set; }
        public virtual DbSet<QUALITY_INSPECTION_TARGET> QUALITY_INSPECTION_TARGET { get; set; }
        public virtual DbSet<QUALITY_MAINTENANCE_ATR_IMAGE_FILE> QUALITY_MAINTENANCE_ATR_IMAGE_FILE { get; set; }
        public virtual DbSet<QUALITY_MOB_IMEI_NO> QUALITY_MOB_IMEI_NO { get; set; }
        public virtual DbSet<QUALITY_PIU_INSPECTION_FILES> QUALITY_PIU_INSPECTION_FILES { get; set; }
        public virtual DbSet<QUALITY_PIU_OBSERVATION_MASTER> QUALITY_PIU_OBSERVATION_MASTER { get; set; }
        public virtual DbSet<QUALITY_QM_AUTO_SCHEDULE> QUALITY_QM_AUTO_SCHEDULE { get; set; }
        public virtual DbSet<QUALITY_QM_CADRE_STATE> QUALITY_QM_CADRE_STATE { get; set; }
        public virtual DbSet<QUALITY_QM_COMPLAIN> QUALITY_QM_COMPLAIN { get; set; }
        public virtual DbSet<QUALITY_QM_COMPLAIN_DETAIL> QUALITY_QM_COMPLAIN_DETAIL { get; set; }
        public virtual DbSet<QUALITY_QM_COMPLAIN_DETAIL_FILE> QUALITY_QM_COMPLAIN_DETAIL_FILE { get; set; }
        public virtual DbSet<QUALITY_QM_COMPLAIN_FILE> QUALITY_QM_COMPLAIN_FILE { get; set; }
        public virtual DbSet<QUALITY_QM_COMPLAIN_ITEM> QUALITY_QM_COMPLAIN_ITEM { get; set; }
        public virtual DbSet<QUALITY_QM_DIRECTORS> QUALITY_QM_DIRECTORS { get; set; }
        public virtual DbSet<QUALITY_QM_EFORM> QUALITY_QM_EFORM { get; set; }
        public virtual DbSet<QUALITY_QM_IMAGE_DESCRIPTION> QUALITY_QM_IMAGE_DESCRIPTION { get; set; }
        public virtual DbSet<QUALITY_QM_IMEI_DELETE_LOG> QUALITY_QM_IMEI_DELETE_LOG { get; set; }
        public virtual DbSet<QUALITY_QM_INSPECTION_FILE> QUALITY_QM_INSPECTION_FILE { get; set; }
        public virtual DbSet<QUALITY_QM_INSPECTION_FILE_LOG> QUALITY_QM_INSPECTION_FILE_LOG { get; set; }
        public virtual DbSet<QUALITY_QM_INSPECTION_FILES> QUALITY_QM_INSPECTION_FILES { get; set; }
        public virtual DbSet<QUALITY_QM_JOINT_INSPECTION> QUALITY_QM_JOINT_INSPECTION { get; set; }
        public virtual DbSet<QUALITY_QM_JOINT_INSPECTION_ATR> QUALITY_QM_JOINT_INSPECTION_ATR { get; set; }
        public virtual DbSet<QUALITY_QM_JOINT_INSPECTION_FILE> QUALITY_QM_JOINT_INSPECTION_FILE { get; set; }
        public virtual DbSet<QUALITY_QM_LAB_DETAILS> QUALITY_QM_LAB_DETAILS { get; set; }
        public virtual DbSet<QUALITY_QM_LAB_MASTER> QUALITY_QM_LAB_MASTER { get; set; }
        public virtual DbSet<QUALITY_QM_LETTER> QUALITY_QM_LETTER { get; set; }
        public virtual DbSet<QUALITY_QM_LOG> QUALITY_QM_LOG { get; set; }
        public virtual DbSet<QUALITY_QM_MP_VISIT> QUALITY_QM_MP_VISIT { get; set; }
        public virtual DbSet<QUALITY_QM_MP_VISIT_FILES> QUALITY_QM_MP_VISIT_FILES { get; set; }
        public virtual DbSet<QUALITY_QM_NOTIFICATIONS> QUALITY_QM_NOTIFICATIONS { get; set; }
        public virtual DbSet<QUALITY_QM_OBSERVATION_DETAIL> QUALITY_QM_OBSERVATION_DETAIL { get; set; }
        public virtual DbSet<QUALITY_QM_OBSERVATION_MASTER> QUALITY_QM_OBSERVATION_MASTER { get; set; }
        public virtual DbSet<QUALITY_QM_OBSERVATION_TREES> QUALITY_QM_OBSERVATION_TREES { get; set; }
        public virtual DbSet<QUALITY_QM_SCHEDULE> QUALITY_QM_SCHEDULE { get; set; }
        public virtual DbSet<QUALITY_QM_SCHEDULE_DETAILS> QUALITY_QM_SCHEDULE_DETAILS { get; set; }
        public virtual DbSet<QUALITY_QM_TEAM> QUALITY_QM_TEAM { get; set; }
        public virtual DbSet<QUALITY_QM_TEAM_LETTER> QUALITY_QM_TEAM_LETTER { get; set; }
        public virtual DbSet<QUALITY_QM_TOUR_DETAILS> QUALITY_QM_TOUR_DETAILS { get; set; }
        public virtual DbSet<RCTRC_ADMIN_QUALITY_MONITORS> RCTRC_ADMIN_QUALITY_MONITORS { get; set; }
        public virtual DbSet<RCTRC_CONTACT_APPLICATION_PROFECIENCY> RCTRC_CONTACT_APPLICATION_PROFECIENCY { get; set; }
        public virtual DbSet<RCTRC_CONTACT_DETAILS> RCTRC_CONTACT_DETAILS { get; set; }
        public virtual DbSet<RCTRC_CONTACT_KEY_AREA> RCTRC_CONTACT_KEY_AREA { get; set; }
        public virtual DbSet<RCTRC_CONTACT_PERFORMANCE> RCTRC_CONTACT_PERFORMANCE { get; set; }
        public virtual DbSet<RCTRC_CONTACT_SUGGESTION> RCTRC_CONTACT_SUGGESTION { get; set; }
        public virtual DbSet<RCTRC_CONTACT_TRAININGS> RCTRC_CONTACT_TRAININGS { get; set; }
        public virtual DbSet<RCTRC_CONTACT_TRG_REQ> RCTRC_CONTACT_TRG_REQ { get; set; }
        public virtual DbSet<RCTRC_CONTACT_WORK_AREA> RCTRC_CONTACT_WORK_AREA { get; set; }
        public virtual DbSet<RCTRC_MASTER_APPLICATIONS> RCTRC_MASTER_APPLICATIONS { get; set; }
        public virtual DbSet<RCTRC_MASTER_DESIGNATION> RCTRC_MASTER_DESIGNATION { get; set; }
        public virtual DbSet<RCTRC_MASTER_EDUCATION> RCTRC_MASTER_EDUCATION { get; set; }
        public virtual DbSet<RCTRC_MASTER_KEY_AREA> RCTRC_MASTER_KEY_AREA { get; set; }
        public virtual DbSet<RCTRC_MASTER_PERFORMANCE> RCTRC_MASTER_PERFORMANCE { get; set; }
        public virtual DbSet<RCTRC_MASTER_SUGGESTION> RCTRC_MASTER_SUGGESTION { get; set; }
        public virtual DbSet<RCTRC_MASTER_TRAINING> RCTRC_MASTER_TRAINING { get; set; }
        public virtual DbSet<RCTRC_MASTER_WORK_AREA> RCTRC_MASTER_WORK_AREA { get; set; }
        public virtual DbSet<RCTRC_UM_Action_Master> RCTRC_UM_Action_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Css_Master> RCTRC_UM_Css_Master { get; set; }
        public virtual DbSet<RCTRC_UM_HomePage_Master> RCTRC_UM_HomePage_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Language_Master> RCTRC_UM_Language_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Level_Combination> RCTRC_UM_Level_Combination { get; set; }
        public virtual DbSet<RCTRC_UM_Level_Master> RCTRC_UM_Level_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Menu_Master> RCTRC_UM_Menu_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Module_Master> RCTRC_UM_Module_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Role_Action_Mapping> RCTRC_UM_Role_Action_Mapping { get; set; }
        public virtual DbSet<RCTRC_UM_Role_Level_Mapping> RCTRC_UM_Role_Level_Mapping { get; set; }
        public virtual DbSet<RCTRC_UM_Role_Master> RCTRC_UM_Role_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Role_Menu_Mapping> RCTRC_UM_Role_Menu_Mapping { get; set; }
        public virtual DbSet<RCTRC_UM_Rpt_Menu_Master> RCTRC_UM_Rpt_Menu_Master { get; set; }
        public virtual DbSet<RCTRC_UM_Security_Question_Answer> RCTRC_UM_Security_Question_Answer { get; set; }
        public virtual DbSet<RCTRC_UM_Security_Question_Master> RCTRC_UM_Security_Question_Master { get; set; }
        public virtual DbSet<RCTRC_UM_User_Log> RCTRC_UM_User_Log { get; set; }
        public virtual DbSet<RCTRC_UM_User_Master> RCTRC_UM_User_Master { get; set; }
        public virtual DbSet<RCTRC_UM_User_Profile> RCTRC_UM_User_Profile { get; set; }
        public virtual DbSet<RCTRC_UM_User_Role_Mapping> RCTRC_UM_User_Role_Mapping { get; set; }
        public virtual DbSet<RCTRC_USERID_STATE_MAPPING> RCTRC_USERID_STATE_MAPPING { get; set; }
        public virtual DbSet<REAT_BANK_BRANCH_MASTER> REAT_BANK_BRANCH_MASTER { get; set; }
        public virtual DbSet<REAT_CONTRACTOR_DETAILS> REAT_CONTRACTOR_DETAILS { get; set; }
        public virtual DbSet<REAT_DATA_SEND_DETAILS> REAT_DATA_SEND_DETAILS { get; set; }
        public virtual DbSet<REAT_FUND_RECEIPT_CONFIGURATION> REAT_FUND_RECEIPT_CONFIGURATION { get; set; }
        public virtual DbSet<REAT_INITIATING_PARTY_MASTER> REAT_INITIATING_PARTY_MASTER { get; set; }
        public virtual DbSet<REAT_MASTER_ERROR_CODE> REAT_MASTER_ERROR_CODE { get; set; }
        public virtual DbSet<REAT_OB_DETAILS> REAT_OB_DETAILS { get; set; }
        public virtual DbSet<REAT_OMMAS_DSC_MAPPING> REAT_OMMAS_DSC_MAPPING { get; set; }
        public virtual DbSet<REAT_OMMAS_PAYMENT_MAPPING> REAT_OMMAS_PAYMENT_MAPPING { get; set; }
        public virtual DbSet<REAT_OMMAS_PAYMENT_SUCCESS> REAT_OMMAS_PAYMENT_SUCCESS { get; set; }
        public virtual DbSet<REAT_PAYMENT_CONFIGURATION_TABLE> REAT_PAYMENT_CONFIGURATION_TABLE { get; set; }
        public virtual DbSet<REAT_RECEIPT_DETAILS> REAT_RECEIPT_DETAILS { get; set; }
        public virtual DbSet<RSA_MASTER_ISSUE> RSA_MASTER_ISSUE { get; set; }
        public virtual DbSet<STATE_RANKING_KPI> STATE_RANKING_KPI { get; set; }
        public virtual DbSet<STATISTICS_LABELS> STATISTICS_LABELS { get; set; }
        public virtual DbSet<TARGET_HAB_LENGTH> TARGET_HAB_LENGTH { get; set; }
        public virtual DbSet<TARGET_PMGSY_SCHEME> TARGET_PMGSY_SCHEME { get; set; }
        public virtual DbSet<TECH_AGENCY_SCRUTINY_RESTRICTED> TECH_AGENCY_SCRUTINY_RESTRICTED { get; set; }
        public virtual DbSet<TEND_AGREEMENT_BG_RENEWAL> TEND_AGREEMENT_BG_RENEWAL { get; set; }
        public virtual DbSet<TEND_CHECKLIST_DETAIL> TEND_CHECKLIST_DETAIL { get; set; }
        public virtual DbSet<TEND_CORR_DETAILS> TEND_CORR_DETAILS { get; set; }
        public virtual DbSet<TEND_CORR_MASTER> TEND_CORR_MASTER { get; set; }
        public virtual DbSet<TEND_EMPLOYMENT_DETAILS> TEND_EMPLOYMENT_DETAILS { get; set; }
        public virtual DbSet<TEND_EQUIPMENT_DETAILS> TEND_EQUIPMENT_DETAILS { get; set; }
        public virtual DbSet<TEND_NIT_DETAILS> TEND_NIT_DETAILS { get; set; }
        public virtual DbSet<TEND_NIT_DOCUMENT> TEND_NIT_DOCUMENT { get; set; }
        public virtual DbSet<TEND_NIT_MASTER> TEND_NIT_MASTER { get; set; }
        public virtual DbSet<TEND_TENDER_PRICE> TEND_TENDER_PRICE { get; set; }
        public virtual DbSet<TEST_LANGUAGE> TEST_LANGUAGE { get; set; }
        public virtual DbSet<TKT_TICKET_APPROVAL> TKT_TICKET_APPROVAL { get; set; }
        public virtual DbSet<TKT_TICKET_DETAIL> TKT_TICKET_DETAIL { get; set; }
        public virtual DbSet<TKT_TICKET_FILES> TKT_TICKET_FILES { get; set; }
        public virtual DbSet<TR_MRL_EXEMPTION> TR_MRL_EXEMPTION { get; set; }
        public virtual DbSet<TR_MRL_EXEMPTION_LOG> TR_MRL_EXEMPTION_LOG { get; set; }
        public virtual DbSet<UM_Action_Master> UM_Action_Master { get; set; }
        public virtual DbSet<UM_Citizen_User_Master> UM_Citizen_User_Master { get; set; }
        public virtual DbSet<UM_Css_Master> UM_Css_Master { get; set; }
        public virtual DbSet<UM_HomePage_Master> UM_HomePage_Master { get; set; }
        public virtual DbSet<UM_Language_Master> UM_Language_Master { get; set; }
        public virtual DbSet<UM_Level_Combination> UM_Level_Combination { get; set; }
        public virtual DbSet<UM_Level_Master> UM_Level_Master { get; set; }
        public virtual DbSet<UM_MENU_FUND_TYPE_COMBINATION> UM_MENU_FUND_TYPE_COMBINATION { get; set; }
        public virtual DbSet<UM_Menu_Master> UM_Menu_Master { get; set; }
        public virtual DbSet<UM_MENU_SCHEME_TYPE_COMBINATION> UM_MENU_SCHEME_TYPE_COMBINATION { get; set; }
        public virtual DbSet<UM_Module_Master> UM_Module_Master { get; set; }
        public virtual DbSet<UM_Role_Action_Mapping> UM_Role_Action_Mapping { get; set; }
        public virtual DbSet<UM_Role_Level_Mapping> UM_Role_Level_Mapping { get; set; }
        public virtual DbSet<UM_Role_Master> UM_Role_Master { get; set; }
        public virtual DbSet<UM_Role_Menu_Mapping> UM_Role_Menu_Mapping { get; set; }
        public virtual DbSet<UM_Rpt_Menu_Master> UM_Rpt_Menu_Master { get; set; }
        public virtual DbSet<UM_Security_Question_Answer> UM_Security_Question_Answer { get; set; }
        public virtual DbSet<UM_Security_Question_Master> UM_Security_Question_Master { get; set; }
        public virtual DbSet<UM_User_Log> UM_User_Log { get; set; }
        public virtual DbSet<UM_User_Master> UM_User_Master { get; set; }
        public virtual DbSet<UM_User_Profile> UM_User_Profile { get; set; }
        public virtual DbSet<UM_User_Role_Mapping> UM_User_Role_Mapping { get; set; }
        public virtual DbSet<VILLAGE_SHIFTING_TRACTING> VILLAGE_SHIFTING_TRACTING { get; set; }
        public virtual DbSet<WORK_WISE_FUND_SHARE> WORK_WISE_FUND_SHARE { get; set; }
        public virtual DbSet<WORK_WISE_FUND_SHARE_WITH_COST> WORK_WISE_FUND_SHARE_WITH_COST { get; set; }
        public virtual DbSet<ACC_CERTIFICATE_DETAILS_SHADOW> ACC_CERTIFICATE_DETAILS_SHADOW { get; set; }
        public virtual DbSet<UM_User_Master_SHADOW> UM_User_Master_SHADOW { get; set; }
        public virtual DbSet<ACC_DB_FINANCIAL_YEAR> ACC_DB_FINANCIAL_YEAR { get; set; }
        public virtual DbSet<ADMIN_AGENCY_DISTRICT1> ADMIN_AGENCY_DISTRICT1 { get; set; }
        public virtual DbSet<CN_ROAD_LOC> CN_ROAD_LOC { get; set; }
        public virtual DbSet<DARPAN_LOG> DARPAN_LOG { get; set; }
        public virtual DbSet<OmmsLog_Temp> OmmsLog_Temp { get; set; }
        public virtual DbSet<PFMS_BANK_BRANCHMASTER_Backup> PFMS_BANK_BRANCHMASTER_Backup { get; set; }
        public virtual DbSet<VERIFY_ROAD_AMOUNT> VERIFY_ROAD_AMOUNT { get; set; }
        public virtual DbSet<WORK_LIST_AUTO_SCHEDULE> WORK_LIST_AUTO_SCHEDULE { get; set; }
        public virtual DbSet<EFORM_MASTER_NEW_TECH_ITEM> EFORM_MASTER_NEW_TECH_ITEM { get; set; }
        public virtual DbSet<EFORM_MASTER_WORK_ITEM> EFORM_MASTER_WORK_ITEM { get; set; }
        public virtual DbSet<EFORM_PDF_TABLE_MASTER> EFORM_PDF_TABLE_MASTER { get; set; }
        public virtual DbSet<EFORM_PIU_GENERAL_INFO> EFORM_PIU_GENERAL_INFO { get; set; }
        public virtual DbSet<EFORM_PIU_ITEM_APPLICABLE_DETAILS> EFORM_PIU_ITEM_APPLICABLE_DETAILS { get; set; }
        public virtual DbSet<EFORM_PIU_MIX_DESIGN_DETAILS> EFORM_PIU_MIX_DESIGN_DETAILS { get; set; }
        public virtual DbSet<EFORM_PIU_NEW_TECHNOLOGY_DETAILS> EFORM_PIU_NEW_TECHNOLOGY_DETAILS { get; set; }
        public virtual DbSet<EFORM_PIU_PREVIOUS_INSP_DETAILS> EFORM_PIU_PREVIOUS_INSP_DETAILS { get; set; }
        public virtual DbSet<EFORM_PIU_PRGS_DETAILS> EFORM_PIU_PRGS_DETAILS { get; set; }
        public virtual DbSet<EFORM_PIU_QC_DETAILS> EFORM_PIU_QC_DETAILS { get; set; }
        public virtual DbSet<EFORM_PIU_TECHNOLOGY_DETAIL> EFORM_PIU_TECHNOLOGY_DETAIL { get; set; }
        public virtual DbSet<EFORM_PREFILLED_DETAILS> EFORM_PREFILLED_DETAILS { get; set; }
        public virtual DbSet<EFORM_QC_OFFICIAL_DETAILS> EFORM_QC_OFFICIAL_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_ACTION_TAKEN_PIU> EFORM_QM_ACTION_TAKEN_PIU { get; set; }
        public virtual DbSet<EFORM_QM_ARRANGEMENTS_OBS_DETAILS> EFORM_QM_ARRANGEMENTS_OBS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_BASE_COURSE_I> EFORM_QM_BASE_COURSE_I { get; set; }
        public virtual DbSet<EFORM_QM_BASE_COURSE_II> EFORM_QM_BASE_COURSE_II { get; set; }
        public virtual DbSet<EFORM_QM_BASE_COURSE_III> EFORM_QM_BASE_COURSE_III { get; set; }
        public virtual DbSet<EFORM_QM_BITUMINOUS_SURFACE_COURSE> EFORM_QM_BITUMINOUS_SURFACE_COURSE { get; set; }
        public virtual DbSet<EFORM_QM_CC_PUCCA_DRAINS> EFORM_QM_CC_PUCCA_DRAINS { get; set; }
        public virtual DbSet<EFORM_QM_CC_SR_PVAEMENTS> EFORM_QM_CC_SR_PVAEMENTS { get; set; }
        public virtual DbSet<EFORM_QM_CDWORKS_PIPE_CULVERTS> EFORM_QM_CDWORKS_PIPE_CULVERTS { get; set; }
        public virtual DbSet<EFORM_QM_CDWORKS_SLAB_CULVERTS> EFORM_QM_CDWORKS_SLAB_CULVERTS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1> EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER1 { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2> EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER2 { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3> EFORM_QM_CHILD_BASECOURSE_UCS_DETAILS_LAYER3 { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS> EFORM_QM_CHILD_BITUMINOUS_OBSERVATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS> EFORM_QM_CHILD_BITUMINOUS_SURFACE_COARSE_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS> EFORM_QM_CHILD_CC_AND_SR_PAVEMENTS_OBSERVATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS> EFORM_QM_CHILD_CC_PUCCA_DRAINS_OBSERVATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS> EFORM_QM_CHILD_CDWORKS_PIPE_CULVERTS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS> EFORM_QM_CHILD_CDWORKS_SLAB_CULVERTS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS> EFORM_QM_CHILD_CRASH_BARRIERS_OBSERVATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_CUT_SLOPE_DETAIL> EFORM_QM_CHILD_CUT_SLOPE_DETAIL { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_DEGREE_OF_COMPAQ> EFORM_QM_CHILD_DEGREE_OF_COMPAQ { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS> EFORM_QM_CHILD_EARTHWORK_SUBGRADE_CBR_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS> EFORM_QM_CHILD_EARTHWORK_SUBGRADE_UCS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_GRANULAR_UCS_DETAILS> EFORM_QM_CHILD_GRANULAR_UCS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_GROUP_SYMBOL_SOIL> EFORM_QM_CHILD_GROUP_SYMBOL_SOIL { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1> EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER1 { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2> EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER2 { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3> EFORM_QM_CHILD_OBSERVATION_WORKMANSHIP_LAYER3 { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS> EFORM_QM_CHILD_PROT_WORKS_QOM_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS> EFORM_QM_CHILD_PROT_WORKS_WORKMANSHIP_OF_RS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_QOM_WORKMENSHIP> EFORM_QM_CHILD_QOM_WORKMENSHIP { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS> EFORM_QM_CHILD_ROAD_FURNITURE_MARKINGS_OBSERVATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS> EFORM_QM_CHILD_SD_AND_CW_DRAINS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS> EFORM_QM_CHILD_SHOULDERS_MATERIAL_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS> EFORM_QM_CHILD_SHOULDERS_UCS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_CHILD_SIDE_SLOPE_DETAIL> EFORM_QM_CHILD_SIDE_SLOPE_DETAIL { get; set; }
        public virtual DbSet<EFORM_QM_COMPAQ_EMBANKMENT> EFORM_QM_COMPAQ_EMBANKMENT { get; set; }
        public virtual DbSet<EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY> EFORM_QM_CRASH_BARRIERS_ROAD_SAFETY { get; set; }
        public virtual DbSet<EFORM_QM_DEFICIENCY_PREPARATION> EFORM_QM_DEFICIENCY_PREPARATION { get; set; }
        public virtual DbSet<EFORM_QM_DIFFEENCE_IN_OBSERVATION> EFORM_QM_DIFFEENCE_IN_OBSERVATION { get; set; }
        public virtual DbSet<EFORM_QM_GENERAL_DETAILS> EFORM_QM_GENERAL_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_GEOMETRICS_DETAILS> EFORM_QM_GEOMETRICS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_GEOMETRICS_OBS_DETAILS> EFORM_QM_GEOMETRICS_OBS_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_GRANULAR_SUBBASE> EFORM_QM_GRANULAR_SUBBASE { get; set; }
        public virtual DbSet<EFORM_QM_ITEM_APPLICABLE_DETAILS> EFORM_QM_ITEM_APPLICABLE_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_NEW_TECHNOLOGY_DETAILS> EFORM_QM_NEW_TECHNOLOGY_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_PRESENT_WORK_DETAILS> EFORM_QM_PRESENT_WORK_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_PROTECTION_WORK> EFORM_QM_PROTECTION_WORK { get; set; }
        public virtual DbSet<EFORM_QM_QC_TEST_DETAILS> EFORM_QM_QC_TEST_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_QUALITY_ATTENTION> EFORM_QM_QUALITY_ATTENTION { get; set; }
        public virtual DbSet<EFORM_QM_QUALITY_GRADING> EFORM_QM_QUALITY_GRADING { get; set; }
        public virtual DbSet<EFORM_QM_ROAD_FURNITURE_MARKINGS> EFORM_QM_ROAD_FURNITURE_MARKINGS { get; set; }
        public virtual DbSet<EFORM_QM_SHOULDERS> EFORM_QM_SHOULDERS { get; set; }
        public virtual DbSet<EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN> EFORM_QM_SIDE_AND_CATCH_DRAINS_EARTHEN { get; set; }
        public virtual DbSet<EFORM_QM_SIDE_SLOPES> EFORM_QM_SIDE_SLOPES { get; set; }
        public virtual DbSet<EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST> EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST { get; set; }
        public virtual DbSet<EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG> EFORM_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG { get; set; }
        public virtual DbSet<EFORM_MASTER> EFORM_MASTER { get; set; }
        public virtual DbSet<EFORM_PDF_UPLOAD_DETAIL> EFORM_PDF_UPLOAD_DETAIL { get; set; }
        public virtual DbSet<EXEC_ROADS_MONTHLY_STATUS> EXEC_ROADS_MONTHLY_STATUS { get; set; }
        public virtual DbSet<EFORM_QM_QOM_EMBANKMENT> EFORM_QM_QOM_EMBANKMENT { get; set; }
        public virtual DbSet<MASTER_CONTRACTOR_BANK> MASTER_CONTRACTOR_BANK { get; set; }
        public virtual DbSet<EMARG_ROAD_WISE_BALANCE_WORK_PACKAGE_DETAILS> EMARG_ROAD_WISE_BALANCE_WORK_PACKAGE_DETAILS { get; set; }
        public virtual DbSet<TEND_AGREEMENT_DETAIL> TEND_AGREEMENT_DETAIL { get; set; }
        public virtual DbSet<EFORM_QM_BITUMINOUS_BASE_COURSE> EFORM_QM_BITUMINOUS_BASE_COURSE { get; set; }
        public virtual DbSet<EMARG_PAYMENT_MASTER> EMARG_PAYMENT_MASTER { get; set; }
        public virtual DbSet<TKT_ROLE_TYPE_FORWARDING> TKT_ROLE_TYPE_FORWARDING { get; set; }
        public virtual DbSet<TKT_TG_MODULE_MAPPING> TKT_TG_MODULE_MAPPING { get; set; }
        public virtual DbSet<TKT_TICKET_MASTER> TKT_TICKET_MASTER { get; set; }
        public virtual DbSet<EMARG_ROAD_DETAILS> EMARG_ROAD_DETAILS { get; set; }
        public virtual DbSet<Emarg_KPI_PM_Awardsdetails> Emarg_KPI_PM_Awardsdetails { get; set; }
        public virtual DbSet<DYNAMIC_DASHBOARD> DYNAMIC_DASHBOARD { get; set; }
        public virtual DbSet<EFORM_BRIDGE_MASTER_WORK_ITEM> EFORM_BRIDGE_MASTER_WORK_ITEM { get; set; }
        public virtual DbSet<EFORM_BRIDGE_PIU_GENERAL_INFO> EFORM_BRIDGE_PIU_GENERAL_INFO { get; set; }
        public virtual DbSet<EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS> EFORM_BRIDGE_PIU_MIX_DESIGN_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_PIU_PRGS_DETAILS> EFORM_BRIDGE_PIU_PRGS_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_PIU_QC_DETAILS> EFORM_BRIDGE_PIU_QC_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QC_OFFICIAL_DETAILS> EFORM_BRIDGE_QC_OFFICIAL_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_ACTION_TAKEN_PIU> EFORM_BRIDGE_QM_ACTION_TAKEN_PIU { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_APPROACH> EFORM_BRIDGE_QM_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS> EFORM_BRIDGE_QM_ARRANGEMENTS_OBS_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_BEARING> EFORM_BRIDGE_QM_BEARING { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_BAILEY_BRIDGE_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH> EFORM_BRIDGE_QM_CHILD_BASE_COURSE_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_BEARING_TYPE> EFORM_BRIDGE_QM_CHILD_BEARING_TYPE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_BAILEY_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_CO_MATERIAL_STEEL_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_COMPL_ACTIVITY_RCC_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION> EFORM_BRIDGE_QM_CHILD_COMPL_QOM_FOUNDATION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE> EFORM_BRIDGE_QM_CHILD_COMPLETED_SUBSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH> EFORM_BRIDGE_QM_CHILD_EMBANKMENT_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING> EFORM_BRIDGE_QM_CHILD_OBS_FURNITURE_MARKING { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_ON_QOM_BAILEY_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_ON_QOM_RCC_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_ON_QOM_STEEL_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE> EFORM_BRIDGE_QM_CHILD_ON_QOM_SUBSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION> EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_FOUNDATION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE> EFORM_BRIDGE_QM_CHILD_ON_WORKMENSHIP_SUBSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH> EFORM_BRIDGE_QM_CHILD_PROTECH_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_QOM_APPROACH> EFORM_BRIDGE_QM_CHILD_QOM_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_RCC_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE> EFORM_BRIDGE_QM_CHILD_STEEL_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH> EFORM_BRIDGE_QM_CHILD_SUB_BASE_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH> EFORM_BRIDGE_QM_CHILD_WEARING_COURSE_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH> EFORM_BRIDGE_QM_CHILD_WORKMENSHIP_APPROACH { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_COMPLETED_FOUNDATION> EFORM_BRIDGE_QM_COMPLETED_FOUNDATION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE> EFORM_BRIDGE_QM_COMPLETED_SUBSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_DEFICIENCY> EFORM_BRIDGE_QM_DEFICIENCY { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION> EFORM_BRIDGE_QM_DIFFERENCE_IN_OBSERVATION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_EXPANSION> EFORM_BRIDGE_QM_EXPANSION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_FOUNDATION> EFORM_BRIDGE_QM_FOUNDATION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_FURNITURE_MARKINGS> EFORM_BRIDGE_QM_FURNITURE_MARKINGS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_GENERAL_DETAILS> EFORM_BRIDGE_QM_GENERAL_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS> EFORM_BRIDGE_QM_ITEM_APPLICABLE_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_LOAD_TEST> EFORM_BRIDGE_QM_LOAD_TEST { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_ONGOING_FOUNDATION> EFORM_BRIDGE_QM_ONGOING_FOUNDATION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE> EFORM_BRIDGE_QM_ONGOING_SUBSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_OVERALL_GRADING> EFORM_BRIDGE_QM_OVERALL_GRADING { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_QC_TEST_DETAILS> EFORM_BRIDGE_QM_QC_TEST_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_QUALITY_ATTENTION> EFORM_BRIDGE_QM_QUALITY_ATTENTION { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_QUALITY_GRADING> EFORM_BRIDGE_QM_QUALITY_GRADING { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_SUBSTRUCTURE> EFORM_BRIDGE_QM_SUBSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_SUPERSTRUCTURE> EFORM_BRIDGE_QM_SUPERSTRUCTURE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS> EFORM_BRIDGE_QM_TEST_RESULT_VERIFICATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST> EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_COST { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG> EFORM_BRIDGE_QM_WORK_COMPLETED_IN_PROGRESS_ASPER_PROG { get; set; }
        public virtual DbSet<EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS> EFORM_QM_TEST_RESULT_VERIFICATION_DETAILS { get; set; }
        public virtual DbSet<EFORM_BRIDGE_PIU_PARTICULARS> EFORM_BRIDGE_PIU_PARTICULARS { get; set; }
        public virtual DbSet<TEND_AGREEMENT_MASTER> TEND_AGREEMENT_MASTER { get; set; }
        public virtual DbSet<QUALITY_ATR_FILE> QUALITY_ATR_FILE { get; set; }
        public virtual DbSet<EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION> EFORM_BRIDGE_QM_CHILD_ON_QOM_FOUNDATION { get; set; }
        public virtual DbSet<EMARG_ROADWISE_EXPENDITURE_BALANCE_WORK_DETAILS> EMARG_ROADWISE_EXPENDITURE_BALANCE_WORK_DETAILS { get; set; }
        public virtual DbSet<QM_IR_ATR_DETAILS> QM_IR_ATR_DETAILS { get; set; }
        public virtual DbSet<EMARG_CHEQUE_CANCELLATION_DETAILS> EMARG_CHEQUE_CANCELLATION_DETAILS { get; set; }
        public virtual DbSet<EMARG_PAYMENT_RENEW_DETAILS> EMARG_PAYMENT_RENEW_DETAILS { get; set; }
        public virtual DbSet<EMARG_PAYMENT_RENEW_MASTER> EMARG_PAYMENT_RENEW_MASTER { get; set; }
        public virtual DbSet<MASTER_DRRP_ROAD> MASTER_DRRP_ROAD { get; set; }
        public virtual DbSet<MANE_EMARG_CONTRACT> MANE_EMARG_CONTRACT { get; set; }
        public virtual DbSet<QM_PROFICIENCY_TEST_MASTER> QM_PROFICIENCY_TEST_MASTER { get; set; }
        public virtual DbSet<QM_PROFICIENCY_TEST_SCORE> QM_PROFICIENCY_TEST_SCORE { get; set; }
        public virtual DbSet<QM_QUALITY_PRIORITY_WORK> QM_QUALITY_PRIORITY_WORK { get; set; }
        public virtual DbSet<QMS_DISTRICT_WISE_WORK_COINT> QMS_DISTRICT_WISE_WORK_COINT { get; set; }
        public virtual DbSet<VW_COMPLETED_WORK_PRIORITY> VW_COMPLETED_WORK_PRIORITY { get; set; }
        public virtual DbSet<VW_MAINTENANCE_WORK_PRIORITY> VW_MAINTENANCE_WORK_PRIORITY { get; set; }
        public virtual DbSet<VW_PROGRESS_WORK_PRIORITY> VW_PROGRESS_WORK_PRIORITY { get; set; }
        public virtual DbSet<MASTER_TECHNICAL_EXPERT> MASTER_TECHNICAL_EXPERT { get; set; }
        public virtual DbSet<QUALITY_QM_ASSIGN_TE_MASTER> QUALITY_QM_ASSIGN_TE_MASTER { get; set; }
        public virtual DbSet<QUALITY_QM_TE_REMARK_DETAILS> QUALITY_QM_TE_REMARK_DETAILS { get; set; }
        public virtual DbSet<QUALITY_INSPECTION_REPORT_FILE> QUALITY_INSPECTION_REPORT_FILE { get; set; }
        public virtual DbSet<EFORM_DU_LOG> EFORM_DU_LOG { get; set; }
        public virtual DbSet<EFORM_TR_DETAIL_ITEM_MASTER> EFORM_TR_DETAIL_ITEM_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_GRADATION_TYPE_ITEM_MASTER> EFORM_TR_GRADATION_TYPE_ITEM_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_ITEM_APPLICABLE_DETAILS> EFORM_TR_ITEM_APPLICABLE_DETAILS { get; set; }
        public virtual DbSet<EFORM_TR_ITEM_OPTIONS_MASTER> EFORM_TR_ITEM_OPTIONS_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_LAYER_MASTER> EFORM_TR_LAYER_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_MAIN_ITEM_MASTER> EFORM_TR_MAIN_ITEM_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL> EFORM_TR_MAIN_ITEM_OPTIONS_SELECTED_DETAIL { get; set; }
        public virtual DbSet<EFORM_TR_SUBITEM_MASTER> EFORM_TR_SUBITEM_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL> EFORM_TR_SUBITEM_OPTIONS_SELECTED_DETAIL { get; set; }
        public virtual DbSet<EFORM_TR_TABLE_MASTER> EFORM_TR_TABLE_MASTER { get; set; }
        public virtual DbSet<EFORM_TR_TYPEA_DETAIL> EFORM_TR_TYPEA_DETAIL { get; set; }
        public virtual DbSet<EFORM_TR_TYPEA_SUMMARY> EFORM_TR_TYPEA_SUMMARY { get; set; }
        public virtual DbSet<EFORM_TR_TYPEB_DETAIL> EFORM_TR_TYPEB_DETAIL { get; set; }
        public virtual DbSet<EFORM_TR_TYPEB_SUMMARY> EFORM_TR_TYPEB_SUMMARY { get; set; }
        public virtual DbSet<EFORM_TR_TYPEC_DETAIL> EFORM_TR_TYPEC_DETAIL { get; set; }
        public virtual DbSet<EFORM_TR_TYPEC_SUMMARY> EFORM_TR_TYPEC_SUMMARY { get; set; }
        public virtual DbSet<EFORM_TR_UCS_TEST_DETAILS> EFORM_TR_UCS_TEST_DETAILS { get; set; }
        public virtual DbSet<ACC_CHQ_BOOK_DETAILS> ACC_CHQ_BOOK_DETAILS { get; set; }
        public virtual DbSet<REAT_MATSER_DEDUCTION_TYPE> REAT_MATSER_DEDUCTION_TYPE { get; set; }
        public virtual DbSet<REAT_OMMAS_HOLDING_ACCOUNT_PAYMENTS> REAT_OMMAS_HOLDING_ACCOUNT_PAYMENTS { get; set; }
        public virtual DbSet<ACC_HOLDING_SECURITY_AUTO_ENTRIES> ACC_HOLDING_SECURITY_AUTO_ENTRIES { get; set; }
        public virtual DbSet<QUALITY_MOB_IMEI_NO_SHADOW> QUALITY_MOB_IMEI_NO_SHADOW { get; set; }
        public virtual DbSet<ACC_BANK_DETAILS> ACC_BANK_DETAILS { get; set; }
        public virtual DbSet<EFORM_TEST_REPORT_FILE> EFORM_TEST_REPORT_FILE { get; set; }
        public virtual DbSet<WORKS_FREEZE_VTS> WORKS_FREEZE_VTS { get; set; }
        public virtual DbSet<EMARG_COMPLETED_WORK_DETAILS_SERVICE> EMARG_COMPLETED_WORK_DETAILS_SERVICE { get; set; }
        public virtual DbSet<NQM_LODGE_AND_DAILY_CLAIM_DETAILS> NQM_LODGE_AND_DAILY_CLAIM_DETAILS { get; set; }
        public virtual DbSet<NQM_TOUR_ALLOWANCE_MASTER> NQM_TOUR_ALLOWANCE_MASTER { get; set; }
        public virtual DbSet<NQM_TOUR_CLAIM_MODE_OF_TRAVEL> NQM_TOUR_CLAIM_MODE_OF_TRAVEL { get; set; }
        public virtual DbSet<NQM_TOUR_DISTRICT_DETAILS> NQM_TOUR_DISTRICT_DETAILS { get; set; }
        public virtual DbSet<NQM_TOUR_HONORARIUM_INSPECTION_OF_ROADS> NQM_TOUR_HONORARIUM_INSPECTION_OF_ROADS { get; set; }
        public virtual DbSet<NQM_TOUR_HONORARIUM_MEETING_WITH_PIU> NQM_TOUR_HONORARIUM_MEETING_WITH_PIU { get; set; }
        public virtual DbSet<NQM_TOUR_MASTER_LETTER_NUMBER> NQM_TOUR_MASTER_LETTER_NUMBER { get; set; }
        public virtual DbSet<NQM_TOUR_MISCELLANEOUS> NQM_TOUR_MISCELLANEOUS { get; set; }
        public virtual DbSet<NQM_TOUR_PERMISSION_DETAILS> NQM_TOUR_PERMISSION_DETAILS { get; set; }
        public virtual DbSet<NQM_TRAVEL_CLAIM_DETAILS> NQM_TRAVEL_CLAIM_DETAILS { get; set; }
        public virtual DbSet<PLAN_ROAD> PLAN_ROAD { get; set; }
        public virtual DbSet<VTS_ROADWISE_GPS_VEHICLE_COUNT> VTS_ROADWISE_GPS_VEHICLE_COUNT { get; set; }
        public virtual DbSet<VTS_VEHICLE_MASTER> VTS_VEHICLE_MASTER { get; set; }
        public virtual DbSet<VTS_VEHICLEWISE_GPS_DETAILS> VTS_VEHICLEWISE_GPS_DETAILS { get; set; }
        public virtual DbSet<ACC_BILL_SNA_HOLDING_MAPPING> ACC_BILL_SNA_HOLDING_MAPPING { get; set; }
        public virtual DbSet<NQM_TOUR_CLAIM_MASTER> NQM_TOUR_CLAIM_MASTER { get; set; }
        public virtual DbSet<MASTER_ATR_REGRADE_REASONS> MASTER_ATR_REGRADE_REASONS { get; set; }
        public virtual DbSet<QUALITY_SQM_ATR_FILE> QUALITY_SQM_ATR_FILE { get; set; }
        public virtual DbSet<MASTER_ADDITIVE> MASTER_ADDITIVE { get; set; }
        public virtual DbSet<MASTER_JMF> MASTER_JMF { get; set; }
        public virtual DbSet<PMIS_ACTIVITY_MASTER> PMIS_ACTIVITY_MASTER { get; set; }
        public virtual DbSet<PMIS_ADDITIVE_USED_DETAIL> PMIS_ADDITIVE_USED_DETAIL { get; set; }
        public virtual DbSet<PMIS_FDR_STABILIZE_CHAINAGE_WISE_DETAIL> PMIS_FDR_STABILIZE_CHAINAGE_WISE_DETAIL { get; set; }
        public virtual DbSet<PMIS_TRIAL_STRETCH_FDR_DETAIL> PMIS_TRIAL_STRETCH_FDR_DETAIL { get; set; }
        public virtual DbSet<IMS_PROPOSAL_TECH> IMS_PROPOSAL_TECH { get; set; }
        public virtual DbSet<IMS_SANCTIONED_PROJECTS> IMS_SANCTIONED_PROJECTS { get; set; }
        public virtual DbSet<VTS_GPS_FILES_DETAILS> VTS_GPS_FILES_DETAILS { get; set; }
        public virtual DbSet<VTS_UNFREEZE_WORKS> VTS_UNFREEZE_WORKS { get; set; }
        public virtual DbSet<VTS_ROADWISE_GPS_AVAILABILITY> VTS_ROADWISE_GPS_AVAILABILITY { get; set; }
        public virtual DbSet<ADMIN_TA_STATE> ADMIN_TA_STATE { get; set; }
        public virtual DbSet<IMS_UNLOCK_DETAILS> IMS_UNLOCK_DETAILS { get; set; }
        public virtual DbSet<EFORM_QM_OVERALL_GRADING> EFORM_QM_OVERALL_GRADING { get; set; }
    
        [DbFunction("Entities", "Split")]
        public virtual IQueryable<Split_Result> Split(string list, string splitOn)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[Entities].[Split](@List, @SplitOn)", listParameter, splitOnParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_DB_WB_GET_MONTH_YEAR_FROM_DURATION_")]
        public virtual IQueryable<UDF_ACC_DB_WB_GET_MONTH_YEAR_FROM_DURATION__Result> UDF_ACC_DB_WB_GET_MONTH_YEAR_FROM_DURATION_(Nullable<int> prm_Year, string prm_Duration_Type, Nullable<int> prm_Duration)
        {
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            var prm_Duration_TypeParameter = prm_Duration_Type != null ?
                new ObjectParameter("Prm_Duration_Type", prm_Duration_Type) :
                new ObjectParameter("Prm_Duration_Type", typeof(string));
    
            var prm_DurationParameter = prm_Duration.HasValue ?
                new ObjectParameter("Prm_Duration", prm_Duration) :
                new ObjectParameter("Prm_Duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_DB_WB_GET_MONTH_YEAR_FROM_DURATION__Result>("[Entities].[UDF_ACC_DB_WB_GET_MONTH_YEAR_FROM_DURATION_](@Prm_Year, @Prm_Duration_Type, @Prm_Duration)", prm_YearParameter, prm_Duration_TypeParameter, prm_DurationParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_EAUTH_AGR_AUTH_AMT")]
        public virtual IQueryable<UDF_ACC_EAUTH_AGR_AUTH_AMT_Result> UDF_ACC_EAUTH_AGR_AUTH_AMT(Nullable<int> prmAdminNDCode, Nullable<int> prmConId, Nullable<int> prmAgreementId, string prmPackageID, string prmFund)
        {
            var prmAdminNDCodeParameter = prmAdminNDCode.HasValue ?
                new ObjectParameter("prmAdminNDCode", prmAdminNDCode) :
                new ObjectParameter("prmAdminNDCode", typeof(int));
    
            var prmConIdParameter = prmConId.HasValue ?
                new ObjectParameter("prmConId", prmConId) :
                new ObjectParameter("prmConId", typeof(int));
    
            var prmAgreementIdParameter = prmAgreementId.HasValue ?
                new ObjectParameter("prmAgreementId", prmAgreementId) :
                new ObjectParameter("prmAgreementId", typeof(int));
    
            var prmPackageIDParameter = prmPackageID != null ?
                new ObjectParameter("prmPackageID", prmPackageID) :
                new ObjectParameter("prmPackageID", typeof(string));
    
            var prmFundParameter = prmFund != null ?
                new ObjectParameter("PrmFund", prmFund) :
                new ObjectParameter("PrmFund", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_EAUTH_AGR_AUTH_AMT_Result>("[Entities].[UDF_ACC_EAUTH_AGR_AUTH_AMT](@prmAdminNDCode, @prmConId, @prmAgreementId, @prmPackageID, @PrmFund)", prmAdminNDCodeParameter, prmConIdParameter, prmAgreementIdParameter, prmPackageIDParameter, prmFundParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_EXPN_AMT")]
        public virtual IQueryable<UDF_ACC_EXPN_AMT_Result> UDF_ACC_EXPN_AMT(Nullable<int> state, Nullable<int> district, Nullable<int> month, Nullable<int> yEAR, string pfundType, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var pfundTypeParameter = pfundType != null ?
                new ObjectParameter("PfundType", pfundType) :
                new ObjectParameter("PfundType", typeof(string));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_EXPN_AMT_Result>("[Entities].[UDF_ACC_EXPN_AMT](@State, @District, @Month, @YEAR, @PfundType, @Collaboration, @PMGSY, @AGENCY)", stateParameter, districtParameter, monthParameter, yEARParameter, pfundTypeParameter, collaborationParameter, pMGSYParameter, aGENCYParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_EXPN_AMT_ABSTRACT")]
        public virtual IQueryable<UDF_ACC_EXPN_AMT_ABSTRACT_Result> UDF_ACC_EXPN_AMT_ABSTRACT(Nullable<int> state, Nullable<int> district, Nullable<int> month, Nullable<int> yEAR, string pfundType, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var pfundTypeParameter = pfundType != null ?
                new ObjectParameter("PfundType", pfundType) :
                new ObjectParameter("PfundType", typeof(string));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_EXPN_AMT_ABSTRACT_Result>("[Entities].[UDF_ACC_EXPN_AMT_ABSTRACT](@State, @District, @Month, @YEAR, @PfundType, @Collaboration, @PMGSY, @AGENCY)", stateParameter, districtParameter, monthParameter, yEARParameter, pfundTypeParameter, collaborationParameter, pMGSYParameter, aGENCYParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES")]
        public virtual IQueryable<UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_Result> UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_Result>("[Entities].[UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES](@Prm_Fund_Type, @Prm_Admin_Nd_Code, @Prm_Month, @Prm_Year, @Prm_lvl)", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GEN_GET_BA_CASH_HEADS")]
        public virtual IQueryable<UDF_ACC_GEN_GET_BA_CASH_HEADS_Result> UDF_ACC_GEN_GET_BA_CASH_HEADS(string prm_Fund_Type, Nullable<short> prm_lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GEN_GET_BA_CASH_HEADS_Result>("[Entities].[UDF_ACC_GEN_GET_BA_CASH_HEADS](@Prm_Fund_Type, @Prm_lvl)", prm_Fund_TypeParameter, prm_lvlParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GEN_GET_BA_CASH_Opening_Balances")]
        public virtual IQueryable<UDF_ACC_GEN_GET_BA_CASH_Opening_Balances_Result> UDF_ACC_GEN_GET_BA_CASH_Opening_Balances(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GEN_GET_BA_CASH_Opening_Balances_Result>("[Entities].[UDF_ACC_GEN_GET_BA_CASH_Opening_Balances](@Prm_Fund_Type, @Prm_Admin_Nd_Code, @Prm_Month, @Prm_Year, @Prm_lvl)", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GEN_GET_CLOSING_BALANCES")]
        public virtual IQueryable<UDF_ACC_GEN_GET_CLOSING_BALANCES_Result> UDF_ACC_GEN_GET_CLOSING_BALANCES(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GEN_GET_CLOSING_BALANCES_Result>("[Entities].[UDF_ACC_GEN_GET_CLOSING_BALANCES](@Prm_Fund_Type, @Prm_Admin_Nd_Code, @Prm_Month, @Prm_Year, @Prm_lvl)", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GET_ASSET_HEADS")]
        public virtual IQueryable<UDF_ACC_GET_ASSET_HEADS_Result> UDF_ACC_GET_ASSET_HEADS(string prm_Fund_Type, string prm_central_state_fund)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_central_state_fundParameter = prm_central_state_fund != null ?
                new ObjectParameter("prm_central_state_fund", prm_central_state_fund) :
                new ObjectParameter("prm_central_state_fund", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GET_ASSET_HEADS_Result>("[Entities].[UDF_ACC_GET_ASSET_HEADS](@Prm_Fund_Type, @prm_central_state_fund)", prm_Fund_TypeParameter, prm_central_state_fundParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GET_OB_CLOSING_DETAILS")]
        public virtual IQueryable<UDF_ACC_GET_OB_CLOSING_DETAILS_Result> UDF_ACC_GET_OB_CLOSING_DETAILS(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, string fundType)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("AgencyCode", agencyCode) :
                new ObjectParameter("AgencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GET_OB_CLOSING_DETAILS_Result>("[Entities].[UDF_ACC_GET_OB_CLOSING_DETAILS](@StateCode, @AgencyCode, @AdminNdCode, @FundType)", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, fundTypeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GET_ROAD_EXPN_AMT")]
        public virtual IQueryable<UDF_ACC_GET_ROAD_EXPN_AMT_Result> UDF_ACC_GET_ROAD_EXPN_AMT(Nullable<int> stateCode, Nullable<int> accMonth, Nullable<int> accYear, Nullable<int> type, Nullable<int> pmgsyScheme)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var accMonthParameter = accMonth.HasValue ?
                new ObjectParameter("AccMonth", accMonth) :
                new ObjectParameter("AccMonth", typeof(int));
    
            var accYearParameter = accYear.HasValue ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pmgsySchemeParameter = pmgsyScheme.HasValue ?
                new ObjectParameter("PmgsyScheme", pmgsyScheme) :
                new ObjectParameter("PmgsyScheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GET_ROAD_EXPN_AMT_Result>("[Entities].[UDF_ACC_GET_ROAD_EXPN_AMT](@StateCode, @AccMonth, @AccYear, @Type, @PmgsyScheme)", stateCodeParameter, accMonthParameter, accYearParameter, typeParameter, pmgsySchemeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GET_ROAD_EXPN_AMT_DAYWISE")]
        public virtual IQueryable<UDF_ACC_GET_ROAD_EXPN_AMT_DAYWISE_Result> UDF_ACC_GET_ROAD_EXPN_AMT_DAYWISE(Nullable<int> pmgsyScheme, Nullable<int> stateCode, Nullable<int> district, Nullable<System.DateTime> billDate)
        {
            var pmgsySchemeParameter = pmgsyScheme.HasValue ?
                new ObjectParameter("PmgsyScheme", pmgsyScheme) :
                new ObjectParameter("PmgsyScheme", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var billDateParameter = billDate.HasValue ?
                new ObjectParameter("BillDate", billDate) :
                new ObjectParameter("BillDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GET_ROAD_EXPN_AMT_DAYWISE_Result>("[Entities].[UDF_ACC_GET_ROAD_EXPN_AMT_DAYWISE](@PmgsyScheme, @StateCode, @District, @BillDate)", pmgsySchemeParameter, stateCodeParameter, districtParameter, billDateParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GET_ROAD_EXPN_AMT_YEARWISE")]
        public virtual IQueryable<UDF_ACC_GET_ROAD_EXPN_AMT_YEARWISE_Result> UDF_ACC_GET_ROAD_EXPN_AMT_YEARWISE(Nullable<int> stateCode, Nullable<int> accMonth, Nullable<int> accYear, Nullable<int> pmgsyScheme)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var accMonthParameter = accMonth.HasValue ?
                new ObjectParameter("AccMonth", accMonth) :
                new ObjectParameter("AccMonth", typeof(int));
    
            var accYearParameter = accYear.HasValue ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(int));
    
            var pmgsySchemeParameter = pmgsyScheme.HasValue ?
                new ObjectParameter("PmgsyScheme", pmgsyScheme) :
                new ObjectParameter("PmgsyScheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GET_ROAD_EXPN_AMT_YEARWISE_Result>("[Entities].[UDF_ACC_GET_ROAD_EXPN_AMT_YEARWISE](@StateCode, @AccMonth, @AccYear, @PmgsyScheme)", stateCodeParameter, accMonthParameter, accYearParameter, pmgsySchemeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GET_ROAD_EXPN_RUNNING_AMT")]
        public virtual IQueryable<UDF_ACC_GET_ROAD_EXPN_RUNNING_AMT_Result> UDF_ACC_GET_ROAD_EXPN_RUNNING_AMT(Nullable<int> stateCode, Nullable<int> accMonth, Nullable<int> accYear, Nullable<int> type, Nullable<int> pmgsyScheme)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var accMonthParameter = accMonth.HasValue ?
                new ObjectParameter("AccMonth", accMonth) :
                new ObjectParameter("AccMonth", typeof(int));
    
            var accYearParameter = accYear.HasValue ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pmgsySchemeParameter = pmgsyScheme.HasValue ?
                new ObjectParameter("PmgsyScheme", pmgsyScheme) :
                new ObjectParameter("PmgsyScheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GET_ROAD_EXPN_RUNNING_AMT_Result>("[Entities].[UDF_ACC_GET_ROAD_EXPN_RUNNING_AMT](@StateCode, @AccMonth, @AccYear, @Type, @PmgsyScheme)", stateCodeParameter, accMonthParameter, accYearParameter, typeParameter, pmgsySchemeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_AGREEMENTWISE_OB")]
        public virtual IQueryable<UDF_ACC_RPT_AGREEMENTWISE_OB_Result> UDF_ACC_RPT_AGREEMENTWISE_OB(Nullable<int> p_INT_StateCode, Nullable<int> p_INT_AgencyCode, Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID, Nullable<int> p_INT_HeadID, Nullable<int> p_INT_Collab)
        {
            var p_INT_StateCodeParameter = p_INT_StateCode.HasValue ?
                new ObjectParameter("P_INT_StateCode", p_INT_StateCode) :
                new ObjectParameter("P_INT_StateCode", typeof(int));
    
            var p_INT_AgencyCodeParameter = p_INT_AgencyCode.HasValue ?
                new ObjectParameter("P_INT_AgencyCode", p_INT_AgencyCode) :
                new ObjectParameter("P_INT_AgencyCode", typeof(int));
    
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(int));
    
            var p_INT_CollabParameter = p_INT_Collab.HasValue ?
                new ObjectParameter("P_INT_Collab", p_INT_Collab) :
                new ObjectParameter("P_INT_Collab", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_AGREEMENTWISE_OB_Result>("[Entities].[UDF_ACC_RPT_AGREEMENTWISE_OB](@P_INT_StateCode, @P_INT_AgencyCode, @P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID, @P_INT_HeadID, @P_INT_Collab)", p_INT_StateCodeParameter, p_INT_AgencyCodeParameter, p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter, p_INT_HeadIDParameter, p_INT_CollabParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_AGR_ROAD_DETAILS")]
        public virtual IQueryable<UDF_ACC_RPT_GET_AGR_ROAD_DETAILS_Result> UDF_ACC_RPT_GET_AGR_ROAD_DETAILS(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_AGR_ROAD_DETAILS_Result>("[Entities].[UDF_ACC_RPT_GET_AGR_ROAD_DETAILS](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_Result> UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_HeadID, Nullable<int> p_INT_FACode)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(int));
    
            var p_INT_FACodeParameter = p_INT_FACode.HasValue ?
                new ObjectParameter("P_INT_FACode", p_INT_FACode) :
                new ObjectParameter("P_INT_FACode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_HeadID, @P_INT_FACode)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_HeadIDParameter, p_INT_FACodeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_05092013")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_05092013_Result> UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_05092013(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_05092013_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_05092013](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_ALLPIU")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_ALLPIU_Result> UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_ALLPIU(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_HeadID, Nullable<int> p_INT_FACode)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(int));
    
            var p_INT_FACodeParameter = p_INT_FACode.HasValue ?
                new ObjectParameter("P_INT_FACode", p_INT_FACode) :
                new ObjectParameter("P_INT_FACode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_ALLPIU_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_EXPHEADWISE_ALLPIU](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_HeadID, @P_INT_FACode)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_HeadIDParameter, p_INT_FACodeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_FACHANGE_EXPHEADWISE")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_FACHANGE_EXPHEADWISE_Result> UDF_ACC_RPT_GET_BALANCE_FACHANGE_EXPHEADWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_HeadID, Nullable<int> p_INT_FACode)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(int));
    
            var p_INT_FACodeParameter = p_INT_FACode.HasValue ?
                new ObjectParameter("P_INT_FACode", p_INT_FACode) :
                new ObjectParameter("P_INT_FACode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_FACHANGE_EXPHEADWISE_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_FACHANGE_EXPHEADWISE](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_HeadID, @P_INT_FACode)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_HeadIDParameter, p_INT_FACodeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_FOR_EXPHEAD")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_FOR_EXPHEAD_Result> UDF_ACC_RPT_GET_BALANCE_FOR_EXPHEAD(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<short> p_SINT_HeadID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_SINT_HeadIDParameter = p_SINT_HeadID.HasValue ?
                new ObjectParameter("P_SINT_HeadID", p_SINT_HeadID) :
                new ObjectParameter("P_SINT_HeadID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_FOR_EXPHEAD_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_FOR_EXPHEAD](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_SINT_HeadID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_SINT_HeadIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_FOR_NONEXPHEAD")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_FOR_NONEXPHEAD_Result> UDF_ACC_RPT_GET_BALANCE_FOR_NONEXPHEAD(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<short> p_SINT_HeadID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_SINT_HeadIDParameter = p_SINT_HeadID.HasValue ?
                new ObjectParameter("P_SINT_HeadID", p_SINT_HeadID) :
                new ObjectParameter("P_SINT_HeadID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_FOR_NONEXPHEAD_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_FOR_NONEXPHEAD](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_SINT_HeadID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_SINT_HeadIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_HEADWISE")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_HEADWISE_Result> UDF_ACC_RPT_GET_BALANCE_HEADWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_HEADWISE_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_HEADWISE](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_Result> UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_CHAR_CreditDebit)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_ALLPIU")]
        public virtual IQueryable<UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_ALLPIU_Result> UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_ALLPIU(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_ALLPIU_Result>("[Entities].[UDF_ACC_RPT_GET_BALANCE_RUNNING_ACCOUNT_ALLPIU](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_CHAR_CreditDebit)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_EXP_PF")]
        public virtual IQueryable<UDF_ACC_RPT_GET_EXP_PF_Result> UDF_ACC_RPT_GET_EXP_PF(Nullable<int> p_INT_StateCode, Nullable<int> p_INT_AgencyCode, Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_Fund, Nullable<int> p_INT_RPT_ID, Nullable<int> p_isAllPIU)
        {
            var p_INT_StateCodeParameter = p_INT_StateCode.HasValue ?
                new ObjectParameter("P_INT_StateCode", p_INT_StateCode) :
                new ObjectParameter("P_INT_StateCode", typeof(int));
    
            var p_INT_AgencyCodeParameter = p_INT_AgencyCode.HasValue ?
                new ObjectParameter("P_INT_AgencyCode", p_INT_AgencyCode) :
                new ObjectParameter("P_INT_AgencyCode", typeof(int));
    
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_FundParameter = p_CHAR_Fund != null ?
                new ObjectParameter("P_CHAR_Fund", p_CHAR_Fund) :
                new ObjectParameter("P_CHAR_Fund", typeof(string));
    
            var p_INT_RPT_IDParameter = p_INT_RPT_ID.HasValue ?
                new ObjectParameter("P_INT_RPT_ID", p_INT_RPT_ID) :
                new ObjectParameter("P_INT_RPT_ID", typeof(int));
    
            var p_isAllPIUParameter = p_isAllPIU.HasValue ?
                new ObjectParameter("P_isAllPIU", p_isAllPIU) :
                new ObjectParameter("P_isAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_EXP_PF_Result>("[Entities].[UDF_ACC_RPT_GET_EXP_PF](@P_INT_StateCode, @P_INT_AgencyCode, @P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_Fund, @P_INT_RPT_ID, @P_isAllPIU)", p_INT_StateCodeParameter, p_INT_AgencyCodeParameter, p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_FundParameter, p_INT_RPT_IDParameter, p_isAllPIUParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_FINAL_PAYMENT_DATE")]
        public virtual IQueryable<UDF_ACC_RPT_GET_FINAL_PAYMENT_DATE_Result> UDF_ACC_RPT_GET_FINAL_PAYMENT_DATE(Nullable<int> iMS_PR_ROAD_CODE)
        {
            var iMS_PR_ROAD_CODEParameter = iMS_PR_ROAD_CODE.HasValue ?
                new ObjectParameter("IMS_PR_ROAD_CODE", iMS_PR_ROAD_CODE) :
                new ObjectParameter("IMS_PR_ROAD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_FINAL_PAYMENT_DATE_Result>("[Entities].[UDF_ACC_RPT_GET_FINAL_PAYMENT_DATE](@IMS_PR_ROAD_CODE)", iMS_PR_ROAD_CODEParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE")]
        public virtual IQueryable<UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_Result> UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE(Nullable<int> p_INT_AdminNDCode, string p_CHAR_fundType, string p_STR_HEADSTR, Nullable<int> p_INT_FACODE)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_STR_HEADSTRParameter = p_STR_HEADSTR != null ?
                new ObjectParameter("P_STR_HEADSTR", p_STR_HEADSTR) :
                new ObjectParameter("P_STR_HEADSTR", typeof(string));
    
            var p_INT_FACODEParameter = p_INT_FACODE.HasValue ?
                new ObjectParameter("P_INT_FACODE", p_INT_FACODE) :
                new ObjectParameter("P_INT_FACODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_Result>("[Entities].[UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE](@P_INT_AdminNDCode, @P_CHAR_fundType, @P_STR_HEADSTR, @P_INT_FACODE)", p_INT_AdminNDCodeParameter, p_CHAR_fundTypeParameter, p_STR_HEADSTRParameter, p_INT_FACODEParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_UPTO_YEAR")]
        public virtual IQueryable<UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_UPTO_YEAR_Result> UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_UPTO_YEAR(Nullable<int> p_INT_AdminNDCode, string p_CHAR_fundType, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_STR_HEADSTR, string p_INT_FACODE)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_STR_HEADSTRParameter = p_STR_HEADSTR != null ?
                new ObjectParameter("P_STR_HEADSTR", p_STR_HEADSTR) :
                new ObjectParameter("P_STR_HEADSTR", typeof(string));
    
            var p_INT_FACODEParameter = p_INT_FACODE != null ?
                new ObjectParameter("P_INT_FACODE", p_INT_FACODE) :
                new ObjectParameter("P_INT_FACODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_UPTO_YEAR_Result>("[Entities].[UDF_ACC_RPT_GET_FIRST_FINAL_PAYMENT_DATE_UPTO_YEAR](@P_INT_AdminNDCode, @P_CHAR_fundType, @P_INT_AccMonth, @P_INT_AccYear, @P_STR_HEADSTR, @P_INT_FACODE)", p_INT_AdminNDCodeParameter, p_CHAR_fundTypeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_STR_HEADSTRParameter, p_INT_FACODEParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_FP_ROAD_LIST")]
        public virtual IQueryable<UDF_ACC_RPT_GET_FP_ROAD_LIST_Result> UDF_ACC_RPT_GET_FP_ROAD_LIST(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_DURATION, string p_STR_HEADSTR, Nullable<int> p_INT_FACODE, Nullable<int> p_INT_COMP_STATUS)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_DURATIONParameter = p_INT_DURATION.HasValue ?
                new ObjectParameter("P_INT_DURATION", p_INT_DURATION) :
                new ObjectParameter("P_INT_DURATION", typeof(int));
    
            var p_STR_HEADSTRParameter = p_STR_HEADSTR != null ?
                new ObjectParameter("P_STR_HEADSTR", p_STR_HEADSTR) :
                new ObjectParameter("P_STR_HEADSTR", typeof(string));
    
            var p_INT_FACODEParameter = p_INT_FACODE.HasValue ?
                new ObjectParameter("P_INT_FACODE", p_INT_FACODE) :
                new ObjectParameter("P_INT_FACODE", typeof(int));
    
            var p_INT_COMP_STATUSParameter = p_INT_COMP_STATUS.HasValue ?
                new ObjectParameter("P_INT_COMP_STATUS", p_INT_COMP_STATUS) :
                new ObjectParameter("P_INT_COMP_STATUS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_FP_ROAD_LIST_Result>("[Entities].[UDF_ACC_RPT_GET_FP_ROAD_LIST](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_DURATION, @P_STR_HEADSTR, @P_INT_FACODE, @P_INT_COMP_STATUS)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_DURATIONParameter, p_STR_HEADSTRParameter, p_INT_FACODEParameter, p_INT_COMP_STATUSParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_HEAD_OP_LVL")]
        public virtual IQueryable<UDF_ACC_RPT_GET_HEAD_OP_LVL_Result> UDF_ACC_RPT_GET_HEAD_OP_LVL(Nullable<int> p_INT_LvlID)
        {
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_HEAD_OP_LVL_Result>("[Entities].[UDF_ACC_RPT_GET_HEAD_OP_LVL](@P_INT_LvlID)", p_INT_LvlIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_IMS_YEAR")]
        public virtual IQueryable<UDF_ACC_RPT_GET_IMS_YEAR_Result> UDF_ACC_RPT_GET_IMS_YEAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_IMS_YEAR_Result>("[Entities].[UDF_ACC_RPT_GET_IMS_YEAR]()");
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_ND_DETAILS")]
        public virtual IQueryable<UDF_ACC_RPT_GET_ND_DETAILS_Result> UDF_ACC_RPT_GET_ND_DETAILS(Nullable<int> adminNDCode)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_ND_DETAILS_Result>("[Entities].[UDF_ACC_RPT_GET_ND_DETAILS](@AdminNDCode)", adminNDCodeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_ROAD_LIST_HEADWISE_COMP_PROG")]
        public virtual IQueryable<UDF_ACC_RPT_GET_ROAD_LIST_HEADWISE_COMP_PROG_Result> UDF_ACC_RPT_GET_ROAD_LIST_HEADWISE_COMP_PROG(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LVL_ID, Nullable<int> p_INT_DURATION, string p_STR_HEADSTR, string p_INT_FACODE, string p_INT_COMP_STATUS)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LVL_IDParameter = p_INT_LVL_ID.HasValue ?
                new ObjectParameter("P_INT_LVL_ID", p_INT_LVL_ID) :
                new ObjectParameter("P_INT_LVL_ID", typeof(int));
    
            var p_INT_DURATIONParameter = p_INT_DURATION.HasValue ?
                new ObjectParameter("P_INT_DURATION", p_INT_DURATION) :
                new ObjectParameter("P_INT_DURATION", typeof(int));
    
            var p_STR_HEADSTRParameter = p_STR_HEADSTR != null ?
                new ObjectParameter("P_STR_HEADSTR", p_STR_HEADSTR) :
                new ObjectParameter("P_STR_HEADSTR", typeof(string));
    
            var p_INT_FACODEParameter = p_INT_FACODE != null ?
                new ObjectParameter("P_INT_FACODE", p_INT_FACODE) :
                new ObjectParameter("P_INT_FACODE", typeof(string));
    
            var p_INT_COMP_STATUSParameter = p_INT_COMP_STATUS != null ?
                new ObjectParameter("P_INT_COMP_STATUS", p_INT_COMP_STATUS) :
                new ObjectParameter("P_INT_COMP_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_ROAD_LIST_HEADWISE_COMP_PROG_Result>("[Entities].[UDF_ACC_RPT_GET_ROAD_LIST_HEADWISE_COMP_PROG](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LVL_ID, @P_INT_DURATION, @P_STR_HEADSTR, @P_INT_FACODE, @P_INT_COMP_STATUS)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LVL_IDParameter, p_INT_DURATIONParameter, p_STR_HEADSTRParameter, p_INT_FACODEParameter, p_INT_COMP_STATUSParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_GET_STATEWISE_EXPN_AMT")]
        public virtual IQueryable<UDF_ACC_RPT_GET_STATEWISE_EXPN_AMT_Result> UDF_ACC_RPT_GET_STATEWISE_EXPN_AMT(Nullable<int> p_STATECODE, string p_FUNDType, Nullable<int> p_Year, string eXP_TYPE)
        {
            var p_STATECODEParameter = p_STATECODE.HasValue ?
                new ObjectParameter("P_STATECODE", p_STATECODE) :
                new ObjectParameter("P_STATECODE", typeof(int));
    
            var p_FUNDTypeParameter = p_FUNDType != null ?
                new ObjectParameter("P_FUNDType", p_FUNDType) :
                new ObjectParameter("P_FUNDType", typeof(string));
    
            var p_YearParameter = p_Year.HasValue ?
                new ObjectParameter("P_Year", p_Year) :
                new ObjectParameter("P_Year", typeof(int));
    
            var eXP_TYPEParameter = eXP_TYPE != null ?
                new ObjectParameter("EXP_TYPE", eXP_TYPE) :
                new ObjectParameter("EXP_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_GET_STATEWISE_EXPN_AMT_Result>("[Entities].[UDF_ACC_RPT_GET_STATEWISE_EXPN_AMT](@P_STATECODE, @P_FUNDType, @P_Year, @EXP_TYPE)", p_STATECODEParameter, p_FUNDTypeParameter, p_YearParameter, eXP_TYPEParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_AF")]
        public virtual IQueryable<UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_AF_Result> UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_AF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_AF_Result>("[Entities].[UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_AF](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_MF")]
        public virtual IQueryable<UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_MF_Result> UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_MF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_MF_Result>("[Entities].[UDF_ACC_RPT_IE_SRRDA_ALL_DPIU_MF](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_IE_SRRDA_DPIU_AF")]
        public virtual IQueryable<UDF_ACC_RPT_IE_SRRDA_DPIU_AF_Result> UDF_ACC_RPT_IE_SRRDA_DPIU_AF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID, Nullable<int> p_INT_IsAllDpiu)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            var p_INT_IsAllDpiuParameter = p_INT_IsAllDpiu.HasValue ?
                new ObjectParameter("P_INT_IsAllDpiu", p_INT_IsAllDpiu) :
                new ObjectParameter("P_INT_IsAllDpiu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_IE_SRRDA_DPIU_AF_Result>("[Entities].[UDF_ACC_RPT_IE_SRRDA_DPIU_AF](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID, @P_INT_IsAllDpiu)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter, p_INT_IsAllDpiuParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_IE_SRRDA_DPIU_MF")]
        public virtual IQueryable<UDF_ACC_RPT_IE_SRRDA_DPIU_MF_Result> UDF_ACC_RPT_IE_SRRDA_DPIU_MF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID, Nullable<int> p_INT_IsAllDpiu)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            var p_INT_IsAllDpiuParameter = p_INT_IsAllDpiu.HasValue ?
                new ObjectParameter("P_INT_IsAllDpiu", p_INT_IsAllDpiu) :
                new ObjectParameter("P_INT_IsAllDpiu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_IE_SRRDA_DPIU_MF_Result>("[Entities].[UDF_ACC_RPT_IE_SRRDA_DPIU_MF](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_INT_LvlID, @P_INT_IsAllDpiu)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter, p_INT_IsAllDpiuParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_LEDGER_GET_ROADS_COPMPLETED_UPTO_CURRENT_MONTH")]
        public virtual IQueryable<UDF_ACC_RPT_LEDGER_GET_ROADS_COPMPLETED_UPTO_CURRENT_MONTH_Result> UDF_ACC_RPT_LEDGER_GET_ROADS_COPMPLETED_UPTO_CURRENT_MONTH(Nullable<int> prmAdminNDCode, Nullable<int> prmMonth, Nullable<int> prmYear, string prmFundType, Nullable<int> prmDuration)
        {
            var prmAdminNDCodeParameter = prmAdminNDCode.HasValue ?
                new ObjectParameter("prmAdminNDCode", prmAdminNDCode) :
                new ObjectParameter("prmAdminNDCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("prmMonth", prmMonth) :
                new ObjectParameter("prmMonth", typeof(int));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("prmYear", prmYear) :
                new ObjectParameter("prmYear", typeof(int));
    
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("prmFundType", prmFundType) :
                new ObjectParameter("prmFundType", typeof(string));
    
            var prmDurationParameter = prmDuration.HasValue ?
                new ObjectParameter("prmDuration", prmDuration) :
                new ObjectParameter("prmDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_LEDGER_GET_ROADS_COPMPLETED_UPTO_CURRENT_MONTH_Result>("[Entities].[UDF_ACC_RPT_LEDGER_GET_ROADS_COPMPLETED_UPTO_CURRENT_MONTH](@prmAdminNDCode, @prmMonth, @prmYear, @prmFundType, @prmDuration)", prmAdminNDCodeParameter, prmMonthParameter, prmYearParameter, prmFundTypeParameter, prmDurationParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_SCH_GET_FA_BY_ORDER")]
        public virtual IQueryable<UDF_ACC_RPT_SCH_GET_FA_BY_ORDER_Result> UDF_ACC_RPT_SCH_GET_FA_BY_ORDER(string pRM_FA_CODE)
        {
            var pRM_FA_CODEParameter = pRM_FA_CODE != null ?
                new ObjectParameter("PRM_FA_CODE", pRM_FA_CODE) :
                new ObjectParameter("PRM_FA_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_SCH_GET_FA_BY_ORDER_Result>("[Entities].[UDF_ACC_RPT_SCH_GET_FA_BY_ORDER](@PRM_FA_CODE)", pRM_FA_CODEParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_SHOW_BALANCE_HEADWISE")]
        public virtual IQueryable<UDF_ACC_RPT_SHOW_BALANCE_HEADWISE_Result> UDF_ACC_RPT_SHOW_BALANCE_HEADWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit, string p_CHAR_LvlID, Nullable<int> p_INT_HeadID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            var p_CHAR_LvlIDParameter = p_CHAR_LvlID != null ?
                new ObjectParameter("P_CHAR_LvlID", p_CHAR_LvlID) :
                new ObjectParameter("P_CHAR_LvlID", typeof(string));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_SHOW_BALANCE_HEADWISE_Result>("[Entities].[UDF_ACC_RPT_SHOW_BALANCE_HEADWISE](@P_INT_AdminNDCode, @P_INT_AccMonth, @P_INT_AccYear, @P_CHAR_fundType, @P_CHAR_CreditDebit, @P_CHAR_LvlID, @P_INT_HeadID)", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter, p_CHAR_LvlIDParameter, p_INT_HeadIDParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_RPT_SPLIT")]
        public virtual IQueryable<UDF_ACC_RPT_SPLIT_Result> UDF_ACC_RPT_SPLIT(string sText, string sDelim)
        {
            var sTextParameter = sText != null ?
                new ObjectParameter("sText", sText) :
                new ObjectParameter("sText", typeof(string));
    
            var sDelimParameter = sDelim != null ?
                new ObjectParameter("sDelim", sDelim) :
                new ObjectParameter("sDelim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_RPT_SPLIT_Result>("[Entities].[UDF_ACC_RPT_SPLIT](@sText, @sDelim)", sTextParameter, sDelimParameter);
        }
    
        [DbFunction("Entities", "UDF_ATR_NQM")]
        public virtual IQueryable<UDF_ATR_NQM_Result> UDF_ATR_NQM(Nullable<int> qMCODE, Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth)
        {
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ATR_NQM_Result>("[Entities].[UDF_ATR_NQM](@QMCODE, @fromyear, @frommonth, @toyear, @tomonth)", qMCODEParameter, fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter);
        }
    
        [DbFunction("Entities", "UDF_AWARD_DETAILS")]
        public virtual IQueryable<UDF_AWARD_DETAILS_Result> UDF_AWARD_DETAILS(Nullable<int> state, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_AWARD_DETAILS_Result>("[Entities].[UDF_AWARD_DETAILS](@State, @PMGSY)", stateParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY")]
        public virtual IQueryable<UDF_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY_Result> UDF_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY(Nullable<int> state, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> cOLLABORATION, string cONNECTIVITY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var cONNECTIVITYParameter = cONNECTIVITY != null ?
                new ObjectParameter("CONNECTIVITY", cONNECTIVITY) :
                new ObjectParameter("CONNECTIVITY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY_Result>("[Entities].[UDF_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY](@State, @DISTRICT, @BLOCK, @YEAR, @BATCH, @COLLABORATION, @CONNECTIVITY)", stateParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter, cOLLABORATIONParameter, cONNECTIVITYParameter);
        }
    
        [DbFunction("Entities", "UDF_BUILDING_PROPOSAL")]
        public virtual IQueryable<UDF_BUILDING_PROPOSAL_Result> UDF_BUILDING_PROPOSAL(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> eACODE, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var eACODEParameter = eACODE.HasValue ?
                new ObjectParameter("EACODE", eACODE) :
                new ObjectParameter("EACODE", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_BUILDING_PROPOSAL_Result>("[Entities].[UDF_BUILDING_PROPOSAL](@STATE, @DISTRICT, @BLOCK, @YEAR, @EACODE, @PMGSY)", sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, eACODEParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_CLUSTER_CONNECTED_COUNT")]
        public virtual IQueryable<UDF_CLUSTER_CONNECTED_COUNT_Result> UDF_CLUSTER_CONNECTED_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, Nullable<int> month, Nullable<int> year)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CLUSTER_CONNECTED_COUNT_Result>("[Entities].[UDF_CLUSTER_CONNECTED_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY, @Month, @year)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, monthParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_CLUSTER_DROPPED_COUNT")]
        public virtual IQueryable<UDF_CLUSTER_DROPPED_COUNT_Result> UDF_CLUSTER_DROPPED_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CLUSTER_DROPPED_COUNT_Result>("[Entities].[UDF_CLUSTER_DROPPED_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY, @YEAR, @MONTH)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, yEARParameter, mONTHParameter);
        }
    
        [DbFunction("Entities", "UDF_CLUSTER_PHASE_WISE")]
        public virtual IQueryable<UDF_CLUSTER_PHASE_WISE_Result> UDF_CLUSTER_PHASE_WISE(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CLUSTER_PHASE_WISE_Result>("[Entities].[UDF_CLUSTER_PHASE_WISE](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_CLUSTER_SANCTION_COUNT")]
        public virtual IQueryable<UDF_CLUSTER_SANCTION_COUNT_Result> UDF_CLUSTER_SANCTION_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CLUSTER_SANCTION_COUNT_Result>("[Entities].[UDF_CLUSTER_SANCTION_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY, @YEAR, @MONTH)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, yEARParameter, mONTHParameter);
        }
    
        [DbFunction("Entities", "UDF_CN_PCI_SURFACE_LENGTH")]
        public virtual IQueryable<UDF_CN_PCI_SURFACE_LENGTH_Result> UDF_CN_PCI_SURFACE_LENGTH(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CN_PCI_SURFACE_LENGTH_Result>("[Entities].[UDF_CN_PCI_SURFACE_LENGTH](@Level, @State, @District, @Block, @PMGSY)", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_CN_POP_HAB_COUNT")]
        public virtual IQueryable<UDF_CN_POP_HAB_COUNT_Result> UDF_CN_POP_HAB_COUNT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string conStatus, string habStatus, Nullable<int> censusYear, string type, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var conStatusParameter = conStatus != null ?
                new ObjectParameter("ConStatus", conStatus) :
                new ObjectParameter("ConStatus", typeof(string));
    
            var habStatusParameter = habStatus != null ?
                new ObjectParameter("HabStatus", habStatus) :
                new ObjectParameter("HabStatus", typeof(string));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CN_POP_HAB_COUNT_Result>("[Entities].[UDF_CN_POP_HAB_COUNT](@State, @District, @Block, @ConStatus, @HabStatus, @CensusYear, @Type, @PMGSY)", stateParameter, districtParameter, blockParameter, conStatusParameter, habStatusParameter, censusYearParameter, typeParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_CN_SURFACE_LENGTH")]
        public virtual IQueryable<UDF_CN_SURFACE_LENGTH_Result> UDF_CN_SURFACE_LENGTH(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CN_SURFACE_LENGTH_Result>("[Entities].[UDF_CN_SURFACE_LENGTH](@Level, @State, @District, @Block, @PMGSY)", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_CNCPL_REPORT")]
        public virtual IQueryable<UDF_CNCPL_REPORT_Result> UDF_CNCPL_REPORT(Nullable<int> pLAN_CN_ROAD_CODE)
        {
            var pLAN_CN_ROAD_CODEParameter = pLAN_CN_ROAD_CODE.HasValue ?
                new ObjectParameter("PLAN_CN_ROAD_CODE", pLAN_CN_ROAD_CODE) :
                new ObjectParameter("PLAN_CN_ROAD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CNCPL_REPORT_Result>("[Entities].[UDF_CNCPL_REPORT](@PLAN_CN_ROAD_CODE)", pLAN_CN_ROAD_CODEParameter);
        }
    
        [DbFunction("Entities", "UDF_CUCPL_LVL_REPORT_NEW")]
        public virtual IQueryable<UDF_CUCPL_LVL_REPORT_NEW_Result> UDF_CUCPL_LVL_REPORT_NEW(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CUCPL_LVL_REPORT_NEW_Result>("[Entities].[UDF_CUCPL_LVL_REPORT_NEW](@State, @District, @Block, @Route, @PMGSY)", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_CUCPL_PMGSY3_FACILITY")]
        public virtual IQueryable<UDF_CUCPL_PMGSY3_FACILITY_Result> UDF_CUCPL_PMGSY3_FACILITY(Nullable<int> state, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CUCPL_PMGSY3_FACILITY_Result>("[Entities].[UDF_CUCPL_PMGSY3_FACILITY](@State, @DISTRICT, @BLOCK)", stateParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        [DbFunction("Entities", "UDF_CUCPL_PMGSY3_HAB")]
        public virtual IQueryable<UDF_CUCPL_PMGSY3_HAB_Result> UDF_CUCPL_PMGSY3_HAB(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CUCPL_PMGSY3_HAB_Result>("[Entities].[UDF_CUCPL_PMGSY3_HAB](@State, @District)", stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_CUPL_REPORT_NEW")]
        public virtual IQueryable<UDF_CUPL_REPORT_NEW_Result> UDF_CUPL_REPORT_NEW(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CUPL_REPORT_NEW_Result>("[Entities].[UDF_CUPL_REPORT_NEW](@State, @District)", stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_DORD_GET_ROAD_EXPN_AMT")]
        public virtual IQueryable<UDF_DORD_GET_ROAD_EXPN_AMT_Result> UDF_DORD_GET_ROAD_EXPN_AMT(Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> accMonth, Nullable<int> accYear, Nullable<int> pmgsyScheme, string prmFundType)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var accMonthParameter = accMonth.HasValue ?
                new ObjectParameter("AccMonth", accMonth) :
                new ObjectParameter("AccMonth", typeof(int));
    
            var accYearParameter = accYear.HasValue ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(int));
    
            var pmgsySchemeParameter = pmgsyScheme.HasValue ?
                new ObjectParameter("PmgsyScheme", pmgsyScheme) :
                new ObjectParameter("PmgsyScheme", typeof(int));
    
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_DORD_GET_ROAD_EXPN_AMT_Result>("[Entities].[UDF_DORD_GET_ROAD_EXPN_AMT](@StateCode, @DistrictCode, @AccMonth, @AccYear, @PmgsyScheme, @PrmFundType)", stateCodeParameter, districtCodeParameter, accMonthParameter, accYearParameter, pmgsySchemeParameter, prmFundTypeParameter);
        }
    
        [DbFunction("Entities", "UDF_DRRP_POP_HAB_COUNT")]
        public virtual IQueryable<UDF_DRRP_POP_HAB_COUNT_Result> UDF_DRRP_POP_HAB_COUNT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string conStatus, string habStatus, Nullable<int> censusYear, string type, Nullable<int> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var conStatusParameter = conStatus != null ?
                new ObjectParameter("ConStatus", conStatus) :
                new ObjectParameter("ConStatus", typeof(string));
    
            var habStatusParameter = habStatus != null ?
                new ObjectParameter("HabStatus", habStatus) :
                new ObjectParameter("HabStatus", typeof(string));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_DRRP_POP_HAB_COUNT_Result>("[Entities].[UDF_DRRP_POP_HAB_COUNT](@State, @District, @Block, @ConStatus, @HabStatus, @CensusYear, @Type, @PMGSY)", stateParameter, districtParameter, blockParameter, conStatusParameter, habStatusParameter, censusYearParameter, typeParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_DRRP_SANCTIONED")]
        public virtual IQueryable<UDF_DRRP_SANCTIONED_Result> UDF_DRRP_SANCTIONED(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_DRRP_SANCTIONED_Result>("[Entities].[UDF_DRRP_SANCTIONED](@state, @district)", stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_ER_SURFACE_LENGTH")]
        public virtual IQueryable<UDF_ER_SURFACE_LENGTH_Result> UDF_ER_SURFACE_LENGTH(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ER_SURFACE_LENGTH_Result>("[Entities].[UDF_ER_SURFACE_LENGTH](@Level, @State, @District, @Block, @PMGSY)", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_EXEC_ROADS_MONTHLY_STATUS")]
        public virtual IQueryable<UDF_EXEC_ROADS_MONTHLY_STATUS_Result> UDF_EXEC_ROADS_MONTHLY_STATUS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> year, Nullable<int> month)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_EXEC_ROADS_MONTHLY_STATUS_Result>("[Entities].[UDF_EXEC_ROADS_MONTHLY_STATUS](@Level, @State, @District, @year, @Month)", levelParameter, stateParameter, districtParameter, yearParameter, monthParameter);
        }
    
        [DbFunction("Entities", "UDF_EXEC_ROADS_MONTHLY_STATUS_PMGSY_ACHIVEMENT")]
        public virtual IQueryable<UDF_EXEC_ROADS_MONTHLY_STATUS_PMGSY_ACHIVEMENT_Result> UDF_EXEC_ROADS_MONTHLY_STATUS_PMGSY_ACHIVEMENT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> year, Nullable<int> month)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_EXEC_ROADS_MONTHLY_STATUS_PMGSY_ACHIVEMENT_Result>("[Entities].[UDF_EXEC_ROADS_MONTHLY_STATUS_PMGSY_ACHIVEMENT](@Level, @State, @District, @year, @Month)", levelParameter, stateParameter, districtParameter, yearParameter, monthParameter);
        }
    
        [DbFunction("Entities", "UDF_GET_ROAD_EXP_AMOUNT")]
        public virtual IQueryable<UDF_GET_ROAD_EXP_AMOUNT_Result> UDF_GET_ROAD_EXP_AMOUNT(Nullable<int> prmRoadCode)
        {
            var prmRoadCodeParameter = prmRoadCode.HasValue ?
                new ObjectParameter("PrmRoadCode", prmRoadCode) :
                new ObjectParameter("PrmRoadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_GET_ROAD_EXP_AMOUNT_Result>("[Entities].[UDF_GET_ROAD_EXP_AMOUNT](@PrmRoadCode)", prmRoadCodeParameter);
        }
    
        [DbFunction("Entities", "UDF_HAB_GROWTH_SCORE")]
        public virtual IQueryable<UDF_HAB_GROWTH_SCORE_Result> UDF_HAB_GROWTH_SCORE(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> censusYear)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_HAB_GROWTH_SCORE_Result>("[Entities].[UDF_HAB_GROWTH_SCORE](@State, @District, @Block, @CensusYear)", stateParameter, districtParameter, blockParameter, censusYearParameter);
        }
    
        [DbFunction("Entities", "UDF_HABITATION_CONNECTED_COUNT")]
        public virtual IQueryable<UDF_HABITATION_CONNECTED_COUNT_Result> UDF_HABITATION_CONNECTED_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, Nullable<int> month, Nullable<int> year)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_HABITATION_CONNECTED_COUNT_Result>("[Entities].[UDF_HABITATION_CONNECTED_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY, @Month, @year)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, monthParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_HABITATION_DROPPED_COUNT")]
        public virtual IQueryable<UDF_HABITATION_DROPPED_COUNT_Result> UDF_HABITATION_DROPPED_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_HABITATION_DROPPED_COUNT_Result>("[Entities].[UDF_HABITATION_DROPPED_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY, @YEAR, @MONTH)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, yEARParameter, mONTHParameter);
        }
    
        [DbFunction("Entities", "UDF_HABITATION_SANCTION_COUNT")]
        public virtual IQueryable<UDF_HABITATION_SANCTION_COUNT_Result> UDF_HABITATION_SANCTION_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_HABITATION_SANCTION_COUNT_Result>("[Entities].[UDF_HABITATION_SANCTION_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY, @YEAR, @MONTH)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, yEARParameter, mONTHParameter);
        }
    
        [DbFunction("Entities", "UDF_IMS_UNLOCK_STATUS")]
        public virtual IQueryable<UDF_IMS_UNLOCK_STATUS_Result> UDF_IMS_UNLOCK_STATUS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> hab, Nullable<int> road, Nullable<int> batch, Nullable<int> year, string module, Nullable<byte> scheme, Nullable<short> roleID)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var habParameter = hab.HasValue ?
                new ObjectParameter("Hab", hab) :
                new ObjectParameter("Hab", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(byte));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_IMS_UNLOCK_STATUS_Result>("[Entities].[UDF_IMS_UNLOCK_STATUS](@State, @District, @Block, @Village, @Hab, @Road, @Batch, @Year, @Module, @Scheme, @RoleID)", stateParameter, districtParameter, blockParameter, villageParameter, habParameter, roadParameter, batchParameter, yearParameter, moduleParameter, schemeParameter, roleIDParameter);
        }
    
        [DbFunction("Entities", "UDF_INSPECTION_MOBILE")]
        public virtual IQueryable<UDF_INSPECTION_MOBILE_Result> UDF_INSPECTION_MOBILE(Nullable<int> sTATE, Nullable<int> mONTH, Nullable<int> yEAR, string mONITOR_TYPE, Nullable<int> mONITOR_CODE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONITOR_TYPEParameter = mONITOR_TYPE != null ?
                new ObjectParameter("MONITOR_TYPE", mONITOR_TYPE) :
                new ObjectParameter("MONITOR_TYPE", typeof(string));
    
            var mONITOR_CODEParameter = mONITOR_CODE.HasValue ?
                new ObjectParameter("MONITOR_CODE", mONITOR_CODE) :
                new ObjectParameter("MONITOR_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_INSPECTION_MOBILE_Result>("[Entities].[UDF_INSPECTION_MOBILE](@STATE, @MONTH, @YEAR, @MONITOR_TYPE, @MONITOR_CODE)", sTATEParameter, mONTHParameter, yEARParameter, mONITOR_TYPEParameter, mONITOR_CODEParameter);
        }
    
        [DbFunction("Entities", "UDF_LENGTH_COMPLETED")]
        public virtual IQueryable<UDF_LENGTH_COMPLETED_Result> UDF_LENGTH_COMPLETED(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_LENGTH_COMPLETED_Result>("[Entities].[UDF_LENGTH_COMPLETED](@Level, @State, @District, @year)", levelParameter, stateParameter, districtParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_LENGTH_COMPLETED_PMGSY_ACHIVEMENT")]
        public virtual IQueryable<UDF_LENGTH_COMPLETED_PMGSY_ACHIVEMENT_Result> UDF_LENGTH_COMPLETED_PMGSY_ACHIVEMENT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_LENGTH_COMPLETED_PMGSY_ACHIVEMENT_Result>("[Entities].[UDF_LENGTH_COMPLETED_PMGSY_ACHIVEMENT](@Level, @State, @District, @year)", levelParameter, stateParameter, districtParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_LENGTH_COMPLETED_STATE_WISE")]
        public virtual IQueryable<UDF_LENGTH_COMPLETED_STATE_WISE_Result> UDF_LENGTH_COMPLETED_STATE_WISE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_LENGTH_COMPLETED_STATE_WISE_Result>("[Entities].[UDF_LENGTH_COMPLETED_STATE_WISE](@Level, @State, @District, @year)", levelParameter, stateParameter, districtParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_LENGTH_NUMBER_ACHIEVEMENT")]
        public virtual IQueryable<UDF_LENGTH_NUMBER_ACHIEVEMENT_Result> UDF_LENGTH_NUMBER_ACHIEVEMENT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> year, Nullable<int> month)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_LENGTH_NUMBER_ACHIEVEMENT_Result>("[Entities].[UDF_LENGTH_NUMBER_ACHIEVEMENT](@Level, @State, @District, @year, @Month)", levelParameter, stateParameter, districtParameter, yearParameter, monthParameter);
        }
    
        [DbFunction("Entities", "UDF_LENGTH_PMGSY_ACHIVEMENT_BEFORE_2016")]
        public virtual IQueryable<UDF_LENGTH_PMGSY_ACHIVEMENT_BEFORE_2016_Result> UDF_LENGTH_PMGSY_ACHIVEMENT_BEFORE_2016(Nullable<int> level, Nullable<int> state, Nullable<int> district)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_LENGTH_PMGSY_ACHIVEMENT_BEFORE_2016_Result>("[Entities].[UDF_LENGTH_PMGSY_ACHIVEMENT_BEFORE_2016](@Level, @State, @District)", levelParameter, stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_MPR_HY1")]
        public virtual IQueryable<UDF_MPR_HY1_Result> UDF_MPR_HY1(Nullable<int> state, Nullable<int> district, Nullable<int> bLOCK, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_MPR_HY1_Result>("[Entities].[UDF_MPR_HY1](@State, @District, @BLOCK, @PMGSY)", stateParameter, districtParameter, bLOCKParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_MPR_HY1_PROPOSAL_COUNT")]
        public virtual IQueryable<UDF_MPR_HY1_PROPOSAL_COUNT_Result> UDF_MPR_HY1_PROPOSAL_COUNT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> period, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_MPR_HY1_PROPOSAL_COUNT_Result>("[Entities].[UDF_MPR_HY1_PROPOSAL_COUNT](@Level, @State, @District, @Period, @PMGSY)", levelParameter, stateParameter, districtParameter, periodParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_MPR_HY2")]
        public virtual IQueryable<UDF_MPR_HY2_Result> UDF_MPR_HY2(Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_MPR_HY2_Result>("[Entities].[UDF_MPR_HY2](@State, @District, @PMGSY)", stateParameter, districtParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_MPR_HY2_PROPOSAL_COUNT")]
        public virtual IQueryable<UDF_MPR_HY2_PROPOSAL_COUNT_Result> UDF_MPR_HY2_PROPOSAL_COUNT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> period, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_MPR_HY2_PROPOSAL_COUNT_Result>("[Entities].[UDF_MPR_HY2_PROPOSAL_COUNT](@Level, @State, @District, @Period, @PMGSY)", levelParameter, stateParameter, districtParameter, periodParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_NSP_CONN_STATUS1")]
        public virtual IQueryable<UDF_NSP_CONN_STATUS1_Result> UDF_NSP_CONN_STATUS1(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_NSP_CONN_STATUS1_Result>("[Entities].[UDF_NSP_CONN_STATUS1](@Level, @State, @District, @PMGSY)", levelParameter, stateParameter, districtParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_NSP_HAB_COVERAGE")]
        public virtual IQueryable<UDF_NSP_HAB_COVERAGE_Result> UDF_NSP_HAB_COVERAGE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_NSP_HAB_COVERAGE_Result>("[Entities].[UDF_NSP_HAB_COVERAGE](@Level, @State, @District, @Block, @Agency, @Collaboration, @PMGSY)", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_NUMBER_COMPLETED")]
        public virtual IQueryable<UDF_NUMBER_COMPLETED_Result> UDF_NUMBER_COMPLETED(Nullable<int> level, Nullable<int> state, Nullable<int> district)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_NUMBER_COMPLETED_Result>("[Entities].[UDF_NUMBER_COMPLETED](@Level, @State, @District)", levelParameter, stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_NUMBER_COMPLETED_PMGSY_ACHIVEMENT")]
        public virtual IQueryable<UDF_NUMBER_COMPLETED_PMGSY_ACHIVEMENT_Result> UDF_NUMBER_COMPLETED_PMGSY_ACHIVEMENT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_NUMBER_COMPLETED_PMGSY_ACHIVEMENT_Result>("[Entities].[UDF_NUMBER_COMPLETED_PMGSY_ACHIVEMENT](@Level, @State, @District, @Block)", levelParameter, stateParameter, districtParameter, blockParameter);
        }
    
        [DbFunction("Entities", "UDF_NUMBER_COMPLETED_STATE_WISE")]
        public virtual IQueryable<UDF_NUMBER_COMPLETED_STATE_WISE_Result> UDF_NUMBER_COMPLETED_STATE_WISE(Nullable<int> level, Nullable<int> state, Nullable<int> district)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_NUMBER_COMPLETED_STATE_WISE_Result>("[Entities].[UDF_NUMBER_COMPLETED_STATE_WISE](@Level, @State, @District)", levelParameter, stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_PACKAGE_DETAIL_FOR_MAINTENANCE")]
        public virtual IQueryable<UDF_PACKAGE_DETAIL_FOR_MAINTENANCE_Result> UDF_PACKAGE_DETAIL_FOR_MAINTENANCE(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PACKAGE_DETAIL_FOR_MAINTENANCE_Result>("[Entities].[UDF_PACKAGE_DETAIL_FOR_MAINTENANCE](@State, @District)", stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_PMGSY_PARTIAL_HABITATION_ACHIVED")]
        public virtual IQueryable<UDF_PMGSY_PARTIAL_HABITATION_ACHIVED_Result> UDF_PMGSY_PARTIAL_HABITATION_ACHIVED(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PMGSY_PARTIAL_HABITATION_ACHIVED_Result>("[Entities].[UDF_PMGSY_PARTIAL_HABITATION_ACHIVED](@Level, @State, @District, @Block, @year)", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_PMGSY3_SANLEN_VS_TARGETLEN")]
        public virtual IQueryable<UDF_PMGSY3_SANLEN_VS_TARGETLEN_Result> UDF_PMGSY3_SANLEN_VS_TARGETLEN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PMGSY3_SANLEN_VS_TARGETLEN_Result>("[Entities].[UDF_PMGSY3_SANLEN_VS_TARGETLEN]()");
        }
    
        [DbFunction("Entities", "UDF_POP_HAB_COUNT")]
        public virtual IQueryable<UDF_POP_HAB_COUNT_Result> UDF_POP_HAB_COUNT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string conStatus, string habStatus, Nullable<int> censusYear)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var conStatusParameter = conStatus != null ?
                new ObjectParameter("ConStatus", conStatus) :
                new ObjectParameter("ConStatus", typeof(string));
    
            var habStatusParameter = habStatus != null ?
                new ObjectParameter("HabStatus", habStatus) :
                new ObjectParameter("HabStatus", typeof(string));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_POP_HAB_COUNT_Result>("[Entities].[UDF_POP_HAB_COUNT](@State, @District, @Block, @ConStatus, @HabStatus, @CensusYear)", stateParameter, districtParameter, blockParameter, conStatusParameter, habStatusParameter, censusYearParameter);
        }
    
        [DbFunction("Entities", "UDF_POP_HAB_COUNT_TABLE")]
        public virtual IQueryable<UDF_POP_HAB_COUNT_TABLE_Result> UDF_POP_HAB_COUNT_TABLE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string conStatus, string habStatus, Nullable<int> censusYear)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var conStatusParameter = conStatus != null ?
                new ObjectParameter("ConStatus", conStatus) :
                new ObjectParameter("ConStatus", typeof(string));
    
            var habStatusParameter = habStatus != null ?
                new ObjectParameter("HabStatus", habStatus) :
                new ObjectParameter("HabStatus", typeof(string));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_POP_HAB_COUNT_TABLE_Result>("[Entities].[UDF_POP_HAB_COUNT_TABLE](@Level, @State, @District, @Block, @ConStatus, @HabStatus, @CensusYear)", levelParameter, stateParameter, districtParameter, blockParameter, conStatusParameter, habStatusParameter, censusYearParameter);
        }
    
        [DbFunction("Entities", "UDF_PROPOSAL_COUNT")]
        public virtual IQueryable<UDF_PROPOSAL_COUNT_Result> UDF_PROPOSAL_COUNT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, string sanction, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PROPOSAL_COUNT_Result>("[Entities].[UDF_PROPOSAL_COUNT](@Level, @State, @District, @Block, @Type, @Batch, @Year, @Collaboration, @Sanction, @PMGSY)", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, batchParameter, yearParameter, collaborationParameter, sanctionParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_PROPOSAL_POP_HAB_COUNT")]
        public virtual IQueryable<UDF_PROPOSAL_POP_HAB_COUNT_Result> UDF_PROPOSAL_POP_HAB_COUNT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string conStatus, string habStatus, Nullable<int> censusYear, string type, Nullable<int> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var conStatusParameter = conStatus != null ?
                new ObjectParameter("ConStatus", conStatus) :
                new ObjectParameter("ConStatus", typeof(string));
    
            var habStatusParameter = habStatus != null ?
                new ObjectParameter("HabStatus", habStatus) :
                new ObjectParameter("HabStatus", typeof(string));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PROPOSAL_POP_HAB_COUNT_Result>("[Entities].[UDF_PROPOSAL_POP_HAB_COUNT](@State, @District, @Block, @ConStatus, @HabStatus, @CensusYear, @Type, @PMGSY)", stateParameter, districtParameter, blockParameter, conStatusParameter, habStatusParameter, censusYearParameter, typeParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_PROPOSAL_POP_HAB_COUNT_MPR")]
        public virtual IQueryable<UDF_PROPOSAL_POP_HAB_COUNT_MPR_Result> UDF_PROPOSAL_POP_HAB_COUNT_MPR(Nullable<int> state, Nullable<int> district, Nullable<int> block, string conStatus, string habStatus, Nullable<int> censusYear, string type, Nullable<int> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var conStatusParameter = conStatus != null ?
                new ObjectParameter("ConStatus", conStatus) :
                new ObjectParameter("ConStatus", typeof(string));
    
            var habStatusParameter = habStatus != null ?
                new ObjectParameter("HabStatus", habStatus) :
                new ObjectParameter("HabStatus", typeof(string));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PROPOSAL_POP_HAB_COUNT_MPR_Result>("[Entities].[UDF_PROPOSAL_POP_HAB_COUNT_MPR](@State, @District, @Block, @ConStatus, @HabStatus, @CensusYear, @Type, @PMGSY)", stateParameter, districtParameter, blockParameter, conStatusParameter, habStatusParameter, censusYearParameter, typeParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_PROPOSAL_PROGRESS")]
        public virtual IQueryable<UDF_PROPOSAL_PROGRESS_Result> UDF_PROPOSAL_PROGRESS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_PROPOSAL_PROGRESS_Result>("[Entities].[UDF_PROPOSAL_PROGRESS](@Level, @State, @District, @Block, @Type, @Batch, @Year, @Collaboration, @Status, @PMGSY)", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, batchParameter, yearParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_ATR")]
        public virtual IQueryable<UDF_QM_ATR_Result> UDF_QM_ATR(Nullable<int> state, Nullable<System.DateTime> fROM_INSP_DATE, Nullable<System.DateTime> tO_INSP_DATE)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var fROM_INSP_DATEParameter = fROM_INSP_DATE.HasValue ?
                new ObjectParameter("FROM_INSP_DATE", fROM_INSP_DATE) :
                new ObjectParameter("FROM_INSP_DATE", typeof(System.DateTime));
    
            var tO_INSP_DATEParameter = tO_INSP_DATE.HasValue ?
                new ObjectParameter("TO_INSP_DATE", tO_INSP_DATE) :
                new ObjectParameter("TO_INSP_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_ATR_Result>("[Entities].[UDF_QM_ATR](@state, @FROM_INSP_DATE, @TO_INSP_DATE)", stateParameter, fROM_INSP_DATEParameter, tO_INSP_DATEParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_ATR_AGENCY")]
        public virtual IQueryable<UDF_QM_ATR_AGENCY_Result> UDF_QM_ATR_AGENCY(Nullable<int> state, Nullable<int> fROM_MONTH, Nullable<int> fROM_YEAR, Nullable<int> tO_MONTH, Nullable<int> tO_YEAR, Nullable<int> eACODE)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var fROM_MONTHParameter = fROM_MONTH.HasValue ?
                new ObjectParameter("FROM_MONTH", fROM_MONTH) :
                new ObjectParameter("FROM_MONTH", typeof(int));
    
            var fROM_YEARParameter = fROM_YEAR.HasValue ?
                new ObjectParameter("FROM_YEAR", fROM_YEAR) :
                new ObjectParameter("FROM_YEAR", typeof(int));
    
            var tO_MONTHParameter = tO_MONTH.HasValue ?
                new ObjectParameter("TO_MONTH", tO_MONTH) :
                new ObjectParameter("TO_MONTH", typeof(int));
    
            var tO_YEARParameter = tO_YEAR.HasValue ?
                new ObjectParameter("TO_YEAR", tO_YEAR) :
                new ObjectParameter("TO_YEAR", typeof(int));
    
            var eACODEParameter = eACODE.HasValue ?
                new ObjectParameter("EACODE", eACODE) :
                new ObjectParameter("EACODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_ATR_AGENCY_Result>("[Entities].[UDF_QM_ATR_AGENCY](@state, @FROM_MONTH, @FROM_YEAR, @TO_MONTH, @TO_YEAR, @EACODE)", stateParameter, fROM_MONTHParameter, fROM_YEARParameter, tO_MONTHParameter, tO_YEARParameter, eACODEParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_ATR_EC_PPT")]
        public virtual IQueryable<UDF_QM_ATR_EC_PPT_Result> UDF_QM_ATR_EC_PPT(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_ATR_EC_PPT_Result>("[Entities].[UDF_QM_ATR_EC_PPT](@state)", stateParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_COMPLETED_WORKS")]
        public virtual IQueryable<UDF_QM_COMPLETED_WORKS_Result> UDF_QM_COMPLETED_WORKS(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<System.DateTime> frmDate, Nullable<System.DateTime> toDate)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var frmDateParameter = frmDate.HasValue ?
                new ObjectParameter("frmDate", frmDate) :
                new ObjectParameter("frmDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_COMPLETED_WORKS_Result>("[Entities].[UDF_QM_COMPLETED_WORKS](@STATE, @DISTRICT, @frmDate, @toDate)", sTATEParameter, dISTRICTParameter, frmDateParameter, toDateParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_INSP_GRADING")]
        public virtual IQueryable<UDF_QM_INSP_GRADING_Result> UDF_QM_INSP_GRADING(Nullable<int> sTATE, string qM_TYPE, Nullable<int> qM_CODE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var qM_TYPEParameter = qM_TYPE != null ?
                new ObjectParameter("QM_TYPE", qM_TYPE) :
                new ObjectParameter("QM_TYPE", typeof(string));
    
            var qM_CODEParameter = qM_CODE.HasValue ?
                new ObjectParameter("QM_CODE", qM_CODE) :
                new ObjectParameter("QM_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_INSP_GRADING_Result>("[Entities].[UDF_QM_INSP_GRADING](@STATE, @QM_TYPE, @QM_CODE)", sTATEParameter, qM_TYPEParameter, qM_CODEParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_INSPECTION")]
        public virtual IQueryable<UDF_QM_INSPECTION_Result> UDF_QM_INSPECTION(Nullable<int> sANCTION_YEAR, string qM_TYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> fROM_MONTH, Nullable<int> fROM_YEAR, Nullable<int> tO_MONTH, Nullable<int> tO_YEAR)
        {
            var sANCTION_YEARParameter = sANCTION_YEAR.HasValue ?
                new ObjectParameter("SANCTION_YEAR", sANCTION_YEAR) :
                new ObjectParameter("SANCTION_YEAR", typeof(int));
    
            var qM_TYPEParameter = qM_TYPE != null ?
                new ObjectParameter("QM_TYPE", qM_TYPE) :
                new ObjectParameter("QM_TYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var fROM_MONTHParameter = fROM_MONTH.HasValue ?
                new ObjectParameter("FROM_MONTH", fROM_MONTH) :
                new ObjectParameter("FROM_MONTH", typeof(int));
    
            var fROM_YEARParameter = fROM_YEAR.HasValue ?
                new ObjectParameter("FROM_YEAR", fROM_YEAR) :
                new ObjectParameter("FROM_YEAR", typeof(int));
    
            var tO_MONTHParameter = tO_MONTH.HasValue ?
                new ObjectParameter("TO_MONTH", tO_MONTH) :
                new ObjectParameter("TO_MONTH", typeof(int));
    
            var tO_YEARParameter = tO_YEAR.HasValue ?
                new ObjectParameter("TO_YEAR", tO_YEAR) :
                new ObjectParameter("TO_YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_INSPECTION_Result>("[Entities].[UDF_QM_INSPECTION](@SANCTION_YEAR, @QM_TYPE, @STATE, @DISTRICT, @BLOCK, @FROM_MONTH, @FROM_YEAR, @TO_MONTH, @TO_YEAR)", sANCTION_YEARParameter, qM_TYPEParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, fROM_MONTHParameter, fROM_YEARParameter, tO_MONTHParameter, tO_YEARParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_INSPECTION_CONTRACTOR")]
        public virtual IQueryable<UDF_QM_INSPECTION_CONTRACTOR_Result> UDF_QM_INSPECTION_CONTRACTOR(Nullable<int> yEAR, string sTATUS, Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_INSPECTION_CONTRACTOR_Result>("[Entities].[UDF_QM_INSPECTION_CONTRACTOR](@YEAR, @STATUS, @STATE, @DISTRICT)", yEARParameter, sTATUSParameter, sTATEParameter, dISTRICTParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_INSPECTION_COUNT")]
        public virtual IQueryable<UDF_QM_INSPECTION_COUNT_Result> UDF_QM_INSPECTION_COUNT(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, string qMTYPE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_INSPECTION_COUNT_Result>("[Entities].[UDF_QM_INSPECTION_COUNT](@STATE, @DISTRICT, @BLOCK, @YEAR, @QMTYPE)", sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, qMTYPEParameter);
        }
    
        [DbFunction("Entities", "UDF_QM_LAB_EST_DATE")]
        public virtual IQueryable<UDF_QM_LAB_EST_DATE_Result> UDF_QM_LAB_EST_DATE(string packageNo, Nullable<int> tendCode)
        {
            var packageNoParameter = packageNo != null ?
                new ObjectParameter("PackageNo", packageNo) :
                new ObjectParameter("PackageNo", typeof(string));
    
            var tendCodeParameter = tendCode.HasValue ?
                new ObjectParameter("TendCode", tendCode) :
                new ObjectParameter("TendCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QM_LAB_EST_DATE_Result>("[Entities].[UDF_QM_LAB_EST_DATE](@PackageNo, @TendCode)", packageNoParameter, tendCodeParameter);
        }
    
        [DbFunction("Entities", "UDF_QUALITY_INSPECTION")]
        public virtual IQueryable<UDF_QUALITY_INSPECTION_Result> UDF_QUALITY_INSPECTION(string qTYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR)
        {
            var qTYPEParameter = qTYPE != null ?
                new ObjectParameter("QTYPE", qTYPE) :
                new ObjectParameter("QTYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QUALITY_INSPECTION_Result>("[Entities].[UDF_QUALITY_INSPECTION](@QTYPE, @STATE, @DISTRICT, @BLOCK, @FMONTH, @FYEAR, @TMONTH, @TYEAR)", qTYPEParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter);
        }
    
        [DbFunction("Entities", "UDF_QUALITY_LAB")]
        public virtual IQueryable<UDF_QUALITY_LAB_Result> UDF_QUALITY_LAB(string sTATE, string dISTRICT)
        {
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var dISTRICTParameter = dISTRICT != null ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QUALITY_LAB_Result>("[Entities].[UDF_QUALITY_LAB](@STATE, @DISTRICT)", sTATEParameter, dISTRICTParameter);
        }
    
        [DbFunction("Entities", "UDF_QUALITY_LAB_FIRST_STATE_MATRIX")]
        public virtual IQueryable<UDF_QUALITY_LAB_FIRST_STATE_MATRIX_Result> UDF_QUALITY_LAB_FIRST_STATE_MATRIX(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> aGENCY, Nullable<int> month, Nullable<int> year, Nullable<int> scheme)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QUALITY_LAB_FIRST_STATE_MATRIX_Result>("[Entities].[UDF_QUALITY_LAB_FIRST_STATE_MATRIX](@STATE, @DISTRICT, @AGENCY, @month, @Year, @Scheme)", sTATEParameter, dISTRICTParameter, aGENCYParameter, monthParameter, yearParameter, schemeParameter);
        }
    
        [DbFunction("Entities", "UDF_QUALITY_LAB_LIST")]
        public virtual IQueryable<UDF_QUALITY_LAB_LIST_Result> UDF_QUALITY_LAB_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QUALITY_LAB_LIST_Result>("[Entities].[UDF_QUALITY_LAB_LIST](@STATE, @DISTRICT)", sTATEParameter, dISTRICTParameter);
        }
    
        [DbFunction("Entities", "UDF_QUALITY_LAB_LIST_TIER1")]
        public virtual IQueryable<UDF_QUALITY_LAB_LIST_TIER1_Result> UDF_QUALITY_LAB_LIST_TIER1(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> nDCode)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var nDCodeParameter = nDCode.HasValue ?
                new ObjectParameter("NDCode", nDCode) :
                new ObjectParameter("NDCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QUALITY_LAB_LIST_TIER1_Result>("[Entities].[UDF_QUALITY_LAB_LIST_TIER1](@STATE, @DISTRICT, @NDCode)", sTATEParameter, dISTRICTParameter, nDCodeParameter);
        }
    
        [DbFunction("Entities", "UDF_QUALITY_LAB_STATE")]
        public virtual IQueryable<UDF_QUALITY_LAB_STATE_Result> UDF_QUALITY_LAB_STATE(Nullable<int> sTATE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_QUALITY_LAB_STATE_Result>("[Entities].[UDF_QUALITY_LAB_STATE](@STATE)", sTATEParameter);
        }
    
        [DbFunction("Entities", "UDF_ROAD_DETAIL_FOR_MAINTENANCE")]
        public virtual IQueryable<UDF_ROAD_DETAIL_FOR_MAINTENANCE_Result> UDF_ROAD_DETAIL_FOR_MAINTENANCE(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ROAD_DETAIL_FOR_MAINTENANCE_Result>("[Entities].[UDF_ROAD_DETAIL_FOR_MAINTENANCE](@State, @District)", stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_ROAD_DETAIL_FOR_REPACKAGING")]
        public virtual IQueryable<UDF_ROAD_DETAIL_FOR_REPACKAGING_Result> UDF_ROAD_DETAIL_FOR_REPACKAGING(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ROAD_DETAIL_FOR_REPACKAGING_Result>("[Entities].[UDF_ROAD_DETAIL_FOR_REPACKAGING](@State, @District)", stateParameter, districtParameter);
        }
    
        [DbFunction("Entities", "UDF_ROAD_SANCTION_WORK_COST")]
        public virtual IQueryable<UDF_ROAD_SANCTION_WORK_COST_Result> UDF_ROAD_SANCTION_WORK_COST(Nullable<int> roadCode)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ROAD_SANCTION_WORK_COST_Result>("[Entities].[UDF_ROAD_SANCTION_WORK_COST](@RoadCode)", roadCodeParameter);
        }
    
        [DbFunction("Entities", "UDF_ROAD_WISE_SANCTION_PROGRESS")]
        public virtual IQueryable<UDF_ROAD_WISE_SANCTION_PROGRESS_Result> UDF_ROAD_WISE_SANCTION_PROGRESS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY, Nullable<int> censusYear)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ROAD_WISE_SANCTION_PROGRESS_Result>("[Entities].[UDF_ROAD_WISE_SANCTION_PROGRESS](@Level, @State, @District, @Block, @Month, @Year, @Collaboration, @PMGSY, @AGENCY, @CensusYear)", levelParameter, stateParameter, districtParameter, blockParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter, aGENCYParameter, censusYearParameter);
        }
    
        [DbFunction("Entities", "UDF_SCHEDULE_PRIORITY_WORK_LIST")]
        public virtual IQueryable<UDF_SCHEDULE_PRIORITY_WORK_LIST_Result> UDF_SCHEDULE_PRIORITY_WORK_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_SCHEDULE_PRIORITY_WORK_LIST_Result>("[Entities].[UDF_SCHEDULE_PRIORITY_WORK_LIST](@STATE, @DISTRICT)", sTATEParameter, dISTRICTParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_MATRIX_EMARG_MAINTENANCE")]
        public virtual IQueryable<UDF_STATE_MATRIX_EMARG_MAINTENANCE_Result> UDF_STATE_MATRIX_EMARG_MAINTENANCE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_MATRIX_EMARG_MAINTENANCE_Result>("[Entities].[UDF_STATE_MATRIX_EMARG_MAINTENANCE]()");
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_FINANCE")]
        public virtual IQueryable<UDF_STATE_RANK_FINANCE_Result> UDF_STATE_RANK_FINANCE(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_FINANCE_Result>("[Entities].[UDF_STATE_RANK_FINANCE](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_PMGSY3_SANLEN_VS_TARGETLEN")]
        public virtual IQueryable<UDF_STATE_RANK_PMGSY3_SANLEN_VS_TARGETLEN_Result> UDF_STATE_RANK_PMGSY3_SANLEN_VS_TARGETLEN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_PMGSY3_SANLEN_VS_TARGETLEN_Result>("[Entities].[UDF_STATE_RANK_PMGSY3_SANLEN_VS_TARGETLEN]()");
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_PROGRESS_PMGSY3_MAINTENANCE")]
        public virtual IQueryable<UDF_STATE_RANK_PROGRESS_PMGSY3_MAINTENANCE_Result> UDF_STATE_RANK_PROGRESS_PMGSY3_MAINTENANCE(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_PROGRESS_PMGSY3_MAINTENANCE_Result>("[Entities].[UDF_STATE_RANK_PROGRESS_PMGSY3_MAINTENANCE](@STATE, @Month, @Year)", sTATEParameter, monthParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_QUALITY")]
        public virtual IQueryable<UDF_STATE_RANK_QUALITY_Result> UDF_STATE_RANK_QUALITY(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_QUALITY_Result>("[Entities].[UDF_STATE_RANK_QUALITY](@STATE, @Month, @Year)", sTATEParameter, monthParameter, yearParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_SANCTION_COMPLETE")]
        public virtual IQueryable<UDF_STATE_RANK_SANCTION_COMPLETE_Result> UDF_STATE_RANK_SANCTION_COMPLETE(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_SANCTION_COMPLETE_Result>("[Entities].[UDF_STATE_RANK_SANCTION_COMPLETE](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_SANCTION_COMPLETED")]
        public virtual IQueryable<UDF_STATE_RANK_SANCTION_COMPLETED_Result> UDF_STATE_RANK_SANCTION_COMPLETED(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_SANCTION_COMPLETED_Result>("[Entities].[UDF_STATE_RANK_SANCTION_COMPLETED](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_SANCTION_COMPLETED1")]
        public virtual IQueryable<UDF_STATE_RANK_SANCTION_COMPLETED1_Result> UDF_STATE_RANK_SANCTION_COMPLETED1(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_SANCTION_COMPLETED1_Result>("[Entities].[UDF_STATE_RANK_SANCTION_COMPLETED1](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_SANCTION_HABITATION")]
        public virtual IQueryable<UDF_STATE_RANK_SANCTION_HABITATION_Result> UDF_STATE_RANK_SANCTION_HABITATION(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_SANCTION_HABITATION_Result>("[Entities].[UDF_STATE_RANK_SANCTION_HABITATION](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_SANCTION_HABITATION_VS_CONNECTED")]
        public virtual IQueryable<UDF_STATE_RANK_SANCTION_HABITATION_VS_CONNECTED_Result> UDF_STATE_RANK_SANCTION_HABITATION_VS_CONNECTED(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_SANCTION_HABITATION_VS_CONNECTED_Result>("[Entities].[UDF_STATE_RANK_SANCTION_HABITATION_VS_CONNECTED](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_TECH_COMPLETE")]
        public virtual IQueryable<UDF_STATE_RANK_TECH_COMPLETE_Result> UDF_STATE_RANK_TECH_COMPLETE(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_TECH_COMPLETE_Result>("[Entities].[UDF_STATE_RANK_TECH_COMPLETE](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_TECH_COMPLETED")]
        public virtual IQueryable<UDF_STATE_RANK_TECH_COMPLETED_Result> UDF_STATE_RANK_TECH_COMPLETED(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_TECH_COMPLETED_Result>("[Entities].[UDF_STATE_RANK_TECH_COMPLETED](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_STATE_RANK_TECH_COMPLETED1")]
        public virtual IQueryable<UDF_STATE_RANK_TECH_COMPLETED1_Result> UDF_STATE_RANK_TECH_COMPLETED1(Nullable<int> month, Nullable<int> yEAR)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_STATE_RANK_TECH_COMPLETED1_Result>("[Entities].[UDF_STATE_RANK_TECH_COMPLETED1](@Month, @YEAR)", monthParameter, yEARParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_CLUSTER_COUNT")]
        public virtual IQueryable<UDF_USP_CLUSTER_COUNT_Result> UDF_USP_CLUSTER_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_CLUSTER_COUNT_Result>("[Entities].[UDF_USP_CLUSTER_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_CLUSTER_DETAIL")]
        public virtual IQueryable<UDF_USP_CLUSTER_DETAIL_Result> UDF_USP_CLUSTER_DETAIL(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_CLUSTER_DETAIL_Result>("[Entities].[UDF_USP_CLUSTER_DETAIL](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_CLUSTER_DETAIL_STATE_CONNECTED")]
        public virtual IQueryable<UDF_USP_CLUSTER_DETAIL_STATE_CONNECTED_Result> UDF_USP_CLUSTER_DETAIL_STATE_CONNECTED(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_CLUSTER_DETAIL_STATE_CONNECTED_Result>("[Entities].[UDF_USP_CLUSTER_DETAIL_STATE_CONNECTED](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_CLUSTER_NOT_FISIBLE_COUNT")]
        public virtual IQueryable<UDF_USP_CLUSTER_NOT_FISIBLE_COUNT_Result> UDF_USP_CLUSTER_NOT_FISIBLE_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_CLUSTER_NOT_FISIBLE_COUNT_Result>("[Entities].[UDF_USP_CLUSTER_NOT_FISIBLE_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_CLUSTER_STATE_CONNECTED_COUNT")]
        public virtual IQueryable<UDF_USP_CLUSTER_STATE_CONNECTED_COUNT_Result> UDF_USP_CLUSTER_STATE_CONNECTED_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_CLUSTER_STATE_CONNECTED_COUNT_Result>("[Entities].[UDF_USP_CLUSTER_STATE_CONNECTED_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_HABITATION_COUNT")]
        public virtual IQueryable<UDF_USP_HABITATION_COUNT_Result> UDF_USP_HABITATION_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_HABITATION_COUNT_Result>("[Entities].[UDF_USP_HABITATION_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_HABITATION_NOT_FISIBLE_COUNT")]
        public virtual IQueryable<UDF_USP_HABITATION_NOT_FISIBLE_COUNT_Result> UDF_USP_HABITATION_NOT_FISIBLE_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_HABITATION_NOT_FISIBLE_COUNT_Result>("[Entities].[UDF_USP_HABITATION_NOT_FISIBLE_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "UDF_USP_HABITATION_STATE_CONNECTED_COUNT")]
        public virtual IQueryable<UDF_USP_HABITATION_STATE_CONNECTED_COUNT_Result> UDF_USP_HABITATION_STATE_CONNECTED_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_USP_HABITATION_STATE_CONNECTED_COUNT_Result>("[Entities].[UDF_USP_HABITATION_STATE_CONNECTED_COUNT](@LEVEL, @STATE, @DISTRICT, @PMGSY)", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter);
        }
    
        [DbFunction("Entities", "USP_PACKAGE_DETAIL_FOR_MAINTENANCE")]
        public virtual IQueryable<USP_PACKAGE_DETAIL_FOR_MAINTENANCE_Result> USP_PACKAGE_DETAIL_FOR_MAINTENANCE(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USP_PACKAGE_DETAIL_FOR_MAINTENANCE_Result>("[Entities].[USP_PACKAGE_DETAIL_FOR_MAINTENANCE](@State, @District)", stateParameter, districtParameter);
        }
    
        public virtual int DUMMY_MANE_CONTRACT_ID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DUMMY_MANE_CONTRACT_ID");
        }
    
        public virtual ObjectResult<FreezeUnfreeze_Result> FreezeUnfreeze(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FreezeUnfreeze_Result>("FreezeUnfreeze", stateParameter, districtParameter);
        }
    
        public virtual ObjectResult<GET_DATA_FROM_ABA_MIS_DATA_SERVICE_Result> GET_DATA_FROM_ABA_MIS_DATA_SERVICE(Nullable<System.DateTime> generatedDate)
        {
            var generatedDateParameter = generatedDate.HasValue ?
                new ObjectParameter("GeneratedDate", generatedDate) :
                new ObjectParameter("GeneratedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DATA_FROM_ABA_MIS_DATA_SERVICE_Result>("GET_DATA_FROM_ABA_MIS_DATA_SERVICE", generatedDateParameter);
        }
    
        public virtual ObjectResult<GET_EXISTING_ROADS_Result> GET_EXISTING_ROADS(Nullable<int> statecode, Nullable<int> districtcode, Nullable<int> blockcode, Nullable<int> roadcode, string roadname, Nullable<int> pMGSY_SCHEME, Nullable<short> roleID)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var districtcodeParameter = districtcode.HasValue ?
                new ObjectParameter("districtcode", districtcode) :
                new ObjectParameter("districtcode", typeof(int));
    
            var blockcodeParameter = blockcode.HasValue ?
                new ObjectParameter("blockcode", blockcode) :
                new ObjectParameter("blockcode", typeof(int));
    
            var roadcodeParameter = roadcode.HasValue ?
                new ObjectParameter("roadcode", roadcode) :
                new ObjectParameter("roadcode", typeof(int));
    
            var roadnameParameter = roadname != null ?
                new ObjectParameter("roadname", roadname) :
                new ObjectParameter("roadname", typeof(string));
    
            var pMGSY_SCHEMEParameter = pMGSY_SCHEME.HasValue ?
                new ObjectParameter("PMGSY_SCHEME", pMGSY_SCHEME) :
                new ObjectParameter("PMGSY_SCHEME", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_EXISTING_ROADS_Result>("GET_EXISTING_ROADS", statecodeParameter, districtcodeParameter, blockcodeParameter, roadcodeParameter, roadnameParameter, pMGSY_SCHEMEParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<GET_EXISTING_ROADS_FOR_INACTIVE_BLOCKS_Result> GET_EXISTING_ROADS_FOR_INACTIVE_BLOCKS(Nullable<int> statecode, Nullable<int> districtcode, Nullable<int> blockcode, Nullable<int> roadcode, string roadname, Nullable<int> pMGSY_SCHEME, Nullable<short> roleID)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var districtcodeParameter = districtcode.HasValue ?
                new ObjectParameter("districtcode", districtcode) :
                new ObjectParameter("districtcode", typeof(int));
    
            var blockcodeParameter = blockcode.HasValue ?
                new ObjectParameter("blockcode", blockcode) :
                new ObjectParameter("blockcode", typeof(int));
    
            var roadcodeParameter = roadcode.HasValue ?
                new ObjectParameter("roadcode", roadcode) :
                new ObjectParameter("roadcode", typeof(int));
    
            var roadnameParameter = roadname != null ?
                new ObjectParameter("roadname", roadname) :
                new ObjectParameter("roadname", typeof(string));
    
            var pMGSY_SCHEMEParameter = pMGSY_SCHEME.HasValue ?
                new ObjectParameter("PMGSY_SCHEME", pMGSY_SCHEME) :
                new ObjectParameter("PMGSY_SCHEME", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_EXISTING_ROADS_FOR_INACTIVE_BLOCKS_Result>("GET_EXISTING_ROADS_FOR_INACTIVE_BLOCKS", statecodeParameter, districtcodeParameter, blockcodeParameter, roadcodeParameter, roadnameParameter, pMGSY_SCHEMEParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<GET_EXISTING_ROADS_FOR_SHIFTING_Result> GET_EXISTING_ROADS_FOR_SHIFTING(Nullable<int> bLOCK, Nullable<int> scheme)
        {
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_EXISTING_ROADS_FOR_SHIFTING_Result>("GET_EXISTING_ROADS_FOR_SHIFTING", bLOCKParameter, schemeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_Habitation_Details(Nullable<int> blockCode, string operation, Nullable<int> pMGSY)
        {
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_Habitation_Details", blockCodeParameter, operationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<get_Habitation_Details_Info_Result> get_Habitation_Details_Info(Nullable<int> blockCode, string operation, Nullable<int> pMGSY)
        {
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Habitation_Details_Info_Result>("get_Habitation_Details_Info", blockCodeParameter, operationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_habitations(Nullable<int> blockCode, string operation)
        {
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_habitations", blockCodeParameter, operationParameter);
        }
    
        public virtual ObjectResult<get_state_name_Result> get_state_name(Nullable<int> stateCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_state_name_Result>("get_state_name", stateCodeParameter);
        }
    
        public virtual ObjectResult<GetMappedLevelsForRole_Result> GetMappedLevelsForRole(Nullable<int> paramRoleCode)
        {
            var paramRoleCodeParameter = paramRoleCode.HasValue ?
                new ObjectParameter("paramRoleCode", paramRoleCode) :
                new ObjectParameter("paramRoleCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMappedLevelsForRole_Result>("GetMappedLevelsForRole", paramRoleCodeParameter);
        }
    
        public virtual ObjectResult<HomePage_Status_Result> HomePage_Status(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> scheme)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomePage_Status_Result>("HomePage_Status", sTATEParameter, dISTRICTParameter, bLOCKParameter, schemeParameter);
        }
    
        public virtual ObjectResult<HomePage_Status1_Result> HomePage_Status1(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> scheme)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomePage_Status1_Result>("HomePage_Status1", sTATEParameter, dISTRICTParameter, bLOCKParameter, schemeParameter);
        }
    
        public virtual ObjectResult<IMS_GET_ACTIONS_FOR_MORD_Result> IMS_GET_ACTIONS_FOR_MORD(Nullable<int> vIMS_PR_ROAD_CODE)
        {
            var vIMS_PR_ROAD_CODEParameter = vIMS_PR_ROAD_CODE.HasValue ?
                new ObjectParameter("vIMS_PR_ROAD_CODE", vIMS_PR_ROAD_CODE) :
                new ObjectParameter("vIMS_PR_ROAD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMS_GET_ACTIONS_FOR_MORD_Result>("IMS_GET_ACTIONS_FOR_MORD", vIMS_PR_ROAD_CODEParameter);
        }
    
        public virtual ObjectResult<IMS_GET_CLUSTERS_FOR_PROPOSALS_Result> IMS_GET_CLUSTERS_FOR_PROPOSALS(Nullable<int> block, Nullable<int> corenetwork, Nullable<int> pMGSY)
        {
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var corenetworkParameter = corenetwork.HasValue ?
                new ObjectParameter("Corenetwork", corenetwork) :
                new ObjectParameter("Corenetwork", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMS_GET_CLUSTERS_FOR_PROPOSALS_Result>("IMS_GET_CLUSTERS_FOR_PROPOSALS", blockParameter, corenetworkParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<IMS_GET_CORE_NETWORK_Result> IMS_GET_CORE_NETWORK(Nullable<int> vcMAST_STATE_CODE, Nullable<int> vcMAST_DISTRICT_CODE, Nullable<int> vcMAST_BLOCK_CODE, string vcProposal_Type, string vcUpgrade_New, Nullable<int> pMGSY)
        {
            var vcMAST_STATE_CODEParameter = vcMAST_STATE_CODE.HasValue ?
                new ObjectParameter("vcMAST_STATE_CODE", vcMAST_STATE_CODE) :
                new ObjectParameter("vcMAST_STATE_CODE", typeof(int));
    
            var vcMAST_DISTRICT_CODEParameter = vcMAST_DISTRICT_CODE.HasValue ?
                new ObjectParameter("vcMAST_DISTRICT_CODE", vcMAST_DISTRICT_CODE) :
                new ObjectParameter("vcMAST_DISTRICT_CODE", typeof(int));
    
            var vcMAST_BLOCK_CODEParameter = vcMAST_BLOCK_CODE.HasValue ?
                new ObjectParameter("vcMAST_BLOCK_CODE", vcMAST_BLOCK_CODE) :
                new ObjectParameter("vcMAST_BLOCK_CODE", typeof(int));
    
            var vcProposal_TypeParameter = vcProposal_Type != null ?
                new ObjectParameter("vcProposal_Type", vcProposal_Type) :
                new ObjectParameter("vcProposal_Type", typeof(string));
    
            var vcUpgrade_NewParameter = vcUpgrade_New != null ?
                new ObjectParameter("vcUpgrade_New", vcUpgrade_New) :
                new ObjectParameter("vcUpgrade_New", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMS_GET_CORE_NETWORK_Result>("IMS_GET_CORE_NETWORK", vcMAST_STATE_CODEParameter, vcMAST_DISTRICT_CODEParameter, vcMAST_BLOCK_CODEParameter, vcProposal_TypeParameter, vcUpgrade_NewParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<IMS_PTA_GET_PAYMENT_Result> IMS_PTA_GET_PAYMENT(Nullable<int> vMAST_STATE_CODE, Nullable<int> vIMS_YEAR, Nullable<int> vIMS_BATCH, Nullable<int> vIMS_COLLABORATION, string vIMS_PROPOSAL_TYPE, Nullable<int> vIMS_PMGSY_SCHEME)
        {
            var vMAST_STATE_CODEParameter = vMAST_STATE_CODE.HasValue ?
                new ObjectParameter("vMAST_STATE_CODE", vMAST_STATE_CODE) :
                new ObjectParameter("vMAST_STATE_CODE", typeof(int));
    
            var vIMS_YEARParameter = vIMS_YEAR.HasValue ?
                new ObjectParameter("vIMS_YEAR", vIMS_YEAR) :
                new ObjectParameter("vIMS_YEAR", typeof(int));
    
            var vIMS_BATCHParameter = vIMS_BATCH.HasValue ?
                new ObjectParameter("vIMS_BATCH", vIMS_BATCH) :
                new ObjectParameter("vIMS_BATCH", typeof(int));
    
            var vIMS_COLLABORATIONParameter = vIMS_COLLABORATION.HasValue ?
                new ObjectParameter("vIMS_COLLABORATION", vIMS_COLLABORATION) :
                new ObjectParameter("vIMS_COLLABORATION", typeof(int));
    
            var vIMS_PROPOSAL_TYPEParameter = vIMS_PROPOSAL_TYPE != null ?
                new ObjectParameter("vIMS_PROPOSAL_TYPE", vIMS_PROPOSAL_TYPE) :
                new ObjectParameter("vIMS_PROPOSAL_TYPE", typeof(string));
    
            var vIMS_PMGSY_SCHEMEParameter = vIMS_PMGSY_SCHEME.HasValue ?
                new ObjectParameter("vIMS_PMGSY_SCHEME", vIMS_PMGSY_SCHEME) :
                new ObjectParameter("vIMS_PMGSY_SCHEME", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMS_PTA_GET_PAYMENT_Result>("IMS_PTA_GET_PAYMENT", vMAST_STATE_CODEParameter, vIMS_YEARParameter, vIMS_BATCHParameter, vIMS_COLLABORATIONParameter, vIMS_PROPOSAL_TYPEParameter, vIMS_PMGSY_SCHEMEParameter);
        }
    
        public virtual ObjectResult<IMS_PTA_GET_PAYMENT_SANCTION_AMOUNT_Result> IMS_PTA_GET_PAYMENT_SANCTION_AMOUNT(Nullable<int> vMAST_STATE_CODE, Nullable<int> vIMS_YEAR, Nullable<int> vIMS_BATCH, Nullable<int> vIMS_COLLABORATION, string vIMS_PROPOSAL_TYPE, Nullable<int> vIMS_PMGSY_SCHEME)
        {
            var vMAST_STATE_CODEParameter = vMAST_STATE_CODE.HasValue ?
                new ObjectParameter("vMAST_STATE_CODE", vMAST_STATE_CODE) :
                new ObjectParameter("vMAST_STATE_CODE", typeof(int));
    
            var vIMS_YEARParameter = vIMS_YEAR.HasValue ?
                new ObjectParameter("vIMS_YEAR", vIMS_YEAR) :
                new ObjectParameter("vIMS_YEAR", typeof(int));
    
            var vIMS_BATCHParameter = vIMS_BATCH.HasValue ?
                new ObjectParameter("vIMS_BATCH", vIMS_BATCH) :
                new ObjectParameter("vIMS_BATCH", typeof(int));
    
            var vIMS_COLLABORATIONParameter = vIMS_COLLABORATION.HasValue ?
                new ObjectParameter("vIMS_COLLABORATION", vIMS_COLLABORATION) :
                new ObjectParameter("vIMS_COLLABORATION", typeof(int));
    
            var vIMS_PROPOSAL_TYPEParameter = vIMS_PROPOSAL_TYPE != null ?
                new ObjectParameter("vIMS_PROPOSAL_TYPE", vIMS_PROPOSAL_TYPE) :
                new ObjectParameter("vIMS_PROPOSAL_TYPE", typeof(string));
    
            var vIMS_PMGSY_SCHEMEParameter = vIMS_PMGSY_SCHEME.HasValue ?
                new ObjectParameter("vIMS_PMGSY_SCHEME", vIMS_PMGSY_SCHEME) :
                new ObjectParameter("vIMS_PMGSY_SCHEME", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMS_PTA_GET_PAYMENT_SANCTION_AMOUNT_Result>("IMS_PTA_GET_PAYMENT_SANCTION_AMOUNT", vMAST_STATE_CODEParameter, vIMS_YEARParameter, vIMS_BATCHParameter, vIMS_COLLABORATIONParameter, vIMS_PROPOSAL_TYPEParameter, vIMS_PMGSY_SCHEMEParameter);
        }
    
        public virtual ObjectResult<IMS_STA_GET_PAYMENT_Result> IMS_STA_GET_PAYMENT(Nullable<int> vMAST_STATE_CODE, Nullable<int> vIMS_YEAR, Nullable<int> vIMS_BATCH, Nullable<int> vIMS_COLLABORATION, string vIMS_PROPOSAL_TYPE, Nullable<int> vIMS_PMGSY_SCHEME)
        {
            var vMAST_STATE_CODEParameter = vMAST_STATE_CODE.HasValue ?
                new ObjectParameter("vMAST_STATE_CODE", vMAST_STATE_CODE) :
                new ObjectParameter("vMAST_STATE_CODE", typeof(int));
    
            var vIMS_YEARParameter = vIMS_YEAR.HasValue ?
                new ObjectParameter("vIMS_YEAR", vIMS_YEAR) :
                new ObjectParameter("vIMS_YEAR", typeof(int));
    
            var vIMS_BATCHParameter = vIMS_BATCH.HasValue ?
                new ObjectParameter("vIMS_BATCH", vIMS_BATCH) :
                new ObjectParameter("vIMS_BATCH", typeof(int));
    
            var vIMS_COLLABORATIONParameter = vIMS_COLLABORATION.HasValue ?
                new ObjectParameter("vIMS_COLLABORATION", vIMS_COLLABORATION) :
                new ObjectParameter("vIMS_COLLABORATION", typeof(int));
    
            var vIMS_PROPOSAL_TYPEParameter = vIMS_PROPOSAL_TYPE != null ?
                new ObjectParameter("vIMS_PROPOSAL_TYPE", vIMS_PROPOSAL_TYPE) :
                new ObjectParameter("vIMS_PROPOSAL_TYPE", typeof(string));
    
            var vIMS_PMGSY_SCHEMEParameter = vIMS_PMGSY_SCHEME.HasValue ?
                new ObjectParameter("vIMS_PMGSY_SCHEME", vIMS_PMGSY_SCHEME) :
                new ObjectParameter("vIMS_PMGSY_SCHEME", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMS_STA_GET_PAYMENT_Result>("IMS_STA_GET_PAYMENT", vMAST_STATE_CODEParameter, vIMS_YEARParameter, vIMS_BATCHParameter, vIMS_COLLABORATIONParameter, vIMS_PROPOSAL_TYPEParameter, vIMS_PMGSY_SCHEMEParameter);
        }
    
        public virtual int insertdetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertdetails");
        }
    
        public virtual ObjectResult<MAINTENANCE_INCENTIVE_LENGTH_EXP_ACCOUNTS_Result> MAINTENANCE_INCENTIVE_LENGTH_EXP_ACCOUNTS(Nullable<int> level, Nullable<int> state)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAINTENANCE_INCENTIVE_LENGTH_EXP_ACCOUNTS_Result>("MAINTENANCE_INCENTIVE_LENGTH_EXP_ACCOUNTS", levelParameter, stateParameter);
        }
    
        public virtual int PFMS_Generate_Conctractor_Header_XML(Nullable<int> level, Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> districtC, ObjectParameter xmlFileName, ObjectParameter recordCount)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var districtCParameter = districtC.HasValue ?
                new ObjectParameter("DistrictC", districtC) :
                new ObjectParameter("DistrictC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PFMS_Generate_Conctractor_Header_XML", levelParameter, stateCodeParameter, agencyCodeParameter, districtCParameter, xmlFileName, recordCount);
        }
    
        public virtual int PFMS_Generate_Conctractor_XML(Nullable<int> level, Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> districtC, string operation)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var districtCParameter = districtC.HasValue ?
                new ObjectParameter("DistrictC", districtC) :
                new ObjectParameter("DistrictC", typeof(int));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PFMS_Generate_Conctractor_XML", levelParameter, stateCodeParameter, agencyCodeParameter, districtCParameter, operationParameter);
        }
    
        public virtual ObjectResult<string> PFMS_GENERATE_PAYEMENT_XML(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<System.DateTime> generationDate, Nullable<long> billId, string fileGenerationType, string xmlFileName, Nullable<int> runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var generationDateParameter = generationDate.HasValue ?
                new ObjectParameter("generationDate", generationDate) :
                new ObjectParameter("generationDate", typeof(System.DateTime));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            var fileGenerationTypeParameter = fileGenerationType != null ?
                new ObjectParameter("fileGenerationType", fileGenerationType) :
                new ObjectParameter("fileGenerationType", typeof(string));
    
            var xmlFileNameParameter = xmlFileName != null ?
                new ObjectParameter("XmlFileName", xmlFileName) :
                new ObjectParameter("XmlFileName", typeof(string));
    
            var runningCountParameter = runningCount.HasValue ?
                new ObjectParameter("RunningCount", runningCount) :
                new ObjectParameter("RunningCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PFMS_GENERATE_PAYEMENT_XML", stateCodeParameter, agencyCodeParameter, generationDateParameter, billIdParameter, fileGenerationTypeParameter, xmlFileNameParameter, runningCountParameter);
        }
    
        public virtual ObjectResult<string> PFMS_GENERATE_PAYEMENT_XML_TEMP(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, string xmlFileName, Nullable<int> runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var xmlFileNameParameter = xmlFileName != null ?
                new ObjectParameter("XmlFileName", xmlFileName) :
                new ObjectParameter("XmlFileName", typeof(string));
    
            var runningCountParameter = runningCount.HasValue ?
                new ObjectParameter("RunningCount", runningCount) :
                new ObjectParameter("RunningCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PFMS_GENERATE_PAYEMENT_XML_TEMP", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, xmlFileNameParameter, runningCountParameter);
        }
    
        public virtual ObjectResult<PFMS_GET_DSC_TO_DEREGISTER_Result> PFMS_GET_DSC_TO_DEREGISTER(Nullable<int> adminNdCode)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PFMS_GET_DSC_TO_DEREGISTER_Result>("PFMS_GET_DSC_TO_DEREGISTER", adminNdCodeParameter);
        }
    
        public virtual ObjectResult<PFMS_List_Conctractor_Details_Result> PFMS_List_Conctractor_Details(Nullable<int> stateCode, Nullable<int> contractorid)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("Contractorid", contractorid) :
                new ObjectParameter("Contractorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PFMS_List_Conctractor_Details_Result>("PFMS_List_Conctractor_Details", stateCodeParameter, contractoridParameter);
        }
    
        public virtual ObjectResult<string> PFMS_PAYMENT_HEADER_XML(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<System.DateTime> generationDate, string fileGenerationType, Nullable<long> billId, ObjectParameter xmlFileName, ObjectParameter runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var generationDateParameter = generationDate.HasValue ?
                new ObjectParameter("generationDate", generationDate) :
                new ObjectParameter("generationDate", typeof(System.DateTime));
    
            var fileGenerationTypeParameter = fileGenerationType != null ?
                new ObjectParameter("fileGenerationType", fileGenerationType) :
                new ObjectParameter("fileGenerationType", typeof(string));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PFMS_PAYMENT_HEADER_XML", stateCodeParameter, agencyCodeParameter, generationDateParameter, fileGenerationTypeParameter, billIdParameter, xmlFileName, runningCount);
        }
    
        public virtual ObjectResult<string> PFMS_PAYMENT_HEADER_XML_TEMP(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, ObjectParameter xmlFileName, ObjectParameter runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PFMS_PAYMENT_HEADER_XML_TEMP", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, xmlFileName, runningCount);
        }
    
        public virtual ObjectResult<PMIS_ROADS_DETAILS_Result> PMIS_ROADS_DETAILS(Nullable<int> sTATE_CODE, Nullable<int> dISTRICT_CODE, Nullable<int> bLOCK_CODE, Nullable<int> sANCTION_YEAR, Nullable<int> pMGSY_SCHEME)
        {
            var sTATE_CODEParameter = sTATE_CODE.HasValue ?
                new ObjectParameter("STATE_CODE", sTATE_CODE) :
                new ObjectParameter("STATE_CODE", typeof(int));
    
            var dISTRICT_CODEParameter = dISTRICT_CODE.HasValue ?
                new ObjectParameter("DISTRICT_CODE", dISTRICT_CODE) :
                new ObjectParameter("DISTRICT_CODE", typeof(int));
    
            var bLOCK_CODEParameter = bLOCK_CODE.HasValue ?
                new ObjectParameter("BLOCK_CODE", bLOCK_CODE) :
                new ObjectParameter("BLOCK_CODE", typeof(int));
    
            var sANCTION_YEARParameter = sANCTION_YEAR.HasValue ?
                new ObjectParameter("SANCTION_YEAR", sANCTION_YEAR) :
                new ObjectParameter("SANCTION_YEAR", typeof(int));
    
            var pMGSY_SCHEMEParameter = pMGSY_SCHEME.HasValue ?
                new ObjectParameter("PMGSY_SCHEME", pMGSY_SCHEME) :
                new ObjectParameter("PMGSY_SCHEME", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PMIS_ROADS_DETAILS_Result>("PMIS_ROADS_DETAILS", sTATE_CODEParameter, dISTRICT_CODEParameter, bLOCK_CODEParameter, sANCTION_YEARParameter, pMGSY_SCHEMEParameter);
        }
    
        public virtual ObjectResult<pr_get_proposals_Result> pr_get_proposals(Nullable<int> statecode, Nullable<int> districtcode, Nullable<int> dpiucode, Nullable<int> blockcode, Nullable<int> imsyear, Nullable<int> imsbatch, Nullable<int> imsstreams, string proposaltype, string connectivity, string sTAStatus, string pTAStatus, string mRDStatus, string status, Nullable<byte> pmgsyscheme, Nullable<short> roleID)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var districtcodeParameter = districtcode.HasValue ?
                new ObjectParameter("districtcode", districtcode) :
                new ObjectParameter("districtcode", typeof(int));
    
            var dpiucodeParameter = dpiucode.HasValue ?
                new ObjectParameter("dpiucode", dpiucode) :
                new ObjectParameter("dpiucode", typeof(int));
    
            var blockcodeParameter = blockcode.HasValue ?
                new ObjectParameter("blockcode", blockcode) :
                new ObjectParameter("blockcode", typeof(int));
    
            var imsyearParameter = imsyear.HasValue ?
                new ObjectParameter("imsyear", imsyear) :
                new ObjectParameter("imsyear", typeof(int));
    
            var imsbatchParameter = imsbatch.HasValue ?
                new ObjectParameter("imsbatch", imsbatch) :
                new ObjectParameter("imsbatch", typeof(int));
    
            var imsstreamsParameter = imsstreams.HasValue ?
                new ObjectParameter("imsstreams", imsstreams) :
                new ObjectParameter("imsstreams", typeof(int));
    
            var proposaltypeParameter = proposaltype != null ?
                new ObjectParameter("proposaltype", proposaltype) :
                new ObjectParameter("proposaltype", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("connectivity", connectivity) :
                new ObjectParameter("connectivity", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pmgsyschemeParameter = pmgsyscheme.HasValue ?
                new ObjectParameter("pmgsyscheme", pmgsyscheme) :
                new ObjectParameter("pmgsyscheme", typeof(byte));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pr_get_proposals_Result>("pr_get_proposals", statecodeParameter, districtcodeParameter, dpiucodeParameter, blockcodeParameter, imsyearParameter, imsbatchParameter, imsstreamsParameter, proposaltypeParameter, connectivityParameter, sTAStatusParameter, pTAStatusParameter, mRDStatusParameter, statusParameter, pmgsyschemeParameter, roleIDParameter);
        }
    
        public virtual int pr_get_proposals_for_srrda(Nullable<int> statecode, Nullable<int> districtcode, Nullable<int> adminndcode, Nullable<int> imsyear, Nullable<int> imsbatch, Nullable<int> imsstreams, string proposaltype, string connectivity, string sTAStatus, string pTAStatus, string mRDStatus, string status, Nullable<byte> pmgsyscheme)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var districtcodeParameter = districtcode.HasValue ?
                new ObjectParameter("districtcode", districtcode) :
                new ObjectParameter("districtcode", typeof(int));
    
            var adminndcodeParameter = adminndcode.HasValue ?
                new ObjectParameter("adminndcode", adminndcode) :
                new ObjectParameter("adminndcode", typeof(int));
    
            var imsyearParameter = imsyear.HasValue ?
                new ObjectParameter("imsyear", imsyear) :
                new ObjectParameter("imsyear", typeof(int));
    
            var imsbatchParameter = imsbatch.HasValue ?
                new ObjectParameter("imsbatch", imsbatch) :
                new ObjectParameter("imsbatch", typeof(int));
    
            var imsstreamsParameter = imsstreams.HasValue ?
                new ObjectParameter("imsstreams", imsstreams) :
                new ObjectParameter("imsstreams", typeof(int));
    
            var proposaltypeParameter = proposaltype != null ?
                new ObjectParameter("proposaltype", proposaltype) :
                new ObjectParameter("proposaltype", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("connectivity", connectivity) :
                new ObjectParameter("connectivity", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pmgsyschemeParameter = pmgsyscheme.HasValue ?
                new ObjectParameter("pmgsyscheme", pmgsyscheme) :
                new ObjectParameter("pmgsyscheme", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_get_proposals_for_srrda", statecodeParameter, districtcodeParameter, adminndcodeParameter, imsyearParameter, imsbatchParameter, imsstreamsParameter, proposaltypeParameter, connectivityParameter, sTAStatusParameter, pTAStatusParameter, mRDStatusParameter, statusParameter, pmgsyschemeParameter);
        }
    
        public virtual int qm_delete_observations(Nullable<int> obsId, Nullable<int> userid, string ipadd)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_delete_observations", obsIdParameter, useridParameter, ipaddParameter);
        }
    
        public virtual int qm_delete_roads_under_district(Nullable<int> schCode, Nullable<int> distCode, Nullable<int> userid, string ipadd)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_delete_roads_under_district", schCodeParameter, distCodeParameter, useridParameter, ipaddParameter);
        }
    
        public virtual int qm_delete_training_obs_and_schedule(Nullable<int> obsId)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_delete_training_obs_and_schedule", obsIdParameter);
        }
    
        public virtual ObjectResult<qm_districtwise_inspection_monitors_list_Result> qm_districtwise_inspection_monitors_list(Nullable<int> stateCode, Nullable<int> districtCode, string qmType)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_districtwise_inspection_monitors_list_Result>("qm_districtwise_inspection_monitors_list", stateCodeParameter, districtCodeParameter, qmTypeParameter);
        }
    
        public virtual int qm_finalize_districts(Nullable<int> schCode, string flag, Nullable<int> userid, string ipadd)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_finalize_districts", schCodeParameter, flagParameter, useridParameter, ipaddParameter);
        }
    
        public virtual int qm_finalize_roads(Nullable<int> schCode, Nullable<int> prRoadCode, string finalizeFlag, Nullable<int> isFinalizeAll, Nullable<int> userid, string ipadd)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var prRoadCodeParameter = prRoadCode.HasValue ?
                new ObjectParameter("prRoadCode", prRoadCode) :
                new ObjectParameter("prRoadCode", typeof(int));
    
            var finalizeFlagParameter = finalizeFlag != null ?
                new ObjectParameter("finalizeFlag", finalizeFlag) :
                new ObjectParameter("finalizeFlag", typeof(string));
    
            var isFinalizeAllParameter = isFinalizeAll.HasValue ?
                new ObjectParameter("isFinalizeAll", isFinalizeAll) :
                new ObjectParameter("isFinalizeAll", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_finalize_roads", schCodeParameter, prRoadCodeParameter, finalizeFlagParameter, isFinalizeAllParameter, useridParameter, ipaddParameter);
        }
    
        public virtual int qm_forward_schedule(Nullable<int> schCode, string fordwardBy, Nullable<int> userid, string ipadd)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var fordwardByParameter = fordwardBy != null ?
                new ObjectParameter("fordwardBy", fordwardBy) :
                new ObjectParameter("fordwardBy", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_forward_schedule", schCodeParameter, fordwardByParameter, useridParameter, ipaddParameter);
        }
    
        public virtual ObjectResult<qm_get_prev_months_schedule_Result> qm_get_prev_months_schedule(Nullable<int> monitorCode, string qmType, Nullable<int> inspMonth, Nullable<int> inspYear, Nullable<int> stateCode, Nullable<int> distCode, Nullable<int> userId)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("inspMonth", inspMonth) :
                new ObjectParameter("inspMonth", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("inspYear", inspYear) :
                new ObjectParameter("inspYear", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_prev_months_schedule_Result>("qm_get_prev_months_schedule", monitorCodeParameter, qmTypeParameter, inspMonthParameter, inspYearParameter, stateCodeParameter, distCodeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<qm_get_road_list_to_assign_Result> qm_get_road_list_to_assign(Nullable<int> state, Nullable<int> district, Nullable<int> sanctionyear, string iscompleted, Nullable<int> scheduleyear, Nullable<int> schedulemonth, Nullable<int> monitorcode)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var sanctionyearParameter = sanctionyear.HasValue ?
                new ObjectParameter("sanctionyear", sanctionyear) :
                new ObjectParameter("sanctionyear", typeof(int));
    
            var iscompletedParameter = iscompleted != null ?
                new ObjectParameter("iscompleted", iscompleted) :
                new ObjectParameter("iscompleted", typeof(string));
    
            var scheduleyearParameter = scheduleyear.HasValue ?
                new ObjectParameter("scheduleyear", scheduleyear) :
                new ObjectParameter("scheduleyear", typeof(int));
    
            var schedulemonthParameter = schedulemonth.HasValue ?
                new ObjectParameter("schedulemonth", schedulemonth) :
                new ObjectParameter("schedulemonth", typeof(int));
    
            var monitorcodeParameter = monitorcode.HasValue ?
                new ObjectParameter("monitorcode", monitorcode) :
                new ObjectParameter("monitorcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_road_list_to_assign_Result>("qm_get_road_list_to_assign", stateParameter, districtParameter, sanctionyearParameter, iscompletedParameter, scheduleyearParameter, schedulemonthParameter, monitorcodeParameter);
        }
    
        public virtual ObjectResult<qm_get_roads_for_maintenance_inspection_Result> qm_get_roads_for_maintenance_inspection(Nullable<int> state, Nullable<int> district, Nullable<int> sanctionyear, string proposaltype, string package)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var sanctionyearParameter = sanctionyear.HasValue ?
                new ObjectParameter("sanctionyear", sanctionyear) :
                new ObjectParameter("sanctionyear", typeof(int));
    
            var proposaltypeParameter = proposaltype != null ?
                new ObjectParameter("proposaltype", proposaltype) :
                new ObjectParameter("proposaltype", typeof(string));
    
            var packageParameter = package != null ?
                new ObjectParameter("package", package) :
                new ObjectParameter("package", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_roads_for_maintenance_inspection_Result>("qm_get_roads_for_maintenance_inspection", stateParameter, districtParameter, sanctionyearParameter, proposaltypeParameter, packageParameter);
        }
    
        public virtual ObjectResult<qm_get_works_to_assign_contractor_not_insp_Result> qm_get_works_to_assign_contractor_not_insp(Nullable<int> year, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> sCHEDULE, Nullable<int> pmgsy)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var sCHEDULEParameter = sCHEDULE.HasValue ?
                new ObjectParameter("SCHEDULE", sCHEDULE) :
                new ObjectParameter("SCHEDULE", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_works_to_assign_contractor_not_insp_Result>("qm_get_works_to_assign_contractor_not_insp", yearParameter, sTATEParameter, dISTRICTParameter, sCHEDULEParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_atr_Result> qm_inspection_list_atr(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> adminNdCode, Nullable<int> pmgsy)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_atr_Result>("qm_inspection_list_atr", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, adminNdCodeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_atr_backupAUG18_2020_Result> qm_inspection_list_atr_backupAUG18_2020(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> adminNdCode, Nullable<int> pmgsy)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_atr_backupAUG18_2020_Result>("qm_inspection_list_atr_backupAUG18_2020", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, adminNdCodeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_atr_test_Result> qm_inspection_list_atr_test(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> adminNdCode, Nullable<int> pmgsy)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_atr_test_Result>("qm_inspection_list_atr_test", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, adminNdCodeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_monitor_master_grade_items_Result> qm_monitor_master_grade_items(string rdStatus, string qmType)
        {
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_monitor_master_grade_items_Result>("qm_monitor_master_grade_items", rdStatusParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_monitor_master_grade_items_grade_correction_Result> qm_monitor_master_grade_items_grade_correction(string rdStatus, string qmType)
        {
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_monitor_master_grade_items_grade_correction_Result>("qm_monitor_master_grade_items_grade_correction", rdStatusParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_monitor_master_grade_itemsr_Result> qm_monitor_master_grade_itemsr(string rdStatus, string qmType)
        {
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_monitor_master_grade_itemsr_Result>("qm_monitor_master_grade_itemsr", rdStatusParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_monitor_schedule_current_month_onwards_Result> qm_monitor_schedule_current_month_onwards(Nullable<int> monitorCode, string qmType, Nullable<int> month, Nullable<int> year)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_monitor_schedule_current_month_onwards_Result>("qm_monitor_schedule_current_month_onwards", monitorCodeParameter, qmTypeParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<qm_nqm_sqm_districtwise_inspection_Result> qm_nqm_sqm_districtwise_inspection(Nullable<int> statecode, Nullable<int> districtcode, string qmType)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var districtcodeParameter = districtcode.HasValue ?
                new ObjectParameter("districtcode", districtcode) :
                new ObjectParameter("districtcode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_nqm_sqm_districtwise_inspection_Result>("qm_nqm_sqm_districtwise_inspection", statecodeParameter, districtcodeParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_nqm_sqm_inspection_count_Result> qm_nqm_sqm_inspection_count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_nqm_sqm_inspection_count_Result>("qm_nqm_sqm_inspection_count");
        }
    
        public virtual ObjectResult<qm_observation_grading_detail_Result> qm_observation_grading_detail(Nullable<int> obsId, string qmType)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_observation_grading_detail_Result>("qm_observation_grading_detail", obsIdParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_observation_grading_detail_correction_Result> qm_observation_grading_detail_correction(Nullable<int> obsId, string qmType)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_observation_grading_detail_correction_Result>("qm_observation_grading_detail_correction", obsIdParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_observation_grading_detail_for_atr_Result> qm_observation_grading_detail_for_atr(Nullable<int> obsId, string qmType)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_observation_grading_detail_for_atr_Result>("qm_observation_grading_detail_for_atr", obsIdParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_observation_grading_detail_Previous_04_Sept_2020_Result> qm_observation_grading_detail_Previous_04_Sept_2020(Nullable<int> obsId, string qmType)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_observation_grading_detail_Previous_04_Sept_2020_Result>("qm_observation_grading_detail_Previous_04_Sept_2020", obsIdParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<qm_observation_grading_main_items_detail_Result> qm_observation_grading_main_items_detail(Nullable<int> obsId, string qmType)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_observation_grading_main_items_detail_Result>("qm_observation_grading_main_items_detail", obsIdParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<QM_SCHEDULE_PRIORITY_DISTRICT_Result> QM_SCHEDULE_PRIORITY_DISTRICT(Nullable<int> pRIORITY, Nullable<int> sTATE, Nullable<int> progMax, Nullable<int> progMin, Nullable<int> compMax, Nullable<int> compMin, Nullable<int> tMONTH, Nullable<int> fMONTH)
        {
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var progMaxParameter = progMax.HasValue ?
                new ObjectParameter("ProgMax", progMax) :
                new ObjectParameter("ProgMax", typeof(int));
    
            var progMinParameter = progMin.HasValue ?
                new ObjectParameter("ProgMin", progMin) :
                new ObjectParameter("ProgMin", typeof(int));
    
            var compMaxParameter = compMax.HasValue ?
                new ObjectParameter("CompMax", compMax) :
                new ObjectParameter("CompMax", typeof(int));
    
            var compMinParameter = compMin.HasValue ?
                new ObjectParameter("CompMin", compMin) :
                new ObjectParameter("CompMin", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QM_SCHEDULE_PRIORITY_DISTRICT_Result>("QM_SCHEDULE_PRIORITY_DISTRICT", pRIORITYParameter, sTATEParameter, progMaxParameter, progMinParameter, compMaxParameter, compMinParameter, tMONTHParameter, fMONTHParameter);
        }
    
        public virtual ObjectResult<QM_SCHEDULE_PRIORITY_ROAD_Result> QM_SCHEDULE_PRIORITY_ROAD(Nullable<int> dISTRICT)
        {
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QM_SCHEDULE_PRIORITY_ROAD_Result>("QM_SCHEDULE_PRIORITY_ROAD", dISTRICTParameter);
        }
    
        public virtual ObjectResult<QM_SCHEDULE_PRIORITY_STATE_Result> QM_SCHEDULE_PRIORITY_STATE(Nullable<int> pRIORITY, Nullable<int> progMax, Nullable<int> progMin, Nullable<int> compMax, Nullable<int> compMin)
        {
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var progMaxParameter = progMax.HasValue ?
                new ObjectParameter("ProgMax", progMax) :
                new ObjectParameter("ProgMax", typeof(int));
    
            var progMinParameter = progMin.HasValue ?
                new ObjectParameter("ProgMin", progMin) :
                new ObjectParameter("ProgMin", typeof(int));
    
            var compMaxParameter = compMax.HasValue ?
                new ObjectParameter("CompMax", compMax) :
                new ObjectParameter("CompMax", typeof(int));
    
            var compMinParameter = compMin.HasValue ?
                new ObjectParameter("CompMin", compMin) :
                new ObjectParameter("CompMin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QM_SCHEDULE_PRIORITY_STATE_Result>("QM_SCHEDULE_PRIORITY_STATE", pRIORITYParameter, progMaxParameter, progMinParameter, compMaxParameter, compMinParameter);
        }
    
        public virtual ObjectResult<qm_sqc_piu_2tier_schedule_current_month_onwards_Result> qm_sqc_piu_2tier_schedule_current_month_onwards(Nullable<int> stateCode, Nullable<int> distCode, Nullable<int> month, Nullable<int> year)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_sqc_piu_2tier_schedule_current_month_onwards_Result>("qm_sqc_piu_2tier_schedule_current_month_onwards", stateCodeParameter, distCodeParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<qm_sqc_piu_schedule_current_month_onwards_Result> qm_sqc_piu_schedule_current_month_onwards(Nullable<int> stateCode, Nullable<int> distCode, Nullable<int> month, Nullable<int> year)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_sqc_piu_schedule_current_month_onwards_Result>("qm_sqc_piu_schedule_current_month_onwards", stateCodeParameter, distCodeParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<qm_statewise_inspection_monitosr_list_Result> qm_statewise_inspection_monitosr_list(Nullable<int> stateCode, string qmType)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_statewise_inspection_monitosr_list_Result>("qm_statewise_inspection_monitosr_list", stateCodeParameter, qmTypeParameter);
        }
    
        public virtual int qm_unlock_schedule(Nullable<int> scheduleCode, Nullable<int> userid, string ipadd)
        {
            var scheduleCodeParameter = scheduleCode.HasValue ?
                new ObjectParameter("scheduleCode", scheduleCode) :
                new ObjectParameter("scheduleCode", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qm_unlock_schedule", scheduleCodeParameter, useridParameter, ipaddParameter);
        }
    
        public virtual int QUALITY_QM_AUTO_SCHEDULE_INSERT(Nullable<int> level, Nullable<int> month, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QUALITY_QM_AUTO_SCHEDULE_INSERT", levelParameter, monthParameter, yearParameter);
        }
    
        public virtual int REAT_Generate_Conctractor_XML(Nullable<int> level, Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> districtC)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var districtCParameter = districtC.HasValue ?
                new ObjectParameter("DistrictC", districtC) :
                new ObjectParameter("DistrictC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REAT_Generate_Conctractor_XML", levelParameter, stateCodeParameter, agencyCodeParameter, districtCParameter);
        }
    
        public virtual ObjectResult<REAT_Generate_Conctractor_XML_Updation_Result> REAT_Generate_Conctractor_XML_Updation(Nullable<int> prmstateCode, Nullable<int> prmagencyCode, Nullable<int> prmContractorid, Nullable<int> prmAccountid, string prmIFSCcode, string prmConCompanyName, Nullable<int> prmUserId, string prmIPAddr, Nullable<int> detailid, string bankName)
        {
            var prmstateCodeParameter = prmstateCode.HasValue ?
                new ObjectParameter("prmstateCode", prmstateCode) :
                new ObjectParameter("prmstateCode", typeof(int));
    
            var prmagencyCodeParameter = prmagencyCode.HasValue ?
                new ObjectParameter("prmagencyCode", prmagencyCode) :
                new ObjectParameter("prmagencyCode", typeof(int));
    
            var prmContractoridParameter = prmContractorid.HasValue ?
                new ObjectParameter("prmContractorid", prmContractorid) :
                new ObjectParameter("prmContractorid", typeof(int));
    
            var prmAccountidParameter = prmAccountid.HasValue ?
                new ObjectParameter("prmAccountid", prmAccountid) :
                new ObjectParameter("prmAccountid", typeof(int));
    
            var prmIFSCcodeParameter = prmIFSCcode != null ?
                new ObjectParameter("prmIFSCcode", prmIFSCcode) :
                new ObjectParameter("prmIFSCcode", typeof(string));
    
            var prmConCompanyNameParameter = prmConCompanyName != null ?
                new ObjectParameter("prmConCompanyName", prmConCompanyName) :
                new ObjectParameter("prmConCompanyName", typeof(string));
    
            var prmUserIdParameter = prmUserId.HasValue ?
                new ObjectParameter("prmUserId", prmUserId) :
                new ObjectParameter("prmUserId", typeof(int));
    
            var prmIPAddrParameter = prmIPAddr != null ?
                new ObjectParameter("prmIPAddr", prmIPAddr) :
                new ObjectParameter("prmIPAddr", typeof(string));
    
            var detailidParameter = detailid.HasValue ?
                new ObjectParameter("Detailid", detailid) :
                new ObjectParameter("Detailid", typeof(int));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REAT_Generate_Conctractor_XML_Updation_Result>("REAT_Generate_Conctractor_XML_Updation", prmstateCodeParameter, prmagencyCodeParameter, prmContractoridParameter, prmAccountidParameter, prmIFSCcodeParameter, prmConCompanyNameParameter, prmUserIdParameter, prmIPAddrParameter, detailidParameter, bankNameParameter);
        }
    
        public virtual ObjectResult<string> REAT_GENERATE_PAYEMENT_XML(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<System.DateTime> generationDate, Nullable<long> billId, string fileGenerationType, string xmlFileName, Nullable<int> runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var generationDateParameter = generationDate.HasValue ?
                new ObjectParameter("generationDate", generationDate) :
                new ObjectParameter("generationDate", typeof(System.DateTime));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            var fileGenerationTypeParameter = fileGenerationType != null ?
                new ObjectParameter("fileGenerationType", fileGenerationType) :
                new ObjectParameter("fileGenerationType", typeof(string));
    
            var xmlFileNameParameter = xmlFileName != null ?
                new ObjectParameter("XmlFileName", xmlFileName) :
                new ObjectParameter("XmlFileName", typeof(string));
    
            var runningCountParameter = runningCount.HasValue ?
                new ObjectParameter("RunningCount", runningCount) :
                new ObjectParameter("RunningCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_GENERATE_PAYEMENT_XML", stateCodeParameter, agencyCodeParameter, generationDateParameter, billIdParameter, fileGenerationTypeParameter, xmlFileNameParameter, runningCountParameter);
        }
    
        public virtual ObjectResult<string> REAT_GENERATE_PAYEMENT_XML_TEMP(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, string xmlFileName, Nullable<int> runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var xmlFileNameParameter = xmlFileName != null ?
                new ObjectParameter("XmlFileName", xmlFileName) :
                new ObjectParameter("XmlFileName", typeof(string));
    
            var runningCountParameter = runningCount.HasValue ?
                new ObjectParameter("RunningCount", runningCount) :
                new ObjectParameter("RunningCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_GENERATE_PAYEMENT_XML_TEMP", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, xmlFileNameParameter, runningCountParameter);
        }
    
        public virtual ObjectResult<string> REAT_GENERATE_PAYEMENT_XML_TEMP_Admin(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, string xmlFileName, Nullable<int> runningCount, string fundType, Nullable<int> level)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var xmlFileNameParameter = xmlFileName != null ?
                new ObjectParameter("XmlFileName", xmlFileName) :
                new ObjectParameter("XmlFileName", typeof(string));
    
            var runningCountParameter = runningCount.HasValue ?
                new ObjectParameter("RunningCount", runningCount) :
                new ObjectParameter("RunningCount", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_GENERATE_PAYEMENT_XML_TEMP_Admin", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, xmlFileNameParameter, runningCountParameter, fundTypeParameter, levelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> REAT_INSERT_OB_DETAILS(Nullable<int> prmNDCode, string prmFundType, string prmBatch, string prmFileName, Nullable<decimal> prmOBAmount, Nullable<System.DateTime> prmOBDate, Nullable<int> prmUserID, string prmIPADDR)
        {
            var prmNDCodeParameter = prmNDCode.HasValue ?
                new ObjectParameter("prmNDCode", prmNDCode) :
                new ObjectParameter("prmNDCode", typeof(int));
    
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("prmFundType", prmFundType) :
                new ObjectParameter("prmFundType", typeof(string));
    
            var prmBatchParameter = prmBatch != null ?
                new ObjectParameter("prmBatch", prmBatch) :
                new ObjectParameter("prmBatch", typeof(string));
    
            var prmFileNameParameter = prmFileName != null ?
                new ObjectParameter("prmFileName", prmFileName) :
                new ObjectParameter("prmFileName", typeof(string));
    
            var prmOBAmountParameter = prmOBAmount.HasValue ?
                new ObjectParameter("prmOBAmount", prmOBAmount) :
                new ObjectParameter("prmOBAmount", typeof(decimal));
    
            var prmOBDateParameter = prmOBDate.HasValue ?
                new ObjectParameter("prmOBDate", prmOBDate) :
                new ObjectParameter("prmOBDate", typeof(System.DateTime));
    
            var prmUserIDParameter = prmUserID.HasValue ?
                new ObjectParameter("prmUserID", prmUserID) :
                new ObjectParameter("prmUserID", typeof(int));
    
            var prmIPADDRParameter = prmIPADDR != null ?
                new ObjectParameter("prmIPADDR", prmIPADDR) :
                new ObjectParameter("prmIPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("REAT_INSERT_OB_DETAILS", prmNDCodeParameter, prmFundTypeParameter, prmBatchParameter, prmFileNameParameter, prmOBAmountParameter, prmOBDateParameter, prmUserIDParameter, prmIPADDRParameter);
        }
    
        public virtual ObjectResult<reat_list_contractor_details_Result> reat_list_contractor_details(Nullable<int> districtCode, Nullable<int> stateCode, Nullable<int> mast_con_id)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var mast_con_idParameter = mast_con_id.HasValue ?
                new ObjectParameter("mast_con_id", mast_con_id) :
                new ObjectParameter("mast_con_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reat_list_contractor_details_Result>("reat_list_contractor_details", districtCodeParameter, stateCodeParameter, mast_con_idParameter);
        }
    
        public virtual ObjectResult<string> REAT_PAYMENT_HEADER_XML(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<System.DateTime> generationDate, string fileGenerationType, Nullable<long> billId, ObjectParameter xmlFileName, ObjectParameter runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var generationDateParameter = generationDate.HasValue ?
                new ObjectParameter("generationDate", generationDate) :
                new ObjectParameter("generationDate", typeof(System.DateTime));
    
            var fileGenerationTypeParameter = fileGenerationType != null ?
                new ObjectParameter("fileGenerationType", fileGenerationType) :
                new ObjectParameter("fileGenerationType", typeof(string));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_PAYMENT_HEADER_XML", stateCodeParameter, agencyCodeParameter, generationDateParameter, fileGenerationTypeParameter, billIdParameter, xmlFileName, runningCount);
        }
    
        public virtual ObjectResult<string> REAT_PAYMENT_HEADER_XML_TEMP(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, ObjectParameter xmlFileName, ObjectParameter runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_PAYMENT_HEADER_XML_TEMP", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, xmlFileName, runningCount);
        }
    
        public virtual ObjectResult<string> REAT_PAYMENT_HEADER_XML_TEMP_Admin(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<int> adminNdCode, ObjectParameter xmlFileName, ObjectParameter runningCount, string fundType, Nullable<int> level)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_PAYMENT_HEADER_XML_TEMP_Admin", stateCodeParameter, agencyCodeParameter, adminNdCodeParameter, xmlFileName, runningCount, fundTypeParameter, levelParameter);
        }
    
        public virtual ObjectResult<reports_get_nodal_officer_details_Result> reports_get_nodal_officer_details(Nullable<int> ndCode, Nullable<int> ndDesignation)
        {
            var ndCodeParameter = ndCode.HasValue ?
                new ObjectParameter("ndCode", ndCode) :
                new ObjectParameter("ndCode", typeof(int));
    
            var ndDesignationParameter = ndDesignation.HasValue ?
                new ObjectParameter("ndDesignation", ndDesignation) :
                new ObjectParameter("ndDesignation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reports_get_nodal_officer_details_Result>("reports_get_nodal_officer_details", ndCodeParameter, ndDesignationParameter);
        }
    
        public virtual int Save_Key_Darpan(string flag, Nullable<int> state_code, Nullable<int> sec_code, Nullable<int> dept_code, Nullable<int> project_code, Nullable<System.DateTime> datef, Nullable<System.DateTime> datet, string msg, Nullable<int> mCode)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var state_codeParameter = state_code.HasValue ?
                new ObjectParameter("State_code", state_code) :
                new ObjectParameter("State_code", typeof(int));
    
            var sec_codeParameter = sec_code.HasValue ?
                new ObjectParameter("sec_code", sec_code) :
                new ObjectParameter("sec_code", typeof(int));
    
            var dept_codeParameter = dept_code.HasValue ?
                new ObjectParameter("dept_code", dept_code) :
                new ObjectParameter("dept_code", typeof(int));
    
            var project_codeParameter = project_code.HasValue ?
                new ObjectParameter("project_code", project_code) :
                new ObjectParameter("project_code", typeof(int));
    
            var datefParameter = datef.HasValue ?
                new ObjectParameter("datef", datef) :
                new ObjectParameter("datef", typeof(System.DateTime));
    
            var datetParameter = datet.HasValue ?
                new ObjectParameter("datet", datet) :
                new ObjectParameter("datet", typeof(System.DateTime));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var mCodeParameter = mCode.HasValue ?
                new ObjectParameter("mCode", mCode) :
                new ObjectParameter("mCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Save_Key_Darpan", flagParameter, state_codeParameter, sec_codeParameter, dept_codeParameter, project_codeParameter, datefParameter, datetParameter, msgParameter, mCodeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_ALERT_LETTEST_TRANSACTION_DETAILS_Result> SP_ACC_ALERT_LETTEST_TRANSACTION_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_level_id)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_level_idParameter = prm_level_id.HasValue ?
                new ObjectParameter("Prm_level_id", prm_level_id) :
                new ObjectParameter("Prm_level_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_ALERT_LETTEST_TRANSACTION_DETAILS_Result>("SP_ACC_ALERT_LETTEST_TRANSACTION_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_level_idParameter);
        }
    
        public virtual ObjectResult<SP_ACC_ASSET_LIST_DETAILS_Result> SP_ACC_ASSET_LIST_DETAILS(Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, string prm_Fund_Type, string prm_Chq_No, string prm_bill_no)
        {
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Chq_NoParameter = prm_Chq_No != null ?
                new ObjectParameter("prm_Chq_No", prm_Chq_No) :
                new ObjectParameter("prm_Chq_No", typeof(string));
    
            var prm_bill_noParameter = prm_bill_no != null ?
                new ObjectParameter("prm_bill_no", prm_bill_no) :
                new ObjectParameter("prm_bill_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_ASSET_LIST_DETAILS_Result>("SP_ACC_ASSET_LIST_DETAILS", prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_Fund_TypeParameter, prm_Chq_NoParameter, prm_bill_noParameter);
        }
    
        public virtual ObjectResult<SP_ACC_BAR_LIST_DETAILS_Result> SP_ACC_BAR_LIST_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_BAR_LIST_DETAILS_Result>("SP_ACC_BAR_LIST_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter);
        }
    
        public virtual ObjectResult<SP_ACC_CASHBOOK_PAYMENT_SIDE_Result> SP_ACC_CASHBOOK_PAYMENT_SIDE(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_CASHBOOK_PAYMENT_SIDE_Result>("SP_ACC_CASHBOOK_PAYMENT_SIDE", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter);
        }
    
        public virtual ObjectResult<SP_ACC_CASHBOOK_RECEIPT_SIDE_Result> SP_ACC_CASHBOOK_RECEIPT_SIDE(string prmFundType, Nullable<int> prmAdminNdCode, Nullable<short> prmMonth, Nullable<short> prmYear, Nullable<short> prmlvl)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmAdminNdCodeParameter = prmAdminNdCode.HasValue ?
                new ObjectParameter("PrmAdminNdCode", prmAdminNdCode) :
                new ObjectParameter("PrmAdminNdCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(short));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            var prmlvlParameter = prmlvl.HasValue ?
                new ObjectParameter("Prmlvl", prmlvl) :
                new ObjectParameter("Prmlvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_CASHBOOK_RECEIPT_SIDE_Result>("SP_ACC_CASHBOOK_RECEIPT_SIDE", prmFundTypeParameter, prmAdminNdCodeParameter, prmMonthParameter, prmYearParameter, prmlvlParameter);
        }
    
        public virtual ObjectResult<SP_ACC_DB_ASSET_LIABILITIES_MAJOR_DETAILS_Result> SP_ACC_DB_ASSET_LIABILITIES_MAJOR_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl, Nullable<short> prm_Lower_code, string prm_Own_Lower, Nullable<short> prm_rpt_id, string prm_al)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Lower_codeParameter = prm_Lower_code.HasValue ?
                new ObjectParameter("Prm_Lower_code", prm_Lower_code) :
                new ObjectParameter("Prm_Lower_code", typeof(short));
    
            var prm_Own_LowerParameter = prm_Own_Lower != null ?
                new ObjectParameter("Prm_Own_Lower", prm_Own_Lower) :
                new ObjectParameter("Prm_Own_Lower", typeof(string));
    
            var prm_rpt_idParameter = prm_rpt_id.HasValue ?
                new ObjectParameter("Prm_rpt_id", prm_rpt_id) :
                new ObjectParameter("Prm_rpt_id", typeof(short));
    
            var prm_alParameter = prm_al != null ?
                new ObjectParameter("Prm_al", prm_al) :
                new ObjectParameter("Prm_al", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_DB_ASSET_LIABILITIES_MAJOR_DETAILS_Result>("SP_ACC_DB_ASSET_LIABILITIES_MAJOR_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter, prm_Lower_codeParameter, prm_Own_LowerParameter, prm_rpt_idParameter, prm_alParameter);
        }
    
        public virtual ObjectResult<SP_ACC_DB_ASSET_LIABILITIES_MINOR_DETAILS_Result> SP_ACC_DB_ASSET_LIABILITIES_MINOR_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl, Nullable<short> prm_Lower_code, string prm_Own_Lower, Nullable<short> prm_rpt_id, Nullable<short> prm_item_id, string prm_al)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Lower_codeParameter = prm_Lower_code.HasValue ?
                new ObjectParameter("Prm_Lower_code", prm_Lower_code) :
                new ObjectParameter("Prm_Lower_code", typeof(short));
    
            var prm_Own_LowerParameter = prm_Own_Lower != null ?
                new ObjectParameter("Prm_Own_Lower", prm_Own_Lower) :
                new ObjectParameter("Prm_Own_Lower", typeof(string));
    
            var prm_rpt_idParameter = prm_rpt_id.HasValue ?
                new ObjectParameter("Prm_rpt_id", prm_rpt_id) :
                new ObjectParameter("Prm_rpt_id", typeof(short));
    
            var prm_item_idParameter = prm_item_id.HasValue ?
                new ObjectParameter("Prm_item_id", prm_item_id) :
                new ObjectParameter("Prm_item_id", typeof(short));
    
            var prm_alParameter = prm_al != null ?
                new ObjectParameter("Prm_al", prm_al) :
                new ObjectParameter("Prm_al", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_DB_ASSET_LIABILITIES_MINOR_DETAILS_Result>("SP_ACC_DB_ASSET_LIABILITIES_MINOR_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter, prm_Lower_codeParameter, prm_Own_LowerParameter, prm_rpt_idParameter, prm_item_idParameter, prm_alParameter);
        }
    
        public virtual ObjectResult<SP_ACC_DB_DISPLAY_SUMMARY_Result> SP_ACC_DB_DISPLAY_SUMMARY(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl, Nullable<short> prm_Lower_code, string prm_Own_Lower)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Lower_codeParameter = prm_Lower_code.HasValue ?
                new ObjectParameter("Prm_Lower_code", prm_Lower_code) :
                new ObjectParameter("Prm_Lower_code", typeof(short));
    
            var prm_Own_LowerParameter = prm_Own_Lower != null ?
                new ObjectParameter("Prm_Own_Lower", prm_Own_Lower) :
                new ObjectParameter("Prm_Own_Lower", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_DB_DISPLAY_SUMMARY_Result>("SP_ACC_DB_DISPLAY_SUMMARY", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter, prm_Lower_codeParameter, prm_Own_LowerParameter);
        }
    
        public virtual ObjectResult<SP_ACC_DB_FUND_AUTH_RECEIVED_DETAILS_Result> SP_ACC_DB_FUND_AUTH_RECEIVED_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl, Nullable<short> prm_Lower_code, string prm_Own_Lower)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Lower_codeParameter = prm_Lower_code.HasValue ?
                new ObjectParameter("Prm_Lower_code", prm_Lower_code) :
                new ObjectParameter("Prm_Lower_code", typeof(short));
    
            var prm_Own_LowerParameter = prm_Own_Lower != null ?
                new ObjectParameter("Prm_Own_Lower", prm_Own_Lower) :
                new ObjectParameter("Prm_Own_Lower", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_DB_FUND_AUTH_RECEIVED_DETAILS_Result>("SP_ACC_DB_FUND_AUTH_RECEIVED_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter, prm_Lower_codeParameter, prm_Own_LowerParameter);
        }
    
        public virtual int SP_ACC_DELETE_ASSET_DETAILS(Nullable<long> prm_Bill_ID, Nullable<short> prm_Head_id)
        {
            var prm_Bill_IDParameter = prm_Bill_ID.HasValue ?
                new ObjectParameter("Prm_Bill_ID", prm_Bill_ID) :
                new ObjectParameter("Prm_Bill_ID", typeof(long));
    
            var prm_Head_idParameter = prm_Head_id.HasValue ?
                new ObjectParameter("Prm_Head_id", prm_Head_id) :
                new ObjectParameter("Prm_Head_id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACC_DELETE_ASSET_DETAILS", prm_Bill_IDParameter, prm_Head_idParameter);
        }
    
        public virtual ObjectResult<SP_ACC_Get_Report_Header_Information_Result> SP_ACC_Get_Report_Header_Information(string pControllerNAME, string pACTIONNAME, string pCHARFUNDTYPE, Nullable<int> pINTLVL, string pCHARRType)
        {
            var pControllerNAMEParameter = pControllerNAME != null ?
                new ObjectParameter("PControllerNAME", pControllerNAME) :
                new ObjectParameter("PControllerNAME", typeof(string));
    
            var pACTIONNAMEParameter = pACTIONNAME != null ?
                new ObjectParameter("PACTIONNAME", pACTIONNAME) :
                new ObjectParameter("PACTIONNAME", typeof(string));
    
            var pCHARFUNDTYPEParameter = pCHARFUNDTYPE != null ?
                new ObjectParameter("PCHARFUNDTYPE", pCHARFUNDTYPE) :
                new ObjectParameter("PCHARFUNDTYPE", typeof(string));
    
            var pINTLVLParameter = pINTLVL.HasValue ?
                new ObjectParameter("PINTLVL", pINTLVL) :
                new ObjectParameter("PINTLVL", typeof(int));
    
            var pCHARRTypeParameter = pCHARRType != null ?
                new ObjectParameter("PCHARRType", pCHARRType) :
                new ObjectParameter("PCHARRType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_Get_Report_Header_Information_Result>("SP_ACC_Get_Report_Header_Information", pControllerNAMEParameter, pACTIONNAMEParameter, pCHARFUNDTYPEParameter, pINTLVLParameter, pCHARRTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ACC_INSERT_CHEQUE_CANCELLATION_DETAILS(Nullable<long> prm_Bill_id, string prm_Fund_type, Nullable<long> prm_Admin_ND_Code, Nullable<short> prm_lvl, Nullable<System.DateTime> prm_Dt_Cancellation, string prm_Remarks, Nullable<short> prm_Head_id, Nullable<int> prm_Use_ID, string prm_IPADDRESS)
        {
            var prm_Bill_idParameter = prm_Bill_id.HasValue ?
                new ObjectParameter("Prm_Bill_id", prm_Bill_id) :
                new ObjectParameter("Prm_Bill_id", typeof(long));
    
            var prm_Fund_typeParameter = prm_Fund_type != null ?
                new ObjectParameter("Prm_Fund_type", prm_Fund_type) :
                new ObjectParameter("Prm_Fund_type", typeof(string));
    
            var prm_Admin_ND_CodeParameter = prm_Admin_ND_Code.HasValue ?
                new ObjectParameter("Prm_Admin_ND_Code", prm_Admin_ND_Code) :
                new ObjectParameter("Prm_Admin_ND_Code", typeof(long));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Dt_CancellationParameter = prm_Dt_Cancellation.HasValue ?
                new ObjectParameter("Prm_Dt_Cancellation", prm_Dt_Cancellation) :
                new ObjectParameter("Prm_Dt_Cancellation", typeof(System.DateTime));
    
            var prm_RemarksParameter = prm_Remarks != null ?
                new ObjectParameter("Prm_Remarks", prm_Remarks) :
                new ObjectParameter("Prm_Remarks", typeof(string));
    
            var prm_Head_idParameter = prm_Head_id.HasValue ?
                new ObjectParameter("Prm_Head_id", prm_Head_id) :
                new ObjectParameter("Prm_Head_id", typeof(short));
    
            var prm_Use_IDParameter = prm_Use_ID.HasValue ?
                new ObjectParameter("Prm_Use_ID", prm_Use_ID) :
                new ObjectParameter("Prm_Use_ID", typeof(int));
    
            var prm_IPADDRESSParameter = prm_IPADDRESS != null ?
                new ObjectParameter("Prm_IPADDRESS", prm_IPADDRESS) :
                new ObjectParameter("Prm_IPADDRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ACC_INSERT_CHEQUE_CANCELLATION_DETAILS", prm_Bill_idParameter, prm_Fund_typeParameter, prm_Admin_ND_CodeParameter, prm_lvlParameter, prm_Dt_CancellationParameter, prm_RemarksParameter, prm_Head_idParameter, prm_Use_IDParameter, prm_IPADDRESSParameter);
        }
    
        public virtual ObjectResult<SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_Result> SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS(string prm_Fund_Type, Nullable<short> prm_lvl, string prm_Cr_Db)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Cr_DbParameter = prm_Cr_Db != null ?
                new ObjectParameter("Prm_Cr_Db", prm_Cr_Db) :
                new ObjectParameter("Prm_Cr_Db", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_Result>("SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS", prm_Fund_TypeParameter, prm_lvlParameter, prm_Cr_DbParameter);
        }
    
        public virtual ObjectResult<SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test_Result> SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test(string prmFundType)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test_Result>("SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test", prmFundTypeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test_1_Result> SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test_1(string prm_Fund_Type)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test_1_Result>("SP_ACC_LEDGER_GET_CREDIT_DEBIT_HEADS_test_1", prm_Fund_TypeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_REVOKE_MOTH_Result> SP_ACC_REVOKE_MOTH(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> prm_Use_ID, string prm_IPADDRESS, string prm_Remarks)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var prm_Use_IDParameter = prm_Use_ID.HasValue ?
                new ObjectParameter("Prm_Use_ID", prm_Use_ID) :
                new ObjectParameter("Prm_Use_ID", typeof(int));
    
            var prm_IPADDRESSParameter = prm_IPADDRESS != null ?
                new ObjectParameter("Prm_IPADDRESS", prm_IPADDRESS) :
                new ObjectParameter("Prm_IPADDRESS", typeof(string));
    
            var prm_RemarksParameter = prm_Remarks != null ?
                new ObjectParameter("Prm_Remarks", prm_Remarks) :
                new ObjectParameter("Prm_Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_REVOKE_MOTH_Result>("SP_ACC_REVOKE_MOTH", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, prm_Use_IDParameter, prm_IPADDRESSParameter, prm_RemarksParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_DISPALY_Bill_DETAILS_Result> SP_ACC_RPT_DISPALY_Bill_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<System.DateTime> prm_StartDt, Nullable<System.DateTime> prm_EndDt, string prm_btype, string prm_rtype, Nullable<int> prm_allPIU)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_StartDtParameter = prm_StartDt.HasValue ?
                new ObjectParameter("prm_StartDt", prm_StartDt) :
                new ObjectParameter("prm_StartDt", typeof(System.DateTime));
    
            var prm_EndDtParameter = prm_EndDt.HasValue ?
                new ObjectParameter("prm_EndDt", prm_EndDt) :
                new ObjectParameter("prm_EndDt", typeof(System.DateTime));
    
            var prm_btypeParameter = prm_btype != null ?
                new ObjectParameter("Prm_btype", prm_btype) :
                new ObjectParameter("Prm_btype", typeof(string));
    
            var prm_rtypeParameter = prm_rtype != null ?
                new ObjectParameter("Prm_rtype", prm_rtype) :
                new ObjectParameter("Prm_rtype", typeof(string));
    
            var prm_allPIUParameter = prm_allPIU.HasValue ?
                new ObjectParameter("Prm_allPIU", prm_allPIU) :
                new ObjectParameter("Prm_allPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_DISPALY_Bill_DETAILS_Result>("SP_ACC_RPT_DISPALY_Bill_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_StartDtParameter, prm_EndDtParameter, prm_btypeParameter, prm_rtypeParameter, prm_allPIUParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_DISPALY_BILL_TRANSACTIONS_DETAILS_Result> SP_ACC_RPT_DISPALY_BILL_TRANSACTIONS_DETAILS(Nullable<long> prm_Bill_ID)
        {
            var prm_Bill_IDParameter = prm_Bill_ID.HasValue ?
                new ObjectParameter("Prm_Bill_ID", prm_Bill_ID) :
                new ObjectParameter("Prm_Bill_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_DISPALY_BILL_TRANSACTIONS_DETAILS_Result>("SP_ACC_RPT_DISPALY_BILL_TRANSACTIONS_DETAILS", prm_Bill_IDParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_DISPLAY_TEO_DETAILS_Result> SP_ACC_RPT_DISPLAY_TEO_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_DISPLAY_TEO_DETAILS_Result>("SP_ACC_RPT_DISPLAY_TEO_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LEDGER_CONTRACTOR_WORK_Result> SP_ACC_RPT_LEDGER_CONTRACTOR_WORK(string prm_Fund_Type, Nullable<int> prm_Piu_Code, Nullable<int> prm_Contractor_id, Nullable<int> prm_Agreement_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Piu_CodeParameter = prm_Piu_Code.HasValue ?
                new ObjectParameter("prm_Piu_Code", prm_Piu_Code) :
                new ObjectParameter("prm_Piu_Code", typeof(int));
    
            var prm_Contractor_idParameter = prm_Contractor_id.HasValue ?
                new ObjectParameter("Prm_Contractor_id", prm_Contractor_id) :
                new ObjectParameter("Prm_Contractor_id", typeof(int));
    
            var prm_Agreement_CodeParameter = prm_Agreement_Code.HasValue ?
                new ObjectParameter("Prm_Agreement_Code", prm_Agreement_Code) :
                new ObjectParameter("Prm_Agreement_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LEDGER_CONTRACTOR_WORK_Result>("SP_ACC_RPT_LEDGER_CONTRACTOR_WORK", prm_Fund_TypeParameter, prm_Piu_CodeParameter, prm_Contractor_idParameter, prm_Agreement_CodeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LEDGER_DETAILS_Result> SP_ACC_RPT_LEDGER_DETAILS(string prmFundType, Nullable<int> prmAdminNdCode, Nullable<short> prmMonth, Nullable<short> prmYear, Nullable<short> prmlvl, Nullable<short> prmHead, string prmCrDb)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmAdminNdCodeParameter = prmAdminNdCode.HasValue ?
                new ObjectParameter("PrmAdminNdCode", prmAdminNdCode) :
                new ObjectParameter("PrmAdminNdCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(short));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            var prmlvlParameter = prmlvl.HasValue ?
                new ObjectParameter("Prmlvl", prmlvl) :
                new ObjectParameter("Prmlvl", typeof(short));
    
            var prmHeadParameter = prmHead.HasValue ?
                new ObjectParameter("PrmHead", prmHead) :
                new ObjectParameter("PrmHead", typeof(short));
    
            var prmCrDbParameter = prmCrDb != null ?
                new ObjectParameter("PrmCrDb", prmCrDb) :
                new ObjectParameter("PrmCrDb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LEDGER_DETAILS_Result>("SP_ACC_RPT_LEDGER_DETAILS", prmFundTypeParameter, prmAdminNdCodeParameter, prmMonthParameter, prmYearParameter, prmlvlParameter, prmHeadParameter, prmCrDbParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_INPROGESS_DETAILS_Result> SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_INPROGESS_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_Head, string prm_Com_Inprogress)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_HeadParameter = prm_Head.HasValue ?
                new ObjectParameter("Prm_Head", prm_Head) :
                new ObjectParameter("Prm_Head", typeof(short));
    
            var prm_Com_InprogressParameter = prm_Com_Inprogress != null ?
                new ObjectParameter("Prm_Com_Inprogress", prm_Com_Inprogress) :
                new ObjectParameter("Prm_Com_Inprogress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_INPROGESS_DETAILS_Result>("SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_INPROGESS_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_HeadParameter, prm_Com_InprogressParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_WORKS_Result> SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_WORKS(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> prm_Year, string p_CHAR_fundType, Nullable<int> p_Head_id)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_Head_idParameter = p_Head_id.HasValue ?
                new ObjectParameter("P_Head_id", p_Head_id) :
                new ObjectParameter("P_Head_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_WORKS_Result>("SP_ACC_RPT_LEDGER_DETAILS_COMPLETED_WORKS", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, prm_YearParameter, p_CHAR_fundTypeParameter, p_Head_idParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LEDGER_DETAILS_INPROGRESS_WORKS_Result> SP_ACC_RPT_LEDGER_DETAILS_INPROGRESS_WORKS(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_Head_id)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_Head_idParameter = p_Head_id.HasValue ?
                new ObjectParameter("P_Head_id", p_Head_id) :
                new ObjectParameter("P_Head_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LEDGER_DETAILS_INPROGRESS_WORKS_Result>("SP_ACC_RPT_LEDGER_DETAILS_INPROGRESS_WORKS", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_Head_idParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LEDGER_DETAILS_PIU_WISE_Result> SP_ACC_RPT_LEDGER_DETAILS_PIU_WISE(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<int> prm_Lower_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_Head, string prm_Cr_Db)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_Lower_Nd_CodeParameter = prm_Lower_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Lower_Nd_Code", prm_Lower_Nd_Code) :
                new ObjectParameter("Prm_Lower_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_HeadParameter = prm_Head.HasValue ?
                new ObjectParameter("Prm_Head", prm_Head) :
                new ObjectParameter("Prm_Head", typeof(short));
    
            var prm_Cr_DbParameter = prm_Cr_Db != null ?
                new ObjectParameter("Prm_Cr_Db", prm_Cr_Db) :
                new ObjectParameter("Prm_Cr_Db", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LEDGER_DETAILS_PIU_WISE_Result>("SP_ACC_RPT_LEDGER_DETAILS_PIU_WISE", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_Lower_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_HeadParameter, prm_Cr_DbParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_LIST_AUTH_SIGNATORY_DETAILS_Result> SP_ACC_RPT_LIST_AUTH_SIGNATORY_DETAILS(Nullable<int> prm_Admin_Nd_Code, Nullable<int> lVL_ID)
        {
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var lVL_IDParameter = lVL_ID.HasValue ?
                new ObjectParameter("LVL_ID", lVL_ID) :
                new ObjectParameter("LVL_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_LIST_AUTH_SIGNATORY_DETAILS_Result>("SP_ACC_RPT_LIST_AUTH_SIGNATORY_DETAILS", prm_Admin_Nd_CodeParameter, lVL_IDParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_PF_WORK_REGISTER_Result> SP_ACC_RPT_PF_WORK_REGISTER(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<int> prm_Con_ID, Nullable<int> prm_Agr_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_Con_IDParameter = prm_Con_ID.HasValue ?
                new ObjectParameter("Prm_Con_ID", prm_Con_ID) :
                new ObjectParameter("Prm_Con_ID", typeof(int));
    
            var prm_Agr_CodeParameter = prm_Agr_Code.HasValue ?
                new ObjectParameter("Prm_Agr_Code", prm_Agr_Code) :
                new ObjectParameter("Prm_Agr_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_PF_WORK_REGISTER_Result>("SP_ACC_RPT_PF_WORK_REGISTER", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_Con_IDParameter, prm_Agr_CodeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_PF_WORK_REGISTER_HEADER_INFORMATION_Result> SP_ACC_RPT_PF_WORK_REGISTER_HEADER_INFORMATION(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<int> prm_Con_ID, Nullable<int> prm_Agr_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_Con_IDParameter = prm_Con_ID.HasValue ?
                new ObjectParameter("Prm_Con_ID", prm_Con_ID) :
                new ObjectParameter("Prm_Con_ID", typeof(int));
    
            var prm_Agr_CodeParameter = prm_Agr_Code.HasValue ?
                new ObjectParameter("Prm_Agr_Code", prm_Agr_Code) :
                new ObjectParameter("Prm_Agr_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_PF_WORK_REGISTER_HEADER_INFORMATION_Result>("SP_ACC_RPT_PF_WORK_REGISTER_HEADER_INFORMATION", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_Con_IDParameter, prm_Agr_CodeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_PIU_CHEQUE_ISSUED_ABSTRACT_Result> SP_ACC_RPT_PIU_CHEQUE_ISSUED_ABSTRACT(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_Srrda_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_Srrda_CodeParameter = prm_Srrda_Code.HasValue ?
                new ObjectParameter("Prm_Srrda_Code", prm_Srrda_Code) :
                new ObjectParameter("Prm_Srrda_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_PIU_CHEQUE_ISSUED_ABSTRACT_Result>("SP_ACC_RPT_PIU_CHEQUE_ISSUED_ABSTRACT", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_Srrda_CodeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_PIU_CHEQUE_ISSUED_DETAILS_Result> SP_ACC_RPT_PIU_CHEQUE_ISSUED_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, string prm_flag, Nullable<int> prm_CBID, Nullable<int> prm_Srrda_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_flagParameter = prm_flag != null ?
                new ObjectParameter("Prm_flag", prm_flag) :
                new ObjectParameter("Prm_flag", typeof(string));
    
            var prm_CBIDParameter = prm_CBID.HasValue ?
                new ObjectParameter("Prm_CBID", prm_CBID) :
                new ObjectParameter("Prm_CBID", typeof(int));
    
            var prm_Srrda_CodeParameter = prm_Srrda_Code.HasValue ?
                new ObjectParameter("Prm_Srrda_Code", prm_Srrda_Code) :
                new ObjectParameter("Prm_Srrda_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_PIU_CHEQUE_ISSUED_DETAILS_Result>("SP_ACC_RPT_PIU_CHEQUE_ISSUED_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_flagParameter, prm_CBIDParameter, prm_Srrda_CodeParameter);
        }
    
        public virtual ObjectResult<SP_ACC_RPT_PIU_CHEQUE_OUTSTANDING_DETAILS_Result> SP_ACC_RPT_PIU_CHEQUE_OUTSTANDING_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_Srrda_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_Srrda_CodeParameter = prm_Srrda_Code.HasValue ?
                new ObjectParameter("Prm_Srrda_Code", prm_Srrda_Code) :
                new ObjectParameter("Prm_Srrda_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_RPT_PIU_CHEQUE_OUTSTANDING_DETAILS_Result>("SP_ACC_RPT_PIU_CHEQUE_OUTSTANDING_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_Srrda_CodeParameter);
        }
    
        public virtual ObjectResult<SP_FEEDBACK_WEEKLY_REPORT_Result> SP_FEEDBACK_WEEKLY_REPORT(Nullable<int> sTATE, Nullable<int> fEED_FROM)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var fEED_FROMParameter = fEED_FROM.HasValue ?
                new ObjectParameter("FEED_FROM", fEED_FROM) :
                new ObjectParameter("FEED_FROM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FEEDBACK_WEEKLY_REPORT_Result>("SP_FEEDBACK_WEEKLY_REPORT", sTATEParameter, fEED_FROMParameter);
        }
    
        public virtual ObjectResult<string> sp_generate_inserts(string table_name, string target_table, Nullable<bool> include_column_list, string from, Nullable<bool> include_timestamp, Nullable<bool> debug_mode, string owner, Nullable<bool> ommit_images, Nullable<bool> ommit_identity, Nullable<int> top, string cols_to_include, string cols_to_exclude, Nullable<bool> disable_constraints, Nullable<bool> ommit_computed_cols)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var target_tableParameter = target_table != null ?
                new ObjectParameter("target_table", target_table) :
                new ObjectParameter("target_table", typeof(string));
    
            var include_column_listParameter = include_column_list.HasValue ?
                new ObjectParameter("include_column_list", include_column_list) :
                new ObjectParameter("include_column_list", typeof(bool));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var include_timestampParameter = include_timestamp.HasValue ?
                new ObjectParameter("include_timestamp", include_timestamp) :
                new ObjectParameter("include_timestamp", typeof(bool));
    
            var debug_modeParameter = debug_mode.HasValue ?
                new ObjectParameter("debug_mode", debug_mode) :
                new ObjectParameter("debug_mode", typeof(bool));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var ommit_imagesParameter = ommit_images.HasValue ?
                new ObjectParameter("ommit_images", ommit_images) :
                new ObjectParameter("ommit_images", typeof(bool));
    
            var ommit_identityParameter = ommit_identity.HasValue ?
                new ObjectParameter("ommit_identity", ommit_identity) :
                new ObjectParameter("ommit_identity", typeof(bool));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            var cols_to_includeParameter = cols_to_include != null ?
                new ObjectParameter("cols_to_include", cols_to_include) :
                new ObjectParameter("cols_to_include", typeof(string));
    
            var cols_to_excludeParameter = cols_to_exclude != null ?
                new ObjectParameter("cols_to_exclude", cols_to_exclude) :
                new ObjectParameter("cols_to_exclude", typeof(string));
    
            var disable_constraintsParameter = disable_constraints.HasValue ?
                new ObjectParameter("disable_constraints", disable_constraints) :
                new ObjectParameter("disable_constraints", typeof(bool));
    
            var ommit_computed_colsParameter = ommit_computed_cols.HasValue ?
                new ObjectParameter("ommit_computed_cols", ommit_computed_cols) :
                new ObjectParameter("ommit_computed_cols", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_generate_inserts", table_nameParameter, target_tableParameter, include_column_listParameter, fromParameter, include_timestampParameter, debug_modeParameter, ownerParameter, ommit_imagesParameter, ommit_identityParameter, topParameter, cols_to_includeParameter, cols_to_excludeParameter, disable_constraintsParameter, ommit_computed_colsParameter);
        }
    
        public virtual ObjectResult<sp_get_Authorized_signatories_statewise_Result> sp_get_Authorized_signatories_statewise(Nullable<int> param_int_state_code, Nullable<bool> param_bool_showActive)
        {
            var param_int_state_codeParameter = param_int_state_code.HasValue ?
                new ObjectParameter("param_int_state_code", param_int_state_code) :
                new ObjectParameter("param_int_state_code", typeof(int));
    
            var param_bool_showActiveParameter = param_bool_showActive.HasValue ?
                new ObjectParameter("param_bool_showActive", param_bool_showActive) :
                new ObjectParameter("param_bool_showActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_Authorized_signatories_statewise_Result>("sp_get_Authorized_signatories_statewise", param_int_state_codeParameter, param_bool_showActiveParameter);
        }
    
        public virtual ObjectResult<sp_get_chart_of_account_Result> sp_get_chart_of_account(string fundType)
        {
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("fundType", fundType) :
                new ObjectParameter("fundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_chart_of_account_Result>("sp_get_chart_of_account", fundTypeParameter);
        }
    
        public virtual ObjectResult<sp_get_menu_list_Result> sp_get_menu_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_menu_list_Result>("sp_get_menu_list");
        }
    
        public virtual ObjectResult<sp_get_menu_rights_Result> sp_get_menu_rights(Nullable<int> userId, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_menu_rights_Result>("sp_get_menu_rights", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<sp_get_menuitems_Result> sp_get_menuitems(Nullable<int> param_int_parent_code, Nullable<short> param_rolecode)
        {
            var param_int_parent_codeParameter = param_int_parent_code.HasValue ?
                new ObjectParameter("param_int_parent_code", param_int_parent_code) :
                new ObjectParameter("param_int_parent_code", typeof(int));
    
            var param_rolecodeParameter = param_rolecode.HasValue ?
                new ObjectParameter("param_rolecode", param_rolecode) :
                new ObjectParameter("param_rolecode", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_menuitems_Result>("sp_get_menuitems", param_int_parent_codeParameter, param_rolecodeParameter);
        }
    
        public virtual ObjectResult<sp_get_role_homepage_list_Result> sp_get_role_homepage_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_role_homepage_list_Result>("sp_get_role_homepage_list");
        }
    
        public virtual ObjectResult<sp_get_role_list_Result> sp_get_role_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_role_list_Result>("sp_get_role_list");
        }
    
        public virtual ObjectResult<sp_get_role_menuitems_Result> sp_get_role_menuitems(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_role_menuitems_Result>("sp_get_role_menuitems", roleIdParameter);
        }
    
        public virtual ObjectResult<sp_get_role_users_Result> sp_get_role_users(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_role_users_Result>("sp_get_role_users", roleIdParameter);
        }
    
        public virtual ObjectResult<sp_get_roles_Result> sp_get_roles(string param_int_parent_code)
        {
            var param_int_parent_codeParameter = param_int_parent_code != null ?
                new ObjectParameter("param_int_parent_code", param_int_parent_code) :
                new ObjectParameter("param_int_parent_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_roles_Result>("sp_get_roles", param_int_parent_codeParameter);
        }
    
        public virtual ObjectResult<sp_get_user_list_Result> sp_get_user_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_user_list_Result>("sp_get_user_list");
        }
    
        public virtual int sp_get_user_list_RCTRC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_get_user_list_RCTRC");
        }
    
        public virtual ObjectResult<sp_get_user_profile_Result> sp_get_user_profile(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_user_profile_Result>("sp_get_user_profile", userIdParameter);
        }
    
        public virtual ObjectResult<SP_HAB_SCHV_Result> SP_HAB_SCHV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HAB_SCHV_Result>("SP_HAB_SCHV");
        }
    
        public virtual int SP_INSERT_ROADS_MONTHLY_STATUS(Nullable<int> road_Code, Nullable<int> eXEC_PROG_YEAR, Nullable<int> eXEC_PROG_MONTH, Nullable<decimal> eXEC_PREPARATORY_WORK, Nullable<decimal> eXEC_EARTHWORK_SUBGRADE, Nullable<decimal> eXEC_SUBBASE_PREPRATION, Nullable<decimal> eXEC_BASE_COURSE, Nullable<decimal> eXEC_SURFACE_COURSE, Nullable<decimal> eXEC_COMPLETED, Nullable<int> eXEC_SIGNS_STONES, Nullable<int> eXEC_CD_WORKS, Nullable<int> eXEC_LSB_WORKS, Nullable<decimal> eXEC_MISCELANEOUS, string eXEC_ISCOMPLETED, Nullable<System.DateTime> eXEC_COMPLETION_DATE, Nullable<int> uSERID, string iPADD)
        {
            var road_CodeParameter = road_Code.HasValue ?
                new ObjectParameter("Road_Code", road_Code) :
                new ObjectParameter("Road_Code", typeof(int));
    
            var eXEC_PROG_YEARParameter = eXEC_PROG_YEAR.HasValue ?
                new ObjectParameter("EXEC_PROG_YEAR", eXEC_PROG_YEAR) :
                new ObjectParameter("EXEC_PROG_YEAR", typeof(int));
    
            var eXEC_PROG_MONTHParameter = eXEC_PROG_MONTH.HasValue ?
                new ObjectParameter("EXEC_PROG_MONTH", eXEC_PROG_MONTH) :
                new ObjectParameter("EXEC_PROG_MONTH", typeof(int));
    
            var eXEC_PREPARATORY_WORKParameter = eXEC_PREPARATORY_WORK.HasValue ?
                new ObjectParameter("EXEC_PREPARATORY_WORK", eXEC_PREPARATORY_WORK) :
                new ObjectParameter("EXEC_PREPARATORY_WORK", typeof(decimal));
    
            var eXEC_EARTHWORK_SUBGRADEParameter = eXEC_EARTHWORK_SUBGRADE.HasValue ?
                new ObjectParameter("EXEC_EARTHWORK_SUBGRADE", eXEC_EARTHWORK_SUBGRADE) :
                new ObjectParameter("EXEC_EARTHWORK_SUBGRADE", typeof(decimal));
    
            var eXEC_SUBBASE_PREPRATIONParameter = eXEC_SUBBASE_PREPRATION.HasValue ?
                new ObjectParameter("EXEC_SUBBASE_PREPRATION", eXEC_SUBBASE_PREPRATION) :
                new ObjectParameter("EXEC_SUBBASE_PREPRATION", typeof(decimal));
    
            var eXEC_BASE_COURSEParameter = eXEC_BASE_COURSE.HasValue ?
                new ObjectParameter("EXEC_BASE_COURSE", eXEC_BASE_COURSE) :
                new ObjectParameter("EXEC_BASE_COURSE", typeof(decimal));
    
            var eXEC_SURFACE_COURSEParameter = eXEC_SURFACE_COURSE.HasValue ?
                new ObjectParameter("EXEC_SURFACE_COURSE", eXEC_SURFACE_COURSE) :
                new ObjectParameter("EXEC_SURFACE_COURSE", typeof(decimal));
    
            var eXEC_COMPLETEDParameter = eXEC_COMPLETED.HasValue ?
                new ObjectParameter("EXEC_COMPLETED", eXEC_COMPLETED) :
                new ObjectParameter("EXEC_COMPLETED", typeof(decimal));
    
            var eXEC_SIGNS_STONESParameter = eXEC_SIGNS_STONES.HasValue ?
                new ObjectParameter("EXEC_SIGNS_STONES", eXEC_SIGNS_STONES) :
                new ObjectParameter("EXEC_SIGNS_STONES", typeof(int));
    
            var eXEC_CD_WORKSParameter = eXEC_CD_WORKS.HasValue ?
                new ObjectParameter("EXEC_CD_WORKS", eXEC_CD_WORKS) :
                new ObjectParameter("EXEC_CD_WORKS", typeof(int));
    
            var eXEC_LSB_WORKSParameter = eXEC_LSB_WORKS.HasValue ?
                new ObjectParameter("EXEC_LSB_WORKS", eXEC_LSB_WORKS) :
                new ObjectParameter("EXEC_LSB_WORKS", typeof(int));
    
            var eXEC_MISCELANEOUSParameter = eXEC_MISCELANEOUS.HasValue ?
                new ObjectParameter("EXEC_MISCELANEOUS", eXEC_MISCELANEOUS) :
                new ObjectParameter("EXEC_MISCELANEOUS", typeof(decimal));
    
            var eXEC_ISCOMPLETEDParameter = eXEC_ISCOMPLETED != null ?
                new ObjectParameter("EXEC_ISCOMPLETED", eXEC_ISCOMPLETED) :
                new ObjectParameter("EXEC_ISCOMPLETED", typeof(string));
    
            var eXEC_COMPLETION_DATEParameter = eXEC_COMPLETION_DATE.HasValue ?
                new ObjectParameter("EXEC_COMPLETION_DATE", eXEC_COMPLETION_DATE) :
                new ObjectParameter("EXEC_COMPLETION_DATE", typeof(System.DateTime));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ROADS_MONTHLY_STATUS", road_CodeParameter, eXEC_PROG_YEARParameter, eXEC_PROG_MONTHParameter, eXEC_PREPARATORY_WORKParameter, eXEC_EARTHWORK_SUBGRADEParameter, eXEC_SUBBASE_PREPRATIONParameter, eXEC_BASE_COURSEParameter, eXEC_SURFACE_COURSEParameter, eXEC_COMPLETEDParameter, eXEC_SIGNS_STONESParameter, eXEC_CD_WORKSParameter, eXEC_LSB_WORKSParameter, eXEC_MISCELANEOUSParameter, eXEC_ISCOMPLETEDParameter, eXEC_COMPLETION_DATEParameter, uSERIDParameter, iPADDParameter);
        }
    
        public virtual int sp_report_getAgencyDetails(string agencyType)
        {
            var agencyTypeParameter = agencyType != null ?
                new ObjectParameter("AgencyType", agencyType) :
                new ObjectParameter("AgencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_report_getAgencyDetails", agencyTypeParameter);
        }
    
        public virtual ObjectResult<sp_report_getContractorDetails_Result> sp_report_getContractorDetails(Nullable<int> stateCode, Nullable<int> districtCode, string contStatus)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var contStatusParameter = contStatus != null ?
                new ObjectParameter("ContStatus", contStatus) :
                new ObjectParameter("ContStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_report_getContractorDetails_Result>("sp_report_getContractorDetails", stateCodeParameter, districtCodeParameter, contStatusParameter);
        }
    
        public virtual int sp_set_menu_rights(Nullable<int> userId, Nullable<int> roleId, Nullable<int> menuId, Nullable<bool> isAdd, Nullable<bool> isEdit, Nullable<bool> isDelete)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var isAddParameter = isAdd.HasValue ?
                new ObjectParameter("isAdd", isAdd) :
                new ObjectParameter("isAdd", typeof(bool));
    
            var isEditParameter = isEdit.HasValue ?
                new ObjectParameter("isEdit", isEdit) :
                new ObjectParameter("isEdit", typeof(bool));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_set_menu_rights", userIdParameter, roleIdParameter, menuIdParameter, isAddParameter, isEditParameter, isDeleteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_shift_block(Nullable<int> oldDistrictCode, Nullable<int> blockCode, Nullable<int> newDistrictCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldDistrictCodeParameter = oldDistrictCode.HasValue ?
                new ObjectParameter("OldDistrictCode", oldDistrictCode) :
                new ObjectParameter("OldDistrictCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("BlockCode", blockCode) :
                new ObjectParameter("BlockCode", typeof(int));
    
            var newDistrictCodeParameter = newDistrictCode.HasValue ?
                new ObjectParameter("NewDistrictCode", newDistrictCode) :
                new ObjectParameter("NewDistrictCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_shift_block", oldDistrictCodeParameter, blockCodeParameter, newDistrictCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual int sp_shift_block_13_june_2017(Nullable<int> oldDistrictCode, Nullable<int> blockCode, Nullable<int> newDistrictCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldDistrictCodeParameter = oldDistrictCode.HasValue ?
                new ObjectParameter("OldDistrictCode", oldDistrictCode) :
                new ObjectParameter("OldDistrictCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("BlockCode", blockCode) :
                new ObjectParameter("BlockCode", typeof(int));
    
            var newDistrictCodeParameter = newDistrictCode.HasValue ?
                new ObjectParameter("NewDistrictCode", newDistrictCode) :
                new ObjectParameter("NewDistrictCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_shift_block_13_june_2017", oldDistrictCodeParameter, blockCodeParameter, newDistrictCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_shift_block_partial(Nullable<int> oldDistrictCode, Nullable<int> oldBlockCode, Nullable<int> newDistrictCode, Nullable<int> newBlockCode, Nullable<int> iMSProadCode, Nullable<int> adminNdCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldDistrictCodeParameter = oldDistrictCode.HasValue ?
                new ObjectParameter("OldDistrictCode", oldDistrictCode) :
                new ObjectParameter("OldDistrictCode", typeof(int));
    
            var oldBlockCodeParameter = oldBlockCode.HasValue ?
                new ObjectParameter("OldBlockCode", oldBlockCode) :
                new ObjectParameter("OldBlockCode", typeof(int));
    
            var newDistrictCodeParameter = newDistrictCode.HasValue ?
                new ObjectParameter("NewDistrictCode", newDistrictCode) :
                new ObjectParameter("NewDistrictCode", typeof(int));
    
            var newBlockCodeParameter = newBlockCode.HasValue ?
                new ObjectParameter("NewBlockCode", newBlockCode) :
                new ObjectParameter("NewBlockCode", typeof(int));
    
            var iMSProadCodeParameter = iMSProadCode.HasValue ?
                new ObjectParameter("IMSProadCode", iMSProadCode) :
                new ObjectParameter("IMSProadCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_shift_block_partial", oldDistrictCodeParameter, oldBlockCodeParameter, newDistrictCodeParameter, newBlockCodeParameter, iMSProadCodeParameter, adminNdCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_shift_district(Nullable<int> oldStateCode, Nullable<int> districtCode, Nullable<int> newStateCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldStateCodeParameter = oldStateCode.HasValue ?
                new ObjectParameter("OldStateCode", oldStateCode) :
                new ObjectParameter("OldStateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var newStateCodeParameter = newStateCode.HasValue ?
                new ObjectParameter("NewStateCode", newStateCode) :
                new ObjectParameter("NewStateCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_shift_district", oldStateCodeParameter, districtCodeParameter, newStateCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_shift_panchayat(Nullable<int> oldBlockCode, Nullable<int> panchayatCode, Nullable<int> newBlockCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldBlockCodeParameter = oldBlockCode.HasValue ?
                new ObjectParameter("OldBlockCode", oldBlockCode) :
                new ObjectParameter("OldBlockCode", typeof(int));
    
            var panchayatCodeParameter = panchayatCode.HasValue ?
                new ObjectParameter("PanchayatCode", panchayatCode) :
                new ObjectParameter("PanchayatCode", typeof(int));
    
            var newBlockCodeParameter = newBlockCode.HasValue ?
                new ObjectParameter("NewBlockCode", newBlockCode) :
                new ObjectParameter("NewBlockCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_shift_panchayat", oldBlockCodeParameter, panchayatCodeParameter, newBlockCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SHIFT_SANCTION_ROAD(Nullable<int> oldDistrictCode, Nullable<int> oldBlockCode, Nullable<int> newDistrictCode, Nullable<int> newBlockCode, Nullable<int> iMSProadCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldDistrictCodeParameter = oldDistrictCode.HasValue ?
                new ObjectParameter("OldDistrictCode", oldDistrictCode) :
                new ObjectParameter("OldDistrictCode", typeof(int));
    
            var oldBlockCodeParameter = oldBlockCode.HasValue ?
                new ObjectParameter("OldBlockCode", oldBlockCode) :
                new ObjectParameter("OldBlockCode", typeof(int));
    
            var newDistrictCodeParameter = newDistrictCode.HasValue ?
                new ObjectParameter("NewDistrictCode", newDistrictCode) :
                new ObjectParameter("NewDistrictCode", typeof(int));
    
            var newBlockCodeParameter = newBlockCode.HasValue ?
                new ObjectParameter("NewBlockCode", newBlockCode) :
                new ObjectParameter("NewBlockCode", typeof(int));
    
            var iMSProadCodeParameter = iMSProadCode.HasValue ?
                new ObjectParameter("IMSProadCode", iMSProadCode) :
                new ObjectParameter("IMSProadCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SHIFT_SANCTION_ROAD", oldDistrictCodeParameter, oldBlockCodeParameter, newDistrictCodeParameter, newBlockCodeParameter, iMSProadCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_shift_village(Nullable<int> oldBlockCode, Nullable<int> villageCode, Nullable<int> newBlockCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldBlockCodeParameter = oldBlockCode.HasValue ?
                new ObjectParameter("OldBlockCode", oldBlockCode) :
                new ObjectParameter("OldBlockCode", typeof(int));
    
            var villageCodeParameter = villageCode.HasValue ?
                new ObjectParameter("VillageCode", villageCode) :
                new ObjectParameter("VillageCode", typeof(int));
    
            var newBlockCodeParameter = newBlockCode.HasValue ?
                new ObjectParameter("NewBlockCode", newBlockCode) :
                new ObjectParameter("NewBlockCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_shift_village", oldBlockCodeParameter, villageCodeParameter, newBlockCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual int sp_shift_village_13_june_2017(Nullable<int> oldBlockCode, Nullable<int> villageCode, Nullable<int> newBlockCode, Nullable<int> uSERID, string iPADDR)
        {
            var oldBlockCodeParameter = oldBlockCode.HasValue ?
                new ObjectParameter("OldBlockCode", oldBlockCode) :
                new ObjectParameter("OldBlockCode", typeof(int));
    
            var villageCodeParameter = villageCode.HasValue ?
                new ObjectParameter("VillageCode", villageCode) :
                new ObjectParameter("VillageCode", typeof(int));
    
            var newBlockCodeParameter = newBlockCode.HasValue ?
                new ObjectParameter("NewBlockCode", newBlockCode) :
                new ObjectParameter("NewBlockCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_shift_village_13_june_2017", oldBlockCodeParameter, villageCodeParameter, newBlockCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual int SP_UPDATE_ROADS_MONTHLY_STATUS(Nullable<int> road_Code, Nullable<int> eXEC_PROG_YEAR, Nullable<int> eXEC_PROG_MONTH, Nullable<decimal> eXEC_PREPARATORY_WORK, Nullable<decimal> eXEC_EARTHWORK_SUBGRADE, Nullable<decimal> eXEC_SUBBASE_PREPRATION, Nullable<decimal> eXEC_BASE_COURSE, Nullable<decimal> eXEC_SURFACE_COURSE, Nullable<decimal> eXEC_COMPLETED, Nullable<int> eXEC_SIGNS_STONES, Nullable<int> eXEC_CD_WORKS, Nullable<int> eXEC_LSB_WORKS, Nullable<decimal> eXEC_MISCELANEOUS, string eXEC_ISCOMPLETED, Nullable<System.DateTime> eXEC_COMPLETION_DATE, Nullable<int> uSERID, string iPADD)
        {
            var road_CodeParameter = road_Code.HasValue ?
                new ObjectParameter("Road_Code", road_Code) :
                new ObjectParameter("Road_Code", typeof(int));
    
            var eXEC_PROG_YEARParameter = eXEC_PROG_YEAR.HasValue ?
                new ObjectParameter("EXEC_PROG_YEAR", eXEC_PROG_YEAR) :
                new ObjectParameter("EXEC_PROG_YEAR", typeof(int));
    
            var eXEC_PROG_MONTHParameter = eXEC_PROG_MONTH.HasValue ?
                new ObjectParameter("EXEC_PROG_MONTH", eXEC_PROG_MONTH) :
                new ObjectParameter("EXEC_PROG_MONTH", typeof(int));
    
            var eXEC_PREPARATORY_WORKParameter = eXEC_PREPARATORY_WORK.HasValue ?
                new ObjectParameter("EXEC_PREPARATORY_WORK", eXEC_PREPARATORY_WORK) :
                new ObjectParameter("EXEC_PREPARATORY_WORK", typeof(decimal));
    
            var eXEC_EARTHWORK_SUBGRADEParameter = eXEC_EARTHWORK_SUBGRADE.HasValue ?
                new ObjectParameter("EXEC_EARTHWORK_SUBGRADE", eXEC_EARTHWORK_SUBGRADE) :
                new ObjectParameter("EXEC_EARTHWORK_SUBGRADE", typeof(decimal));
    
            var eXEC_SUBBASE_PREPRATIONParameter = eXEC_SUBBASE_PREPRATION.HasValue ?
                new ObjectParameter("EXEC_SUBBASE_PREPRATION", eXEC_SUBBASE_PREPRATION) :
                new ObjectParameter("EXEC_SUBBASE_PREPRATION", typeof(decimal));
    
            var eXEC_BASE_COURSEParameter = eXEC_BASE_COURSE.HasValue ?
                new ObjectParameter("EXEC_BASE_COURSE", eXEC_BASE_COURSE) :
                new ObjectParameter("EXEC_BASE_COURSE", typeof(decimal));
    
            var eXEC_SURFACE_COURSEParameter = eXEC_SURFACE_COURSE.HasValue ?
                new ObjectParameter("EXEC_SURFACE_COURSE", eXEC_SURFACE_COURSE) :
                new ObjectParameter("EXEC_SURFACE_COURSE", typeof(decimal));
    
            var eXEC_COMPLETEDParameter = eXEC_COMPLETED.HasValue ?
                new ObjectParameter("EXEC_COMPLETED", eXEC_COMPLETED) :
                new ObjectParameter("EXEC_COMPLETED", typeof(decimal));
    
            var eXEC_SIGNS_STONESParameter = eXEC_SIGNS_STONES.HasValue ?
                new ObjectParameter("EXEC_SIGNS_STONES", eXEC_SIGNS_STONES) :
                new ObjectParameter("EXEC_SIGNS_STONES", typeof(int));
    
            var eXEC_CD_WORKSParameter = eXEC_CD_WORKS.HasValue ?
                new ObjectParameter("EXEC_CD_WORKS", eXEC_CD_WORKS) :
                new ObjectParameter("EXEC_CD_WORKS", typeof(int));
    
            var eXEC_LSB_WORKSParameter = eXEC_LSB_WORKS.HasValue ?
                new ObjectParameter("EXEC_LSB_WORKS", eXEC_LSB_WORKS) :
                new ObjectParameter("EXEC_LSB_WORKS", typeof(int));
    
            var eXEC_MISCELANEOUSParameter = eXEC_MISCELANEOUS.HasValue ?
                new ObjectParameter("EXEC_MISCELANEOUS", eXEC_MISCELANEOUS) :
                new ObjectParameter("EXEC_MISCELANEOUS", typeof(decimal));
    
            var eXEC_ISCOMPLETEDParameter = eXEC_ISCOMPLETED != null ?
                new ObjectParameter("EXEC_ISCOMPLETED", eXEC_ISCOMPLETED) :
                new ObjectParameter("EXEC_ISCOMPLETED", typeof(string));
    
            var eXEC_COMPLETION_DATEParameter = eXEC_COMPLETION_DATE.HasValue ?
                new ObjectParameter("EXEC_COMPLETION_DATE", eXEC_COMPLETION_DATE) :
                new ObjectParameter("EXEC_COMPLETION_DATE", typeof(System.DateTime));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ROADS_MONTHLY_STATUS", road_CodeParameter, eXEC_PROG_YEARParameter, eXEC_PROG_MONTHParameter, eXEC_PREPARATORY_WORKParameter, eXEC_EARTHWORK_SUBGRADEParameter, eXEC_SUBBASE_PREPRATIONParameter, eXEC_BASE_COURSEParameter, eXEC_SURFACE_COURSEParameter, eXEC_COMPLETEDParameter, eXEC_SIGNS_STONESParameter, eXEC_CD_WORKSParameter, eXEC_LSB_WORKSParameter, eXEC_MISCELANEOUSParameter, eXEC_ISCOMPLETEDParameter, eXEC_COMPLETION_DATEParameter, uSERIDParameter, iPADDParameter);
        }
    
        public virtual int sp_UpdateImsFreezeStatus(Nullable<int> imsYear, Nullable<int> stateCode, Nullable<int> imsBatch, string imsFreezeStatus, Nullable<int> uSERID, string iPADDR, Nullable<byte> scheme)
        {
            var imsYearParameter = imsYear.HasValue ?
                new ObjectParameter("ImsYear", imsYear) :
                new ObjectParameter("ImsYear", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var imsBatchParameter = imsBatch.HasValue ?
                new ObjectParameter("ImsBatch", imsBatch) :
                new ObjectParameter("ImsBatch", typeof(int));
    
            var imsFreezeStatusParameter = imsFreezeStatus != null ?
                new ObjectParameter("ImsFreezeStatus", imsFreezeStatus) :
                new ObjectParameter("ImsFreezeStatus", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateImsFreezeStatus", imsYearParameter, stateCodeParameter, imsBatchParameter, imsFreezeStatusParameter, uSERIDParameter, iPADDRParameter, schemeParameter);
        }
    
        public virtual int sp_UpdateLockUnlockStatus(Nullable<int> yearCode, Nullable<int> stateCode, Nullable<int> batchCode, string packageCode, Nullable<int> districtCode, string lockStatus, Nullable<int> moduleCode, string levelCode, Nullable<int> blockCode, Nullable<int> uSERID, string iPADDR)
        {
            var yearCodeParameter = yearCode.HasValue ?
                new ObjectParameter("YearCode", yearCode) :
                new ObjectParameter("YearCode", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var batchCodeParameter = batchCode.HasValue ?
                new ObjectParameter("BatchCode", batchCode) :
                new ObjectParameter("BatchCode", typeof(int));
    
            var packageCodeParameter = packageCode != null ?
                new ObjectParameter("PackageCode", packageCode) :
                new ObjectParameter("PackageCode", typeof(string));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var lockStatusParameter = lockStatus != null ?
                new ObjectParameter("LockStatus", lockStatus) :
                new ObjectParameter("LockStatus", typeof(string));
    
            var moduleCodeParameter = moduleCode.HasValue ?
                new ObjectParameter("ModuleCode", moduleCode) :
                new ObjectParameter("ModuleCode", typeof(int));
    
            var levelCodeParameter = levelCode != null ?
                new ObjectParameter("LevelCode", levelCode) :
                new ObjectParameter("LevelCode", typeof(string));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("BlockCode", blockCode) :
                new ObjectParameter("BlockCode", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDRParameter = iPADDR != null ?
                new ObjectParameter("IPADDR", iPADDR) :
                new ObjectParameter("IPADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateLockUnlockStatus", yearCodeParameter, stateCodeParameter, batchCodeParameter, packageCodeParameter, districtCodeParameter, lockStatusParameter, moduleCodeParameter, levelCodeParameter, blockCodeParameter, uSERIDParameter, iPADDRParameter);
        }
    
        public virtual ObjectResult<STAGE_PROPOSAL_WRONG_HABITATION_Result> STAGE_PROPOSAL_WRONG_HABITATION(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAGE_PROPOSAL_WRONG_HABITATION_Result>("STAGE_PROPOSAL_WRONG_HABITATION", stateParameter);
        }
    
        public virtual int temp(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_Head_id)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_Head_idParameter = p_Head_id.HasValue ?
                new ObjectParameter("P_Head_id", p_Head_id) :
                new ObjectParameter("P_Head_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("temp", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_Head_idParameter);
        }
    
        public virtual ObjectResult<TEMP_USP_CN4_REPORT_Result> TEMP_USP_CN4_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> roadCat, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadCatParameter = roadCat.HasValue ?
                new ObjectParameter("RoadCat", roadCat) :
                new ObjectParameter("RoadCat", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TEMP_USP_CN4_REPORT_Result>("TEMP_USP_CN4_REPORT", stateParameter, districtParameter, blockParameter, roadCatParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<um_acc_populatemenu_Result> um_acc_populatemenu(Nullable<int> rolecode, Nullable<int> levelcode, string fundtypecode, Nullable<int> schemeCode)
        {
            var rolecodeParameter = rolecode.HasValue ?
                new ObjectParameter("rolecode", rolecode) :
                new ObjectParameter("rolecode", typeof(int));
    
            var levelcodeParameter = levelcode.HasValue ?
                new ObjectParameter("levelcode", levelcode) :
                new ObjectParameter("levelcode", typeof(int));
    
            var fundtypecodeParameter = fundtypecode != null ?
                new ObjectParameter("fundtypecode", fundtypecode) :
                new ObjectParameter("fundtypecode", typeof(string));
    
            var schemeCodeParameter = schemeCode.HasValue ?
                new ObjectParameter("SchemeCode", schemeCode) :
                new ObjectParameter("SchemeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<um_acc_populatemenu_Result>("um_acc_populatemenu", rolecodeParameter, levelcodeParameter, fundtypecodeParameter, schemeCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> um_delete_menuitems(Nullable<short> param_rolecode, Nullable<int> param_int_menuid)
        {
            var param_rolecodeParameter = param_rolecode.HasValue ?
                new ObjectParameter("param_rolecode", param_rolecode) :
                new ObjectParameter("param_rolecode", typeof(short));
    
            var param_int_menuidParameter = param_int_menuid.HasValue ?
                new ObjectParameter("param_int_menuid", param_int_menuid) :
                new ObjectParameter("param_int_menuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("um_delete_menuitems", param_rolecodeParameter, param_int_menuidParameter);
        }
    
        public virtual ObjectResult<um_get_all_menuitems_by_id_Result> um_get_all_menuitems_by_id(Nullable<int> param_int_parent_code)
        {
            var param_int_parent_codeParameter = param_int_parent_code.HasValue ?
                new ObjectParameter("param_int_parent_code", param_int_parent_code) :
                new ObjectParameter("param_int_parent_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<um_get_all_menuitems_by_id_Result>("um_get_all_menuitems_by_id", param_int_parent_codeParameter);
        }
    
        public virtual ObjectResult<um_get_independent_user_list_Result> um_get_independent_user_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<um_get_independent_user_list_Result>("um_get_independent_user_list");
        }
    
        public virtual ObjectResult<Nullable<int>> um_map_menu_role(Nullable<int> param_rolecode, Nullable<short> param_int_menuid, Nullable<bool> param_bool_addchildren)
        {
            var param_rolecodeParameter = param_rolecode.HasValue ?
                new ObjectParameter("param_rolecode", param_rolecode) :
                new ObjectParameter("param_rolecode", typeof(int));
    
            var param_int_menuidParameter = param_int_menuid.HasValue ?
                new ObjectParameter("param_int_menuid", param_int_menuid) :
                new ObjectParameter("param_int_menuid", typeof(short));
    
            var param_bool_addchildrenParameter = param_bool_addchildren.HasValue ?
                new ObjectParameter("param_bool_addchildren", param_bool_addchildren) :
                new ObjectParameter("param_bool_addchildren", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("um_map_menu_role", param_rolecodeParameter, param_int_menuidParameter, param_bool_addchildrenParameter);
        }
    
        public virtual int USP_ABA_EXP_DETAILS(Nullable<int> state, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ABA_EXP_DETAILS", stateParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter, aGENCYParameter);
        }
    
        public virtual ObjectResult<USP_ABA_PROGRESS_DETAILS_Result> USP_ABA_PROGRESS_DETAILS(Nullable<int> month, Nullable<int> year, Nullable<int> scheme, Nullable<int> state)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ABA_PROGRESS_DETAILS_Result>("USP_ABA_PROGRESS_DETAILS", monthParameter, yearParameter, schemeParameter, stateParameter);
        }
    
        public virtual int USP_ACC_ACK_UNACK_CHEQUE_DETAILS(Nullable<int> sRRDANDCODE, Nullable<int> dPIUCODE, Nullable<int> month, Nullable<int> year, string fUNDTYPE, string fLAGACK, string fLAGAFIN, Nullable<System.DateTime> dTVOUCHER, string vOUCHERNO, Nullable<long> nA_BILL_ID, Nullable<long> prmUserid, string prmUserIP)
        {
            var sRRDANDCODEParameter = sRRDANDCODE.HasValue ?
                new ObjectParameter("SRRDANDCODE", sRRDANDCODE) :
                new ObjectParameter("SRRDANDCODE", typeof(int));
    
            var dPIUCODEParameter = dPIUCODE.HasValue ?
                new ObjectParameter("DPIUCODE", dPIUCODE) :
                new ObjectParameter("DPIUCODE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fUNDTYPEParameter = fUNDTYPE != null ?
                new ObjectParameter("FUNDTYPE", fUNDTYPE) :
                new ObjectParameter("FUNDTYPE", typeof(string));
    
            var fLAGACKParameter = fLAGACK != null ?
                new ObjectParameter("FLAGACK", fLAGACK) :
                new ObjectParameter("FLAGACK", typeof(string));
    
            var fLAGAFINParameter = fLAGAFIN != null ?
                new ObjectParameter("FLAGAFIN", fLAGAFIN) :
                new ObjectParameter("FLAGAFIN", typeof(string));
    
            var dTVOUCHERParameter = dTVOUCHER.HasValue ?
                new ObjectParameter("DTVOUCHER", dTVOUCHER) :
                new ObjectParameter("DTVOUCHER", typeof(System.DateTime));
    
            var vOUCHERNOParameter = vOUCHERNO != null ?
                new ObjectParameter("VOUCHERNO", vOUCHERNO) :
                new ObjectParameter("VOUCHERNO", typeof(string));
    
            var nA_BILL_IDParameter = nA_BILL_ID.HasValue ?
                new ObjectParameter("NA_BILL_ID", nA_BILL_ID) :
                new ObjectParameter("NA_BILL_ID", typeof(long));
    
            var prmUseridParameter = prmUserid.HasValue ?
                new ObjectParameter("PrmUserid", prmUserid) :
                new ObjectParameter("PrmUserid", typeof(long));
    
            var prmUserIPParameter = prmUserIP != null ?
                new ObjectParameter("PrmUserIP", prmUserIP) :
                new ObjectParameter("PrmUserIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_ACK_UNACK_CHEQUE_DETAILS", sRRDANDCODEParameter, dPIUCODEParameter, monthParameter, yearParameter, fUNDTYPEParameter, fLAGACKParameter, fLAGAFINParameter, dTVOUCHERParameter, vOUCHERNOParameter, nA_BILL_IDParameter, prmUseridParameter, prmUserIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_ADD_EDIT_MASTER_HEAD_DETAILS(Nullable<short> headId, string headCode, string headCodeRef, string headName, Nullable<short> parentHeadId, string fundType, string creditDebit, Nullable<byte> opLevelId, Nullable<bool> isOperational, Nullable<int> headCategoryId, string isAddEdit)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(short));
    
            var headCodeParameter = headCode != null ?
                new ObjectParameter("HeadCode", headCode) :
                new ObjectParameter("HeadCode", typeof(string));
    
            var headCodeRefParameter = headCodeRef != null ?
                new ObjectParameter("HeadCodeRef", headCodeRef) :
                new ObjectParameter("HeadCodeRef", typeof(string));
    
            var headNameParameter = headName != null ?
                new ObjectParameter("HeadName", headName) :
                new ObjectParameter("HeadName", typeof(string));
    
            var parentHeadIdParameter = parentHeadId.HasValue ?
                new ObjectParameter("ParentHeadId", parentHeadId) :
                new ObjectParameter("ParentHeadId", typeof(short));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var creditDebitParameter = creditDebit != null ?
                new ObjectParameter("CreditDebit", creditDebit) :
                new ObjectParameter("CreditDebit", typeof(string));
    
            var opLevelIdParameter = opLevelId.HasValue ?
                new ObjectParameter("OpLevelId", opLevelId) :
                new ObjectParameter("OpLevelId", typeof(byte));
    
            var isOperationalParameter = isOperational.HasValue ?
                new ObjectParameter("IsOperational", isOperational) :
                new ObjectParameter("IsOperational", typeof(bool));
    
            var headCategoryIdParameter = headCategoryId.HasValue ?
                new ObjectParameter("HeadCategoryId", headCategoryId) :
                new ObjectParameter("HeadCategoryId", typeof(int));
    
            var isAddEditParameter = isAddEdit != null ?
                new ObjectParameter("IsAddEdit", isAddEdit) :
                new ObjectParameter("IsAddEdit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_ADD_EDIT_MASTER_HEAD_DETAILS", headIdParameter, headCodeParameter, headCodeRefParameter, headNameParameter, parentHeadIdParameter, fundTypeParameter, creditDebitParameter, opLevelIdParameter, isOperationalParameter, headCategoryIdParameter, isAddEditParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_ADD_EDIT_MASTER_TRANSACTION_DETAILS(Nullable<short> transactionId, Nullable<short> transactionParentID, string cashCheque, string billType, string txnDesc, string txnNarration, string fundType, Nullable<bool> isOperational, Nullable<byte> opLevelId, Nullable<bool> isRequiredAfterPorting, string isAddEdit)
        {
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(short));
    
            var transactionParentIDParameter = transactionParentID.HasValue ?
                new ObjectParameter("TransactionParentID", transactionParentID) :
                new ObjectParameter("TransactionParentID", typeof(short));
    
            var cashChequeParameter = cashCheque != null ?
                new ObjectParameter("CashCheque", cashCheque) :
                new ObjectParameter("CashCheque", typeof(string));
    
            var billTypeParameter = billType != null ?
                new ObjectParameter("BillType", billType) :
                new ObjectParameter("BillType", typeof(string));
    
            var txnDescParameter = txnDesc != null ?
                new ObjectParameter("TxnDesc", txnDesc) :
                new ObjectParameter("TxnDesc", typeof(string));
    
            var txnNarrationParameter = txnNarration != null ?
                new ObjectParameter("TxnNarration", txnNarration) :
                new ObjectParameter("TxnNarration", typeof(string));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var isOperationalParameter = isOperational.HasValue ?
                new ObjectParameter("IsOperational", isOperational) :
                new ObjectParameter("IsOperational", typeof(bool));
    
            var opLevelIdParameter = opLevelId.HasValue ?
                new ObjectParameter("OpLevelId", opLevelId) :
                new ObjectParameter("OpLevelId", typeof(byte));
    
            var isRequiredAfterPortingParameter = isRequiredAfterPorting.HasValue ?
                new ObjectParameter("IsRequiredAfterPorting", isRequiredAfterPorting) :
                new ObjectParameter("IsRequiredAfterPorting", typeof(bool));
    
            var isAddEditParameter = isAddEdit != null ?
                new ObjectParameter("IsAddEdit", isAddEdit) :
                new ObjectParameter("IsAddEdit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_ADD_EDIT_MASTER_TRANSACTION_DETAILS", transactionIdParameter, transactionParentIDParameter, cashChequeParameter, billTypeParameter, txnDescParameter, txnNarrationParameter, fundTypeParameter, isOperationalParameter, opLevelIdParameter, isRequiredAfterPortingParameter, isAddEditParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_ALERT_DISPLAY_NOTIFICATION_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_ALERT_DISPLAY_NOTIFICATION_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_ALERT_DPIU_Dispaly_Authorization_Issued_Details_Result> USP_ACC_ALERT_DPIU_Dispaly_Authorization_Issued_Details(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_ALERT_DPIU_Dispaly_Authorization_Issued_Details_Result>("USP_ACC_ALERT_DPIU_Dispaly_Authorization_Issued_Details", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_ALERT_DPIU_LATEST_TRANSACTION_DETAILS_Result> USP_ACC_ALERT_DPIU_LATEST_TRANSACTION_DETAILS(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_ALERT_DPIU_LATEST_TRANSACTION_DETAILS_Result>("USP_ACC_ALERT_DPIU_LATEST_TRANSACTION_DETAILS", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_BANK_RECONCILIATION_LIST_Result> USP_ACC_BANK_RECONCILIATION_LIST(Nullable<int> adminNdCode, Nullable<int> month, Nullable<int> year, string fundType, string month_Date_Wise, Nullable<System.DateTime> billDate, Nullable<int> sRRDANdCode, Nullable<int> levelId)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var month_Date_WiseParameter = month_Date_Wise != null ?
                new ObjectParameter("Month_Date_Wise", month_Date_Wise) :
                new ObjectParameter("Month_Date_Wise", typeof(string));
    
            var billDateParameter = billDate.HasValue ?
                new ObjectParameter("BillDate", billDate) :
                new ObjectParameter("BillDate", typeof(System.DateTime));
    
            var sRRDANdCodeParameter = sRRDANdCode.HasValue ?
                new ObjectParameter("SRRDANdCode", sRRDANdCode) :
                new ObjectParameter("SRRDANdCode", typeof(int));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_BANK_RECONCILIATION_LIST_Result>("USP_ACC_BANK_RECONCILIATION_LIST", adminNdCodeParameter, monthParameter, yearParameter, fundTypeParameter, month_Date_WiseParameter, billDateParameter, sRRDANdCodeParameter, levelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_CHK_BALACE_SHEET_IS_FINALIZE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_CHK_BALACE_SHEET_IS_FINALIZE", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_DPIU_STATUS_MONITORING_Result> USP_ACC_DB_DPIU_STATUS_MONITORING(string prm_Fund_Type, Nullable<long> prm_State_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_DPIU_STATUS_MONITORING_Result>("USP_ACC_DB_DPIU_STATUS_MONITORING", prm_Fund_TypeParameter, prm_State_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_Expn_Summary_Result> USP_ACC_DB_Expn_Summary(string prm_Fund_Type, string prm_login_type, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code, Nullable<int> prm_Funding_Ageny)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_login_typeParameter = prm_login_type != null ?
                new ObjectParameter("Prm_login_type", prm_login_type) :
                new ObjectParameter("Prm_login_type", typeof(string));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            var prm_Funding_AgenyParameter = prm_Funding_Ageny.HasValue ?
                new ObjectParameter("Prm_Funding_Ageny", prm_Funding_Ageny) :
                new ObjectParameter("Prm_Funding_Ageny", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_Expn_Summary_Result>("USP_ACC_DB_Expn_Summary", prm_Fund_TypeParameter, prm_login_typeParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter, prm_Funding_AgenyParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_Expn_Trend_Result> USP_ACC_DB_Expn_Trend(string prm_Fund_Type, string prm_login_type, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code, Nullable<int> prm_Collaboration)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_login_typeParameter = prm_login_type != null ?
                new ObjectParameter("Prm_login_type", prm_login_type) :
                new ObjectParameter("Prm_login_type", typeof(string));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            var prm_CollaborationParameter = prm_Collaboration.HasValue ?
                new ObjectParameter("Prm_Collaboration", prm_Collaboration) :
                new ObjectParameter("Prm_Collaboration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_Expn_Trend_Result>("USP_ACC_DB_Expn_Trend", prm_Fund_TypeParameter, prm_login_typeParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter, prm_CollaborationParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_FUND_Expn_Details_Result> USP_ACC_DB_FUND_Expn_Details(string prm_Fund_Type, string prm_login_type)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_login_typeParameter = prm_login_type != null ?
                new ObjectParameter("Prm_login_type", prm_login_type) :
                new ObjectParameter("Prm_login_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_FUND_Expn_Details_Result>("USP_ACC_DB_FUND_Expn_Details", prm_Fund_TypeParameter, prm_login_typeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_Status_Monitoring_Result> USP_ACC_DB_Status_Monitoring(string prm_Fund_Type, string prm_login_type)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_login_typeParameter = prm_login_type != null ?
                new ObjectParameter("Prm_login_type", prm_login_type) :
                new ObjectParameter("Prm_login_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_Status_Monitoring_Result>("USP_ACC_DB_Status_Monitoring", prm_Fund_TypeParameter, prm_login_typeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_WB_DISPLAY_FINANCIAL_REPORT_Result> USP_ACC_DB_WB_DISPLAY_FINANCIAL_REPORT(Nullable<int> prm_State_ND_Code, Nullable<int> prm_District_Code, Nullable<int> prm_PIU_Code, Nullable<int> prm_Collaboration, Nullable<int> prm_Year, string prm_Duration_Type, Nullable<int> prm_Duration)
        {
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_District_CodeParameter = prm_District_Code.HasValue ?
                new ObjectParameter("Prm_District_Code", prm_District_Code) :
                new ObjectParameter("Prm_District_Code", typeof(int));
    
            var prm_PIU_CodeParameter = prm_PIU_Code.HasValue ?
                new ObjectParameter("Prm_PIU_Code", prm_PIU_Code) :
                new ObjectParameter("Prm_PIU_Code", typeof(int));
    
            var prm_CollaborationParameter = prm_Collaboration.HasValue ?
                new ObjectParameter("Prm_Collaboration", prm_Collaboration) :
                new ObjectParameter("Prm_Collaboration", typeof(int));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            var prm_Duration_TypeParameter = prm_Duration_Type != null ?
                new ObjectParameter("Prm_Duration_Type", prm_Duration_Type) :
                new ObjectParameter("Prm_Duration_Type", typeof(string));
    
            var prm_DurationParameter = prm_Duration.HasValue ?
                new ObjectParameter("Prm_Duration", prm_Duration) :
                new ObjectParameter("Prm_Duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_WB_DISPLAY_FINANCIAL_REPORT_Result>("USP_ACC_DB_WB_DISPLAY_FINANCIAL_REPORT", prm_State_ND_CodeParameter, prm_District_CodeParameter, prm_PIU_CodeParameter, prm_CollaborationParameter, prm_YearParameter, prm_Duration_TypeParameter, prm_DurationParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_WB_DPIU_LIST_STATUS_MONITORING_Result> USP_ACC_DB_WB_DPIU_LIST_STATUS_MONITORING(Nullable<int> prm_State_ND_Code, Nullable<int> prm_Year, string prm_Duration_Type, Nullable<int> prm_Duration, string prm_Fund_Type)
        {
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            var prm_Duration_TypeParameter = prm_Duration_Type != null ?
                new ObjectParameter("Prm_Duration_Type", prm_Duration_Type) :
                new ObjectParameter("Prm_Duration_Type", typeof(string));
    
            var prm_DurationParameter = prm_Duration.HasValue ?
                new ObjectParameter("Prm_Duration", prm_Duration) :
                new ObjectParameter("Prm_Duration", typeof(int));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_WB_DPIU_LIST_STATUS_MONITORING_Result>("USP_ACC_DB_WB_DPIU_LIST_STATUS_MONITORING", prm_State_ND_CodeParameter, prm_YearParameter, prm_Duration_TypeParameter, prm_DurationParameter, prm_Fund_TypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_WB_General_Information_Result> USP_ACC_DB_WB_General_Information(Nullable<int> prm_State_ND_Code, string prm_Fund_Type)
        {
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_WB_General_Information_Result>("USP_ACC_DB_WB_General_Information", prm_State_ND_CodeParameter, prm_Fund_TypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_WB_STATUS_MONITORING_Result> USP_ACC_DB_WB_STATUS_MONITORING(Nullable<int> prm_State_ND_Code, Nullable<int> prm_Year, string prm_Duration_Type, Nullable<int> prm_Duration)
        {
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            var prm_Duration_TypeParameter = prm_Duration_Type != null ?
                new ObjectParameter("Prm_Duration_Type", prm_Duration_Type) :
                new ObjectParameter("Prm_Duration_Type", typeof(string));
    
            var prm_DurationParameter = prm_Duration.HasValue ?
                new ObjectParameter("Prm_Duration", prm_Duration) :
                new ObjectParameter("Prm_Duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_WB_STATUS_MONITORING_Result>("USP_ACC_DB_WB_STATUS_MONITORING", prm_State_ND_CodeParameter, prm_YearParameter, prm_Duration_TypeParameter, prm_DurationParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DB_WB_Yearwise_Cumulative_Expn_Result> USP_ACC_DB_WB_Yearwise_Cumulative_Expn(Nullable<int> prm_State_ND_Code, Nullable<int> prm_District_Code, Nullable<int> prm_PIU_Code, Nullable<int> prm_Collaboration, string prm_Fund_Type)
        {
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_District_CodeParameter = prm_District_Code.HasValue ?
                new ObjectParameter("Prm_District_Code", prm_District_Code) :
                new ObjectParameter("Prm_District_Code", typeof(int));
    
            var prm_PIU_CodeParameter = prm_PIU_Code.HasValue ?
                new ObjectParameter("Prm_PIU_Code", prm_PIU_Code) :
                new ObjectParameter("Prm_PIU_Code", typeof(int));
    
            var prm_CollaborationParameter = prm_Collaboration.HasValue ?
                new ObjectParameter("Prm_Collaboration", prm_Collaboration) :
                new ObjectParameter("Prm_Collaboration", typeof(int));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DB_WB_Yearwise_Cumulative_Expn_Result>("USP_ACC_DB_WB_Yearwise_Cumulative_Expn", prm_State_ND_CodeParameter, prm_District_CodeParameter, prm_PIU_CodeParameter, prm_CollaborationParameter, prm_Fund_TypeParameter);
        }
    
        public virtual int USP_ACC_DELETE_CHEQUE_ACKNOWLEDGEMENT_DETAILS(Nullable<int> adminNdCode, Nullable<int> accBillMonth, Nullable<int> accBillYear, Nullable<long> accBillId)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var accBillMonthParameter = accBillMonth.HasValue ?
                new ObjectParameter("AccBillMonth", accBillMonth) :
                new ObjectParameter("AccBillMonth", typeof(int));
    
            var accBillYearParameter = accBillYear.HasValue ?
                new ObjectParameter("AccBillYear", accBillYear) :
                new ObjectParameter("AccBillYear", typeof(int));
    
            var accBillIdParameter = accBillId.HasValue ?
                new ObjectParameter("AccBillId", accBillId) :
                new ObjectParameter("AccBillId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_DELETE_CHEQUE_ACKNOWLEDGEMENT_DETAILS", adminNdCodeParameter, accBillMonthParameter, accBillYearParameter, accBillIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_DELETE_CHEQUE_RENEWAL_DETAILS(Nullable<long> prm_Bill_ID)
        {
            var prm_Bill_IDParameter = prm_Bill_ID.HasValue ?
                new ObjectParameter("Prm_Bill_ID", prm_Bill_ID) :
                new ObjectParameter("Prm_Bill_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_DELETE_CHEQUE_RENEWAL_DETAILS", prm_Bill_IDParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_DELETE_CHEQUEBOOK_DETAILS(Nullable<int> adminNdCode, string fundType, Nullable<int> chequeBookID)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var chequeBookIDParameter = chequeBookID.HasValue ?
                new ObjectParameter("ChequeBookID", chequeBookID) :
                new ObjectParameter("ChequeBookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_DELETE_CHEQUEBOOK_DETAILS", adminNdCodeParameter, fundTypeParameter, chequeBookIDParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_DELETE_FUND_RELEASE_DETAILS(Nullable<int> fundReleaseID)
        {
            var fundReleaseIDParameter = fundReleaseID.HasValue ?
                new ObjectParameter("FundReleaseID", fundReleaseID) :
                new ObjectParameter("FundReleaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_DELETE_FUND_RELEASE_DETAILS", fundReleaseIDParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DISPLAY_AGENCIES_DETAILS_Result> USP_ACC_DISPLAY_AGENCIES_DETAILS(Nullable<int> prmAStateCode)
        {
            var prmAStateCodeParameter = prmAStateCode.HasValue ?
                new ObjectParameter("PrmAStateCode", prmAStateCode) :
                new ObjectParameter("PrmAStateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DISPLAY_AGENCIES_DETAILS_Result>("USP_ACC_DISPLAY_AGENCIES_DETAILS", prmAStateCodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS_Result> USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS(Nullable<int> prmStateNDCode, Nullable<int> prmDPIUNDCode, Nullable<short> prmLevel, string prmActive)
        {
            var prmStateNDCodeParameter = prmStateNDCode.HasValue ?
                new ObjectParameter("PrmStateNDCode", prmStateNDCode) :
                new ObjectParameter("PrmStateNDCode", typeof(int));
    
            var prmDPIUNDCodeParameter = prmDPIUNDCode.HasValue ?
                new ObjectParameter("PrmDPIUNDCode", prmDPIUNDCode) :
                new ObjectParameter("PrmDPIUNDCode", typeof(int));
    
            var prmLevelParameter = prmLevel.HasValue ?
                new ObjectParameter("PrmLevel", prmLevel) :
                new ObjectParameter("PrmLevel", typeof(short));
    
            var prmActiveParameter = prmActive != null ?
                new ObjectParameter("PrmActive", prmActive) :
                new ObjectParameter("PrmActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS_Result>("USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS", prmStateNDCodeParameter, prmDPIUNDCodeParameter, prmLevelParameter, prmActiveParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS_Backup_Result> USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS_Backup(Nullable<int> prmStateNDCode, Nullable<int> prmDPIUNDCode, Nullable<short> prmLevel, string prmActive)
        {
            var prmStateNDCodeParameter = prmStateNDCode.HasValue ?
                new ObjectParameter("PrmStateNDCode", prmStateNDCode) :
                new ObjectParameter("PrmStateNDCode", typeof(int));
    
            var prmDPIUNDCodeParameter = prmDPIUNDCode.HasValue ?
                new ObjectParameter("PrmDPIUNDCode", prmDPIUNDCode) :
                new ObjectParameter("PrmDPIUNDCode", typeof(int));
    
            var prmLevelParameter = prmLevel.HasValue ?
                new ObjectParameter("PrmLevel", prmLevel) :
                new ObjectParameter("PrmLevel", typeof(short));
    
            var prmActiveParameter = prmActive != null ?
                new ObjectParameter("PrmActive", prmActive) :
                new ObjectParameter("PrmActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS_Backup_Result>("USP_ACC_DISPLAY_AUTHORISE_SIGNATORY_DETAILS_Backup", prmStateNDCodeParameter, prmDPIUNDCodeParameter, prmLevelParameter, prmActiveParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DISPLAY_IMPREST_PAYMENT_DETAILS_Result> USP_ACC_DISPLAY_IMPREST_PAYMENT_DETAILS(string prmFundType, Nullable<int> prmAdminndCode, Nullable<short> prmMonth, Nullable<short> prmYear)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmAdminndCodeParameter = prmAdminndCode.HasValue ?
                new ObjectParameter("PrmAdminndCode", prmAdminndCode) :
                new ObjectParameter("PrmAdminndCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(short));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DISPLAY_IMPREST_PAYMENT_DETAILS_Result>("USP_ACC_DISPLAY_IMPREST_PAYMENT_DETAILS", prmFundTypeParameter, prmAdminndCodeParameter, prmMonthParameter, prmYearParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DISPLAY_IMPREST_Settlement_DETAILS_Result> USP_ACC_DISPLAY_IMPREST_Settlement_DETAILS(string prmFundType, Nullable<int> prmAdminndCode, Nullable<short> prmMonth, Nullable<short> prmYear)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmAdminndCodeParameter = prmAdminndCode.HasValue ?
                new ObjectParameter("PrmAdminndCode", prmAdminndCode) :
                new ObjectParameter("PrmAdminndCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(short));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DISPLAY_IMPREST_Settlement_DETAILS_Result>("USP_ACC_DISPLAY_IMPREST_Settlement_DETAILS", prmFundTypeParameter, prmAdminndCodeParameter, prmMonthParameter, prmYearParameter);
        }
    
        public virtual ObjectResult<USP_ACC_DISPLAY_REJECT_RESEND_EPAYMENT_LIST_Result> USP_ACC_DISPLAY_REJECT_RESEND_EPAYMENT_LIST(Nullable<int> adminNDCode, Nullable<int> billMonth, Nullable<int> billYear, string fundType, string modeOfTransaction)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var modeOfTransactionParameter = modeOfTransaction != null ?
                new ObjectParameter("ModeOfTransaction", modeOfTransaction) :
                new ObjectParameter("ModeOfTransaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_DISPLAY_REJECT_RESEND_EPAYMENT_LIST_Result>("USP_ACC_DISPLAY_REJECT_RESEND_EPAYMENT_LIST", adminNDCodeParameter, billMonthParameter, billYearParameter, fundTypeParameter, modeOfTransactionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_FINALIZE_ACCOUNT(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> prm_Use_ID, string prm_IPADDRESS, Nullable<System.DateTime> prm_AUDITDATE)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var prm_Use_IDParameter = prm_Use_ID.HasValue ?
                new ObjectParameter("Prm_Use_ID", prm_Use_ID) :
                new ObjectParameter("Prm_Use_ID", typeof(int));
    
            var prm_IPADDRESSParameter = prm_IPADDRESS != null ?
                new ObjectParameter("Prm_IPADDRESS", prm_IPADDRESS) :
                new ObjectParameter("Prm_IPADDRESS", typeof(string));
    
            var prm_AUDITDATEParameter = prm_AUDITDATE.HasValue ?
                new ObjectParameter("Prm_AUDITDATE", prm_AUDITDATE) :
                new ObjectParameter("Prm_AUDITDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_FINALIZE_ACCOUNT", p_INT_AdminNDCodeParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, prm_Use_IDParameter, prm_IPADDRESSParameter, prm_AUDITDATEParameter);
        }
    
        public virtual int USP_ACC_FPP_AUTOMATE_QUERY(Nullable<int> prmStateCode, Nullable<int> prmAgencyCode)
        {
            var prmStateCodeParameter = prmStateCode.HasValue ?
                new ObjectParameter("PrmStateCode", prmStateCode) :
                new ObjectParameter("PrmStateCode", typeof(int));
    
            var prmAgencyCodeParameter = prmAgencyCode.HasValue ?
                new ObjectParameter("PrmAgencyCode", prmAgencyCode) :
                new ObjectParameter("PrmAgencyCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_FPP_AUTOMATE_QUERY", prmStateCodeParameter, prmAgencyCodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GEN_POPULATE_CONTRACTOR_Result> USP_ACC_GEN_POPULATE_CONTRACTOR(string prm_Fund_Type, string prm_Con_Supp_Flag, Nullable<int> prm_State_Code, Nullable<int> prm_District_code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Con_Supp_FlagParameter = prm_Con_Supp_Flag != null ?
                new ObjectParameter("Prm_Con_Supp_Flag", prm_Con_Supp_Flag) :
                new ObjectParameter("Prm_Con_Supp_Flag", typeof(string));
    
            var prm_State_CodeParameter = prm_State_Code.HasValue ?
                new ObjectParameter("Prm_State_Code", prm_State_Code) :
                new ObjectParameter("Prm_State_Code", typeof(int));
    
            var prm_District_codeParameter = prm_District_code.HasValue ?
                new ObjectParameter("Prm_District_code", prm_District_code) :
                new ObjectParameter("Prm_District_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GEN_POPULATE_CONTRACTOR_Result>("USP_ACC_GEN_POPULATE_CONTRACTOR", prm_Fund_TypeParameter, prm_Con_Supp_FlagParameter, prm_State_CodeParameter, prm_District_codeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_GENERATE_EPAY_PASSWORD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_GENERATE_EPAY_PASSWORD");
        }
    
        public virtual ObjectResult<string> USP_ACC_GENERATE_EPAYMENT_NUMBER(string prmFundype, Nullable<long> prmAdminNDCode, Nullable<short> prmMonth, Nullable<short> prmYear, string prmEpayRem)
        {
            var prmFundypeParameter = prmFundype != null ?
                new ObjectParameter("PrmFundype", prmFundype) :
                new ObjectParameter("PrmFundype", typeof(string));
    
            var prmAdminNDCodeParameter = prmAdminNDCode.HasValue ?
                new ObjectParameter("PrmAdminNDCode", prmAdminNDCode) :
                new ObjectParameter("PrmAdminNDCode", typeof(long));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(short));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            var prmEpayRemParameter = prmEpayRem != null ?
                new ObjectParameter("PrmEpayRem", prmEpayRem) :
                new ObjectParameter("PrmEpayRem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_GENERATE_EPAYMENT_NUMBER", prmFundypeParameter, prmAdminNDCodeParameter, prmMonthParameter, prmYearParameter, prmEpayRemParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_GENERATE_VOUCHER_NUMBER(Nullable<int> adminNDCode, string fundType, string billType, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var billTypeParameter = billType != null ?
                new ObjectParameter("BillType", billType) :
                new ObjectParameter("BillType", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_GENERATE_VOUCHER_NUMBER", adminNDCodeParameter, fundTypeParameter, billTypeParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_ACC_GET_AGREEMENT_EXPN_AMT(Nullable<int> p_INT_AdminNDCode, string p_CHAR_fundType, Nullable<int> p_Agreement_code)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_Agreement_codeParameter = p_Agreement_code.HasValue ?
                new ObjectParameter("P_Agreement_code", p_Agreement_code) :
                new ObjectParameter("P_Agreement_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_ACC_GET_AGREEMENT_EXPN_AMT", p_INT_AdminNDCodeParameter, p_CHAR_fundTypeParameter, p_Agreement_codeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_GET_ALL_AVAILABLE_CHEQUES(Nullable<int> chequeBookId, Nullable<int> adminNdCode, string fundType, string operation, Nullable<long> billId)
        {
            var chequeBookIdParameter = chequeBookId.HasValue ?
                new ObjectParameter("ChequeBookId", chequeBookId) :
                new ObjectParameter("ChequeBookId", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("BillId", billId) :
                new ObjectParameter("BillId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_GET_ALL_AVAILABLE_CHEQUES", chequeBookIdParameter, adminNdCodeParameter, fundTypeParameter, operationParameter, billIdParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GET_FUND_RELEASE_LIST_Result> USP_ACC_GET_FUND_RELEASE_LIST(Nullable<int> stateCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GET_FUND_RELEASE_LIST_Result>("USP_ACC_GET_FUND_RELEASE_LIST", stateCodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GET_Fund_Types_For_Cheque_Cancellation_Result> USP_ACC_GET_Fund_Types_For_Cheque_Cancellation(string prm_Fund_Type, Nullable<int> lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var lvlParameter = lvl.HasValue ?
                new ObjectParameter("lvl", lvl) :
                new ObjectParameter("lvl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GET_Fund_Types_For_Cheque_Cancellation_Result>("USP_ACC_GET_Fund_Types_For_Cheque_Cancellation", prm_Fund_TypeParameter, lvlParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GET_Fund_Types_For_Cheque_Cancellation_test_Result> USP_ACC_GET_Fund_Types_For_Cheque_Cancellation_test(string prm_Fund_Type, Nullable<int> lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var lvlParameter = lvl.HasValue ?
                new ObjectParameter("lvl", lvl) :
                new ObjectParameter("lvl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GET_Fund_Types_For_Cheque_Cancellation_test_Result>("USP_ACC_GET_Fund_Types_For_Cheque_Cancellation_test", prm_Fund_TypeParameter, lvlParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GET_TXN_HEAD_MAPPING_HEADS_Result> USP_ACC_GET_TXN_HEAD_MAPPING_HEADS(Nullable<int> txnID, Nullable<int> lvlID, string fundType, string billType)
        {
            var txnIDParameter = txnID.HasValue ?
                new ObjectParameter("TxnID", txnID) :
                new ObjectParameter("TxnID", typeof(int));
    
            var lvlIDParameter = lvlID.HasValue ?
                new ObjectParameter("lvlID", lvlID) :
                new ObjectParameter("lvlID", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var billTypeParameter = billType != null ?
                new ObjectParameter("BillType", billType) :
                new ObjectParameter("BillType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GET_TXN_HEAD_MAPPING_HEADS_Result>("USP_ACC_GET_TXN_HEAD_MAPPING_HEADS", txnIDParameter, lvlIDParameter, fundTypeParameter, billTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GET_TXN_HEAD_MAPPING_LIST_Result> USP_ACC_GET_TXN_HEAD_MAPPING_LIST(Nullable<int> txnID)
        {
            var txnIDParameter = txnID.HasValue ?
                new ObjectParameter("TxnID", txnID) :
                new ObjectParameter("TxnID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GET_TXN_HEAD_MAPPING_LIST_Result>("USP_ACC_GET_TXN_HEAD_MAPPING_LIST", txnIDParameter);
        }
    
        public virtual ObjectResult<usp_acc_get_user_list_Result> usp_acc_get_user_list(Nullable<int> roleID, Nullable<int> stateCode, Nullable<int> pIUCode)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var pIUCodeParameter = pIUCode.HasValue ?
                new ObjectParameter("PIUCode", pIUCode) :
                new ObjectParameter("PIUCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_acc_get_user_list_Result>("usp_acc_get_user_list", roleIDParameter, stateCodeParameter, pIUCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_INSERT_ALERT_DETAILS(Nullable<int> prm_Admin_Nd_Code, string prm_Fund_Type, string prm_Notification_Char, Nullable<short> prm_lvl, Nullable<long> prm_Bill_id, Nullable<long> prmUserid, string prmUserIP)
        {
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Notification_CharParameter = prm_Notification_Char != null ?
                new ObjectParameter("Prm_Notification_Char", prm_Notification_Char) :
                new ObjectParameter("Prm_Notification_Char", typeof(string));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var prm_Bill_idParameter = prm_Bill_id.HasValue ?
                new ObjectParameter("Prm_Bill_id", prm_Bill_id) :
                new ObjectParameter("Prm_Bill_id", typeof(long));
    
            var prmUseridParameter = prmUserid.HasValue ?
                new ObjectParameter("PrmUserid", prmUserid) :
                new ObjectParameter("PrmUserid", typeof(long));
    
            var prmUserIPParameter = prmUserIP != null ?
                new ObjectParameter("PrmUserIP", prmUserIP) :
                new ObjectParameter("PrmUserIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_INSERT_ALERT_DETAILS", prm_Admin_Nd_CodeParameter, prm_Fund_TypeParameter, prm_Notification_CharParameter, prm_lvlParameter, prm_Bill_idParameter, prmUseridParameter, prmUserIPParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_INSERT_BANK_AUTH_DETAILS(Nullable<long> auth_Id, string prmAuth_Status, Nullable<System.DateTime> dateOfOperation, string apprRemarks, string bill_No, string chq_No, Nullable<int> admin_Nd_Code, string prm_Fund_Type, Nullable<short> prm_lvl, Nullable<int> con_Id, Nullable<long> prmUserid, string prmUserIP)
        {
            var auth_IdParameter = auth_Id.HasValue ?
                new ObjectParameter("Auth_Id", auth_Id) :
                new ObjectParameter("Auth_Id", typeof(long));
    
            var prmAuth_StatusParameter = prmAuth_Status != null ?
                new ObjectParameter("PrmAuth_Status", prmAuth_Status) :
                new ObjectParameter("PrmAuth_Status", typeof(string));
    
            var dateOfOperationParameter = dateOfOperation.HasValue ?
                new ObjectParameter("DateOfOperation", dateOfOperation) :
                new ObjectParameter("DateOfOperation", typeof(System.DateTime));
    
            var apprRemarksParameter = apprRemarks != null ?
                new ObjectParameter("ApprRemarks", apprRemarks) :
                new ObjectParameter("ApprRemarks", typeof(string));
    
            var bill_NoParameter = bill_No != null ?
                new ObjectParameter("Bill_No", bill_No) :
                new ObjectParameter("Bill_No", typeof(string));
    
            var chq_NoParameter = chq_No != null ?
                new ObjectParameter("Chq_No", chq_No) :
                new ObjectParameter("Chq_No", typeof(string));
    
            var admin_Nd_CodeParameter = admin_Nd_Code.HasValue ?
                new ObjectParameter("Admin_Nd_Code", admin_Nd_Code) :
                new ObjectParameter("Admin_Nd_Code", typeof(int));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            var con_IdParameter = con_Id.HasValue ?
                new ObjectParameter("Con_Id", con_Id) :
                new ObjectParameter("Con_Id", typeof(int));
    
            var prmUseridParameter = prmUserid.HasValue ?
                new ObjectParameter("PrmUserid", prmUserid) :
                new ObjectParameter("PrmUserid", typeof(long));
    
            var prmUserIPParameter = prmUserIP != null ?
                new ObjectParameter("PrmUserIP", prmUserIP) :
                new ObjectParameter("PrmUserIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_INSERT_BANK_AUTH_DETAILS", auth_IdParameter, prmAuth_StatusParameter, dateOfOperationParameter, apprRemarksParameter, bill_NoParameter, chq_NoParameter, admin_Nd_CodeParameter, prm_Fund_TypeParameter, prm_lvlParameter, con_IdParameter, prmUseridParameter, prmUserIPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_INSERT_EPAYMENT_DETAILS(Nullable<int> prm_Admin_Nd_Code, Nullable<int> prm_Old_Epay_ID, string prm_DR, Nullable<System.DateTime> prm_Resend_Date, string prm_Resaon_Resend, string prm_Upload_File_Name, string prm_Epay_FILE_Name, string prm_Remarks, Nullable<long> prmUserid, string prmUserIP, Nullable<short> prm_Head_id, string prm_Fund_type)
        {
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_Old_Epay_IDParameter = prm_Old_Epay_ID.HasValue ?
                new ObjectParameter("Prm_Old_Epay_ID", prm_Old_Epay_ID) :
                new ObjectParameter("Prm_Old_Epay_ID", typeof(int));
    
            var prm_DRParameter = prm_DR != null ?
                new ObjectParameter("Prm_DR", prm_DR) :
                new ObjectParameter("Prm_DR", typeof(string));
    
            var prm_Resend_DateParameter = prm_Resend_Date.HasValue ?
                new ObjectParameter("Prm_Resend_Date", prm_Resend_Date) :
                new ObjectParameter("Prm_Resend_Date", typeof(System.DateTime));
    
            var prm_Resaon_ResendParameter = prm_Resaon_Resend != null ?
                new ObjectParameter("Prm_Resaon_Resend", prm_Resaon_Resend) :
                new ObjectParameter("Prm_Resaon_Resend", typeof(string));
    
            var prm_Upload_File_NameParameter = prm_Upload_File_Name != null ?
                new ObjectParameter("Prm_Upload_File_Name", prm_Upload_File_Name) :
                new ObjectParameter("Prm_Upload_File_Name", typeof(string));
    
            var prm_Epay_FILE_NameParameter = prm_Epay_FILE_Name != null ?
                new ObjectParameter("Prm_Epay_FILE_Name", prm_Epay_FILE_Name) :
                new ObjectParameter("Prm_Epay_FILE_Name", typeof(string));
    
            var prm_RemarksParameter = prm_Remarks != null ?
                new ObjectParameter("Prm_Remarks", prm_Remarks) :
                new ObjectParameter("Prm_Remarks", typeof(string));
    
            var prmUseridParameter = prmUserid.HasValue ?
                new ObjectParameter("PrmUserid", prmUserid) :
                new ObjectParameter("PrmUserid", typeof(long));
    
            var prmUserIPParameter = prmUserIP != null ?
                new ObjectParameter("PrmUserIP", prmUserIP) :
                new ObjectParameter("PrmUserIP", typeof(string));
    
            var prm_Head_idParameter = prm_Head_id.HasValue ?
                new ObjectParameter("Prm_Head_id", prm_Head_id) :
                new ObjectParameter("Prm_Head_id", typeof(short));
    
            var prm_Fund_typeParameter = prm_Fund_type != null ?
                new ObjectParameter("Prm_Fund_type", prm_Fund_type) :
                new ObjectParameter("Prm_Fund_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_INSERT_EPAYMENT_DETAILS", prm_Admin_Nd_CodeParameter, prm_Old_Epay_IDParameter, prm_DRParameter, prm_Resend_DateParameter, prm_Resaon_ResendParameter, prm_Upload_File_NameParameter, prm_Epay_FILE_NameParameter, prm_RemarksParameter, prmUseridParameter, prmUserIPParameter, prm_Head_idParameter, prm_Fund_typeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_INSERT_FUND_RELEASE_DETAILS(Nullable<int> fundID, Nullable<int> stateCode, Nullable<int> agencyCode, string fundType, Nullable<System.DateTime> releaseDate, string refNumber, string isIncetive, Nullable<decimal> releaseAmount, string remark, Nullable<int> userId, string iPAddress)
        {
            var fundIDParameter = fundID.HasValue ?
                new ObjectParameter("FundID", fundID) :
                new ObjectParameter("FundID", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            var isIncetiveParameter = isIncetive != null ?
                new ObjectParameter("IsIncetive", isIncetive) :
                new ObjectParameter("IsIncetive", typeof(string));
    
            var releaseAmountParameter = releaseAmount.HasValue ?
                new ObjectParameter("ReleaseAmount", releaseAmount) :
                new ObjectParameter("ReleaseAmount", typeof(decimal));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_INSERT_FUND_RELEASE_DETAILS", fundIDParameter, stateCodeParameter, agencyCodeParameter, fundTypeParameter, releaseDateParameter, refNumberParameter, isIncetiveParameter, releaseAmountParameter, remarkParameter, userIdParameter, iPAddressParameter);
        }
    
        public virtual ObjectResult<USP_ACC_MASTER_SHEET_PIUWISE_RPT_Result> USP_ACC_MASTER_SHEET_PIUWISE_RPT(Nullable<int> state, Nullable<int> agency, Nullable<int> year, string type)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_MASTER_SHEET_PIUWISE_RPT_Result>("USP_ACC_MASTER_SHEET_PIUWISE_RPT", stateParameter, agencyParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_MASTER_SHEET_RPT_Result> USP_ACC_MASTER_SHEET_RPT(Nullable<int> level, Nullable<int> state, Nullable<int> agency, Nullable<int> year, string type)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_MASTER_SHEET_RPT_Result>("USP_ACC_MASTER_SHEET_RPT", levelParameter, stateParameter, agencyParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_MIS_DEDUCTION_REMITTANCES_Result> USP_ACC_MIS_DEDUCTION_REMITTANCES(string prm_Fund_Type, Nullable<int> prm_Lvl_id, Nullable<int> prm_Admin_ND_Code, Nullable<int> prm_Year)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Lvl_idParameter = prm_Lvl_id.HasValue ?
                new ObjectParameter("Prm_Lvl_id", prm_Lvl_id) :
                new ObjectParameter("Prm_Lvl_id", typeof(int));
    
            var prm_Admin_ND_CodeParameter = prm_Admin_ND_Code.HasValue ?
                new ObjectParameter("Prm_Admin_ND_Code", prm_Admin_ND_Code) :
                new ObjectParameter("Prm_Admin_ND_Code", typeof(int));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_MIS_DEDUCTION_REMITTANCES_Result>("USP_ACC_MIS_DEDUCTION_REMITTANCES", prm_Fund_TypeParameter, prm_Lvl_idParameter, prm_Admin_ND_CodeParameter, prm_YearParameter);
        }
    
        public virtual ObjectResult<USP_ACC_MIS_EXPENDITURE_DETAILS_Result> USP_ACC_MIS_EXPENDITURE_DETAILS(string prm_Fund_Type, Nullable<int> prm_Lvl_id, Nullable<int> prm_Admin_ND_Code, Nullable<int> prm_Year)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Lvl_idParameter = prm_Lvl_id.HasValue ?
                new ObjectParameter("Prm_Lvl_id", prm_Lvl_id) :
                new ObjectParameter("Prm_Lvl_id", typeof(int));
    
            var prm_Admin_ND_CodeParameter = prm_Admin_ND_Code.HasValue ?
                new ObjectParameter("Prm_Admin_ND_Code", prm_Admin_ND_Code) :
                new ObjectParameter("Prm_Admin_ND_Code", typeof(int));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_MIS_EXPENDITURE_DETAILS_Result>("USP_ACC_MIS_EXPENDITURE_DETAILS", prm_Fund_TypeParameter, prm_Lvl_idParameter, prm_Admin_ND_CodeParameter, prm_YearParameter);
        }
    
        public virtual ObjectResult<USP_ACC_MIS_FUND_EXPENDITURE_Result> USP_ACC_MIS_FUND_EXPENDITURE(string prm_Fund_Type, Nullable<int> prm_Lvl_id, Nullable<int> prm_Admin_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Lvl_idParameter = prm_Lvl_id.HasValue ?
                new ObjectParameter("Prm_Lvl_id", prm_Lvl_id) :
                new ObjectParameter("Prm_Lvl_id", typeof(int));
    
            var prm_Admin_ND_CodeParameter = prm_Admin_ND_Code.HasValue ?
                new ObjectParameter("Prm_Admin_ND_Code", prm_Admin_ND_Code) :
                new ObjectParameter("Prm_Admin_ND_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_MIS_FUND_EXPENDITURE_Result>("USP_ACC_MIS_FUND_EXPENDITURE", prm_Fund_TypeParameter, prm_Lvl_idParameter, prm_Admin_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_PFMS_MIS_PAYMENTS_ABSTRACT_Result> USP_ACC_PFMS_MIS_PAYMENTS_ABSTRACT(string fundType, string startdate, string endate)
        {
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("Endate", endate) :
                new ObjectParameter("Endate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_PFMS_MIS_PAYMENTS_ABSTRACT_Result>("USP_ACC_PFMS_MIS_PAYMENTS_ABSTRACT", fundTypeParameter, startdateParameter, endateParameter);
        }
    
        public virtual ObjectResult<USP_ACC_REAT_MIS_PAYMENTS_ABSTRACT_Result> USP_ACC_REAT_MIS_PAYMENTS_ABSTRACT(string fundType, string startdate, string endate)
        {
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("Endate", endate) :
                new ObjectParameter("Endate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_REAT_MIS_PAYMENTS_ABSTRACT_Result>("USP_ACC_REAT_MIS_PAYMENTS_ABSTRACT", fundTypeParameter, startdateParameter, endateParameter);
        }
    
        public virtual ObjectResult<USP_ACC_REAT_MIS_PAYMENTS_DETAILS_Result> USP_ACC_REAT_MIS_PAYMENTS_DETAILS(Nullable<int> srrdaCode, Nullable<int> dpiuCode, string duration, Nullable<int> month, Nullable<int> year, string fundType, string startdate, string endate, string flag)
        {
            var srrdaCodeParameter = srrdaCode.HasValue ?
                new ObjectParameter("SrrdaCode", srrdaCode) :
                new ObjectParameter("SrrdaCode", typeof(int));
    
            var dpiuCodeParameter = dpiuCode.HasValue ?
                new ObjectParameter("DpiuCode", dpiuCode) :
                new ObjectParameter("DpiuCode", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("Endate", endate) :
                new ObjectParameter("Endate", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_REAT_MIS_PAYMENTS_DETAILS_Result>("USP_ACC_REAT_MIS_PAYMENTS_DETAILS", srrdaCodeParameter, dpiuCodeParameter, durationParameter, monthParameter, yearParameter, fundTypeParameter, startdateParameter, endateParameter, flagParameter);
        }
    
        public virtual ObjectResult<USP_ACC_REAT_MIS_PAYMENTS_SUMMARY_Result> USP_ACC_REAT_MIS_PAYMENTS_SUMMARY(Nullable<int> srrdaCode, Nullable<int> dpiuCode, string fundType, string duration, Nullable<int> month, Nullable<int> year, string startdate, string endate)
        {
            var srrdaCodeParameter = srrdaCode.HasValue ?
                new ObjectParameter("SrrdaCode", srrdaCode) :
                new ObjectParameter("SrrdaCode", typeof(int));
    
            var dpiuCodeParameter = dpiuCode.HasValue ?
                new ObjectParameter("DpiuCode", dpiuCode) :
                new ObjectParameter("DpiuCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("Endate", endate) :
                new ObjectParameter("Endate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_REAT_MIS_PAYMENTS_SUMMARY_Result>("USP_ACC_REAT_MIS_PAYMENTS_SUMMARY", srrdaCodeParameter, dpiuCodeParameter, fundTypeParameter, durationParameter, monthParameter, yearParameter, startdateParameter, endateParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_REVOKE_MONTHLY_CLOSING_DETAILS(string prmPiuSrrda, Nullable<int> prmAdminNdCode, string dprmFundType, string duration, Nullable<int> startMonth, Nullable<int> startYear, Nullable<int> toMonth, Nullable<int> toYear, Nullable<int> uSERID, string iPADD, string remarks)
        {
            var prmPiuSrrdaParameter = prmPiuSrrda != null ?
                new ObjectParameter("prmPiuSrrda", prmPiuSrrda) :
                new ObjectParameter("prmPiuSrrda", typeof(string));
    
            var prmAdminNdCodeParameter = prmAdminNdCode.HasValue ?
                new ObjectParameter("prmAdminNdCode", prmAdminNdCode) :
                new ObjectParameter("prmAdminNdCode", typeof(int));
    
            var dprmFundTypeParameter = dprmFundType != null ?
                new ObjectParameter("dprmFundType", dprmFundType) :
                new ObjectParameter("dprmFundType", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(string));
    
            var startMonthParameter = startMonth.HasValue ?
                new ObjectParameter("startMonth", startMonth) :
                new ObjectParameter("startMonth", typeof(int));
    
            var startYearParameter = startYear.HasValue ?
                new ObjectParameter("startYear", startYear) :
                new ObjectParameter("startYear", typeof(int));
    
            var toMonthParameter = toMonth.HasValue ?
                new ObjectParameter("toMonth", toMonth) :
                new ObjectParameter("toMonth", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("toYear", toYear) :
                new ObjectParameter("toYear", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_REVOKE_MONTHLY_CLOSING_DETAILS", prmPiuSrrdaParameter, prmAdminNdCodeParameter, dprmFundTypeParameter, durationParameter, startMonthParameter, startYearParameter, toMonthParameter, toYearParameter, uSERIDParameter, iPADDParameter, remarksParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_AE_RECONCILIATION_Result> USP_ACC_RPT_AE_RECONCILIATION(Nullable<int> adminNDCode, Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_AE_RECONCILIATION_Result>("USP_ACC_RPT_AE_RECONCILIATION", adminNDCodeParameter, mONTHParameter, yEARParameter);
        }
    
        public virtual int USP_ACC_RPT_BULK_INSERT_BALANCE_FORALLHEAD_ALL_NDCODE_GIVEN_MONTH(Nullable<int> p_INT_StateCode, Nullable<int> p_INT_AgencyCode, string p_CHAR_fundType, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear)
        {
            var p_INT_StateCodeParameter = p_INT_StateCode.HasValue ?
                new ObjectParameter("P_INT_StateCode", p_INT_StateCode) :
                new ObjectParameter("P_INT_StateCode", typeof(int));
    
            var p_INT_AgencyCodeParameter = p_INT_AgencyCode.HasValue ?
                new ObjectParameter("P_INT_AgencyCode", p_INT_AgencyCode) :
                new ObjectParameter("P_INT_AgencyCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_BULK_INSERT_BALANCE_FORALLHEAD_ALL_NDCODE_GIVEN_MONTH", p_INT_StateCodeParameter, p_INT_AgencyCodeParameter, p_CHAR_fundTypeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter);
        }
    
        public virtual int USP_ACC_RPT_BULK_INSERT_BALANCE_FORALLHEAD_GIVEN_NDCODE(Nullable<int> p_INT_AdminNDCode, string p_CHAR_fundType, Nullable<int> p_INT_uptoMonth, Nullable<int> p_INT_uptoYear)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_uptoMonthParameter = p_INT_uptoMonth.HasValue ?
                new ObjectParameter("P_INT_uptoMonth", p_INT_uptoMonth) :
                new ObjectParameter("P_INT_uptoMonth", typeof(int));
    
            var p_INT_uptoYearParameter = p_INT_uptoYear.HasValue ?
                new ObjectParameter("P_INT_uptoYear", p_INT_uptoYear) :
                new ObjectParameter("P_INT_uptoYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_BULK_INSERT_BALANCE_FORALLHEAD_GIVEN_NDCODE", p_INT_AdminNDCodeParameter, p_CHAR_fundTypeParameter, p_INT_uptoMonthParameter, p_INT_uptoYearParameter);
        }
    
        public virtual int USP_ACC_RPT_BULK_INSERT_BALANCE_FORHEAD_ALLNDCODE(string p_CHAR_fundType, Nullable<short> p_SINT_HeadID, Nullable<int> p_INT_ISEXP)
        {
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_SINT_HeadIDParameter = p_SINT_HeadID.HasValue ?
                new ObjectParameter("P_SINT_HeadID", p_SINT_HeadID) :
                new ObjectParameter("P_SINT_HeadID", typeof(short));
    
            var p_INT_ISEXPParameter = p_INT_ISEXP.HasValue ?
                new ObjectParameter("P_INT_ISEXP", p_INT_ISEXP) :
                new ObjectParameter("P_INT_ISEXP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_BULK_INSERT_BALANCE_FORHEAD_ALLNDCODE", p_CHAR_fundTypeParameter, p_SINT_HeadIDParameter, p_INT_ISEXPParameter);
        }
    
        public virtual int USP_ACC_RPT_BULK_INSERT_BALANCE_FORHEAD_ALLNDCODE_OF_STATE(Nullable<int> p_INT_StateCode, string p_CHAR_fundType, Nullable<short> p_SINT_HeadID, Nullable<int> p_INT_ISEXP)
        {
            var p_INT_StateCodeParameter = p_INT_StateCode.HasValue ?
                new ObjectParameter("P_INT_StateCode", p_INT_StateCode) :
                new ObjectParameter("P_INT_StateCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_SINT_HeadIDParameter = p_SINT_HeadID.HasValue ?
                new ObjectParameter("P_SINT_HeadID", p_SINT_HeadID) :
                new ObjectParameter("P_SINT_HeadID", typeof(short));
    
            var p_INT_ISEXPParameter = p_INT_ISEXP.HasValue ?
                new ObjectParameter("P_INT_ISEXP", p_INT_ISEXP) :
                new ObjectParameter("P_INT_ISEXP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_BULK_INSERT_BALANCE_FORHEAD_ALLNDCODE_OF_STATE", p_INT_StateCodeParameter, p_CHAR_fundTypeParameter, p_SINT_HeadIDParameter, p_INT_ISEXPParameter);
        }
    
        public virtual int USP_ACC_RPT_CASHBOOK_RECEIPT_SIDE(string prmFundType, Nullable<int> prmAdminNdCode, Nullable<int> prmMonth, Nullable<int> prmYear, Nullable<int> prmlvl)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmAdminNdCodeParameter = prmAdminNdCode.HasValue ?
                new ObjectParameter("PrmAdminNdCode", prmAdminNdCode) :
                new ObjectParameter("PrmAdminNdCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(int));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(int));
    
            var prmlvlParameter = prmlvl.HasValue ?
                new ObjectParameter("Prmlvl", prmlvl) :
                new ObjectParameter("Prmlvl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_CASHBOOK_RECEIPT_SIDE", prmFundTypeParameter, prmAdminNdCodeParameter, prmMonthParameter, prmYearParameter, prmlvlParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_FINANCIAL_CLOSURE_Result> USP_ACC_RPT_FINANCIAL_CLOSURE(Nullable<int> pINTStateCode, Nullable<int> pINTAgencyCode, Nullable<int> pINTFACode, Nullable<int> pINTPMGSYVersion)
        {
            var pINTStateCodeParameter = pINTStateCode.HasValue ?
                new ObjectParameter("PINTStateCode", pINTStateCode) :
                new ObjectParameter("PINTStateCode", typeof(int));
    
            var pINTAgencyCodeParameter = pINTAgencyCode.HasValue ?
                new ObjectParameter("PINTAgencyCode", pINTAgencyCode) :
                new ObjectParameter("PINTAgencyCode", typeof(int));
    
            var pINTFACodeParameter = pINTFACode.HasValue ?
                new ObjectParameter("PINTFACode", pINTFACode) :
                new ObjectParameter("PINTFACode", typeof(int));
    
            var pINTPMGSYVersionParameter = pINTPMGSYVersion.HasValue ?
                new ObjectParameter("PINTPMGSYVersion", pINTPMGSYVersion) :
                new ObjectParameter("PINTPMGSYVersion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_FINANCIAL_CLOSURE_Result>("USP_ACC_RPT_FINANCIAL_CLOSURE", pINTStateCodeParameter, pINTAgencyCodeParameter, pINTFACodeParameter, pINTPMGSYVersionParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_FINANCIAL_CLOSURE_ABSTRACT_Result> USP_ACC_RPT_FINANCIAL_CLOSURE_ABSTRACT(Nullable<int> pINTFACode, Nullable<int> pINTPMGSYVersion)
        {
            var pINTFACodeParameter = pINTFACode.HasValue ?
                new ObjectParameter("PINTFACode", pINTFACode) :
                new ObjectParameter("PINTFACode", typeof(int));
    
            var pINTPMGSYVersionParameter = pINTPMGSYVersion.HasValue ?
                new ObjectParameter("PINTPMGSYVersion", pINTPMGSYVersion) :
                new ObjectParameter("PINTPMGSYVersion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_FINANCIAL_CLOSURE_ABSTRACT_Result>("USP_ACC_RPT_FINANCIAL_CLOSURE_ABSTRACT", pINTFACodeParameter, pINTPMGSYVersionParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_FPP_PENDING_ROAD_DETAILS_Result> USP_ACC_RPT_FPP_PENDING_ROAD_DETAILS(Nullable<int> pINTStateCode, Nullable<int> pINTAgencyCode, Nullable<int> pINTFACode, Nullable<int> pintIMSYear, Nullable<int> pINTPMGSYVersion)
        {
            var pINTStateCodeParameter = pINTStateCode.HasValue ?
                new ObjectParameter("PINTStateCode", pINTStateCode) :
                new ObjectParameter("PINTStateCode", typeof(int));
    
            var pINTAgencyCodeParameter = pINTAgencyCode.HasValue ?
                new ObjectParameter("PINTAgencyCode", pINTAgencyCode) :
                new ObjectParameter("PINTAgencyCode", typeof(int));
    
            var pINTFACodeParameter = pINTFACode.HasValue ?
                new ObjectParameter("PINTFACode", pINTFACode) :
                new ObjectParameter("PINTFACode", typeof(int));
    
            var pintIMSYearParameter = pintIMSYear.HasValue ?
                new ObjectParameter("PintIMSYear", pintIMSYear) :
                new ObjectParameter("PintIMSYear", typeof(int));
    
            var pINTPMGSYVersionParameter = pINTPMGSYVersion.HasValue ?
                new ObjectParameter("PINTPMGSYVersion", pINTPMGSYVersion) :
                new ObjectParameter("PINTPMGSYVersion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_FPP_PENDING_ROAD_DETAILS_Result>("USP_ACC_RPT_FPP_PENDING_ROAD_DETAILS", pINTStateCodeParameter, pINTAgencyCodeParameter, pINTFACodeParameter, pintIMSYearParameter, pINTPMGSYVersionParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_FUND_RECEIVED_MAINTENANCE_FUND_DPIU_Result> USP_ACC_RPT_FUND_RECEIVED_MAINTENANCE_FUND_DPIU(Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear)
        {
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_FUND_RECEIVED_MAINTENANCE_FUND_DPIU_Result>("USP_ACC_RPT_FUND_RECEIVED_MAINTENANCE_FUND_DPIU", pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_GET_BALANCES_EXPHEADWISE_Result> USP_ACC_RPT_GET_BALANCES_EXPHEADWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_GET_BALANCES_EXPHEADWISE_Result>("USP_ACC_RPT_GET_BALANCES_EXPHEADWISE", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_GET_BALANCES_FACHANGE_EXPHEADWISE_Result> USP_ACC_RPT_GET_BALANCES_FACHANGE_EXPHEADWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_GET_BALANCES_FACHANGE_EXPHEADWISE_Result>("USP_ACC_RPT_GET_BALANCES_FACHANGE_EXPHEADWISE", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_Get_HEAD_for_Bank_Authorisation_Result> USP_ACC_RPT_Get_HEAD_for_Bank_Authorisation(string prm_Fund_Type)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_Get_HEAD_for_Bank_Authorisation_Result>("USP_ACC_RPT_Get_HEAD_for_Bank_Authorisation", prm_Fund_TypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_GET_UC_CERTIFICATES_Result> USP_ACC_RPT_GET_UC_CERTIFICATES(Nullable<int> adminNDCode, Nullable<int> fyear, string fundType)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            var fyearParameter = fyear.HasValue ?
                new ObjectParameter("Fyear", fyear) :
                new ObjectParameter("Fyear", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_GET_UC_CERTIFICATES_Result>("USP_ACC_RPT_GET_UC_CERTIFICATES", adminNDCodeParameter, fyearParameter, fundTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_IE_SRRDA_DPIU_Result> USP_ACC_RPT_IE_SRRDA_DPIU(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_OPLvlID, Nullable<int> p_INT_IsAllDpiu)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_OPLvlIDParameter = p_INT_OPLvlID.HasValue ?
                new ObjectParameter("P_INT_OPLvlID", p_INT_OPLvlID) :
                new ObjectParameter("P_INT_OPLvlID", typeof(int));
    
            var p_INT_IsAllDpiuParameter = p_INT_IsAllDpiu.HasValue ?
                new ObjectParameter("P_INT_IsAllDpiu", p_INT_IsAllDpiu) :
                new ObjectParameter("P_INT_IsAllDpiu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_IE_SRRDA_DPIU_Result>("USP_ACC_RPT_IE_SRRDA_DPIU", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_OPLvlIDParameter, p_INT_IsAllDpiuParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_IE_SRRDA_DPIU_STATE_Result> USP_ACC_RPT_IE_SRRDA_DPIU_STATE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_OPLvlID, Nullable<int> p_INT_IsAllDpiu)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_OPLvlIDParameter = p_INT_OPLvlID.HasValue ?
                new ObjectParameter("P_INT_OPLvlID", p_INT_OPLvlID) :
                new ObjectParameter("P_INT_OPLvlID", typeof(int));
    
            var p_INT_IsAllDpiuParameter = p_INT_IsAllDpiu.HasValue ?
                new ObjectParameter("P_INT_IsAllDpiu", p_INT_IsAllDpiu) :
                new ObjectParameter("P_INT_IsAllDpiu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_IE_SRRDA_DPIU_STATE_Result>("USP_ACC_RPT_IE_SRRDA_DPIU_STATE", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_OPLvlIDParameter, p_INT_IsAllDpiuParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_IE_STATE_Result> USP_ACC_RPT_IE_STATE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_IE_STATE_Result>("USP_ACC_RPT_IE_STATE", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter);
        }
    
        public virtual int USP_ACC_RPT_Insert_data_Funding_agency_change(string p_char_Fund_type)
        {
            var p_char_Fund_typeParameter = p_char_Fund_type != null ?
                new ObjectParameter("p_char_Fund_type", p_char_Fund_type) :
                new ObjectParameter("p_char_Fund_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_Insert_data_Funding_agency_change", p_char_Fund_typeParameter);
        }
    
        public virtual int USP_ACC_RPT_Insert_data_monthly_Closing(Nullable<int> p_INT_State_Code, Nullable<int> p_int_Agency_code, string p_char_Fund_type)
        {
            var p_INT_State_CodeParameter = p_INT_State_Code.HasValue ?
                new ObjectParameter("P_INT_State_Code", p_INT_State_Code) :
                new ObjectParameter("P_INT_State_Code", typeof(int));
    
            var p_int_Agency_codeParameter = p_int_Agency_code.HasValue ?
                new ObjectParameter("P_int_Agency_code", p_int_Agency_code) :
                new ObjectParameter("P_int_Agency_code", typeof(int));
    
            var p_char_Fund_typeParameter = p_char_Fund_type != null ?
                new ObjectParameter("p_char_Fund_type", p_char_Fund_type) :
                new ObjectParameter("p_char_Fund_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_Insert_data_monthly_Closing", p_INT_State_CodeParameter, p_int_Agency_codeParameter, p_char_Fund_typeParameter);
        }
    
        public virtual int USP_ACC_RPT_Insert_data_monthly_Closing_ADMIN_ND_CODE_WISE(Nullable<int> p_ADMIN_ND_CODE, string p_char_Fund_type)
        {
            var p_ADMIN_ND_CODEParameter = p_ADMIN_ND_CODE.HasValue ?
                new ObjectParameter("P_ADMIN_ND_CODE", p_ADMIN_ND_CODE) :
                new ObjectParameter("P_ADMIN_ND_CODE", typeof(int));
    
            var p_char_Fund_typeParameter = p_char_Fund_type != null ?
                new ObjectParameter("p_char_Fund_type", p_char_Fund_type) :
                new ObjectParameter("p_char_Fund_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_RPT_Insert_data_monthly_Closing_ADMIN_ND_CODE_WISE", p_ADMIN_ND_CODEParameter, p_char_Fund_typeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_INSERT_REPORT_HEADS_Result> USP_ACC_RPT_INSERT_REPORT_HEADS(Nullable<short> p_SINT_ReportID, Nullable<short> p_SINT_ItemID, string p_STR_HeadIDs, string p_CHAR_CrDr, Nullable<short> p_CHAR_AddDeduct, Nullable<int> pLvlID)
        {
            var p_SINT_ReportIDParameter = p_SINT_ReportID.HasValue ?
                new ObjectParameter("P_SINT_ReportID", p_SINT_ReportID) :
                new ObjectParameter("P_SINT_ReportID", typeof(short));
    
            var p_SINT_ItemIDParameter = p_SINT_ItemID.HasValue ?
                new ObjectParameter("P_SINT_ItemID", p_SINT_ItemID) :
                new ObjectParameter("P_SINT_ItemID", typeof(short));
    
            var p_STR_HeadIDsParameter = p_STR_HeadIDs != null ?
                new ObjectParameter("P_STR_HeadIDs", p_STR_HeadIDs) :
                new ObjectParameter("P_STR_HeadIDs", typeof(string));
    
            var p_CHAR_CrDrParameter = p_CHAR_CrDr != null ?
                new ObjectParameter("P_CHAR_CrDr", p_CHAR_CrDr) :
                new ObjectParameter("P_CHAR_CrDr", typeof(string));
    
            var p_CHAR_AddDeductParameter = p_CHAR_AddDeduct.HasValue ?
                new ObjectParameter("P_CHAR_AddDeduct", p_CHAR_AddDeduct) :
                new ObjectParameter("P_CHAR_AddDeduct", typeof(short));
    
            var pLvlIDParameter = pLvlID.HasValue ?
                new ObjectParameter("PLvlID", pLvlID) :
                new ObjectParameter("PLvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_INSERT_REPORT_HEADS_Result>("USP_ACC_RPT_INSERT_REPORT_HEADS", p_SINT_ReportIDParameter, p_SINT_ItemIDParameter, p_STR_HeadIDsParameter, p_CHAR_CrDrParameter, p_CHAR_AddDeductParameter, pLvlIDParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_NFP2_Result> USP_ACC_RPT_NFP2(Nullable<int> p_INT_SRRDANDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LVL)
        {
            var p_INT_SRRDANDCodeParameter = p_INT_SRRDANDCode.HasValue ?
                new ObjectParameter("P_INT_SRRDANDCode", p_INT_SRRDANDCode) :
                new ObjectParameter("P_INT_SRRDANDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LVLParameter = p_INT_LVL.HasValue ?
                new ObjectParameter("P_INT_LVL", p_INT_LVL) :
                new ObjectParameter("P_INT_LVL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_NFP2_Result>("USP_ACC_RPT_NFP2", p_INT_SRRDANDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LVLParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_PF_RECONCILIATION_Result> USP_ACC_RPT_PF_RECONCILIATION(Nullable<int> adminNDCode, Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_PF_RECONCILIATION_Result>("USP_ACC_RPT_PF_RECONCILIATION", adminNDCodeParameter, mONTHParameter, yEARParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_PFMS_PAYMENT_DETAILS__Result> USP_ACC_RPT_PFMS_PAYMENT_DETAILS_(Nullable<int> stateNdCode, Nullable<int> piuCode, string duration, Nullable<int> month, Nullable<int> year, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string moduleType, string fundType)
        {
            var stateNdCodeParameter = stateNdCode.HasValue ?
                new ObjectParameter("StateNdCode", stateNdCode) :
                new ObjectParameter("StateNdCode", typeof(int));
    
            var piuCodeParameter = piuCode.HasValue ?
                new ObjectParameter("PiuCode", piuCode) :
                new ObjectParameter("PiuCode", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_PFMS_PAYMENT_DETAILS__Result>("USP_ACC_RPT_PFMS_PAYMENT_DETAILS_", stateNdCodeParameter, piuCodeParameter, durationParameter, monthParameter, yearParameter, startDateParameter, endDateParameter, moduleTypeParameter, fundTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REAT_PAYMENT_DETAILS__Result> USP_ACC_RPT_REAT_PAYMENT_DETAILS_(Nullable<int> stateNdCode, Nullable<int> piuCode, string duration, Nullable<int> month, Nullable<int> year, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string moduleType)
        {
            var stateNdCodeParameter = stateNdCode.HasValue ?
                new ObjectParameter("StateNdCode", stateNdCode) :
                new ObjectParameter("StateNdCode", typeof(int));
    
            var piuCodeParameter = piuCode.HasValue ?
                new ObjectParameter("PiuCode", piuCode) :
                new ObjectParameter("PiuCode", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REAT_PAYMENT_DETAILS__Result>("USP_ACC_RPT_REAT_PAYMENT_DETAILS_", stateNdCodeParameter, piuCodeParameter, durationParameter, monthParameter, yearParameter, startDateParameter, endDateParameter, moduleTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_BANK_AUTHORIZATION_Result> USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_BANK_AUTHORIZATION(string prm_Fund_Type, Nullable<short> prm_Year, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_BANK_AUTHORIZATION_Result>("USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_BANK_AUTHORIZATION", prm_Fund_TypeParameter, prm_YearParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_FUND_TRANSFERRED_Result> USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_FUND_TRANSFERRED(string prm_Fund_Type, Nullable<short> prm_Year, Nullable<short> prm_Head, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_HeadParameter = prm_Head.HasValue ?
                new ObjectParameter("Prm_Head", prm_Head) :
                new ObjectParameter("Prm_Head", typeof(short));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_FUND_TRANSFERRED_Result>("USP_ACC_RPT_REGISTER_ABSTRACT_PIUWISE_FUND_TRANSFERRED", prm_Fund_TypeParameter, prm_YearParameter, prm_HeadParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_CREDIT_DEBIT_HEADS_Result> USP_ACC_RPT_REGISTER_CREDIT_DEBIT_HEADS(Nullable<int> p_INT_StateCode, Nullable<int> p_INT_AgencyCode, Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID, Nullable<int> p_INT_HeadID, Nullable<int> p_INT_Collab)
        {
            var p_INT_StateCodeParameter = p_INT_StateCode.HasValue ?
                new ObjectParameter("P_INT_StateCode", p_INT_StateCode) :
                new ObjectParameter("P_INT_StateCode", typeof(int));
    
            var p_INT_AgencyCodeParameter = p_INT_AgencyCode.HasValue ?
                new ObjectParameter("P_INT_AgencyCode", p_INT_AgencyCode) :
                new ObjectParameter("P_INT_AgencyCode", typeof(int));
    
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(int));
    
            var p_INT_CollabParameter = p_INT_Collab.HasValue ?
                new ObjectParameter("P_INT_Collab", p_INT_Collab) :
                new ObjectParameter("P_INT_Collab", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_CREDIT_DEBIT_HEADS_Result>("USP_ACC_RPT_REGISTER_CREDIT_DEBIT_HEADS", p_INT_StateCodeParameter, p_INT_AgencyCodeParameter, p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter, p_INT_HeadIDParameter, p_INT_CollabParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_DURABLE_ASSETS_Result> USP_ACC_RPT_REGISTER_DURABLE_ASSETS(Nullable<int> prm_Admin_Nd_Code, string prm_flag, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<System.DateTime> prm_FromDate, Nullable<System.DateTime> prm_ToDate, string prm_Fund_Type, string prm_Central_State)
        {
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_flagParameter = prm_flag != null ?
                new ObjectParameter("Prm_flag", prm_flag) :
                new ObjectParameter("Prm_flag", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_FromDateParameter = prm_FromDate.HasValue ?
                new ObjectParameter("Prm_FromDate", prm_FromDate) :
                new ObjectParameter("Prm_FromDate", typeof(System.DateTime));
    
            var prm_ToDateParameter = prm_ToDate.HasValue ?
                new ObjectParameter("Prm_ToDate", prm_ToDate) :
                new ObjectParameter("Prm_ToDate", typeof(System.DateTime));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Central_StateParameter = prm_Central_State != null ?
                new ObjectParameter("Prm_Central_State", prm_Central_State) :
                new ObjectParameter("Prm_Central_State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_DURABLE_ASSETS_Result>("USP_ACC_RPT_REGISTER_DURABLE_ASSETS", prm_Admin_Nd_CodeParameter, prm_flagParameter, prm_MonthParameter, prm_YearParameter, prm_FromDateParameter, prm_ToDateParameter, prm_Fund_TypeParameter, prm_Central_StateParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_IMPREST_Settlement_DETAILS_Result> USP_ACC_RPT_REGISTER_IMPREST_Settlement_DETAILS(string prmFundType, Nullable<int> prmAdminndCode, Nullable<short> prmYear)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmAdminndCodeParameter = prmAdminndCode.HasValue ?
                new ObjectParameter("PrmAdminndCode", prmAdminndCode) :
                new ObjectParameter("PrmAdminndCode", typeof(int));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_IMPREST_Settlement_DETAILS_Result>("USP_ACC_RPT_REGISTER_IMPREST_Settlement_DETAILS", prmFundTypeParameter, prmAdminndCodeParameter, prmYearParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_PIUWISE_BANK_AUTHORIZATION_ISSUED_Result> USP_ACC_RPT_REGISTER_PIUWISE_BANK_AUTHORIZATION_ISSUED(string prm_Fund_Type, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_PIUWISE_BANK_AUTHORIZATION_ISSUED_Result>("USP_ACC_RPT_REGISTER_PIUWISE_BANK_AUTHORIZATION_ISSUED", prm_Fund_TypeParameter, prm_MonthParameter, prm_YearParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_REGISTER_PIUWISE_FUND_TRANSFERRED_Result> USP_ACC_RPT_REGISTER_PIUWISE_FUND_TRANSFERRED(string prm_Fund_Type, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_Head, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_HeadParameter = prm_Head.HasValue ?
                new ObjectParameter("Prm_Head", prm_Head) :
                new ObjectParameter("Prm_Head", typeof(short));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_REGISTER_PIUWISE_FUND_TRANSFERRED_Result>("USP_ACC_RPT_REGISTER_PIUWISE_FUND_TRANSFERRED", prm_Fund_TypeParameter, prm_MonthParameter, prm_YearParameter, prm_HeadParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCH_Misc_Advances_Result> USP_ACC_RPT_SCH_Misc_Advances(Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, string pFundType, Nullable<int> pINTisAllPIU)
        {
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pFundTypeParameter = pFundType != null ?
                new ObjectParameter("PFundType", pFundType) :
                new ObjectParameter("PFundType", typeof(string));
    
            var pINTisAllPIUParameter = pINTisAllPIU.HasValue ?
                new ObjectParameter("PINTisAllPIU", pINTisAllPIU) :
                new ObjectParameter("PINTisAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCH_Misc_Advances_Result>("USP_ACC_RPT_SCH_Misc_Advances", pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pFundTypeParameter, pINTisAllPIUParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_ADMIN_EXPENSES_Result> USP_ACC_RPT_SCHEDULE_ADMIN_EXPENSES(Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, Nullable<int> pINTisAllPIU)
        {
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pINTisAllPIUParameter = pINTisAllPIU.HasValue ?
                new ObjectParameter("PINTisAllPIU", pINTisAllPIU) :
                new ObjectParameter("PINTisAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_ADMIN_EXPENSES_Result>("USP_ACC_RPT_SCHEDULE_ADMIN_EXPENSES", pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pINTisAllPIUParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_BA_UTILIZATION_REC_STMT_Result> USP_ACC_RPT_SCHEDULE_BA_UTILIZATION_REC_STMT(string prm_Fund_Type, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_Admin_ND_Code, Nullable<int> prm_DPIU_ALLPIU)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_Admin_ND_CodeParameter = prm_Admin_ND_Code.HasValue ?
                new ObjectParameter("Prm_Admin_ND_Code", prm_Admin_ND_Code) :
                new ObjectParameter("Prm_Admin_ND_Code", typeof(int));
    
            var prm_DPIU_ALLPIUParameter = prm_DPIU_ALLPIU.HasValue ?
                new ObjectParameter("Prm_DPIU_ALLPIU", prm_DPIU_ALLPIU) :
                new ObjectParameter("Prm_DPIU_ALLPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_BA_UTILIZATION_REC_STMT_Result>("USP_ACC_RPT_SCHEDULE_BA_UTILIZATION_REC_STMT", prm_Fund_TypeParameter, prm_MonthParameter, prm_YearParameter, prm_Admin_ND_CodeParameter, prm_DPIU_ALLPIUParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_BANK_REMITTANCES_REC_STMT_Result> USP_ACC_RPT_SCHEDULE_BANK_REMITTANCES_REC_STMT(string prm_Fund_Type, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_Admin_ND_Code, Nullable<int> prm_DPIU_ALLPIU)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_Admin_ND_CodeParameter = prm_Admin_ND_Code.HasValue ?
                new ObjectParameter("Prm_Admin_ND_Code", prm_Admin_ND_Code) :
                new ObjectParameter("Prm_Admin_ND_Code", typeof(int));
    
            var prm_DPIU_ALLPIUParameter = prm_DPIU_ALLPIU.HasValue ?
                new ObjectParameter("Prm_DPIU_ALLPIU", prm_DPIU_ALLPIU) :
                new ObjectParameter("Prm_DPIU_ALLPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_BANK_REMITTANCES_REC_STMT_Result>("USP_ACC_RPT_SCHEDULE_BANK_REMITTANCES_REC_STMT", prm_Fund_TypeParameter, prm_MonthParameter, prm_YearParameter, prm_Admin_ND_CodeParameter, prm_DPIU_ALLPIUParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_CURRENT_ASSETS_Result> USP_ACC_RPT_SCHEDULE_CURRENT_ASSETS(string prmFundType, Nullable<short> prmMonth, Nullable<short> prmYear, Nullable<int> prmSRRDANDCode, Nullable<int> prmDPIUNDCODE, string prmFlag)
        {
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("PrmFundType", prmFundType) :
                new ObjectParameter("PrmFundType", typeof(string));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(short));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(short));
    
            var prmSRRDANDCodeParameter = prmSRRDANDCode.HasValue ?
                new ObjectParameter("PrmSRRDANDCode", prmSRRDANDCode) :
                new ObjectParameter("PrmSRRDANDCode", typeof(int));
    
            var prmDPIUNDCODEParameter = prmDPIUNDCODE.HasValue ?
                new ObjectParameter("PrmDPIUNDCODE", prmDPIUNDCODE) :
                new ObjectParameter("PrmDPIUNDCODE", typeof(int));
    
            var prmFlagParameter = prmFlag != null ?
                new ObjectParameter("PrmFlag", prmFlag) :
                new ObjectParameter("PrmFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_CURRENT_ASSETS_Result>("USP_ACC_RPT_SCHEDULE_CURRENT_ASSETS", prmFundTypeParameter, prmMonthParameter, prmYearParameter, prmSRRDANDCodeParameter, prmDPIUNDCODEParameter, prmFlagParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_Durable_ASSETS_Result> USP_ACC_RPT_SCHEDULE_Durable_ASSETS(string prm_Fund_Type, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_SRRDA_ND_Code, Nullable<int> prm_DPIU_ND_CODE, string prm_Flag)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_SRRDA_ND_CodeParameter = prm_SRRDA_ND_Code.HasValue ?
                new ObjectParameter("Prm_SRRDA_ND_Code", prm_SRRDA_ND_Code) :
                new ObjectParameter("Prm_SRRDA_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CODEParameter = prm_DPIU_ND_CODE.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_CODE", prm_DPIU_ND_CODE) :
                new ObjectParameter("Prm_DPIU_ND_CODE", typeof(int));
    
            var prm_FlagParameter = prm_Flag != null ?
                new ObjectParameter("Prm_Flag", prm_Flag) :
                new ObjectParameter("Prm_Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_Durable_ASSETS_Result>("USP_ACC_RPT_SCHEDULE_Durable_ASSETS", prm_Fund_TypeParameter, prm_MonthParameter, prm_YearParameter, prm_SRRDA_ND_CodeParameter, prm_DPIU_ND_CODEParameter, prm_FlagParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_FUND_REC_PIU_SRRDA_Result> USP_ACC_RPT_SCHEDULE_FUND_REC_PIU_SRRDA(string prm_Fund_Type, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_SRRDA_ND_Code)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_SRRDA_ND_CodeParameter = prm_SRRDA_ND_Code.HasValue ?
                new ObjectParameter("Prm_SRRDA_ND_Code", prm_SRRDA_ND_Code) :
                new ObjectParameter("Prm_SRRDA_ND_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_FUND_REC_PIU_SRRDA_Result>("USP_ACC_RPT_SCHEDULE_FUND_REC_PIU_SRRDA", prm_Fund_TypeParameter, prm_MonthParameter, prm_YearParameter, prm_SRRDA_ND_CodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_OF_ROADS_Result> USP_ACC_RPT_SCHEDULE_OF_ROADS(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID, Nullable<short> p_INT_HeadID, string p_CHAR_FACode)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(short));
    
            var p_CHAR_FACodeParameter = p_CHAR_FACode != null ?
                new ObjectParameter("P_CHAR_FACode", p_CHAR_FACode) :
                new ObjectParameter("P_CHAR_FACode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_OF_ROADS_Result>("USP_ACC_RPT_SCHEDULE_OF_ROADS", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter, p_INT_HeadIDParameter, p_CHAR_FACodeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SCHEDULE_OF_ROADS_MF_Result> USP_ACC_RPT_SCHEDULE_OF_ROADS_MF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> p_INT_LvlID, Nullable<short> p_INT_HeadID)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_LvlIDParameter = p_INT_LvlID.HasValue ?
                new ObjectParameter("P_INT_LvlID", p_INT_LvlID) :
                new ObjectParameter("P_INT_LvlID", typeof(int));
    
            var p_INT_HeadIDParameter = p_INT_HeadID.HasValue ?
                new ObjectParameter("P_INT_HeadID", p_INT_HeadID) :
                new ObjectParameter("P_INT_HeadID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SCHEDULE_OF_ROADS_MF_Result>("USP_ACC_RPT_SCHEDULE_OF_ROADS_MF", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_INT_LvlIDParameter, p_INT_HeadIDParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SHOW_FUND_RECEIVED_Result> USP_ACC_RPT_SHOW_FUND_RECEIVED(Nullable<int> pINTRptID, Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, Nullable<int> pINTisAllPIU)
        {
            var pINTRptIDParameter = pINTRptID.HasValue ?
                new ObjectParameter("PINTRptID", pINTRptID) :
                new ObjectParameter("PINTRptID", typeof(int));
    
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pINTisAllPIUParameter = pINTisAllPIU.HasValue ?
                new ObjectParameter("PINTisAllPIU", pINTisAllPIU) :
                new ObjectParameter("PINTisAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SHOW_FUND_RECEIVED_Result>("USP_ACC_RPT_SHOW_FUND_RECEIVED", pINTRptIDParameter, pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pINTisAllPIUParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SHOW_FUND_RECEIVED_ADMIN_FUND_Result> USP_ACC_RPT_SHOW_FUND_RECEIVED_ADMIN_FUND(Nullable<int> pINTRptID, Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, Nullable<int> pINTisAllPIU)
        {
            var pINTRptIDParameter = pINTRptID.HasValue ?
                new ObjectParameter("PINTRptID", pINTRptID) :
                new ObjectParameter("PINTRptID", typeof(int));
    
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pINTisAllPIUParameter = pINTisAllPIU.HasValue ?
                new ObjectParameter("PINTisAllPIU", pINTisAllPIU) :
                new ObjectParameter("PINTisAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SHOW_FUND_RECEIVED_ADMIN_FUND_Result>("USP_ACC_RPT_SHOW_FUND_RECEIVED_ADMIN_FUND", pINTRptIDParameter, pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pINTisAllPIUParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_ALLPIU_Result> USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_ALLPIU(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_ALLPIU_Result>("USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_ALLPIU", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_SELF_Result> USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_SELF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_SELF_Result>("USP_ACC_RPT_SHOW_RUNNING_ACCOUNT_SELF", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_STATUS_ACCOUNT_MONITORING_Result> USP_ACC_RPT_STATUS_ACCOUNT_MONITORING(Nullable<int> prmStateCode, Nullable<int> prmAgencyCode, string prmFundType)
        {
            var prmStateCodeParameter = prmStateCode.HasValue ?
                new ObjectParameter("PrmStateCode", prmStateCode) :
                new ObjectParameter("PrmStateCode", typeof(int));
    
            var prmAgencyCodeParameter = prmAgencyCode.HasValue ?
                new ObjectParameter("PrmAgencyCode", prmAgencyCode) :
                new ObjectParameter("PrmAgencyCode", typeof(int));
    
            var prmFundTypeParameter = prmFundType != null ?
                new ObjectParameter("prmFundType", prmFundType) :
                new ObjectParameter("prmFundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_STATUS_ACCOUNT_MONITORING_Result>("USP_ACC_RPT_STATUS_ACCOUNT_MONITORING", prmStateCodeParameter, prmAgencyCodeParameter, prmFundTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_RPT_UC_GRANT_DETAILS_Result> USP_ACC_RPT_UC_GRANT_DETAILS(Nullable<int> adminNDCode, Nullable<int> fyear, string fundType)
        {
            var adminNDCodeParameter = adminNDCode.HasValue ?
                new ObjectParameter("AdminNDCode", adminNDCode) :
                new ObjectParameter("AdminNDCode", typeof(int));
    
            var fyearParameter = fyear.HasValue ?
                new ObjectParameter("Fyear", fyear) :
                new ObjectParameter("Fyear", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_RPT_UC_GRANT_DETAILS_Result>("USP_ACC_RPT_UC_GRANT_DETAILS", adminNDCodeParameter, fyearParameter, fundTypeParameter);
        }
    
        public virtual int USP_ACC_TEO_INSERT_AUTOTXNS_ATPIU(Nullable<long> prm_Bill_ID, string prm_Fund_Type, Nullable<int> prm_UserID, string prm_IPAddr)
        {
            var prm_Bill_IDParameter = prm_Bill_ID.HasValue ?
                new ObjectParameter("Prm_Bill_ID", prm_Bill_ID) :
                new ObjectParameter("Prm_Bill_ID", typeof(long));
    
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_UserIDParameter = prm_UserID.HasValue ?
                new ObjectParameter("Prm_UserID", prm_UserID) :
                new ObjectParameter("Prm_UserID", typeof(int));
    
            var prm_IPAddrParameter = prm_IPAddr != null ?
                new ObjectParameter("Prm_IPAddr", prm_IPAddr) :
                new ObjectParameter("Prm_IPAddr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_TEO_INSERT_AUTOTXNS_ATPIU", prm_Bill_IDParameter, prm_Fund_TypeParameter, prm_UserIDParameter, prm_IPAddrParameter);
        }
    
        public virtual ObjectResult<USP_ACC_VALIDATE_BANK_GURANTEE_DETAILS_Result> USP_ACC_VALIDATE_BANK_GURANTEE_DETAILS(Nullable<int> p_INT_AdminNDCode, string p_CHAR_fundType, Nullable<int> p_Agreement_code)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_Agreement_codeParameter = p_Agreement_code.HasValue ?
                new ObjectParameter("P_Agreement_code", p_Agreement_code) :
                new ObjectParameter("P_Agreement_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_VALIDATE_BANK_GURANTEE_DETAILS_Result>("USP_ACC_VALIDATE_BANK_GURANTEE_DETAILS", p_INT_AdminNDCodeParameter, p_CHAR_fundTypeParameter, p_Agreement_codeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_VALIDATE_CHEQUEBOOK_UPDATE_DETAILS(Nullable<int> adminNdCode, string fundType, string issueDate, string leafStart, string leafEnd, Nullable<int> levelID, Nullable<int> chequeBookID)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var issueDateParameter = issueDate != null ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(string));
    
            var leafStartParameter = leafStart != null ?
                new ObjectParameter("LeafStart", leafStart) :
                new ObjectParameter("LeafStart", typeof(string));
    
            var leafEndParameter = leafEnd != null ?
                new ObjectParameter("LeafEnd", leafEnd) :
                new ObjectParameter("LeafEnd", typeof(string));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var chequeBookIDParameter = chequeBookID.HasValue ?
                new ObjectParameter("ChequeBookID", chequeBookID) :
                new ObjectParameter("ChequeBookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_VALIDATE_CHEQUEBOOK_UPDATE_DETAILS", adminNdCodeParameter, fundTypeParameter, issueDateParameter, leafStartParameter, leafEndParameter, levelIDParameter, chequeBookIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ACC_VERIFY_ADMIN_FUND_HEAD_55(string p_CHAR_BILLTYPE, Nullable<int> p_MASTER_TXN_ID, Nullable<int> p_TXN_HEAD_ID, string p_Credit_Debit, Nullable<System.DateTime> p_BILL_DATE)
        {
            var p_CHAR_BILLTYPEParameter = p_CHAR_BILLTYPE != null ?
                new ObjectParameter("P_CHAR_BILLTYPE", p_CHAR_BILLTYPE) :
                new ObjectParameter("P_CHAR_BILLTYPE", typeof(string));
    
            var p_MASTER_TXN_IDParameter = p_MASTER_TXN_ID.HasValue ?
                new ObjectParameter("P_MASTER_TXN_ID", p_MASTER_TXN_ID) :
                new ObjectParameter("P_MASTER_TXN_ID", typeof(int));
    
            var p_TXN_HEAD_IDParameter = p_TXN_HEAD_ID.HasValue ?
                new ObjectParameter("P_TXN_HEAD_ID", p_TXN_HEAD_ID) :
                new ObjectParameter("P_TXN_HEAD_ID", typeof(int));
    
            var p_Credit_DebitParameter = p_Credit_Debit != null ?
                new ObjectParameter("P_Credit_Debit", p_Credit_Debit) :
                new ObjectParameter("P_Credit_Debit", typeof(string));
    
            var p_BILL_DATEParameter = p_BILL_DATE.HasValue ?
                new ObjectParameter("P_BILL_DATE", p_BILL_DATE) :
                new ObjectParameter("P_BILL_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ACC_VERIFY_ADMIN_FUND_HEAD_55", p_CHAR_BILLTYPEParameter, p_MASTER_TXN_IDParameter, p_TXN_HEAD_IDParameter, p_Credit_DebitParameter, p_BILL_DATEParameter);
        }
    
        public virtual ObjectResult<USP_ACC_VERIFY_PIUS_CHEQUEACK_Result> USP_ACC_VERIFY_PIUS_CHEQUEACK(string p_CHAR_fundType, Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, Nullable<int> p_INT_TO_AccMonth, Nullable<int> p_INT_TO_AccYear, string p_CHAR_SMonth)
        {
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_INT_TO_AccMonthParameter = p_INT_TO_AccMonth.HasValue ?
                new ObjectParameter("P_INT_TO_AccMonth", p_INT_TO_AccMonth) :
                new ObjectParameter("P_INT_TO_AccMonth", typeof(int));
    
            var p_INT_TO_AccYearParameter = p_INT_TO_AccYear.HasValue ?
                new ObjectParameter("P_INT_TO_AccYear", p_INT_TO_AccYear) :
                new ObjectParameter("P_INT_TO_AccYear", typeof(int));
    
            var p_CHAR_SMonthParameter = p_CHAR_SMonth != null ?
                new ObjectParameter("P_CHAR_SMonth", p_CHAR_SMonth) :
                new ObjectParameter("P_CHAR_SMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_VERIFY_PIUS_CHEQUEACK_Result>("USP_ACC_VERIFY_PIUS_CHEQUEACK", p_CHAR_fundTypeParameter, p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_INT_TO_AccMonthParameter, p_INT_TO_AccYearParameter, p_CHAR_SMonthParameter);
        }
    
        public virtual ObjectResult<USP_AGR_AGREEMENT_DETAIL_Result> USP_AGR_AGREEMENT_DETAIL(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> cOLLABORATION, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AGR_AGREEMENT_DETAIL_Result>("USP_AGR_AGREEMENT_DETAIL", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, cOLLABORATIONParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_AGR_CHART_Result> USP_AGR_CHART(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> pMGSY, string wORK_TYPE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var wORK_TYPEParameter = wORK_TYPE != null ?
                new ObjectParameter("WORK_TYPE", wORK_TYPE) :
                new ObjectParameter("WORK_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AGR_CHART_Result>("USP_AGR_CHART", lEVELParameter, sTATEParameter, dISTRICTParameter, pMGSYParameter, wORK_TYPEParameter);
        }
    
        public virtual int USP_AGREEMENT_STATUS_UPDATE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_AGREEMENT_STATUS_UPDATE");
        }
    
        public virtual ObjectResult<USP_ARRR_ANALYSIS_RATES_Result> USP_ARRR_ANALYSIS_RATES(Nullable<int> state, Nullable<int> year)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ARRR_ANALYSIS_RATES_Result>("USP_ARRR_ANALYSIS_RATES", stateParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_ASPIRATIONAL_DISTRICTS_ACHEIVEMENT_Result> USP_ASPIRATIONAL_DISTRICTS_ACHEIVEMENT(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ASPIRATIONAL_DISTRICTS_ACHEIVEMENT_Result>("USP_ASPIRATIONAL_DISTRICTS_ACHEIVEMENT", yearParameter);
        }
    
        public virtual ObjectResult<USP_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY_Result> USP_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY(Nullable<int> state, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> cOLLABORATION, string cONNECTIVITY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var cONNECTIVITYParameter = cONNECTIVITY != null ?
                new ObjectParameter("CONNECTIVITY", cONNECTIVITY) :
                new ObjectParameter("CONNECTIVITY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY_Result>("USP_BLOCK_CUPL_PMGSY3_NOT_ELIGIBILITY", stateParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter, cOLLABORATIONParameter, cONNECTIVITYParameter);
        }
    
        public virtual ObjectResult<USP_BUILDING_COMPONENT_SANCTIONED_Result> USP_BUILDING_COMPONENT_SANCTIONED(Nullable<int> bUILD_CODE)
        {
            var bUILD_CODEParameter = bUILD_CODE.HasValue ?
                new ObjectParameter("BUILD_CODE", bUILD_CODE) :
                new ObjectParameter("BUILD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BUILDING_COMPONENT_SANCTIONED_Result>("USP_BUILDING_COMPONENT_SANCTIONED", bUILD_CODEParameter);
        }
    
        public virtual ObjectResult<USP_BUILDING_PROPOSAL_LIST_Result> USP_BUILDING_PROPOSAL_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> collaboration, Nullable<int> eACODE, string pROP_CONNECTIVITY_STATUS, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var eACODEParameter = eACODE.HasValue ?
                new ObjectParameter("EACODE", eACODE) :
                new ObjectParameter("EACODE", typeof(int));
    
            var pROP_CONNECTIVITY_STATUSParameter = pROP_CONNECTIVITY_STATUS != null ?
                new ObjectParameter("PROP_CONNECTIVITY_STATUS", pROP_CONNECTIVITY_STATUS) :
                new ObjectParameter("PROP_CONNECTIVITY_STATUS", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BUILDING_PROPOSAL_LIST_Result>("USP_BUILDING_PROPOSAL_LIST", sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter, collaborationParameter, eACODEParameter, pROP_CONNECTIVITY_STATUSParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CANDIDATE_ROAD_FINALIZATION_(Nullable<int> block)
        {
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CANDIDATE_ROAD_FINALIZATION_", blockParameter);
        }
    
        public virtual ObjectResult<USP_CHECK_AGREEMENT_ELIGIBILITY_Result> USP_CHECK_AGREEMENT_ELIGIBILITY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CHECK_AGREEMENT_ELIGIBILITY_Result>("USP_CHECK_AGREEMENT_ELIGIBILITY");
        }
    
        public virtual ObjectResult<USP_CITIZEN_DVW_Result> USP_CITIZEN_DVW(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> yEAR, Nullable<int> cOLLABORATION, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_DVW_Result>("USP_CITIZEN_DVW", lEVELParameter, sTATEParameter, dISTRICTParameter, yEARParameter, cOLLABORATIONParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CITIZEN_GRIEVANCE_CN_LIST_Result> USP_CITIZEN_GRIEVANCE_CN_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> pmgsy_scheme)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(int));
    
            var pmgsy_schemeParameter = pmgsy_scheme.HasValue ?
                new ObjectParameter("pmgsy_scheme", pmgsy_scheme) :
                new ObjectParameter("pmgsy_scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_GRIEVANCE_CN_LIST_Result>("USP_CITIZEN_GRIEVANCE_CN_LIST", stateParameter, districtParameter, blockParameter, pmgsy_schemeParameter);
        }
    
        public virtual ObjectResult<USP_CITIZEN_GRIEVANCE_CN_LIST_LOC_Result> USP_CITIZEN_GRIEVANCE_CN_LIST_LOC(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> pmgsy_scheme, string lAN_CODE)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(int));
    
            var pmgsy_schemeParameter = pmgsy_scheme.HasValue ?
                new ObjectParameter("pmgsy_scheme", pmgsy_scheme) :
                new ObjectParameter("pmgsy_scheme", typeof(int));
    
            var lAN_CODEParameter = lAN_CODE != null ?
                new ObjectParameter("LAN_CODE", lAN_CODE) :
                new ObjectParameter("LAN_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_GRIEVANCE_CN_LIST_LOC_Result>("USP_CITIZEN_GRIEVANCE_CN_LIST_LOC", stateParameter, districtParameter, blockParameter, pmgsy_schemeParameter, lAN_CODEParameter);
        }
    
        public virtual int USP_CITIZEN_GRIEVANCE_REGISTER(string name, string mobNo, string imei, string address, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobNoParameter = mobNo != null ?
                new ObjectParameter("mobNo", mobNo) :
                new ObjectParameter("mobNo", typeof(string));
    
            var imeiParameter = imei != null ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CITIZEN_GRIEVANCE_REGISTER", nameParameter, mobNoParameter, imeiParameter, addressParameter, emailParameter);
        }
    
        public virtual ObjectResult<USP_CITIZEN_NEWS_PUBLISH_Result> USP_CITIZEN_NEWS_PUBLISH(Nullable<int> level, Nullable<int> state, Nullable<int> district, string status, string topten)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var toptenParameter = topten != null ?
                new ObjectParameter("Topten", topten) :
                new ObjectParameter("Topten", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_NEWS_PUBLISH_Result>("USP_CITIZEN_NEWS_PUBLISH", levelParameter, stateParameter, districtParameter, statusParameter, toptenParameter);
        }
    
        public virtual ObjectResult<USP_CITIZEN_POST_PROPOSAL_DETAILS_Result> USP_CITIZEN_POST_PROPOSAL_DETAILS(Nullable<int> proposalCode, string monitortype)
        {
            var proposalCodeParameter = proposalCode.HasValue ?
                new ObjectParameter("proposalCode", proposalCode) :
                new ObjectParameter("proposalCode", typeof(int));
    
            var monitortypeParameter = monitortype != null ?
                new ObjectParameter("monitortype", monitortype) :
                new ObjectParameter("monitortype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_POST_PROPOSAL_DETAILS_Result>("USP_CITIZEN_POST_PROPOSAL_DETAILS", proposalCodeParameter, monitortypeParameter);
        }
    
        public virtual ObjectResult<USP_CITIZEN_PUBLICATION_REPORT_Result> USP_CITIZEN_PUBLICATION_REPORT(Nullable<int> category)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_PUBLICATION_REPORT_Result>("USP_CITIZEN_PUBLICATION_REPORT", categoryParameter);
        }
    
        public virtual int USP_CITIZEN_STATS_DATA(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CITIZEN_STATS_DATA", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CITIZEN_STATS_REPORT_Result> USP_CITIZEN_STATS_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CITIZEN_STATS_REPORT_Result>("USP_CITIZEN_STATS_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_HAB_REPORT_Result> USP_CN_HAB_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_HAB_REPORT_Result>("USP_CN_HAB_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_HABLVL_REPORT_Result> USP_CN_HABLVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_HABLVL_REPORT_Result>("USP_CN_HABLVL_REPORT", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PAVEMENT_REPORT_Result> USP_CN_PAVEMENT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PAVEMENT_REPORT_Result>("USP_CN_PAVEMENT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PCI_ANALYSIS_Result> USP_CN_PCI_ANALYSIS(Nullable<int> state, Nullable<int> district, Nullable<int> block, string flag, string type, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PCI_ANALYSIS_Result>("USP_CN_PCI_ANALYSIS", stateParameter, districtParameter, blockParameter, flagParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PCI_FINALIZE_Result> USP_CN_PCI_FINALIZE(Nullable<int> state, Nullable<int> district, Nullable<int> scheme)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PCI_FINALIZE_Result>("USP_CN_PCI_FINALIZE", stateParameter, districtParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_CN_PCI_REPORT_Result> USP_CN_PCI_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PCI_REPORT_Result>("USP_CN_PCI_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PCILVL_REPORT_Result> USP_CN_PCILVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PCILVL_REPORT_Result>("USP_CN_PCILVL_REPORT", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PRIORITY_REPORT_Result> USP_CN_PRIORITY_REPORT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> pRIORITY, string rOUTE, Nullable<byte> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var rOUTEParameter = rOUTE != null ?
                new ObjectParameter("ROUTE", rOUTE) :
                new ObjectParameter("ROUTE", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PRIORITY_REPORT_Result>("USP_CN_PRIORITY_REPORT", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, pRIORITYParameter, rOUTEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PRIORITY4_REPORT_Result> USP_CN_PRIORITY4_REPORT(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> pRIORITY, string rOUTE, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var rOUTEParameter = rOUTE != null ?
                new ObjectParameter("ROUTE", rOUTE) :
                new ObjectParameter("ROUTE", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PRIORITY4_REPORT_Result>("USP_CN_PRIORITY4_REPORT", sTATEParameter, dISTRICTParameter, bLOCKParameter, pRIORITYParameter, rOUTEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PROP_PCI_ANALYSIS_Result> USP_CN_PROP_PCI_ANALYSIS(Nullable<int> state, Nullable<int> district, Nullable<int> block, string flag, string type, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PROP_PCI_ANALYSIS_Result>("USP_CN_PROP_PCI_ANALYSIS", stateParameter, districtParameter, blockParameter, flagParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_PROP_PCI_REPORT_Result> USP_CN_PROP_PCI_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_PROP_PCI_REPORT_Result>("USP_CN_PROP_PCI_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_R1_REPORT_Result> USP_CN_R1_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> road, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_R1_REPORT_Result>("USP_CN_R1_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, roadParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_R2_REPORT_Result> USP_CN_R2_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> road, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_R2_REPORT_Result>("USP_CN_R2_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, roadParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_R2LVL_REPORT_Result> USP_CN_R2LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> road, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_R2LVL_REPORT_Result>("USP_CN_R2LVL_REPORT", stateParameter, districtParameter, blockParameter, roadParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_R4_REPORT_Result> USP_CN_R4_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> road, string route, string len, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var lenParameter = len != null ?
                new ObjectParameter("Len", len) :
                new ObjectParameter("Len", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_R4_REPORT_Result>("USP_CN_R4_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, roadParameter, routeParameter, lenParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_R4LVL_REPORT_Result> USP_CN_R4LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> road, string route, string len, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var lenParameter = len != null ?
                new ObjectParameter("Len", len) :
                new ObjectParameter("Len", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_R4LVL_REPORT_Result>("USP_CN_R4LVL_REPORT", stateParameter, districtParameter, blockParameter, roadParameter, routeParameter, lenParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_REPORT_Result> USP_CN_REPORT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> pOP, Nullable<int> rOADCAT, string rOUTE, Nullable<byte> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var pOPParameter = pOP.HasValue ?
                new ObjectParameter("POP", pOP) :
                new ObjectParameter("POP", typeof(int));
    
            var rOADCATParameter = rOADCAT.HasValue ?
                new ObjectParameter("ROADCAT", rOADCAT) :
                new ObjectParameter("ROADCAT", typeof(int));
    
            var rOUTEParameter = rOUTE != null ?
                new ObjectParameter("ROUTE", rOUTE) :
                new ObjectParameter("ROUTE", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_REPORT_Result>("USP_CN_REPORT", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, pOPParameter, rOADCATParameter, rOUTEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN_ROAD_REPORT_Result> USP_CN_ROAD_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<int> road, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN_ROAD_REPORT_Result>("USP_CN_ROAD_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, roadParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN1_REPORT_Result> USP_CN1_REPORT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, string rOUTE, Nullable<byte> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var rOUTEParameter = rOUTE != null ?
                new ObjectParameter("ROUTE", rOUTE) :
                new ObjectParameter("ROUTE", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN1_REPORT_Result>("USP_CN1_REPORT", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, rOUTEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN2_REPORT_Result> USP_CN2_REPORT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> pOP, Nullable<byte> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var pOPParameter = pOP.HasValue ?
                new ObjectParameter("POP", pOP) :
                new ObjectParameter("POP", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN2_REPORT_Result>("USP_CN2_REPORT", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, pOPParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN3_REPORT_Result> USP_CN3_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> roadCat, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadCatParameter = roadCat.HasValue ?
                new ObjectParameter("RoadCat", roadCat) :
                new ObjectParameter("RoadCat", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN3_REPORT_Result>("USP_CN3_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, roadCatParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN4_REPORT_Result> USP_CN4_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> roadCat, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadCatParameter = roadCat.HasValue ?
                new ObjectParameter("RoadCat", roadCat) :
                new ObjectParameter("RoadCat", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN4_REPORT_Result>("USP_CN4_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, roadCatParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN6_ABS_REPORT_Result> USP_CN6_ABS_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN6_ABS_REPORT_Result>("USP_CN6_ABS_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN6_POP_CATEGORY_ABS_REPORT_Result> USP_CN6_POP_CATEGORY_ABS_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN6_POP_CATEGORY_ABS_REPORT_Result>("USP_CN6_POP_CATEGORY_ABS_REPORT", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN6_REPORT_Result> USP_CN6_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN6_REPORT_Result>("USP_CN6_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CN6LVL_REPORT_Result> USP_CN6LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CN6LVL_REPORT_Result>("USP_CN6LVL_REPORT", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CNCPL_LVL_REPORT_Result> USP_CNCPL_LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CNCPL_LVL_REPORT_Result>("USP_CNCPL_LVL_REPORT", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CNCPL_REPORT_Result> USP_CNCPL_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CNCPL_REPORT_Result>("USP_CNCPL_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_COMPLETION_PLAN_REPORT_Result> USP_COMPLETION_PLAN_REPORT(Nullable<int> state, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_COMPLETION_PLAN_REPORT_Result>("USP_COMPLETION_PLAN_REPORT", stateParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CONT_FINANCIAL_PROGRESS_Result> USP_CONT_FINANCIAL_PROGRESS(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> yEAR, Nullable<int> cOLLABORATION, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CONT_FINANCIAL_PROGRESS_Result>("USP_CONT_FINANCIAL_PROGRESS", lEVELParameter, sTATEParameter, dISTRICTParameter, yEARParameter, cOLLABORATIONParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CONT_FINANCIAL_PROGRESS_20032014_Result> USP_CONT_FINANCIAL_PROGRESS_20032014(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> yEAR, Nullable<int> cOLLABORATION, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CONT_FINANCIAL_PROGRESS_20032014_Result>("USP_CONT_FINANCIAL_PROGRESS_20032014", lEVELParameter, sTATEParameter, dISTRICTParameter, yEARParameter, cOLLABORATIONParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CONTRACTOR_FEEDBACK_GET_AGREEMENT_DETAILS_Result> USP_CONTRACTOR_FEEDBACK_GET_AGREEMENT_DETAILS(Nullable<int> prmState, Nullable<int> prmDistrict, Nullable<int> prmAgrYear, string conPAN, string conAccount)
        {
            var prmStateParameter = prmState.HasValue ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(int));
    
            var prmDistrictParameter = prmDistrict.HasValue ?
                new ObjectParameter("prmDistrict", prmDistrict) :
                new ObjectParameter("prmDistrict", typeof(int));
    
            var prmAgrYearParameter = prmAgrYear.HasValue ?
                new ObjectParameter("prmAgrYear", prmAgrYear) :
                new ObjectParameter("prmAgrYear", typeof(int));
    
            var conPANParameter = conPAN != null ?
                new ObjectParameter("conPAN", conPAN) :
                new ObjectParameter("conPAN", typeof(string));
    
            var conAccountParameter = conAccount != null ?
                new ObjectParameter("conAccount", conAccount) :
                new ObjectParameter("conAccount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CONTRACTOR_FEEDBACK_GET_AGREEMENT_DETAILS_Result>("USP_CONTRACTOR_FEEDBACK_GET_AGREEMENT_DETAILS", prmStateParameter, prmDistrictParameter, prmAgrYearParameter, conPANParameter, conAccountParameter);
        }
    
        public virtual ObjectResult<USP_CONTRACTOR_GRIEVANCE_LIST_Result> USP_CONTRACTOR_GRIEVANCE_LIST(Nullable<int> prmState, Nullable<int> prmDistrict, Nullable<int> year)
        {
            var prmStateParameter = prmState.HasValue ?
                new ObjectParameter("prmState", prmState) :
                new ObjectParameter("prmState", typeof(int));
    
            var prmDistrictParameter = prmDistrict.HasValue ?
                new ObjectParameter("prmDistrict", prmDistrict) :
                new ObjectParameter("prmDistrict", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CONTRACTOR_GRIEVANCE_LIST_Result>("USP_CONTRACTOR_GRIEVANCE_LIST", prmStateParameter, prmDistrictParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_CR_PROP_PENDING_LIST_Result> USP_CR_PROP_PENDING_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CR_PROP_PENDING_LIST_Result>("USP_CR_PROP_PENDING_LIST", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CR_PROP_SANCTION_LIST_Result> USP_CR_PROP_SANCTION_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CR_PROP_SANCTION_LIST_Result>("USP_CR_PROP_SANCTION_LIST", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CS_AGREEMENT_DETAILS_Result> USP_CS_AGREEMENT_DETAILS(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_AGREEMENT_DETAILS_Result>("USP_CS_AGREEMENT_DETAILS", roadParameter);
        }
    
        public virtual ObjectResult<USP_CS_CN_DETAILS_Result> USP_CS_CN_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> hab, Nullable<int> cNCode)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var habParameter = hab.HasValue ?
                new ObjectParameter("Hab", hab) :
                new ObjectParameter("Hab", typeof(int));
    
            var cNCodeParameter = cNCode.HasValue ?
                new ObjectParameter("CNCode", cNCode) :
                new ObjectParameter("CNCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_CN_DETAILS_Result>("USP_CS_CN_DETAILS", stateParameter, districtParameter, blockParameter, villageParameter, habParameter, cNCodeParameter);
        }
    
        public virtual ObjectResult<USP_CS_FIN_PROGRESS_DETAILS_Result> USP_CS_FIN_PROGRESS_DETAILS(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_FIN_PROGRESS_DETAILS_Result>("USP_CS_FIN_PROGRESS_DETAILS", roadParameter);
        }
    
        public virtual ObjectResult<USP_CS_HAB_DETAILS_Result> USP_CS_HAB_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> hab)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var habParameter = hab.HasValue ?
                new ObjectParameter("Hab", hab) :
                new ObjectParameter("Hab", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_HAB_DETAILS_Result>("USP_CS_HAB_DETAILS", stateParameter, districtParameter, blockParameter, villageParameter, habParameter);
        }
    
        public virtual ObjectResult<USP_CS_LSB_PROG_DETAILS_Result> USP_CS_LSB_PROG_DETAILS(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_LSB_PROG_DETAILS_Result>("USP_CS_LSB_PROG_DETAILS", roadParameter);
        }
    
        public virtual ObjectResult<USP_CS_PROPOSAL_DETAILS_Result> USP_CS_PROPOSAL_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> hab, Nullable<int> cNCode)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var habParameter = hab.HasValue ?
                new ObjectParameter("Hab", hab) :
                new ObjectParameter("Hab", typeof(int));
    
            var cNCodeParameter = cNCode.HasValue ?
                new ObjectParameter("CNCode", cNCode) :
                new ObjectParameter("CNCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_PROPOSAL_DETAILS_Result>("USP_CS_PROPOSAL_DETAILS", stateParameter, districtParameter, blockParameter, villageParameter, habParameter, cNCodeParameter);
        }
    
        public virtual ObjectResult<USP_CS_ROAD_PROG_DETAILS_Result> USP_CS_ROAD_PROG_DETAILS(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CS_ROAD_PROG_DETAILS_Result>("USP_CS_ROAD_PROG_DETAILS", roadParameter);
        }
    
        public virtual ObjectResult<USP_CUCPL_LVL_REPORT_Result> USP_CUCPL_LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUCPL_LVL_REPORT_Result>("USP_CUCPL_LVL_REPORT", stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CUCPL_LVL_REPORT_NEW_Result> USP_CUCPL_LVL_REPORT_NEW(Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<int> pcategory, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pcategoryParameter = pcategory.HasValue ?
                new ObjectParameter("Pcategory", pcategory) :
                new ObjectParameter("Pcategory", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUCPL_LVL_REPORT_NEW_Result>("USP_CUCPL_LVL_REPORT_NEW", stateParameter, districtParameter, blockParameter, routeParameter, pcategoryParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CUCPL_PMGSY2_REPORT_Result> USP_CUCPL_PMGSY2_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUCPL_PMGSY2_REPORT_Result>("USP_CUCPL_PMGSY2_REPORT", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CUCPL_PMGSY2_REPORT1_Result> USP_CUCPL_PMGSY2_REPORT1(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUCPL_PMGSY2_REPORT1_Result>("USP_CUCPL_PMGSY2_REPORT1", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CUCPL_REPORT_Result> USP_CUCPL_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string route, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUCPL_REPORT_Result>("USP_CUCPL_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, routeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_CUPL_PCI_PMGSY3_Result> USP_CUPL_PCI_PMGSY3(Nullable<int> state, Nullable<int> district, Nullable<int> block)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUPL_PCI_PMGSY3_Result>("USP_CUPL_PCI_PMGSY3", stateParameter, districtParameter, blockParameter);
        }
    
        public virtual ObjectResult<USP_CUPL_PCI_PMGSY3_INSERT_REVISED_Result> USP_CUPL_PCI_PMGSY3_INSERT_REVISED(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUPL_PCI_PMGSY3_INSERT_REVISED_Result>("USP_CUPL_PCI_PMGSY3_INSERT_REVISED", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_CUPL_PMGSY3_Result> USP_CUPL_PMGSY3(Nullable<int> state, Nullable<int> district, Nullable<int> block)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CUPL_PMGSY3_Result>("USP_CUPL_PMGSY3", stateParameter, districtParameter, blockParameter);
        }
    
        public virtual ObjectResult<USP_DASH1_REPORT_Result> USP_DASH1_REPORT(Nullable<int> report, Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DASH1_REPORT_Result>("USP_DASH1_REPORT", reportParameter, levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DB_Expn_Summary_Result> USP_DB_Expn_Summary(string prm_Fund_Type, string prm_login_type, Nullable<int> prm_State_ND_Code, Nullable<int> prm_DPIU_ND_Code, Nullable<int> prm_Funding_Ageny)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_login_typeParameter = prm_login_type != null ?
                new ObjectParameter("Prm_login_type", prm_login_type) :
                new ObjectParameter("Prm_login_type", typeof(string));
    
            var prm_State_ND_CodeParameter = prm_State_ND_Code.HasValue ?
                new ObjectParameter("Prm_State_ND_Code", prm_State_ND_Code) :
                new ObjectParameter("Prm_State_ND_Code", typeof(int));
    
            var prm_DPIU_ND_CodeParameter = prm_DPIU_ND_Code.HasValue ?
                new ObjectParameter("Prm_DPIU_ND_Code", prm_DPIU_ND_Code) :
                new ObjectParameter("Prm_DPIU_ND_Code", typeof(int));
    
            var prm_Funding_AgenyParameter = prm_Funding_Ageny.HasValue ?
                new ObjectParameter("Prm_Funding_Ageny", prm_Funding_Ageny) :
                new ObjectParameter("Prm_Funding_Ageny", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DB_Expn_Summary_Result>("USP_DB_Expn_Summary", prm_Fund_TypeParameter, prm_login_typeParameter, prm_State_ND_CodeParameter, prm_DPIU_ND_CodeParameter, prm_Funding_AgenyParameter);
        }
    
        public virtual ObjectResult<USP_DISTRICT_MPR_Result> USP_DISTRICT_MPR(Nullable<byte> pMGSY, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> year, Nullable<int> month, Nullable<int> collaboration)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DISTRICT_MPR_Result>("USP_DISTRICT_MPR", pMGSYParameter, sTATEParameter, dISTRICTParameter, yearParameter, monthParameter, collaborationParameter);
        }
    
        public virtual int USP_DPR_DELETE_PROP(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DPR_DELETE_PROP", roadParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_HAB_LIST_REPORT_Result> USP_DRRP_HAB_LIST_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string status, Nullable<int> pop, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_HAB_LIST_REPORT_Result>("USP_DRRP_HAB_LIST_REPORT", stateParameter, districtParameter, blockParameter, statusParameter, popParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_LIST_REPORT_Result> USP_DRRP_LIST_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> sType, Nullable<int> tType, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sTypeParameter = sType.HasValue ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(int));
    
            var tTypeParameter = tType.HasValue ?
                new ObjectParameter("TType", tType) :
                new ObjectParameter("TType", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_LIST_REPORT_Result>("USP_DRRP_LIST_REPORT", stateParameter, districtParameter, blockParameter, typeParameter, sTypeParameter, tTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R2_REPORT_Result> USP_DRRP_R2_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R2_REPORT_Result>("USP_DRRP_R2_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R3_REPORT_Result> USP_DRRP_R3_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R3_REPORT_Result>("USP_DRRP_R3_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R4_REPORT_Result> USP_DRRP_R4_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R4_REPORT_Result>("USP_DRRP_R4_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R4LVL_REPORT_Result> USP_DRRP_R4LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R4LVL_REPORT_Result>("USP_DRRP_R4LVL_REPORT", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R5_REPORT_Result> USP_DRRP_R5_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> cBR, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var cBRParameter = cBR.HasValue ?
                new ObjectParameter("CBR", cBR) :
                new ObjectParameter("CBR", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R5_REPORT_Result>("USP_DRRP_R5_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, cBRParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R5LVL_REPORT_Result> USP_DRRP_R5LVL_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> cBR, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var cBRParameter = cBR.HasValue ?
                new ObjectParameter("CBR", cBR) :
                new ObjectParameter("CBR", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R5LVL_REPORT_Result>("USP_DRRP_R5LVL_REPORT", stateParameter, districtParameter, blockParameter, cBRParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R6_REPORT_Result> USP_DRRP_R6_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R6_REPORT_Result>("USP_DRRP_R6_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R7_REPORT_Result> USP_DRRP_R7_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R7_REPORT_Result>("USP_DRRP_R7_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_R8_REPORT_Result> USP_DRRP_R8_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_R8_REPORT_Result>("USP_DRRP_R8_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_REPORT_Result> USP_DRRP_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> sType, Nullable<int> tType, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sTypeParameter = sType.HasValue ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(int));
    
            var tTypeParameter = tType.HasValue ?
                new ObjectParameter("TType", tType) :
                new ObjectParameter("TType", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_REPORT_Result>("USP_DRRP_REPORT", stateParameter, districtParameter, blockParameter, typeParameter, sTypeParameter, tTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_ROAD_LIST_MAPPING_Result> USP_DRRP_ROAD_LIST_MAPPING(Nullable<int> state, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> cOLLABORATION, string cONNECTIVITY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var cOLLABORATIONParameter = cOLLABORATION.HasValue ?
                new ObjectParameter("COLLABORATION", cOLLABORATION) :
                new ObjectParameter("COLLABORATION", typeof(int));
    
            var cONNECTIVITYParameter = cONNECTIVITY != null ?
                new ObjectParameter("CONNECTIVITY", cONNECTIVITY) :
                new ObjectParameter("CONNECTIVITY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_ROAD_LIST_MAPPING_Result>("USP_DRRP_ROAD_LIST_MAPPING", stateParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter, cOLLABORATIONParameter, cONNECTIVITYParameter);
        }
    
        public virtual ObjectResult<USP_DRRP_ROAD_REPORT_Result> USP_DRRP_ROAD_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DRRP_ROAD_REPORT_Result>("USP_DRRP_ROAD_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_DSS_ACHIEVEMENT_REPORT_Result> USP_DSS_ACHIEVEMENT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("pMGSY", pMGSY) :
                new ObjectParameter("pMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DSS_ACHIEVEMENT_REPORT_Result>("USP_DSS_ACHIEVEMENT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_BRIEF_REPORT_Result> USP_EC_BRIEF_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string rpt, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_BRIEF_REPORT_Result>("USP_EC_BRIEF_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, rptParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_CHECKLIST_REPORT_Result> USP_EC_CHECKLIST_REPORT(Nullable<int> state, Nullable<int> year, Nullable<int> batch, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_CHECKLIST_REPORT_Result>("USP_EC_CHECKLIST_REPORT", stateParameter, yearParameter, batchParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_EXECUTING_OFFICERS_Result> USP_EC_EXECUTING_OFFICERS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<int> year, Nullable<int> batch, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_EXECUTING_OFFICERS_Result>("USP_EC_EXECUTING_OFFICERS", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, yearParameter, batchParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_FILE_UPLOAD_REPORT_Result> USP_EC_FILE_UPLOAD_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<int> year, Nullable<int> batch, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_FILE_UPLOAD_REPORT_Result>("USP_EC_FILE_UPLOAD_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, yearParameter, batchParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_HAB_COVERAGE_Result> USP_EC_HAB_COVERAGE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_HAB_COVERAGE_Result>("USP_EC_HAB_COVERAGE", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_MAINT_REPORT_Result> USP_EC_MAINT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> year, Nullable<int> curMonth, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var curMonthParameter = curMonth.HasValue ?
                new ObjectParameter("CurMonth", curMonth) :
                new ObjectParameter("CurMonth", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_MAINT_REPORT_Result>("USP_EC_MAINT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, yearParameter, curMonthParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_MP_REPORT_Result> USP_EC_MP_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_MP_REPORT_Result>("USP_EC_MP_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_PHASE_REPORT_Result> USP_EC_PHASE_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> limit, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_PHASE_REPORT_Result>("USP_EC_PHASE_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, limitParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_PROP_DATA_ENTRY_REPORT_Result> USP_EC_PROP_DATA_ENTRY_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_PROP_DATA_ENTRY_REPORT_Result>("USP_EC_PROP_DATA_ENTRY_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_TECH_REPORT_Result> USP_EC_TECH_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string rpt, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_TECH_REPORT_Result>("USP_EC_TECH_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, rptParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_EC_TRAINING_REPORT_Result> USP_EC_TRAINING_REPORT(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EC_TRAINING_REPORT_Result>("USP_EC_TRAINING_REPORT", stateParameter);
        }
    
        public virtual ObjectResult<USP_EFORM_ROAD_LIST_Result> USP_EFORM_ROAD_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EFORM_ROAD_LIST_Result>("USP_EFORM_ROAD_LIST", sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter);
        }
    
        public virtual ObjectResult<USP_EMARG_COMPLETED_WORK_DETAILS_Result> USP_EMARG_COMPLETED_WORK_DETAILS(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> sANYEAR, Nullable<int> rOADCODE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var sANYEARParameter = sANYEAR.HasValue ?
                new ObjectParameter("SANYEAR", sANYEAR) :
                new ObjectParameter("SANYEAR", typeof(int));
    
            var rOADCODEParameter = rOADCODE.HasValue ?
                new ObjectParameter("ROADCODE", rOADCODE) :
                new ObjectParameter("ROADCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EMARG_COMPLETED_WORK_DETAILS_Result>("USP_EMARG_COMPLETED_WORK_DETAILS", sTATEParameter, dISTRICTParameter, sANYEARParameter, rOADCODEParameter);
        }
    
        public virtual ObjectResult<USP_EMARG_PIU_DETAILS_Result> USP_EMARG_PIU_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EMARG_PIU_DETAILS_Result>("USP_EMARG_PIU_DETAILS");
        }
    
        public virtual ObjectResult<USP_EMARG_PIU_MAPPING_Result> USP_EMARG_PIU_MAPPING()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EMARG_PIU_MAPPING_Result>("USP_EMARG_PIU_MAPPING");
        }
    
        public virtual int USP_EMARG_PORT_DATA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EMARG_PORT_DATA");
        }
    
        public virtual ObjectResult<USP_EMARG_SRVC_PUSH_AUTHORIZATION_DETAILS_Result> USP_EMARG_SRVC_PUSH_AUTHORIZATION_DETAILS(string authType, Nullable<System.DateTime> authdate)
        {
            var authTypeParameter = authType != null ?
                new ObjectParameter("AuthType", authType) :
                new ObjectParameter("AuthType", typeof(string));
    
            var authdateParameter = authdate.HasValue ?
                new ObjectParameter("Authdate", authdate) :
                new ObjectParameter("Authdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EMARG_SRVC_PUSH_AUTHORIZATION_DETAILS_Result>("USP_EMARG_SRVC_PUSH_AUTHORIZATION_DETAILS", authTypeParameter, authdateParameter);
        }
    
        public virtual ObjectResult<USP_EMARG_WORK_DETAILS_Result> USP_EMARG_WORK_DETAILS(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> sANYEAR, Nullable<int> rOADCODE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var sANYEARParameter = sANYEAR.HasValue ?
                new ObjectParameter("SANYEAR", sANYEAR) :
                new ObjectParameter("SANYEAR", typeof(int));
    
            var rOADCODEParameter = rOADCODE.HasValue ?
                new ObjectParameter("ROADCODE", rOADCODE) :
                new ObjectParameter("ROADCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EMARG_WORK_DETAILS_Result>("USP_EMARG_WORK_DETAILS", sTATEParameter, dISTRICTParameter, sANYEARParameter, rOADCODEParameter);
        }
    
        public virtual ObjectResult<USP_EXEC_BUILDING_PROGRESS_LIST_Result> USP_EXEC_BUILDING_PROGRESS_LIST(Nullable<int> rOAD_CODE)
        {
            var rOAD_CODEParameter = rOAD_CODE.HasValue ?
                new ObjectParameter("ROAD_CODE", rOAD_CODE) :
                new ObjectParameter("ROAD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EXEC_BUILDING_PROGRESS_LIST_Result>("USP_EXEC_BUILDING_PROGRESS_LIST", rOAD_CODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_EXEMPTION_INSERT_STATE(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_EXEMPTION_INSERT_STATE", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_EXEMPTION_INSERT_STATE_V1(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_EXEMPTION_INSERT_STATE_V1", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_FA_PHASE_PROFILE_Result> USP_FA_PHASE_PROFILE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FA_PHASE_PROFILE_Result>("USP_FA_PHASE_PROFILE", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FA_PHASE_PROFILE_Agency_Result> USP_FA_PHASE_PROFILE_Agency(Nullable<int> level, Nullable<int> state, Nullable<int> dPIU, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var dPIUParameter = dPIU.HasValue ?
                new ObjectParameter("DPIU", dPIU) :
                new ObjectParameter("DPIU", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FA_PHASE_PROFILE_Agency_Result>("USP_FA_PHASE_PROFILE_Agency", levelParameter, stateParameter, dPIUParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_facility_insert_facility_details(Nullable<int> facilityCategoryID, Nullable<int> facilitySubCategoryID, string facilityDesc, string facilityAddress, Nullable<int> pin, Nullable<int> userID, string ipadd, Nullable<int> districtCode, Nullable<int> blockCode, Nullable<int> hbode, string filename, Nullable<decimal> lattitude, Nullable<decimal> longitude)
        {
            var facilityCategoryIDParameter = facilityCategoryID.HasValue ?
                new ObjectParameter("facilityCategoryID", facilityCategoryID) :
                new ObjectParameter("facilityCategoryID", typeof(int));
    
            var facilitySubCategoryIDParameter = facilitySubCategoryID.HasValue ?
                new ObjectParameter("facilitySubCategoryID", facilitySubCategoryID) :
                new ObjectParameter("facilitySubCategoryID", typeof(int));
    
            var facilityDescParameter = facilityDesc != null ?
                new ObjectParameter("facilityDesc", facilityDesc) :
                new ObjectParameter("facilityDesc", typeof(string));
    
            var facilityAddressParameter = facilityAddress != null ?
                new ObjectParameter("facilityAddress", facilityAddress) :
                new ObjectParameter("facilityAddress", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("Ipadd", ipadd) :
                new ObjectParameter("Ipadd", typeof(string));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var hbodeParameter = hbode.HasValue ?
                new ObjectParameter("hbode", hbode) :
                new ObjectParameter("hbode", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var lattitudeParameter = lattitude.HasValue ?
                new ObjectParameter("lattitude", lattitude) :
                new ObjectParameter("lattitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_facility_insert_facility_details", facilityCategoryIDParameter, facilitySubCategoryIDParameter, facilityDescParameter, facilityAddressParameter, pinParameter, userIDParameter, ipaddParameter, districtCodeParameter, blockCodeParameter, hbodeParameter, filenameParameter, lattitudeParameter, longitudeParameter);
        }
    
        public virtual ObjectResult<USP_FEEDBACK_STATEWISE_Result> USP_FEEDBACK_STATEWISE(Nullable<int> lEVEL, Nullable<System.DateTime> fROM, Nullable<System.DateTime> tILL)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tILLParameter = tILL.HasValue ?
                new ObjectParameter("TILL", tILL) :
                new ObjectParameter("TILL", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FEEDBACK_STATEWISE_Result>("USP_FEEDBACK_STATEWISE", lEVELParameter, fROMParameter, tILLParameter);
        }
    
        public virtual ObjectResult<USP_FORM1_REPORT_Result> USP_FORM1_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM1_REPORT_Result>("USP_FORM1_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM1_VILLAGE_REPORT_Result> USP_FORM1_VILLAGE_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM1_VILLAGE_REPORT_Result>("USP_FORM1_VILLAGE_REPORT", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM2_REPORT_Result> USP_FORM2_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> constCode, string constType)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var constCodeParameter = constCode.HasValue ?
                new ObjectParameter("ConstCode", constCode) :
                new ObjectParameter("ConstCode", typeof(int));
    
            var constTypeParameter = constType != null ?
                new ObjectParameter("ConstType", constType) :
                new ObjectParameter("ConstType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM2_REPORT_Result>("USP_FORM2_REPORT", levelParameter, stateParameter, districtParameter, constCodeParameter, constTypeParameter);
        }
    
        public virtual ObjectResult<USP_FORM3_REPORT_Result> USP_FORM3_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM3_REPORT_Result>("USP_FORM3_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM4_PROP_REPORT_Result> USP_FORM4_PROP_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string type, Nullable<int> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM4_PROP_REPORT_Result>("USP_FORM4_PROP_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM4_REPORT_Result> USP_FORM4_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string type, Nullable<int> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM4_REPORT_Result>("USP_FORM4_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM5_REPORT_Result> USP_FORM5_REPORT(Nullable<int> level, Nullable<int> year, Nullable<int> state, Nullable<int> constCode, string constType)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var constCodeParameter = constCode.HasValue ?
                new ObjectParameter("ConstCode", constCode) :
                new ObjectParameter("ConstCode", typeof(int));
    
            var constTypeParameter = constType != null ?
                new ObjectParameter("ConstType", constType) :
                new ObjectParameter("ConstType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM5_REPORT_Result>("USP_FORM5_REPORT", levelParameter, yearParameter, stateParameter, constCodeParameter, constTypeParameter);
        }
    
        public virtual ObjectResult<USP_FORM7_PROP_REPORT_Result> USP_FORM7_PROP_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM7_PROP_REPORT_Result>("USP_FORM7_PROP_REPORT", stateParameter, districtParameter, blockParameter, typeParameter, batchParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM7_REPORT_Result> USP_FORM7_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM7_REPORT_Result>("USP_FORM7_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, batchParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM8_PROP_REPORT_Result> USP_FORM8_PROP_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM8_PROP_REPORT_Result>("USP_FORM8_PROP_REPORT", stateParameter, districtParameter, blockParameter, typeParameter, batchParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORM8_REPORT_Result> USP_FORM8_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, string type, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORM8_REPORT_Result>("USP_FORM8_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, typeParameter, batchParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_FORTH_NIGHTELY_REPORT_Result> USP_FORTH_NIGHTELY_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> fromMonth, Nullable<int> fromYear, Nullable<int> toMonth, Nullable<int> toYear, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var fromMonthParameter = fromMonth.HasValue ?
                new ObjectParameter("FromMonth", fromMonth) :
                new ObjectParameter("FromMonth", typeof(int));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(int));
    
            var toMonthParameter = toMonth.HasValue ?
                new ObjectParameter("ToMonth", toMonth) :
                new ObjectParameter("ToMonth", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FORTH_NIGHTELY_REPORT_Result>("USP_FORTH_NIGHTELY_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, fromMonthParameter, fromYearParameter, toMonthParameter, toYearParameter, collaborationParameter, pMGSYParameter, aGENCYParameter);
        }
    
        public virtual ObjectResult<USP_FPCL_EMPLOYMENT_INFORMATION_Result> USP_FPCL_EMPLOYMENT_INFORMATION(Nullable<int> stateCode, Nullable<int> adminCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var adminCodeParameter = adminCode.HasValue ?
                new ObjectParameter("adminCode", adminCode) :
                new ObjectParameter("adminCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FPCL_EMPLOYMENT_INFORMATION_Result>("USP_FPCL_EMPLOYMENT_INFORMATION", stateCodeParameter, adminCodeParameter);
        }
    
        public virtual ObjectResult<USP_FPP_MPR13_Result> USP_FPP_MPR13(Nullable<int> level, Nullable<int> state)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FPP_MPR13_Result>("USP_FPP_MPR13", levelParameter, stateParameter);
        }
    
        public virtual ObjectResult<USP_FREEZ_AGREEMENT_Result> USP_FREEZ_AGREEMENT(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FREEZ_AGREEMENT_Result>("USP_FREEZ_AGREEMENT", stateParameter, districtParameter);
        }
    
        public virtual ObjectResult<USP_FREEZE_UNFREEZE_PROPOSALS_Result> USP_FREEZE_UNFREEZE_PROPOSALS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FREEZE_UNFREEZE_PROPOSALS_Result>("USP_FREEZE_UNFREEZE_PROPOSALS", stateParameter, districtParameter, blockParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_FRESH_PUSH_CORRECTED_EMARG_DETAILS_Result> USP_FRESH_PUSH_CORRECTED_EMARG_DETAILS(string packageID)
        {
            var packageIDParameter = packageID != null ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FRESH_PUSH_CORRECTED_EMARG_DETAILS_Result>("USP_FRESH_PUSH_CORRECTED_EMARG_DETAILS", packageIDParameter);
        }
    
        public virtual ObjectResult<USP_FUND_ALLOCATION_REPORT_Result> USP_FUND_ALLOCATION_REPORT(Nullable<int> state, Nullable<int> year, Nullable<int> collaboration, Nullable<int> agency, string fund)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var fundParameter = fund != null ?
                new ObjectParameter("Fund", fund) :
                new ObjectParameter("Fund", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FUND_ALLOCATION_REPORT_Result>("USP_FUND_ALLOCATION_REPORT", stateParameter, yearParameter, collaborationParameter, agencyParameter, fundParameter);
        }
    
        public virtual ObjectResult<USP_FUND_RELEASE_REPORT_Result> USP_FUND_RELEASE_REPORT(Nullable<int> state, Nullable<int> year, Nullable<int> collaboration, Nullable<int> agency, string fund, string type)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var fundParameter = fund != null ?
                new ObjectParameter("Fund", fund) :
                new ObjectParameter("Fund", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FUND_RELEASE_REPORT_Result>("USP_FUND_RELEASE_REPORT", stateParameter, yearParameter, collaborationParameter, agencyParameter, fundParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_GET_AGREEMENTS_Result> USP_GET_AGREEMENTS(Nullable<int> district, Nullable<int> block, Nullable<int> year, string package, Nullable<int> dPIUCode, string agreementStatus, string isFinalized, string proposalType, string agreementType, Nullable<byte> pMGSY)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("DPIUCode", dPIUCode) :
                new ObjectParameter("DPIUCode", typeof(int));
    
            var agreementStatusParameter = agreementStatus != null ?
                new ObjectParameter("AgreementStatus", agreementStatus) :
                new ObjectParameter("AgreementStatus", typeof(string));
    
            var isFinalizedParameter = isFinalized != null ?
                new ObjectParameter("IsFinalized", isFinalized) :
                new ObjectParameter("IsFinalized", typeof(string));
    
            var proposalTypeParameter = proposalType != null ?
                new ObjectParameter("ProposalType", proposalType) :
                new ObjectParameter("ProposalType", typeof(string));
    
            var agreementTypeParameter = agreementType != null ?
                new ObjectParameter("AgreementType", agreementType) :
                new ObjectParameter("AgreementType", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_AGREEMENTS_Result>("USP_GET_AGREEMENTS", districtParameter, blockParameter, yearParameter, packageParameter, dPIUCodeParameter, agreementStatusParameter, isFinalizedParameter, proposalTypeParameter, agreementTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_GET_AGREEMENTS_BG_Result> USP_GET_AGREEMENTS_BG(Nullable<int> sTATE, Nullable<int> district, Nullable<int> block, Nullable<int> year, string package, Nullable<int> dPIUCode, string agreementStatus, string isFinalized, string proposalType, string agreementType, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("DPIUCode", dPIUCode) :
                new ObjectParameter("DPIUCode", typeof(int));
    
            var agreementStatusParameter = agreementStatus != null ?
                new ObjectParameter("AgreementStatus", agreementStatus) :
                new ObjectParameter("AgreementStatus", typeof(string));
    
            var isFinalizedParameter = isFinalized != null ?
                new ObjectParameter("IsFinalized", isFinalized) :
                new ObjectParameter("IsFinalized", typeof(string));
    
            var proposalTypeParameter = proposalType != null ?
                new ObjectParameter("ProposalType", proposalType) :
                new ObjectParameter("ProposalType", typeof(string));
    
            var agreementTypeParameter = agreementType != null ?
                new ObjectParameter("AgreementType", agreementType) :
                new ObjectParameter("AgreementType", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_AGREEMENTS_BG_Result>("USP_GET_AGREEMENTS_BG", sTATEParameter, districtParameter, blockParameter, yearParameter, packageParameter, dPIUCodeParameter, agreementStatusParameter, isFinalizedParameter, proposalTypeParameter, agreementTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_GET_AGREEMENTS_FOR_UPDATION_Result> USP_GET_AGREEMENTS_FOR_UPDATION(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, string package, Nullable<int> dPIUCode, string agreementStatus, string isFinalized, string proposalType, string agreementType, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("DPIUCode", dPIUCode) :
                new ObjectParameter("DPIUCode", typeof(int));
    
            var agreementStatusParameter = agreementStatus != null ?
                new ObjectParameter("AgreementStatus", agreementStatus) :
                new ObjectParameter("AgreementStatus", typeof(string));
    
            var isFinalizedParameter = isFinalized != null ?
                new ObjectParameter("IsFinalized", isFinalized) :
                new ObjectParameter("IsFinalized", typeof(string));
    
            var proposalTypeParameter = proposalType != null ?
                new ObjectParameter("ProposalType", proposalType) :
                new ObjectParameter("ProposalType", typeof(string));
    
            var agreementTypeParameter = agreementType != null ?
                new ObjectParameter("AgreementType", agreementType) :
                new ObjectParameter("AgreementType", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_AGREEMENTS_FOR_UPDATION_Result>("USP_GET_AGREEMENTS_FOR_UPDATION", stateParameter, districtParameter, blockParameter, yearParameter, packageParameter, dPIUCodeParameter, agreementStatusParameter, isFinalizedParameter, proposalTypeParameter, agreementTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_GET_CONTRACTOR_FOR_UPDATION_Result> USP_GET_CONTRACTOR_FOR_UPDATION(Nullable<int> statecode, Nullable<int> agency)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CONTRACTOR_FOR_UPDATION_Result>("USP_GET_CONTRACTOR_FOR_UPDATION", statecodeParameter, agencyParameter);
        }
    
        public virtual ObjectResult<USP_GET_CUPL_PMGSY3_DETAILS_FOR_DELETION_Result> USP_GET_CUPL_PMGSY3_DETAILS_FOR_DELETION(Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CUPL_PMGSY3_DETAILS_FOR_DELETION_Result>("USP_GET_CUPL_PMGSY3_DETAILS_FOR_DELETION", districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_GET_CUPL_PMGSY3_EXEMPTION_LIST_Result> USP_GET_CUPL_PMGSY3_EXEMPTION_LIST(Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CUPL_PMGSY3_EXEMPTION_LIST_Result>("USP_GET_CUPL_PMGSY3_EXEMPTION_LIST", districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_GET_CUPL_PMGSY3_EXEMPTION_LIST_FOR_DELETION_Result> USP_GET_CUPL_PMGSY3_EXEMPTION_LIST_FOR_DELETION(Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CUPL_PMGSY3_EXEMPTION_LIST_FOR_DELETION_Result>("USP_GET_CUPL_PMGSY3_EXEMPTION_LIST_FOR_DELETION", districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_GET_CUPL_PMGSY3_LIST_Result> USP_GET_CUPL_PMGSY3_LIST(Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CUPL_PMGSY3_LIST_Result>("USP_GET_CUPL_PMGSY3_LIST", districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual int USP_GET_CUPL_PMGSY3_LIST_INCLUSION(Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GET_CUPL_PMGSY3_LIST_INCLUSION", districtParameter, blockParameter, yearParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_GET_EMARG_PACKAGES_FOR_REPACKAGING_Result> USP_GET_EMARG_PACKAGES_FOR_REPACKAGING(Nullable<int> stateCode, Nullable<int> districtCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_EMARG_PACKAGES_FOR_REPACKAGING_Result>("USP_GET_EMARG_PACKAGES_FOR_REPACKAGING", stateCodeParameter, districtCodeParameter);
        }
    
        public virtual int USP_GET_EMARG_ROAD_DETAILS_FOR_CORRECTION(Nullable<int> districtCode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GET_EMARG_ROAD_DETAILS_FOR_CORRECTION", districtCodeParameter);
        }
    
        public virtual ObjectResult<USP_GET_ERROR_DETAILS_ELMAH_Result> USP_GET_ERROR_DETAILS_ELMAH(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ERROR_DETAILS_ELMAH_Result>("USP_GET_ERROR_DETAILS_ELMAH", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING_Result> USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING(Nullable<int> district, Nullable<int> block, Nullable<int> dPIUCode, Nullable<int> year, string package, Nullable<int> batch, Nullable<int> collaboration, string upgradationType, string proposalType, Nullable<int> pMGSY)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(int));
    
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("dPIUCode", dPIUCode) :
                new ObjectParameter("dPIUCode", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("package", package) :
                new ObjectParameter("package", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var upgradationTypeParameter = upgradationType != null ?
                new ObjectParameter("upgradationType", upgradationType) :
                new ObjectParameter("upgradationType", typeof(string));
    
            var proposalTypeParameter = proposalType != null ?
                new ObjectParameter("proposalType", proposalType) :
                new ObjectParameter("proposalType", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("pMGSY", pMGSY) :
                new ObjectParameter("pMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING_Result>("USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING", districtParameter, blockParameter, dPIUCodeParameter, yearParameter, packageParameter, batchParameter, collaborationParameter, upgradationTypeParameter, proposalTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING_V1_Result> USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING_V1(Nullable<int> district, Nullable<int> block, Nullable<int> batch, Nullable<int> year, string package, Nullable<int> collaboration, string proposalType, string upgradationType, Nullable<int> dPIUCode, Nullable<byte> pMGSY)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var proposalTypeParameter = proposalType != null ?
                new ObjectParameter("ProposalType", proposalType) :
                new ObjectParameter("ProposalType", typeof(string));
    
            var upgradationTypeParameter = upgradationType != null ?
                new ObjectParameter("UpgradationType", upgradationType) :
                new ObjectParameter("UpgradationType", typeof(string));
    
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("DPIUCode", dPIUCode) :
                new ObjectParameter("DPIUCode", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING_V1_Result>("USP_GET_MAINTENANCE_PROPOSALS_REPACKAGING_V1", districtParameter, blockParameter, batchParameter, yearParameter, packageParameter, collaborationParameter, proposalTypeParameter, upgradationTypeParameter, dPIUCodeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_GET_PROPOSAL_LIST_DROPPING_Result> USP_GET_PROPOSAL_LIST_DROPPING(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> pIU, Nullable<int> tACode, string tAName, string tAType, string pIUStatus, string pTAStatus, string sTAStaus, string mRDStatus, string type, string connect, Nullable<byte> pMGSY, Nullable<short> roleID)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pIUParameter = pIU.HasValue ?
                new ObjectParameter("PIU", pIU) :
                new ObjectParameter("PIU", typeof(int));
    
            var tACodeParameter = tACode.HasValue ?
                new ObjectParameter("TACode", tACode) :
                new ObjectParameter("TACode", typeof(int));
    
            var tANameParameter = tAName != null ?
                new ObjectParameter("TAName", tAName) :
                new ObjectParameter("TAName", typeof(string));
    
            var tATypeParameter = tAType != null ?
                new ObjectParameter("TAType", tAType) :
                new ObjectParameter("TAType", typeof(string));
    
            var pIUStatusParameter = pIUStatus != null ?
                new ObjectParameter("PIUStatus", pIUStatus) :
                new ObjectParameter("PIUStatus", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var sTAStausParameter = sTAStaus != null ?
                new ObjectParameter("STAStaus", sTAStaus) :
                new ObjectParameter("STAStaus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectParameter = connect != null ?
                new ObjectParameter("Connect", connect) :
                new ObjectParameter("Connect", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PROPOSAL_LIST_DROPPING_Result>("USP_GET_PROPOSAL_LIST_DROPPING", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, pIUParameter, tACodeParameter, tANameParameter, tATypeParameter, pIUStatusParameter, pTAStatusParameter, sTAStausParameter, mRDStatusParameter, typeParameter, connectParameter, pMGSYParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_PROPOSAL_LIST_LWE_Result> USP_GET_PROPOSAL_LIST_LWE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> pIU, Nullable<int> tACode, string tAName, string tAType, string pIUStatus, string pTAStatus, string sTAStaus, string mRDStatus, string type, string connect, Nullable<byte> pMGSY, Nullable<short> roleID)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pIUParameter = pIU.HasValue ?
                new ObjectParameter("PIU", pIU) :
                new ObjectParameter("PIU", typeof(int));
    
            var tACodeParameter = tACode.HasValue ?
                new ObjectParameter("TACode", tACode) :
                new ObjectParameter("TACode", typeof(int));
    
            var tANameParameter = tAName != null ?
                new ObjectParameter("TAName", tAName) :
                new ObjectParameter("TAName", typeof(string));
    
            var tATypeParameter = tAType != null ?
                new ObjectParameter("TAType", tAType) :
                new ObjectParameter("TAType", typeof(string));
    
            var pIUStatusParameter = pIUStatus != null ?
                new ObjectParameter("PIUStatus", pIUStatus) :
                new ObjectParameter("PIUStatus", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var sTAStausParameter = sTAStaus != null ?
                new ObjectParameter("STAStaus", sTAStaus) :
                new ObjectParameter("STAStaus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectParameter = connect != null ?
                new ObjectParameter("Connect", connect) :
                new ObjectParameter("Connect", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PROPOSAL_LIST_LWE_Result>("USP_GET_PROPOSAL_LIST_LWE", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, pIUParameter, tACodeParameter, tANameParameter, tATypeParameter, pIUStatusParameter, pTAStatusParameter, sTAStausParameter, mRDStatusParameter, typeParameter, connectParameter, pMGSYParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_PROPOSALS_REPACKAGING_Result> USP_GET_PROPOSALS_REPACKAGING(Nullable<int> district, Nullable<int> block, Nullable<int> batch, Nullable<int> year, string package, Nullable<int> collaboration, string proposalType, string upgradationType, Nullable<int> dPIUCode, Nullable<byte> pMGSY)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var proposalTypeParameter = proposalType != null ?
                new ObjectParameter("ProposalType", proposalType) :
                new ObjectParameter("ProposalType", typeof(string));
    
            var upgradationTypeParameter = upgradationType != null ?
                new ObjectParameter("UpgradationType", upgradationType) :
                new ObjectParameter("UpgradationType", typeof(string));
    
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("DPIUCode", dPIUCode) :
                new ObjectParameter("DPIUCode", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PROPOSALS_REPACKAGING_Result>("USP_GET_PROPOSALS_REPACKAGING", districtParameter, blockParameter, batchParameter, yearParameter, packageParameter, collaborationParameter, proposalTypeParameter, upgradationTypeParameter, dPIUCodeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_KEY_AREA_LIST_PER_PERSON_Result> USP_GET_RCTRC_KEY_AREA_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_KEY_AREA_LIST_PER_PERSON_Result>("USP_GET_RCTRC_KEY_AREA_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_MASTER_APPLICATIONS_Result> USP_GET_RCTRC_MASTER_APPLICATIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_MASTER_APPLICATIONS_Result>("USP_GET_RCTRC_MASTER_APPLICATIONS");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_PERFORMACE_LIST_PER_PERSON_Result> USP_GET_RCTRC_PERFORMACE_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_PERFORMACE_LIST_PER_PERSON_Result>("USP_GET_RCTRC_PERFORMACE_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_PROFICIENCY_APPLICATIONS_LIST_PER_PERSON_Result> USP_GET_RCTRC_PROFICIENCY_APPLICATIONS_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_PROFICIENCY_APPLICATIONS_LIST_PER_PERSON_Result>("USP_GET_RCTRC_PROFICIENCY_APPLICATIONS_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_REQUIRED_TRAINING_LIST_PER_PERSON_Result> USP_GET_RCTRC_REQUIRED_TRAINING_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_REQUIRED_TRAINING_LIST_PER_PERSON_Result>("USP_GET_RCTRC_REQUIRED_TRAINING_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_SUGGESTION_LIST_PER_PERSON_Result> USP_GET_RCTRC_SUGGESTION_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_SUGGESTION_LIST_PER_PERSON_Result>("USP_GET_RCTRC_SUGGESTION_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_TRAINING_LIST_PER_PERSON_Result> USP_GET_RCTRC_TRAINING_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_TRAINING_LIST_PER_PERSON_Result>("USP_GET_RCTRC_TRAINING_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_RCTRC_WORK_AREA_LIST_PER_PERSON_Result> USP_GET_RCTRC_WORK_AREA_LIST_PER_PERSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RCTRC_WORK_AREA_LIST_PER_PERSON_Result>("USP_GET_RCTRC_WORK_AREA_LIST_PER_PERSON");
        }
    
        public virtual ObjectResult<USP_GET_ROAD_LIST_FOR_CAPTURE_LCOATION_Result> USP_GET_ROAD_LIST_FOR_CAPTURE_LCOATION(Nullable<int> dPIUCode, Nullable<int> bLOCK)
        {
            var dPIUCodeParameter = dPIUCode.HasValue ?
                new ObjectParameter("DPIUCode", dPIUCode) :
                new ObjectParameter("DPIUCode", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ROAD_LIST_FOR_CAPTURE_LCOATION_Result>("USP_GET_ROAD_LIST_FOR_CAPTURE_LCOATION", dPIUCodeParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_GET_RSA_ATR_LIST_Result> USP_GET_RSA_ATR_LIST(Nullable<int> rSACode)
        {
            var rSACodeParameter = rSACode.HasValue ?
                new ObjectParameter("RSACode", rSACode) :
                new ObjectParameter("RSACode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_RSA_ATR_LIST_Result>("USP_GET_RSA_ATR_LIST", rSACodeParameter);
        }
    
        public virtual ObjectResult<USP_GET_SYSTEMCODES_Result> USP_GET_SYSTEMCODES(Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_SYSTEMCODES_Result>("USP_GET_SYSTEMCODES", sTATEParameter, dISTRICTParameter);
        }
    
        public virtual ObjectResult<USP_GET_TR_MRL_PMGSY3_PROPOSAL_Result> USP_GET_TR_MRL_PMGSY3_PROPOSAL(Nullable<int> district, Nullable<int> block, Nullable<int> batch)
        {
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TR_MRL_PMGSY3_PROPOSAL_Result>("USP_GET_TR_MRL_PMGSY3_PROPOSAL", districtParameter, blockParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_GET_VILLAGE_DETAILS_LIST_Result> USP_GET_VILLAGE_DETAILS_LIST(Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> blockCode, Nullable<int> schemeYear, Nullable<short> roleID)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var schemeYearParameter = schemeYear.HasValue ?
                new ObjectParameter("schemeYear", schemeYear) :
                new ObjectParameter("schemeYear", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_VILLAGE_DETAILS_LIST_Result>("USP_GET_VILLAGE_DETAILS_LIST", stateCodeParameter, districtCodeParameter, blockCodeParameter, schemeYearParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<USP_HAB_CLUSTER_COVERAGE_Result> USP_HAB_CLUSTER_COVERAGE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_CLUSTER_COVERAGE_Result>("USP_HAB_CLUSTER_COVERAGE", levelParameter, stateParameter, districtParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HAB_CLUSTER_DETAIL_Result> USP_HAB_CLUSTER_DETAIL(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_CLUSTER_DETAIL_Result>("USP_HAB_CLUSTER_DETAIL", levelParameter, stateParameter, districtParameter, pMGSYParameter);
        }
    
        public virtual int USP_HAB_CLUSTER_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, string rpt, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_HAB_CLUSTER_REPORT", stateParameter, districtParameter, blockParameter, rptParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HAB_COVERAGE_NEW_REPORT_Result> USP_HAB_COVERAGE_NEW_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY, Nullable<int> month, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_COVERAGE_NEW_REPORT_Result>("USP_HAB_COVERAGE_NEW_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_HAB_COVERAGE_NEW_REPORT_MORD_Result> USP_HAB_COVERAGE_NEW_REPORT_MORD(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_COVERAGE_NEW_REPORT_MORD_Result>("USP_HAB_COVERAGE_NEW_REPORT_MORD", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_HAB_COVERAGE_REPORT_Result> USP_HAB_COVERAGE_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_COVERAGE_REPORT_Result>("USP_HAB_COVERAGE_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HAB_FACILITY_LIST_Result> USP_HAB_FACILITY_LIST(Nullable<int> bLOCK)
        {
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_FACILITY_LIST_Result>("USP_HAB_FACILITY_LIST", bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_HAB_MPMLA_COVERAGE_REPORT_Result> USP_HAB_MPMLA_COVERAGE_REPORT(Nullable<int> state, Nullable<int> @const, string constType, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var constParameter = @const.HasValue ?
                new ObjectParameter("Const", @const) :
                new ObjectParameter("Const", typeof(int));
    
            var constTypeParameter = constType != null ?
                new ObjectParameter("ConstType", constType) :
                new ObjectParameter("ConstType", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_MPMLA_COVERAGE_REPORT_Result>("USP_HAB_MPMLA_COVERAGE_REPORT", stateParameter, constParameter, constTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HAB_PROP_COVERAGE_REPORT_Result> USP_HAB_PROP_COVERAGE_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> pop, Nullable<int> sCST, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var sCSTParameter = sCST.HasValue ?
                new ObjectParameter("SCST", sCST) :
                new ObjectParameter("SCST", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_PROP_COVERAGE_REPORT_Result>("USP_HAB_PROP_COVERAGE_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, popParameter, sCSTParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HAB_SCHEDULE_V_REPORT_Result> USP_HAB_SCHEDULE_V_REPORT(Nullable<int> level, Nullable<int> stateCode, string section, Nullable<int> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var sectionParameter = section != null ?
                new ObjectParameter("Section", section) :
                new ObjectParameter("Section", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_SCHEDULE_V_REPORT_Result>("USP_HAB_SCHEDULE_V_REPORT", levelParameter, stateCodeParameter, sectionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HAB_SCORE_REPORT_Result> USP_HAB_SCORE_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HAB_SCORE_REPORT_Result>("USP_HAB_SCORE_REPORT", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HABITATION_FACILITY_Result> USP_HABITATION_FACILITY(Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HABITATION_FACILITY_Result>("USP_HABITATION_FACILITY", dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_HIGHMAP_CBR_DETAILS_Result> USP_HIGHMAP_CBR_DETAILS(Nullable<int> level, Nullable<int> state, Nullable<int> district)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HIGHMAP_CBR_DETAILS_Result>("USP_HIGHMAP_CBR_DETAILS", levelParameter, stateParameter, districtParameter);
        }
    
        public virtual ObjectResult<USP_HIGHMAP_CBR_PIE_Result> USP_HIGHMAP_CBR_PIE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HIGHMAP_CBR_PIE_Result>("USP_HIGHMAP_CBR_PIE", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HILLY_EXP_REPORT_Result> USP_HILLY_EXP_REPORT(Nullable<int> sTATE, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HILLY_EXP_REPORT_Result>("USP_HILLY_EXP_REPORT", sTATEParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HILLY_FIN_REPORT_Result> USP_HILLY_FIN_REPORT(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HILLY_FIN_REPORT_Result>("USP_HILLY_FIN_REPORT", sTATEParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HILLY_HAB_REPORT_Result> USP_HILLY_HAB_REPORT(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HILLY_HAB_REPORT_Result>("USP_HILLY_HAB_REPORT", sTATEParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_HILLY_PHY_REPORT_Result> USP_HILLY_PHY_REPORT(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_HILLY_PHY_REPORT_Result>("USP_HILLY_PHY_REPORT", sTATEParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_IAP_EXP_REPORT_Result> USP_IAP_EXP_REPORT(Nullable<int> sTATE, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_IAP_EXP_REPORT_Result>("USP_IAP_EXP_REPORT", sTATEParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_IAP_FIN_REPORT_Result> USP_IAP_FIN_REPORT(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_IAP_FIN_REPORT_Result>("USP_IAP_FIN_REPORT", sTATEParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_IAP_HAB_REPORT_Result> USP_IAP_HAB_REPORT(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_IAP_HAB_REPORT_Result>("USP_IAP_HAB_REPORT", sTATEParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_IAP_PHY_REPORT_Result> USP_IAP_PHY_REPORT(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_IAP_PHY_REPORT_Result>("USP_IAP_PHY_REPORT", sTATEParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual int USP_INSERT_CN_PMGSY3(Nullable<int> pMGSY, Nullable<int> mAST_ER_ROAD_CODE, string pLAN_CN_ROAD_NUMBER, Nullable<int> mAST_STATE_CODE, Nullable<int> mAST_DISTRICT_CODE, Nullable<int> mAST_BLOCK_CODE, string pLAN_RD_NAME, string pLAN_RD_ROUTE, Nullable<decimal> pLAN_RD_FROM_CHAINAGE, Nullable<decimal> pLAN_RD_TO_CHAINAGE, string pLAN_RD_LENG, Nullable<decimal> pLAN_RD_LENGTH, Nullable<decimal> pLAN_RD_TOTAL_LEN, string pLAN_RD_FROM_TYPE, string pLAN_RD_TO_TYPE, Nullable<int> pLAN_RD_FROM_HAB, Nullable<int> pLAN_RD_TO_HAB, Nullable<int> pLAN_RD_BLOCK_FROM_CODE, Nullable<int> pLAN_RD_BLOCK_TO_CODE, Nullable<int> pLAN_RD_NUM_FROM, Nullable<int> pLAN_RD_NUM_TO, string pLAN_RD_FROM, string pLAN_RD_TO, string pLAN_LOCK_STATUS, Nullable<int> uSERID, string iPADD, ObjectParameter outputParameter)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var mAST_ER_ROAD_CODEParameter = mAST_ER_ROAD_CODE.HasValue ?
                new ObjectParameter("MAST_ER_ROAD_CODE", mAST_ER_ROAD_CODE) :
                new ObjectParameter("MAST_ER_ROAD_CODE", typeof(int));
    
            var pLAN_CN_ROAD_NUMBERParameter = pLAN_CN_ROAD_NUMBER != null ?
                new ObjectParameter("PLAN_CN_ROAD_NUMBER", pLAN_CN_ROAD_NUMBER) :
                new ObjectParameter("PLAN_CN_ROAD_NUMBER", typeof(string));
    
            var mAST_STATE_CODEParameter = mAST_STATE_CODE.HasValue ?
                new ObjectParameter("MAST_STATE_CODE", mAST_STATE_CODE) :
                new ObjectParameter("MAST_STATE_CODE", typeof(int));
    
            var mAST_DISTRICT_CODEParameter = mAST_DISTRICT_CODE.HasValue ?
                new ObjectParameter("MAST_DISTRICT_CODE", mAST_DISTRICT_CODE) :
                new ObjectParameter("MAST_DISTRICT_CODE", typeof(int));
    
            var mAST_BLOCK_CODEParameter = mAST_BLOCK_CODE.HasValue ?
                new ObjectParameter("MAST_BLOCK_CODE", mAST_BLOCK_CODE) :
                new ObjectParameter("MAST_BLOCK_CODE", typeof(int));
    
            var pLAN_RD_NAMEParameter = pLAN_RD_NAME != null ?
                new ObjectParameter("PLAN_RD_NAME", pLAN_RD_NAME) :
                new ObjectParameter("PLAN_RD_NAME", typeof(string));
    
            var pLAN_RD_ROUTEParameter = pLAN_RD_ROUTE != null ?
                new ObjectParameter("PLAN_RD_ROUTE", pLAN_RD_ROUTE) :
                new ObjectParameter("PLAN_RD_ROUTE", typeof(string));
    
            var pLAN_RD_FROM_CHAINAGEParameter = pLAN_RD_FROM_CHAINAGE.HasValue ?
                new ObjectParameter("PLAN_RD_FROM_CHAINAGE", pLAN_RD_FROM_CHAINAGE) :
                new ObjectParameter("PLAN_RD_FROM_CHAINAGE", typeof(decimal));
    
            var pLAN_RD_TO_CHAINAGEParameter = pLAN_RD_TO_CHAINAGE.HasValue ?
                new ObjectParameter("PLAN_RD_TO_CHAINAGE", pLAN_RD_TO_CHAINAGE) :
                new ObjectParameter("PLAN_RD_TO_CHAINAGE", typeof(decimal));
    
            var pLAN_RD_LENGParameter = pLAN_RD_LENG != null ?
                new ObjectParameter("PLAN_RD_LENG", pLAN_RD_LENG) :
                new ObjectParameter("PLAN_RD_LENG", typeof(string));
    
            var pLAN_RD_LENGTHParameter = pLAN_RD_LENGTH.HasValue ?
                new ObjectParameter("PLAN_RD_LENGTH", pLAN_RD_LENGTH) :
                new ObjectParameter("PLAN_RD_LENGTH", typeof(decimal));
    
            var pLAN_RD_TOTAL_LENParameter = pLAN_RD_TOTAL_LEN.HasValue ?
                new ObjectParameter("PLAN_RD_TOTAL_LEN", pLAN_RD_TOTAL_LEN) :
                new ObjectParameter("PLAN_RD_TOTAL_LEN", typeof(decimal));
    
            var pLAN_RD_FROM_TYPEParameter = pLAN_RD_FROM_TYPE != null ?
                new ObjectParameter("PLAN_RD_FROM_TYPE", pLAN_RD_FROM_TYPE) :
                new ObjectParameter("PLAN_RD_FROM_TYPE", typeof(string));
    
            var pLAN_RD_TO_TYPEParameter = pLAN_RD_TO_TYPE != null ?
                new ObjectParameter("PLAN_RD_TO_TYPE", pLAN_RD_TO_TYPE) :
                new ObjectParameter("PLAN_RD_TO_TYPE", typeof(string));
    
            var pLAN_RD_FROM_HABParameter = pLAN_RD_FROM_HAB.HasValue ?
                new ObjectParameter("PLAN_RD_FROM_HAB", pLAN_RD_FROM_HAB) :
                new ObjectParameter("PLAN_RD_FROM_HAB", typeof(int));
    
            var pLAN_RD_TO_HABParameter = pLAN_RD_TO_HAB.HasValue ?
                new ObjectParameter("PLAN_RD_TO_HAB", pLAN_RD_TO_HAB) :
                new ObjectParameter("PLAN_RD_TO_HAB", typeof(int));
    
            var pLAN_RD_BLOCK_FROM_CODEParameter = pLAN_RD_BLOCK_FROM_CODE.HasValue ?
                new ObjectParameter("PLAN_RD_BLOCK_FROM_CODE", pLAN_RD_BLOCK_FROM_CODE) :
                new ObjectParameter("PLAN_RD_BLOCK_FROM_CODE", typeof(int));
    
            var pLAN_RD_BLOCK_TO_CODEParameter = pLAN_RD_BLOCK_TO_CODE.HasValue ?
                new ObjectParameter("PLAN_RD_BLOCK_TO_CODE", pLAN_RD_BLOCK_TO_CODE) :
                new ObjectParameter("PLAN_RD_BLOCK_TO_CODE", typeof(int));
    
            var pLAN_RD_NUM_FROMParameter = pLAN_RD_NUM_FROM.HasValue ?
                new ObjectParameter("PLAN_RD_NUM_FROM", pLAN_RD_NUM_FROM) :
                new ObjectParameter("PLAN_RD_NUM_FROM", typeof(int));
    
            var pLAN_RD_NUM_TOParameter = pLAN_RD_NUM_TO.HasValue ?
                new ObjectParameter("PLAN_RD_NUM_TO", pLAN_RD_NUM_TO) :
                new ObjectParameter("PLAN_RD_NUM_TO", typeof(int));
    
            var pLAN_RD_FROMParameter = pLAN_RD_FROM != null ?
                new ObjectParameter("PLAN_RD_FROM", pLAN_RD_FROM) :
                new ObjectParameter("PLAN_RD_FROM", typeof(string));
    
            var pLAN_RD_TOParameter = pLAN_RD_TO != null ?
                new ObjectParameter("PLAN_RD_TO", pLAN_RD_TO) :
                new ObjectParameter("PLAN_RD_TO", typeof(string));
    
            var pLAN_LOCK_STATUSParameter = pLAN_LOCK_STATUS != null ?
                new ObjectParameter("PLAN_LOCK_STATUS", pLAN_LOCK_STATUS) :
                new ObjectParameter("PLAN_LOCK_STATUS", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_CN_PMGSY3", pMGSYParameter, mAST_ER_ROAD_CODEParameter, pLAN_CN_ROAD_NUMBERParameter, mAST_STATE_CODEParameter, mAST_DISTRICT_CODEParameter, mAST_BLOCK_CODEParameter, pLAN_RD_NAMEParameter, pLAN_RD_ROUTEParameter, pLAN_RD_FROM_CHAINAGEParameter, pLAN_RD_TO_CHAINAGEParameter, pLAN_RD_LENGParameter, pLAN_RD_LENGTHParameter, pLAN_RD_TOTAL_LENParameter, pLAN_RD_FROM_TYPEParameter, pLAN_RD_TO_TYPEParameter, pLAN_RD_FROM_HABParameter, pLAN_RD_TO_HABParameter, pLAN_RD_BLOCK_FROM_CODEParameter, pLAN_RD_BLOCK_TO_CODEParameter, pLAN_RD_NUM_FROMParameter, pLAN_RD_NUM_TOParameter, pLAN_RD_FROMParameter, pLAN_RD_TOParameter, pLAN_LOCK_STATUSParameter, uSERIDParameter, iPADDParameter, outputParameter);
        }
    
        public virtual int USP_INSERT_INTO_EMARG_ROAD_DETAILS_ON_REPACKAGING(string packageID)
        {
            var packageIDParameter = packageID != null ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_INTO_EMARG_ROAD_DETAILS_ON_REPACKAGING", packageIDParameter);
        }
    
        public virtual int USP_INSERT_MRD_BULK_SANCTION_DETAILS(string imsSanctioned, string imsSanctionedBy, string remarks, Nullable<System.DateTime> sanctionDate, string isCompleted, Nullable<int> userId, string ipAdd)
        {
            var imsSanctionedParameter = imsSanctioned != null ?
                new ObjectParameter("ImsSanctioned", imsSanctioned) :
                new ObjectParameter("ImsSanctioned", typeof(string));
    
            var imsSanctionedByParameter = imsSanctionedBy != null ?
                new ObjectParameter("ImsSanctionedBy", imsSanctionedBy) :
                new ObjectParameter("ImsSanctionedBy", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sanctionDateParameter = sanctionDate.HasValue ?
                new ObjectParameter("SanctionDate", sanctionDate) :
                new ObjectParameter("SanctionDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted != null ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var ipAddParameter = ipAdd != null ?
                new ObjectParameter("IpAdd", ipAdd) :
                new ObjectParameter("IpAdd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_MRD_BULK_SANCTION_DETAILS", imsSanctionedParameter, imsSanctionedByParameter, remarksParameter, sanctionDateParameter, isCompletedParameter, userIdParameter, ipAddParameter);
        }
    
        public virtual int USP_INSERT_PLAN_ROAD_MRL_PMGSY3(string pLAN_CN_ROAD_CODE, Nullable<int> mAST_ER_ROAD_CODE, string pLAN_RD_LENG, Nullable<decimal> pLAN_RD_FROM_CHAINAGE, Nullable<decimal> pLAN_RD_TO_CHAINAGE, Nullable<decimal> pLAN_RD_LENGTH, string pLAN_LOCK_STATUS, Nullable<int> uSERID, string iPADD, ObjectParameter outputParameter)
        {
            var pLAN_CN_ROAD_CODEParameter = pLAN_CN_ROAD_CODE != null ?
                new ObjectParameter("PLAN_CN_ROAD_CODE", pLAN_CN_ROAD_CODE) :
                new ObjectParameter("PLAN_CN_ROAD_CODE", typeof(string));
    
            var mAST_ER_ROAD_CODEParameter = mAST_ER_ROAD_CODE.HasValue ?
                new ObjectParameter("MAST_ER_ROAD_CODE", mAST_ER_ROAD_CODE) :
                new ObjectParameter("MAST_ER_ROAD_CODE", typeof(int));
    
            var pLAN_RD_LENGParameter = pLAN_RD_LENG != null ?
                new ObjectParameter("PLAN_RD_LENG", pLAN_RD_LENG) :
                new ObjectParameter("PLAN_RD_LENG", typeof(string));
    
            var pLAN_RD_FROM_CHAINAGEParameter = pLAN_RD_FROM_CHAINAGE.HasValue ?
                new ObjectParameter("PLAN_RD_FROM_CHAINAGE", pLAN_RD_FROM_CHAINAGE) :
                new ObjectParameter("PLAN_RD_FROM_CHAINAGE", typeof(decimal));
    
            var pLAN_RD_TO_CHAINAGEParameter = pLAN_RD_TO_CHAINAGE.HasValue ?
                new ObjectParameter("PLAN_RD_TO_CHAINAGE", pLAN_RD_TO_CHAINAGE) :
                new ObjectParameter("PLAN_RD_TO_CHAINAGE", typeof(decimal));
    
            var pLAN_RD_LENGTHParameter = pLAN_RD_LENGTH.HasValue ?
                new ObjectParameter("PLAN_RD_LENGTH", pLAN_RD_LENGTH) :
                new ObjectParameter("PLAN_RD_LENGTH", typeof(decimal));
    
            var pLAN_LOCK_STATUSParameter = pLAN_LOCK_STATUS != null ?
                new ObjectParameter("PLAN_LOCK_STATUS", pLAN_LOCK_STATUS) :
                new ObjectParameter("PLAN_LOCK_STATUS", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_PLAN_ROAD_MRL_PMGSY3", pLAN_CN_ROAD_CODEParameter, mAST_ER_ROAD_CODEParameter, pLAN_RD_LENGParameter, pLAN_RD_FROM_CHAINAGEParameter, pLAN_RD_TO_CHAINAGEParameter, pLAN_RD_LENGTHParameter, pLAN_LOCK_STATUSParameter, uSERIDParameter, iPADDParameter, outputParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_INSERT_TABLE_DARPAN__4KPI_AND_PRAYAS_6KPI(Nullable<int> month, Nullable<int> year, string kPI_Type)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var kPI_TypeParameter = kPI_Type != null ?
                new ObjectParameter("KPI_Type", kPI_Type) :
                new ObjectParameter("KPI_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_INSERT_TABLE_DARPAN__4KPI_AND_PRAYAS_6KPI", monthParameter, yearParameter, kPI_TypeParameter);
        }
    
        public virtual int USP_INSERT_TABLE_PRAYAS(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> month, Nullable<int> year)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_TABLE_PRAYAS", sTATEParameter, dISTRICTParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_LDG_GET_HABITATION_Result> USP_LDG_GET_HABITATION(Nullable<int> ldgstatecode, Nullable<int> ldgdistrictcode, Nullable<int> ldgblockcode)
        {
            var ldgstatecodeParameter = ldgstatecode.HasValue ?
                new ObjectParameter("ldgstatecode", ldgstatecode) :
                new ObjectParameter("ldgstatecode", typeof(int));
    
            var ldgdistrictcodeParameter = ldgdistrictcode.HasValue ?
                new ObjectParameter("ldgdistrictcode", ldgdistrictcode) :
                new ObjectParameter("ldgdistrictcode", typeof(int));
    
            var ldgblockcodeParameter = ldgblockcode.HasValue ?
                new ObjectParameter("ldgblockcode", ldgblockcode) :
                new ObjectParameter("ldgblockcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LDG_GET_HABITATION_Result>("USP_LDG_GET_HABITATION", ldgstatecodeParameter, ldgdistrictcodeParameter, ldgblockcodeParameter);
        }
    
        public virtual ObjectResult<USP_LDG_GET_HABITATION_STATEWISE_Result> USP_LDG_GET_HABITATION_STATEWISE(Nullable<int> ldgState, Nullable<int> ldgDistrict, Nullable<int> ldgBlock, Nullable<byte> pMGSY)
        {
            var ldgStateParameter = ldgState.HasValue ?
                new ObjectParameter("ldgState", ldgState) :
                new ObjectParameter("ldgState", typeof(int));
    
            var ldgDistrictParameter = ldgDistrict.HasValue ?
                new ObjectParameter("ldgDistrict", ldgDistrict) :
                new ObjectParameter("ldgDistrict", typeof(int));
    
            var ldgBlockParameter = ldgBlock.HasValue ?
                new ObjectParameter("ldgBlock", ldgBlock) :
                new ObjectParameter("ldgBlock", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LDG_GET_HABITATION_STATEWISE_Result>("USP_LDG_GET_HABITATION_STATEWISE", ldgStateParameter, ldgDistrictParameter, ldgBlockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_LDG_HAB_DEATAIL_Result> USP_LDG_HAB_DEATAIL(Nullable<int> ldgState, Nullable<int> ldgDistrict, Nullable<int> ldgBlock, Nullable<int> habcode, Nullable<byte> pMGSY)
        {
            var ldgStateParameter = ldgState.HasValue ?
                new ObjectParameter("LdgState", ldgState) :
                new ObjectParameter("LdgState", typeof(int));
    
            var ldgDistrictParameter = ldgDistrict.HasValue ?
                new ObjectParameter("LdgDistrict", ldgDistrict) :
                new ObjectParameter("LdgDistrict", typeof(int));
    
            var ldgBlockParameter = ldgBlock.HasValue ?
                new ObjectParameter("LdgBlock", ldgBlock) :
                new ObjectParameter("LdgBlock", typeof(int));
    
            var habcodeParameter = habcode.HasValue ?
                new ObjectParameter("habcode", habcode) :
                new ObjectParameter("habcode", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LDG_HAB_DEATAIL_Result>("USP_LDG_HAB_DEATAIL", ldgStateParameter, ldgDistrictParameter, ldgBlockParameter, habcodeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_LDG_HAB_DEATAIL_STATE_Result> USP_LDG_HAB_DEATAIL_STATE(Nullable<int> ldgState, Nullable<int> ldgDistrict, Nullable<byte> pMGSY)
        {
            var ldgStateParameter = ldgState.HasValue ?
                new ObjectParameter("LdgState", ldgState) :
                new ObjectParameter("LdgState", typeof(int));
    
            var ldgDistrictParameter = ldgDistrict.HasValue ?
                new ObjectParameter("LdgDistrict", ldgDistrict) :
                new ObjectParameter("LdgDistrict", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LDG_HAB_DEATAIL_STATE_Result>("USP_LDG_HAB_DEATAIL_STATE", ldgStateParameter, ldgDistrictParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_LENGTH_CLEARED_COMPLETED_PMGSY_Result> USP_LENGTH_CLEARED_COMPLETED_PMGSY(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LENGTH_CLEARED_COMPLETED_PMGSY_Result>("USP_LENGTH_CLEARED_COMPLETED_PMGSY", sTATEParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_LENGTH_NUMBER_ACHIEVEMENT_Result> USP_LENGTH_NUMBER_ACHIEVEMENT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LENGTH_NUMBER_ACHIEVEMENT_Result>("USP_LENGTH_NUMBER_ACHIEVEMENT");
        }
    
        public virtual ObjectResult<USP_LOGIN_REPORT_Result> USP_LOGIN_REPORT(Nullable<int> rpt, Nullable<int> state, Nullable<int> year, Nullable<int> month, Nullable<int> day, Nullable<int> time)
        {
            var rptParameter = rpt.HasValue ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LOGIN_REPORT_Result>("USP_LOGIN_REPORT", rptParameter, stateParameter, yearParameter, monthParameter, dayParameter, timeParameter);
        }
    
        public virtual ObjectResult<USP_MABProgress_Download_works_Result> USP_MABProgress_Download_works(string moduleflag, string packageid)
        {
            var moduleflagParameter = moduleflag != null ?
                new ObjectParameter("moduleflag", moduleflag) :
                new ObjectParameter("moduleflag", typeof(string));
    
            var packageidParameter = packageid != null ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MABProgress_Download_works_Result>("USP_MABProgress_Download_works", moduleflagParameter, packageidParameter);
        }
    
        public virtual int USP_MABProgress_Insert_Log(string username, string mobileno, string imeino, string osversion, string modelname, string nwprovider, string appversion, string ipaddress)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("mobileno", mobileno) :
                new ObjectParameter("mobileno", typeof(string));
    
            var imeinoParameter = imeino != null ?
                new ObjectParameter("imeino", imeino) :
                new ObjectParameter("imeino", typeof(string));
    
            var osversionParameter = osversion != null ?
                new ObjectParameter("osversion", osversion) :
                new ObjectParameter("osversion", typeof(string));
    
            var modelnameParameter = modelname != null ?
                new ObjectParameter("modelname", modelname) :
                new ObjectParameter("modelname", typeof(string));
    
            var nwproviderParameter = nwprovider != null ?
                new ObjectParameter("nwprovider", nwprovider) :
                new ObjectParameter("nwprovider", typeof(string));
    
            var appversionParameter = appversion != null ?
                new ObjectParameter("appversion", appversion) :
                new ObjectParameter("appversion", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MABProgress_Insert_Log", usernameParameter, mobilenoParameter, imeinoParameter, osversionParameter, modelnameParameter, nwproviderParameter, appversionParameter, ipaddressParameter);
        }
    
        public virtual ObjectResult<USP_MABQMS_DOWNLOAD_SCHEDULE_Result> USP_MABQMS_DOWNLOAD_SCHEDULE(Nullable<int> monitorcode, Nullable<int> inspmonth, Nullable<int> inspyear)
        {
            var monitorcodeParameter = monitorcode.HasValue ?
                new ObjectParameter("monitorcode", monitorcode) :
                new ObjectParameter("monitorcode", typeof(int));
    
            var inspmonthParameter = inspmonth.HasValue ?
                new ObjectParameter("inspmonth", inspmonth) :
                new ObjectParameter("inspmonth", typeof(int));
    
            var inspyearParameter = inspyear.HasValue ?
                new ObjectParameter("inspyear", inspyear) :
                new ObjectParameter("inspyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MABQMS_DOWNLOAD_SCHEDULE_Result>("USP_MABQMS_DOWNLOAD_SCHEDULE", monitorcodeParameter, inspmonthParameter, inspyearParameter);
        }
    
        public virtual ObjectResult<USP_MABQMS_DOWNLOAD_UNPLANNED_SCHEDULE_Result> USP_MABQMS_DOWNLOAD_UNPLANNED_SCHEDULE(Nullable<int> qmcode, string packageid, Nullable<int> inspmonth, Nullable<int> inspyear)
        {
            var qmcodeParameter = qmcode.HasValue ?
                new ObjectParameter("qmcode", qmcode) :
                new ObjectParameter("qmcode", typeof(int));
    
            var packageidParameter = packageid != null ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(string));
    
            var inspmonthParameter = inspmonth.HasValue ?
                new ObjectParameter("inspmonth", inspmonth) :
                new ObjectParameter("inspmonth", typeof(int));
    
            var inspyearParameter = inspyear.HasValue ?
                new ObjectParameter("inspyear", inspyear) :
                new ObjectParameter("inspyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MABQMS_DOWNLOAD_UNPLANNED_SCHEDULE_Result>("USP_MABQMS_DOWNLOAD_UNPLANNED_SCHEDULE", qmcodeParameter, packageidParameter, inspmonthParameter, inspyearParameter);
        }
    
        public virtual int USP_MABQMS_INSERT_IMAGE_DETAILS(Nullable<int> schedulecode, Nullable<int> prroadcode, Nullable<int> observationid, string filename, string filedescr, Nullable<decimal> lattitude, Nullable<decimal> longitude, string inspDate, string deviceType)
        {
            var schedulecodeParameter = schedulecode.HasValue ?
                new ObjectParameter("schedulecode", schedulecode) :
                new ObjectParameter("schedulecode", typeof(int));
    
            var prroadcodeParameter = prroadcode.HasValue ?
                new ObjectParameter("prroadcode", prroadcode) :
                new ObjectParameter("prroadcode", typeof(int));
    
            var observationidParameter = observationid.HasValue ?
                new ObjectParameter("observationid", observationid) :
                new ObjectParameter("observationid", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var filedescrParameter = filedescr != null ?
                new ObjectParameter("filedescr", filedescr) :
                new ObjectParameter("filedescr", typeof(string));
    
            var lattitudeParameter = lattitude.HasValue ?
                new ObjectParameter("lattitude", lattitude) :
                new ObjectParameter("lattitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(decimal));
    
            var inspDateParameter = inspDate != null ?
                new ObjectParameter("inspDate", inspDate) :
                new ObjectParameter("inspDate", typeof(string));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("deviceType", deviceType) :
                new ObjectParameter("deviceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MABQMS_INSERT_IMAGE_DETAILS", schedulecodeParameter, prroadcodeParameter, observationidParameter, filenameParameter, filedescrParameter, lattitudeParameter, longitudeParameter, inspDateParameter, deviceTypeParameter);
        }
    
        public virtual int USP_MABQMS_INSERT_IMAGE_DETAILS_CURRENT_DATE(Nullable<int> schedulecode, Nullable<int> prroadcode, Nullable<int> observationid, string filename, string filedescr, Nullable<decimal> lattitude, Nullable<decimal> longitude, string deviceType)
        {
            var schedulecodeParameter = schedulecode.HasValue ?
                new ObjectParameter("schedulecode", schedulecode) :
                new ObjectParameter("schedulecode", typeof(int));
    
            var prroadcodeParameter = prroadcode.HasValue ?
                new ObjectParameter("prroadcode", prroadcode) :
                new ObjectParameter("prroadcode", typeof(int));
    
            var observationidParameter = observationid.HasValue ?
                new ObjectParameter("observationid", observationid) :
                new ObjectParameter("observationid", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var filedescrParameter = filedescr != null ?
                new ObjectParameter("filedescr", filedescr) :
                new ObjectParameter("filedescr", typeof(string));
    
            var lattitudeParameter = lattitude.HasValue ?
                new ObjectParameter("lattitude", lattitude) :
                new ObjectParameter("lattitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(decimal));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("deviceType", deviceType) :
                new ObjectParameter("deviceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MABQMS_INSERT_IMAGE_DETAILS_CURRENT_DATE", schedulecodeParameter, prroadcodeParameter, observationidParameter, filenameParameter, filedescrParameter, lattitudeParameter, longitudeParameter, deviceTypeParameter);
        }
    
        public virtual int USP_MABQMS_INSERT_LOG(Nullable<int> monitorid, string mobileno, string imeino, string osversion, string modelname, string nwprovider, string appversion, string logmode, string ipaddress)
        {
            var monitoridParameter = monitorid.HasValue ?
                new ObjectParameter("monitorid", monitorid) :
                new ObjectParameter("monitorid", typeof(int));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("mobileno", mobileno) :
                new ObjectParameter("mobileno", typeof(string));
    
            var imeinoParameter = imeino != null ?
                new ObjectParameter("imeino", imeino) :
                new ObjectParameter("imeino", typeof(string));
    
            var osversionParameter = osversion != null ?
                new ObjectParameter("osversion", osversion) :
                new ObjectParameter("osversion", typeof(string));
    
            var modelnameParameter = modelname != null ?
                new ObjectParameter("modelname", modelname) :
                new ObjectParameter("modelname", typeof(string));
    
            var nwproviderParameter = nwprovider != null ?
                new ObjectParameter("nwprovider", nwprovider) :
                new ObjectParameter("nwprovider", typeof(string));
    
            var appversionParameter = appversion != null ?
                new ObjectParameter("appversion", appversion) :
                new ObjectParameter("appversion", typeof(string));
    
            var logmodeParameter = logmode != null ?
                new ObjectParameter("logmode", logmode) :
                new ObjectParameter("logmode", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MABQMS_INSERT_LOG", monitoridParameter, mobilenoParameter, imeinoParameter, osversionParameter, modelnameParameter, nwproviderParameter, appversionParameter, logmodeParameter, ipaddressParameter);
        }
    
        public virtual int USP_MABQMS_INSERT_OBSERVATIONS(Nullable<int> schedulecode, Nullable<int> prroadcode, Nullable<System.DateTime> inspdate, Nullable<decimal> startchainage, Nullable<decimal> endchainage, Nullable<int> overallgrade, string roadstatus, Nullable<decimal> startlatitude, Nullable<decimal> startlongitude, Nullable<decimal> endlatitude, Nullable<decimal> endlongitude)
        {
            var schedulecodeParameter = schedulecode.HasValue ?
                new ObjectParameter("schedulecode", schedulecode) :
                new ObjectParameter("schedulecode", typeof(int));
    
            var prroadcodeParameter = prroadcode.HasValue ?
                new ObjectParameter("prroadcode", prroadcode) :
                new ObjectParameter("prroadcode", typeof(int));
    
            var inspdateParameter = inspdate.HasValue ?
                new ObjectParameter("inspdate", inspdate) :
                new ObjectParameter("inspdate", typeof(System.DateTime));
    
            var startchainageParameter = startchainage.HasValue ?
                new ObjectParameter("startchainage", startchainage) :
                new ObjectParameter("startchainage", typeof(decimal));
    
            var endchainageParameter = endchainage.HasValue ?
                new ObjectParameter("endchainage", endchainage) :
                new ObjectParameter("endchainage", typeof(decimal));
    
            var overallgradeParameter = overallgrade.HasValue ?
                new ObjectParameter("overallgrade", overallgrade) :
                new ObjectParameter("overallgrade", typeof(int));
    
            var roadstatusParameter = roadstatus != null ?
                new ObjectParameter("roadstatus", roadstatus) :
                new ObjectParameter("roadstatus", typeof(string));
    
            var startlatitudeParameter = startlatitude.HasValue ?
                new ObjectParameter("startlatitude", startlatitude) :
                new ObjectParameter("startlatitude", typeof(decimal));
    
            var startlongitudeParameter = startlongitude.HasValue ?
                new ObjectParameter("startlongitude", startlongitude) :
                new ObjectParameter("startlongitude", typeof(decimal));
    
            var endlatitudeParameter = endlatitude.HasValue ?
                new ObjectParameter("endlatitude", endlatitude) :
                new ObjectParameter("endlatitude", typeof(decimal));
    
            var endlongitudeParameter = endlongitude.HasValue ?
                new ObjectParameter("endlongitude", endlongitude) :
                new ObjectParameter("endlongitude", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MABQMS_INSERT_OBSERVATIONS", schedulecodeParameter, prroadcodeParameter, inspdateParameter, startchainageParameter, endchainageParameter, overallgradeParameter, roadstatusParameter, startlatitudeParameter, startlongitudeParameter, endlatitudeParameter, endlongitudeParameter);
        }
    
        public virtual int USP_MABQMS_UPDATE_DEVICE_FLAG(Nullable<int> schedulecode, Nullable<int> prroadcode, string deviceflag)
        {
            var schedulecodeParameter = schedulecode.HasValue ?
                new ObjectParameter("schedulecode", schedulecode) :
                new ObjectParameter("schedulecode", typeof(int));
    
            var prroadcodeParameter = prroadcode.HasValue ?
                new ObjectParameter("prroadcode", prroadcode) :
                new ObjectParameter("prroadcode", typeof(int));
    
            var deviceflagParameter = deviceflag != null ?
                new ObjectParameter("deviceflag", deviceflag) :
                new ObjectParameter("deviceflag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MABQMS_UPDATE_DEVICE_FLAG", schedulecodeParameter, prroadcodeParameter, deviceflagParameter);
        }
    
        public virtual ObjectResult<USP_MABQMS_VERIFY_LOGIN_Result> USP_MABQMS_VERIFY_LOGIN(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MABQMS_VERIFY_LOGIN_Result>("USP_MABQMS_VERIFY_LOGIN", usernameParameter);
        }
    
        public virtual ObjectResult<USP_MANE_CUMULATIVE_EXP_REPORT_Result> USP_MANE_CUMULATIVE_EXP_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_CUMULATIVE_EXP_REPORT_Result>("USP_MANE_CUMULATIVE_EXP_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MANE_INSPECTION_REPORT_Result> USP_MANE_INSPECTION_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_INSPECTION_REPORT_Result>("USP_MANE_INSPECTION_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MANE_PHASE_PROFILE_Result> USP_MANE_PHASE_PROFILE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<int> month, Nullable<int> year, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_PHASE_PROFILE_Result>("USP_MANE_PHASE_PROFILE", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, monthParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MANE_RPT_Maintenance_Commitment_Result> USP_MANE_RPT_Maintenance_Commitment(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, string type, Nullable<int> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_RPT_Maintenance_Commitment_Result>("USP_MANE_RPT_Maintenance_Commitment", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MANE_RPT_Maintenance_PkgWise_Result> USP_MANE_RPT_Maintenance_PkgWise(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_RPT_Maintenance_PkgWise_Result>("USP_MANE_RPT_Maintenance_PkgWise", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MANE_RPT_PCI_OVERDUE_ROADS_Result> USP_MANE_RPT_PCI_OVERDUE_ROADS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_RPT_PCI_OVERDUE_ROADS_Result>("USP_MANE_RPT_PCI_OVERDUE_ROADS", levelParameter, stateParameter, districtParameter, blockParameter);
        }
    
        public virtual ObjectResult<USP_MANE_RPT_ROUTINE_MN_PRIORITY_LIST_Result> USP_MANE_RPT_ROUTINE_MN_PRIORITY_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_RPT_ROUTINE_MN_PRIORITY_LIST_Result>("USP_MANE_RPT_ROUTINE_MN_PRIORITY_LIST", levelParameter, stateParameter, districtParameter, blockParameter);
        }
    
        public virtual ObjectResult<USP_MANE_TECH_REPORT_Result> USP_MANE_TECH_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string techType, string connectivity, string rpt, Nullable<byte> pMGSY, Nullable<int> techCode)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var techTypeParameter = techType != null ?
                new ObjectParameter("TechType", techType) :
                new ObjectParameter("TechType", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("Connectivity", connectivity) :
                new ObjectParameter("Connectivity", typeof(string));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var techCodeParameter = techCode.HasValue ?
                new ObjectParameter("TechCode", techCode) :
                new ObjectParameter("TechCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MANE_TECH_REPORT_Result>("USP_MANE_TECH_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, techTypeParameter, connectivityParameter, rptParameter, pMGSYParameter, techCodeParameter);
        }
    
        public virtual int USP_MAP_UNMAP_HABS_FROM_CSV(Nullable<int> state, Nullable<int> block)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MAP_UNMAP_HABS_FROM_CSV", stateParameter, blockParameter);
        }
    
        public virtual ObjectResult<USP_MAS_DATA_REPORT_Result> USP_MAS_DATA_REPORT(Nullable<int> rptNo, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> panchayat, Nullable<int> censusYear, string type1, string type2, string type3, string type4, string type5, string active)
        {
            var rptNoParameter = rptNo.HasValue ?
                new ObjectParameter("RptNo", rptNo) :
                new ObjectParameter("RptNo", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var panchayatParameter = panchayat.HasValue ?
                new ObjectParameter("Panchayat", panchayat) :
                new ObjectParameter("Panchayat", typeof(int));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            var type1Parameter = type1 != null ?
                new ObjectParameter("Type1", type1) :
                new ObjectParameter("Type1", typeof(string));
    
            var type2Parameter = type2 != null ?
                new ObjectParameter("Type2", type2) :
                new ObjectParameter("Type2", typeof(string));
    
            var type3Parameter = type3 != null ?
                new ObjectParameter("Type3", type3) :
                new ObjectParameter("Type3", typeof(string));
    
            var type4Parameter = type4 != null ?
                new ObjectParameter("Type4", type4) :
                new ObjectParameter("Type4", typeof(string));
    
            var type5Parameter = type5 != null ?
                new ObjectParameter("Type5", type5) :
                new ObjectParameter("Type5", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MAS_DATA_REPORT_Result>("USP_MAS_DATA_REPORT", rptNoParameter, stateParameter, districtParameter, blockParameter, villageParameter, panchayatParameter, censusYearParameter, type1Parameter, type2Parameter, type3Parameter, type4Parameter, type5Parameter, activeParameter);
        }
    
        public virtual ObjectResult<USP_MAS_LIST_HAB_DETAILS_Result> USP_MAS_LIST_HAB_DETAILS(Nullable<int> habCode, Nullable<int> censusYear, Nullable<short> roleID)
        {
            var habCodeParameter = habCode.HasValue ?
                new ObjectParameter("HabCode", habCode) :
                new ObjectParameter("HabCode", typeof(int));
    
            var censusYearParameter = censusYear.HasValue ?
                new ObjectParameter("CensusYear", censusYear) :
                new ObjectParameter("CensusYear", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MAS_LIST_HAB_DETAILS_Result>("USP_MAS_LIST_HAB_DETAILS", habCodeParameter, censusYearParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<USP_MAS_List_Habitaion_Details_Result> USP_MAS_List_Habitaion_Details(Nullable<int> prm_State_Code, Nullable<int> prm_District_Code, Nullable<int> prm_Block_Code, Nullable<short> prm_Role_Code, string prm_Village_Name, string prm_Habitation_Name, Nullable<int> prm_Page, Nullable<int> prm_Rows, string prm_Sidx, string prm_Sord, Nullable<int> prm_Scheme)
        {
            var prm_State_CodeParameter = prm_State_Code.HasValue ?
                new ObjectParameter("Prm_State_Code", prm_State_Code) :
                new ObjectParameter("Prm_State_Code", typeof(int));
    
            var prm_District_CodeParameter = prm_District_Code.HasValue ?
                new ObjectParameter("Prm_District_Code", prm_District_Code) :
                new ObjectParameter("Prm_District_Code", typeof(int));
    
            var prm_Block_CodeParameter = prm_Block_Code.HasValue ?
                new ObjectParameter("Prm_Block_Code", prm_Block_Code) :
                new ObjectParameter("Prm_Block_Code", typeof(int));
    
            var prm_Role_CodeParameter = prm_Role_Code.HasValue ?
                new ObjectParameter("Prm_Role_Code", prm_Role_Code) :
                new ObjectParameter("Prm_Role_Code", typeof(short));
    
            var prm_Village_NameParameter = prm_Village_Name != null ?
                new ObjectParameter("Prm_Village_Name", prm_Village_Name) :
                new ObjectParameter("Prm_Village_Name", typeof(string));
    
            var prm_Habitation_NameParameter = prm_Habitation_Name != null ?
                new ObjectParameter("Prm_Habitation_Name", prm_Habitation_Name) :
                new ObjectParameter("Prm_Habitation_Name", typeof(string));
    
            var prm_PageParameter = prm_Page.HasValue ?
                new ObjectParameter("prm_Page", prm_Page) :
                new ObjectParameter("prm_Page", typeof(int));
    
            var prm_RowsParameter = prm_Rows.HasValue ?
                new ObjectParameter("Prm_Rows", prm_Rows) :
                new ObjectParameter("Prm_Rows", typeof(int));
    
            var prm_SidxParameter = prm_Sidx != null ?
                new ObjectParameter("Prm_Sidx", prm_Sidx) :
                new ObjectParameter("Prm_Sidx", typeof(string));
    
            var prm_SordParameter = prm_Sord != null ?
                new ObjectParameter("Prm_Sord", prm_Sord) :
                new ObjectParameter("Prm_Sord", typeof(string));
    
            var prm_SchemeParameter = prm_Scheme.HasValue ?
                new ObjectParameter("Prm_Scheme", prm_Scheme) :
                new ObjectParameter("Prm_Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MAS_List_Habitaion_Details_Result>("USP_MAS_List_Habitaion_Details", prm_State_CodeParameter, prm_District_CodeParameter, prm_Block_CodeParameter, prm_Role_CodeParameter, prm_Village_NameParameter, prm_Habitation_NameParameter, prm_PageParameter, prm_RowsParameter, prm_SidxParameter, prm_SordParameter, prm_SchemeParameter);
        }
    
        public virtual ObjectResult<USP_MASTER_INFO_REPORT_Result> USP_MASTER_INFO_REPORT(string rptType, Nullable<int> state)
        {
            var rptTypeParameter = rptType != null ?
                new ObjectParameter("RptType", rptType) :
                new ObjectParameter("RptType", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MASTER_INFO_REPORT_Result>("USP_MASTER_INFO_REPORT", rptTypeParameter, stateParameter);
        }
    
        public virtual int USP_MERISADAK_CITIZEN_GRIEVANCE_REGISTER(string name, string mobNo, string imei, string address, string email, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> blockCode, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobNoParameter = mobNo != null ?
                new ObjectParameter("mobNo", mobNo) :
                new ObjectParameter("mobNo", typeof(string));
    
            var imeiParameter = imei != null ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("BlockCode", blockCode) :
                new ObjectParameter("BlockCode", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MERISADAK_CITIZEN_GRIEVANCE_REGISTER", nameParameter, mobNoParameter, imeiParameter, addressParameter, emailParameter, stateCodeParameter, districtCodeParameter, blockCodeParameter, passwordParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_Result> USP_MERISADAK_CS(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_Result>("USP_MERISADAK_CS", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_ABSTRACT_Result> USP_MERISADAK_CS_ABSTRACT(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_ABSTRACT_Result>("USP_MERISADAK_CS_ABSTRACT", sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_HABITATIONS_Result> USP_MERISADAK_CS_HABITATIONS(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_HABITATIONS_Result>("USP_MERISADAK_CS_HABITATIONS", sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_ROAD_COUNT_Result> USP_MERISADAK_CS_ROAD_COUNT(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_ROAD_COUNT_Result>("USP_MERISADAK_CS_ROAD_COUNT", sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_ROADDETAILS_Result> USP_MERISADAK_CS_ROADDETAILS(Nullable<int> rOADCODE)
        {
            var rOADCODEParameter = rOADCODE.HasValue ?
                new ObjectParameter("ROADCODE", rOADCODE) :
                new ObjectParameter("ROADCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_ROADDETAILS_Result>("USP_MERISADAK_CS_ROADDETAILS", rOADCODEParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_ROADS_Result> USP_MERISADAK_CS_ROADS(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, string hABSTR)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var hABSTRParameter = hABSTR != null ?
                new ObjectParameter("HABSTR", hABSTR) :
                new ObjectParameter("HABSTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_ROADS_Result>("USP_MERISADAK_CS_ROADS", sTATEParameter, dISTRICTParameter, bLOCKParameter, hABSTRParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_CS_VILLAGES_Result> USP_MERISADAK_CS_VILLAGES(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_CS_VILLAGES_Result>("USP_MERISADAK_CS_VILLAGES", sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_MERISADAK_LOCATIONS_Result> USP_MERISADAK_LOCATIONS(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MERISADAK_LOCATIONS_Result>("USP_MERISADAK_LOCATIONS", lEVELParameter, sTATEParameter, dISTRICTParameter);
        }
    
        public virtual int USP_MERISADAK_seq_for_CitizenID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MERISADAK_seq_for_CitizenID");
        }
    
        public virtual ObjectResult<USP_MIS_DLP_EXP_ZERO_Result> USP_MIS_DLP_EXP_ZERO(Nullable<int> lEVEL, Nullable<int> sTATE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_DLP_EXP_ZERO_Result>("USP_MIS_DLP_EXP_ZERO", lEVELParameter, sTATEParameter);
        }
    
        public virtual int USP_MIS_HAB_STATUS(Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MIS_HAB_STATUS", sTATEParameter, dISTRICTParameter);
        }
    
        public virtual int USP_MIS_HAB_STATUS_GRAPH(Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MIS_HAB_STATUS_GRAPH", sTATEParameter, dISTRICTParameter);
        }
    
        public virtual ObjectResult<USP_MIS_PENDING_LENGTH_Result> USP_MIS_PENDING_LENGTH(Nullable<int> sTATE, Nullable<int> yEAR)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_PENDING_LENGTH_Result>("USP_MIS_PENDING_LENGTH", sTATEParameter, yEARParameter);
        }
    
        public virtual ObjectResult<USP_MIS_PENDING_WORKS_Result> USP_MIS_PENDING_WORKS(Nullable<int> sTATE, Nullable<int> pMGSY)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_PENDING_WORKS_Result>("USP_MIS_PENDING_WORKS", sTATEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MIS_PHY_LEN_TARGET_Result> USP_MIS_PHY_LEN_TARGET(Nullable<int> yEAR, Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_PHY_LEN_TARGET_Result>("USP_MIS_PHY_LEN_TARGET", yEARParameter, sTATEParameter, dISTRICTParameter);
        }
    
        public virtual ObjectResult<USP_MIS_PHYSICAL_PROGRESS_Result> USP_MIS_PHYSICAL_PROGRESS(Nullable<int> pMGSY, Nullable<int> sTATE)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_PHYSICAL_PROGRESS_Result>("USP_MIS_PHYSICAL_PROGRESS", pMGSYParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_MIS_RND_BALANCE_LENGTH_Result> USP_MIS_RND_BALANCE_LENGTH(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_RND_BALANCE_LENGTH_Result>("USP_MIS_RND_BALANCE_LENGTH", lEVELParameter, sTATEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MIS_RND_WORKS_ACHIEVEMENT_Result> USP_MIS_RND_WORKS_ACHIEVEMENT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_RND_WORKS_ACHIEVEMENT_Result>("USP_MIS_RND_WORKS_ACHIEVEMENT", lEVELParameter, sTATEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MIS_TARGET_BALANCE_Result> USP_MIS_TARGET_BALANCE(Nullable<int> yEAR, Nullable<int> sTATE)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_TARGET_BALANCE_Result>("USP_MIS_TARGET_BALANCE", yEARParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_MIS_WORK_AWARD_STATUS_Result> USP_MIS_WORK_AWARD_STATUS(Nullable<int> lEVEL, Nullable<int> pMGSY, Nullable<int> sTATE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_WORK_AWARD_STATUS_Result>("USP_MIS_WORK_AWARD_STATUS", lEVELParameter, pMGSYParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_MIS_WORK_PENDING_FC_Result> USP_MIS_WORK_PENDING_FC(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MIS_WORK_PENDING_FC_Result>("USP_MIS_WORK_PENDING_FC", lEVELParameter, sTATEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MONITOR_WISE_INSPECTION_Result> USP_MONITOR_WISE_INSPECTION(string qTYPE, Nullable<int> sTATE, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR)
        {
            var qTYPEParameter = qTYPE != null ?
                new ObjectParameter("QTYPE", qTYPE) :
                new ObjectParameter("QTYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MONITOR_WISE_INSPECTION_Result>("USP_MONITOR_WISE_INSPECTION", qTYPEParameter, sTATEParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter);
        }
    
        public virtual ObjectResult<USP_MONITOR_WISE_INSPECTION_DETAIL_Result> USP_MONITOR_WISE_INSPECTION_DETAIL(Nullable<int> qMCODE, string qTYPE, string sTATUS, Nullable<int> gRADE, Nullable<int> sTATE, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR)
        {
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var qTYPEParameter = qTYPE != null ?
                new ObjectParameter("QTYPE", qTYPE) :
                new ObjectParameter("QTYPE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var gRADEParameter = gRADE.HasValue ?
                new ObjectParameter("GRADE", gRADE) :
                new ObjectParameter("GRADE", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MONITOR_WISE_INSPECTION_DETAIL_Result>("USP_MONITOR_WISE_INSPECTION_DETAIL", qMCODEParameter, qTYPEParameter, sTATUSParameter, gRADEParameter, sTATEParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter);
        }
    
        public virtual ObjectResult<USP_MORD_DASHBOAED_PHYSICAL_Result> USP_MORD_DASHBOAED_PHYSICAL(Nullable<byte> pMGSY, Nullable<int> month, Nullable<int> year)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MORD_DASHBOAED_PHYSICAL_Result>("USP_MORD_DASHBOAED_PHYSICAL", pMGSYParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_MORD_DASHBOAED_PHYSICAL_PMGSY3_Result> USP_MORD_DASHBOAED_PHYSICAL_PMGSY3(Nullable<byte> pMGSY, Nullable<int> month, Nullable<int> year)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MORD_DASHBOAED_PHYSICAL_PMGSY3_Result>("USP_MORD_DASHBOAED_PHYSICAL_PMGSY3", pMGSYParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_MPR_ABSTRACT_REPORT_Result> USP_MPR_ABSTRACT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_ABSTRACT_REPORT_Result>("USP_MPR_ABSTRACT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter, aGENCYParameter);
        }
    
        public virtual ObjectResult<USP_MPR_ABSTRACT_REPORT_MORD_Result> USP_MPR_ABSTRACT_REPORT_MORD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_ABSTRACT_REPORT_MORD_Result>("USP_MPR_ABSTRACT_REPORT_MORD");
        }
    
        public virtual ObjectResult<USP_MPR_HY1_Result> USP_MPR_HY1(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_HY1_Result>("USP_MPR_HY1", levelParameter, stateParameter, districtParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MPR_HY2_Result> USP_MPR_HY2(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_HY2_Result>("USP_MPR_HY2", levelParameter, stateParameter, districtParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MPR_REPORT1_Result> USP_MPR_REPORT1(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_REPORT1_Result>("USP_MPR_REPORT1", levelParameter, stateParameter, districtParameter, blockParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MPR_REPORT2_Result> USP_MPR_REPORT2(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_REPORT2_Result>("USP_MPR_REPORT2", levelParameter, stateParameter, districtParameter, blockParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MPR_TARGET_ACHIVEMENT_Result> USP_MPR_TARGET_ACHIVEMENT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR_TARGET_ACHIVEMENT_Result>("USP_MPR_TARGET_ACHIVEMENT", levelParameter, stateParameter, districtParameter, blockParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MPR1_NEW_Result> USP_MPR1_NEW(Nullable<byte> pMGSY, Nullable<int> sTATE, Nullable<int> year, Nullable<int> month, Nullable<int> collaboration)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MPR1_NEW_Result>("USP_MPR1_NEW", pMGSYParameter, sTATEParameter, yearParameter, monthParameter, collaborationParameter);
        }
    
        public virtual ObjectResult<USP_MRD_HAB_COVERAGE_Result> USP_MRD_HAB_COVERAGE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string package, string pTAStatus, string sTAStaus, string mRDStatus, string type, string connect, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var sTAStausParameter = sTAStaus != null ?
                new ObjectParameter("STAStaus", sTAStaus) :
                new ObjectParameter("STAStaus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectParameter = connect != null ?
                new ObjectParameter("Connect", connect) :
                new ObjectParameter("Connect", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MRD_HAB_COVERAGE_Result>("USP_MRD_HAB_COVERAGE", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, packageParameter, pTAStatusParameter, sTAStausParameter, mRDStatusParameter, typeParameter, connectParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_MRD_PROPOSAL_REPORT_Result> USP_MRD_PROPOSAL_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string package, string pTAStatus, string sTAStaus, string mRDStatus, string type, string connect, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var sTAStausParameter = sTAStaus != null ?
                new ObjectParameter("STAStaus", sTAStaus) :
                new ObjectParameter("STAStaus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectParameter = connect != null ?
                new ObjectParameter("Connect", connect) :
                new ObjectParameter("Connect", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MRD_PROPOSAL_REPORT_Result>("USP_MRD_PROPOSAL_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, packageParameter, pTAStatusParameter, sTAStausParameter, mRDStatusParameter, typeParameter, connectParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_NQM_AUTO_SCHEDULE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_NQM_AUTO_SCHEDULE");
        }
    
        public virtual ObjectResult<USP_NRSC_PHY_PROG_Result> USP_NRSC_PHY_PROG(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NRSC_PHY_PROG_Result>("USP_NRSC_PHY_PROG", stateParameter, districtParameter, blockParameter, batchParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual int USP_NSP_ACCOUNT_AUTOMATE_QUERY(Nullable<int> prmStateCode, Nullable<int> prmAgencyCode, Nullable<int> prmMonth, Nullable<int> prmYear)
        {
            var prmStateCodeParameter = prmStateCode.HasValue ?
                new ObjectParameter("PrmStateCode", prmStateCode) :
                new ObjectParameter("PrmStateCode", typeof(int));
    
            var prmAgencyCodeParameter = prmAgencyCode.HasValue ?
                new ObjectParameter("PrmAgencyCode", prmAgencyCode) :
                new ObjectParameter("PrmAgencyCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(int));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_NSP_ACCOUNT_AUTOMATE_QUERY", prmStateCodeParameter, prmAgencyCodeParameter, prmMonthParameter, prmYearParameter);
        }
    
        public virtual int USP_NSP_ACCOUNT_AUTOMATE_QUERY_Monthly(Nullable<int> prmStateCode, Nullable<int> prmAgencyCode, Nullable<int> prmMonth, Nullable<int> prmYear)
        {
            var prmStateCodeParameter = prmStateCode.HasValue ?
                new ObjectParameter("PrmStateCode", prmStateCode) :
                new ObjectParameter("PrmStateCode", typeof(int));
    
            var prmAgencyCodeParameter = prmAgencyCode.HasValue ?
                new ObjectParameter("PrmAgencyCode", prmAgencyCode) :
                new ObjectParameter("PrmAgencyCode", typeof(int));
    
            var prmMonthParameter = prmMonth.HasValue ?
                new ObjectParameter("PrmMonth", prmMonth) :
                new ObjectParameter("PrmMonth", typeof(int));
    
            var prmYearParameter = prmYear.HasValue ?
                new ObjectParameter("PrmYear", prmYear) :
                new ObjectParameter("PrmYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_NSP_ACCOUNT_AUTOMATE_QUERY_Monthly", prmStateCodeParameter, prmAgencyCodeParameter, prmMonthParameter, prmYearParameter);
        }
    
        public virtual ObjectResult<USP_NSP_BRIEF_REPORT_Result> USP_NSP_BRIEF_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string rpt, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_BRIEF_REPORT_Result>("USP_NSP_BRIEF_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, rptParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_CONN_STATUS_Result> USP_NSP_CONN_STATUS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_CONN_STATUS_Result>("USP_NSP_CONN_STATUS", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_CONN_STATUS_REVISED_Result> USP_NSP_CONN_STATUS_REVISED(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_CONN_STATUS_REVISED_Result>("USP_NSP_CONN_STATUS_REVISED", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_DSS_AVGCOST_Result> USP_NSP_DSS_AVGCOST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, string type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_DSS_AVGCOST_Result>("USP_NSP_DSS_AVGCOST", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_DSS_AVGCOST_BATCH_Result> USP_NSP_DSS_AVGCOST_BATCH(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> year, string sanction, string type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_DSS_AVGCOST_BATCH_Result>("USP_NSP_DSS_AVGCOST_BATCH", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, yearParameter, sanctionParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_DSS_AWARD_Result> USP_NSP_DSS_AWARD(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_DSS_AWARD_Result>("USP_NSP_DSS_AWARD", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_DSS_FINANCIAL_Result> USP_NSP_DSS_FINANCIAL(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, string type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_DSS_FINANCIAL_Result>("USP_NSP_DSS_FINANCIAL", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_DSS_PHYSICAL_Result> USP_NSP_DSS_PHYSICAL(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, string type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_DSS_PHYSICAL_Result>("USP_NSP_DSS_PHYSICAL", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_EXECUTING_OFFICERS_Result> USP_NSP_EXECUTING_OFFICERS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_EXECUTING_OFFICERS_Result>("USP_NSP_EXECUTING_OFFICERS", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_COVERAGE_Result> USP_NSP_HAB_COVERAGE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_COVERAGE_Result>("USP_NSP_HAB_COVERAGE", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_COVERAGE_CLUSTER_Result> USP_NSP_HAB_COVERAGE_CLUSTER(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_COVERAGE_CLUSTER_Result>("USP_NSP_HAB_COVERAGE_CLUSTER", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_COVERAGE_REVISED_PK_Result> USP_NSP_HAB_COVERAGE_REVISED_PK(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_COVERAGE_REVISED_PK_Result>("USP_NSP_HAB_COVERAGE_REVISED_PK", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_STATUS_Result> USP_NSP_HAB_STATUS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> pop, Nullable<int> year, Nullable<int> batch, Nullable<int> agency, string type, string status, string sanction, string progress, string rpt, Nullable<byte> pMGSY, string reconsideration)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var progressParameter = progress != null ?
                new ObjectParameter("Progress", progress) :
                new ObjectParameter("Progress", typeof(string));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var reconsiderationParameter = reconsideration != null ?
                new ObjectParameter("Reconsideration", reconsideration) :
                new ObjectParameter("Reconsideration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_STATUS_Result>("USP_NSP_HAB_STATUS", stateParameter, districtParameter, blockParameter, popParameter, yearParameter, batchParameter, agencyParameter, typeParameter, statusParameter, sanctionParameter, progressParameter, rptParameter, pMGSYParameter, reconsiderationParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_STATUS_CLUSTER_REVISED_Result> USP_NSP_HAB_STATUS_CLUSTER_REVISED(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> pop, Nullable<int> year, Nullable<int> batch, Nullable<int> agency, string type, string status, string sanction, string progress, string rpt, Nullable<byte> pMGSY, string reconsideration)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var progressParameter = progress != null ?
                new ObjectParameter("Progress", progress) :
                new ObjectParameter("Progress", typeof(string));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var reconsiderationParameter = reconsideration != null ?
                new ObjectParameter("Reconsideration", reconsideration) :
                new ObjectParameter("Reconsideration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_STATUS_CLUSTER_REVISED_Result>("USP_NSP_HAB_STATUS_CLUSTER_REVISED", stateParameter, districtParameter, blockParameter, popParameter, yearParameter, batchParameter, agencyParameter, typeParameter, statusParameter, sanctionParameter, progressParameter, rptParameter, pMGSYParameter, reconsiderationParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_UNCONNECTED_Result> USP_NSP_HAB_UNCONNECTED(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> report, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_UNCONNECTED_Result>("USP_NSP_HAB_UNCONNECTED", stateParameter, districtParameter, blockParameter, reportParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_HAB_UNCONNECTED_CLUSTER_Result> USP_NSP_HAB_UNCONNECTED_CLUSTER(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> report, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_HAB_UNCONNECTED_CLUSTER_Result>("USP_NSP_HAB_UNCONNECTED_CLUSTER", stateParameter, districtParameter, blockParameter, reportParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_PHASE_BATCH_Result> USP_NSP_PHASE_BATCH(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_PHASE_BATCH_Result>("USP_NSP_PHASE_BATCH", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_PHASE_CONTYPE_Result> USP_NSP_PHASE_CONTYPE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_PHASE_CONTYPE_Result>("USP_NSP_PHASE_CONTYPE", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_PHASE_PROFILE_Result> USP_NSP_PHASE_PROFILE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_PHASE_PROFILE_Result>("USP_NSP_PHASE_PROFILE", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_PHASE_PROFILE_DISHA_Result> USP_NSP_PHASE_PROFILE_DISHA(Nullable<int> level, Nullable<int> ldgState, Nullable<int> ldgDistrict, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var ldgStateParameter = ldgState.HasValue ?
                new ObjectParameter("ldgState", ldgState) :
                new ObjectParameter("ldgState", typeof(int));
    
            var ldgDistrictParameter = ldgDistrict.HasValue ?
                new ObjectParameter("ldgDistrict", ldgDistrict) :
                new ObjectParameter("ldgDistrict", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_PHASE_PROFILE_DISHA_Result>("USP_NSP_PHASE_PROFILE_DISHA", levelParameter, ldgStateParameter, ldgDistrictParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_PROP_HAB_STATUS_Result> USP_NSP_PROP_HAB_STATUS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> agency, Nullable<int> collaboration, string proposal, string type, string status, string drop, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var proposalParameter = proposal != null ?
                new ObjectParameter("Proposal", proposal) :
                new ObjectParameter("Proposal", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var dropParameter = drop != null ?
                new ObjectParameter("Drop", drop) :
                new ObjectParameter("Drop", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_PROP_HAB_STATUS_Result>("USP_NSP_PROP_HAB_STATUS", stateParameter, districtParameter, blockParameter, yearParameter, agencyParameter, collaborationParameter, proposalParameter, typeParameter, statusParameter, dropParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_PROP_STATUS_Result> USP_NSP_PROP_STATUS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> agency, Nullable<int> collaboration, string proposal, string type, string status, string drop, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var proposalParameter = proposal != null ?
                new ObjectParameter("Proposal", proposal) :
                new ObjectParameter("Proposal", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var dropParameter = drop != null ?
                new ObjectParameter("Drop", drop) :
                new ObjectParameter("Drop", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_PROP_STATUS_Result>("USP_NSP_PROP_STATUS", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, agencyParameter, collaborationParameter, proposalParameter, typeParameter, statusParameter, dropParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_DISTRICT_COMP_GRADE_DETAILS_Result> USP_NSP_QUALITY_DISTRICT_COMP_GRADE_DETAILS(Nullable<int> level, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> blockCode, Nullable<int> collaboration, Nullable<int> agency, string qmType, Nullable<int> gradeType, Nullable<byte> pmgsy)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var gradeTypeParameter = gradeType.HasValue ?
                new ObjectParameter("gradeType", gradeType) :
                new ObjectParameter("gradeType", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("pmgsy", pmgsy) :
                new ObjectParameter("pmgsy", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_DISTRICT_COMP_GRADE_DETAILS_Result>("USP_NSP_QUALITY_DISTRICT_COMP_GRADE_DETAILS", levelParameter, stateCodeParameter, districtCodeParameter, blockCodeParameter, collaborationParameter, agencyParameter, qmTypeParameter, gradeTypeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_DISTRICT_INSP_DETAILS_Result> USP_NSP_QUALITY_DISTRICT_INSP_DETAILS(Nullable<int> level, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> blockCode, Nullable<int> collaboration, Nullable<int> agency, string qmType, Nullable<byte> pmgsy)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("pmgsy", pmgsy) :
                new ObjectParameter("pmgsy", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_DISTRICT_INSP_DETAILS_Result>("USP_NSP_QUALITY_DISTRICT_INSP_DETAILS", levelParameter, stateCodeParameter, districtCodeParameter, blockCodeParameter, collaborationParameter, agencyParameter, qmTypeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_DISTRICT_PROG_GRADE_DETAILS_Result> USP_NSP_QUALITY_DISTRICT_PROG_GRADE_DETAILS(Nullable<int> level, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> blockCode, Nullable<int> collaboration, Nullable<int> agency, string qmType, Nullable<int> gradeType, Nullable<byte> pmgsy)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var blockCodeParameter = blockCode.HasValue ?
                new ObjectParameter("blockCode", blockCode) :
                new ObjectParameter("blockCode", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var gradeTypeParameter = gradeType.HasValue ?
                new ObjectParameter("gradeType", gradeType) :
                new ObjectParameter("gradeType", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("pmgsy", pmgsy) :
                new ObjectParameter("pmgsy", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_DISTRICT_PROG_GRADE_DETAILS_Result>("USP_NSP_QUALITY_DISTRICT_PROG_GRADE_DETAILS", levelParameter, stateCodeParameter, districtCodeParameter, blockCodeParameter, collaborationParameter, agencyParameter, qmTypeParameter, gradeTypeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_PROFILE_Result> USP_NSP_QUALITY_PROFILE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, string qMType, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var qMTypeParameter = qMType != null ?
                new ObjectParameter("QMType", qMType) :
                new ObjectParameter("QMType", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_PROFILE_Result>("USP_NSP_QUALITY_PROFILE", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, qMTypeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_PROFILE_CITIZEN_Result> USP_NSP_QUALITY_PROFILE_CITIZEN(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, string qMType)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var qMTypeParameter = qMType != null ?
                new ObjectParameter("QMType", qMType) :
                new ObjectParameter("QMType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_PROFILE_CITIZEN_Result>("USP_NSP_QUALITY_PROFILE_CITIZEN", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, qMTypeParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_PROFILE_CITIZEN_AGENCY_Result> USP_NSP_QUALITY_PROFILE_CITIZEN_AGENCY(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, string qMType)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var qMTypeParameter = qMType != null ?
                new ObjectParameter("QMType", qMType) :
                new ObjectParameter("QMType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_PROFILE_CITIZEN_AGENCY_Result>("USP_NSP_QUALITY_PROFILE_CITIZEN_AGENCY", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, qMTypeParameter);
        }
    
        public virtual ObjectResult<USP_NSP_QUALITY_PROFILE_DETAIL_Result> USP_NSP_QUALITY_PROFILE_DETAIL(Nullable<int> level, string qMType, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var qMTypeParameter = qMType != null ?
                new ObjectParameter("QMType", qMType) :
                new ObjectParameter("QMType", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_NSP_QUALITY_PROFILE_DETAIL_Result>("USP_NSP_QUALITY_PROFILE_DETAIL", levelParameter, qMTypeParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter);
        }
    
        public virtual ObjectResult<USP_PCI_FINALIZATION_CONDITION_Result> USP_PCI_FINALIZATION_CONDITION(Nullable<int> cNROADCODE, Nullable<int> year)
        {
            var cNROADCODEParameter = cNROADCODE.HasValue ?
                new ObjectParameter("CNROADCODE", cNROADCODE) :
                new ObjectParameter("CNROADCODE", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PCI_FINALIZATION_CONDITION_Result>("USP_PCI_FINALIZATION_CONDITION", cNROADCODEParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_PENDING_WORKS_REPORT_Result> USP_PENDING_WORKS_REPORT(Nullable<int> state, string reason, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PENDING_WORKS_REPORT_Result>("USP_PENDING_WORKS_REPORT", stateParameter, reasonParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PFMS_PAYMENT_CONFIGURATION_Result> USP_PFMS_PAYMENT_CONFIGURATION(Nullable<int> parentNDCode, string nDType)
        {
            var parentNDCodeParameter = parentNDCode.HasValue ?
                new ObjectParameter("ParentNDCode", parentNDCode) :
                new ObjectParameter("ParentNDCode", typeof(int));
    
            var nDTypeParameter = nDType != null ?
                new ObjectParameter("NDType", nDType) :
                new ObjectParameter("NDType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PFMS_PAYMENT_CONFIGURATION_Result>("USP_PFMS_PAYMENT_CONFIGURATION", parentNDCodeParameter, nDTypeParameter);
        }
    
        public virtual ObjectResult<USP_PM_DOWNLOAD_REPLY_Result> USP_PM_DOWNLOAD_REPLY(Nullable<int> roleCode, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> maxRepId, Nullable<System.DateTime> replyDownloadDate)
        {
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var maxRepIdParameter = maxRepId.HasValue ?
                new ObjectParameter("MaxRepId", maxRepId) :
                new ObjectParameter("MaxRepId", typeof(int));
    
            var replyDownloadDateParameter = replyDownloadDate.HasValue ?
                new ObjectParameter("ReplyDownloadDate", replyDownloadDate) :
                new ObjectParameter("ReplyDownloadDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PM_DOWNLOAD_REPLY_Result>("USP_PM_DOWNLOAD_REPLY", roleCodeParameter, stateCodeParameter, districtCodeParameter, maxRepIdParameter, replyDownloadDateParameter);
        }
    
        public virtual ObjectResult<USP_PM_GET_FEEDBACK_Result> USP_PM_GET_FEEDBACK(Nullable<int> roleCode, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> maxFeedId)
        {
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var maxFeedIdParameter = maxFeedId.HasValue ?
                new ObjectParameter("MaxFeedId", maxFeedId) :
                new ObjectParameter("MaxFeedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PM_GET_FEEDBACK_Result>("USP_PM_GET_FEEDBACK", roleCodeParameter, stateCodeParameter, districtCodeParameter, maxFeedIdParameter);
        }
    
        public virtual ObjectResult<USP_PMGSY3_CN_PCI_ROADLIST_Result> USP_PMGSY3_CN_PCI_ROADLIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> scheme)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PMGSY3_CN_PCI_ROADLIST_Result>("USP_PMGSY3_CN_PCI_ROADLIST", stateParameter, districtParameter, blockParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_PMIS_WORK_DETAILS_Result> USP_PMIS_WORK_DETAILS(Nullable<int> rOADCODE)
        {
            var rOADCODEParameter = rOADCODE.HasValue ?
                new ObjectParameter("ROADCODE", rOADCODE) :
                new ObjectParameter("ROADCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PMIS_WORK_DETAILS_Result>("USP_PMIS_WORK_DETAILS", rOADCODEParameter);
        }
    
        public virtual ObjectResult<USP_PMS_BRIDGE_LIST_Result> USP_PMS_BRIDGE_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PMS_BRIDGE_LIST_Result>("USP_PMS_BRIDGE_LIST", sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter);
        }
    
        public virtual ObjectResult<USP_PMS_ROAD_LIST_Result> USP_PMS_ROAD_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PMS_ROAD_LIST_Result>("USP_PMS_ROAD_LIST", sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter);
        }
    
        public virtual ObjectResult<USP_PRO_LIST_STAGE_PROPOSALS_Result> USP_PRO_LIST_STAGE_PROPOSALS(Nullable<int> state, Nullable<int> district, Nullable<int> dpiu, Nullable<int> imsyear, string package)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var dpiuParameter = dpiu.HasValue ?
                new ObjectParameter("dpiu", dpiu) :
                new ObjectParameter("dpiu", typeof(int));
    
            var imsyearParameter = imsyear.HasValue ?
                new ObjectParameter("imsyear", imsyear) :
                new ObjectParameter("imsyear", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("package", package) :
                new ObjectParameter("package", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PRO_LIST_STAGE_PROPOSALS_Result>("USP_PRO_LIST_STAGE_PROPOSALS", stateParameter, districtParameter, dpiuParameter, imsyearParameter, packageParameter);
        }
    
        public virtual ObjectResult<USP_PRO_LIST_STAGE2_LINK_THROUGH_Result> USP_PRO_LIST_STAGE2_LINK_THROUGH(Nullable<int> state, Nullable<int> district, Nullable<int> dpiu, Nullable<int> imsyear, string package)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var dpiuParameter = dpiu.HasValue ?
                new ObjectParameter("dpiu", dpiu) :
                new ObjectParameter("dpiu", typeof(int));
    
            var imsyearParameter = imsyear.HasValue ?
                new ObjectParameter("imsyear", imsyear) :
                new ObjectParameter("imsyear", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("package", package) :
                new ObjectParameter("package", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PRO_LIST_STAGE2_LINK_THROUGH_Result>("USP_PRO_LIST_STAGE2_LINK_THROUGH", stateParameter, districtParameter, dpiuParameter, imsyearParameter, packageParameter);
        }
    
        public virtual ObjectResult<USP_PROG_TECH_REPORT_Result> USP_PROG_TECH_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string techType, string sTAStatus, string mRDStatus, string connectivity, string rpt, Nullable<byte> pMGSY, Nullable<int> techCode, string workStatus)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var techTypeParameter = techType != null ?
                new ObjectParameter("TechType", techType) :
                new ObjectParameter("TechType", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("Connectivity", connectivity) :
                new ObjectParameter("Connectivity", typeof(string));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var techCodeParameter = techCode.HasValue ?
                new ObjectParameter("TechCode", techCode) :
                new ObjectParameter("TechCode", typeof(int));
    
            var workStatusParameter = workStatus != null ?
                new ObjectParameter("WorkStatus", workStatus) :
                new ObjectParameter("WorkStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROG_TECH_REPORT_Result>("USP_PROG_TECH_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, techTypeParameter, sTAStatusParameter, mRDStatusParameter, connectivityParameter, rptParameter, pMGSYParameter, techCodeParameter, workStatusParameter);
        }
    
        public virtual ObjectResult<USP_PROGRESS_APP_IMAGES_Result> USP_PROGRESS_APP_IMAGES(Nullable<int> tYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROGRESS_APP_IMAGES_Result>("USP_PROGRESS_APP_IMAGES", tYPEParameter, sTATEParameter, dISTRICTParameter, mONTHParameter, yEARParameter);
        }
    
        public virtual int USP_PROGRESS_ROAD_WISE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> month, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY, Nullable<int> aGENCY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var aGENCYParameter = aGENCY.HasValue ?
                new ObjectParameter("AGENCY", aGENCY) :
                new ObjectParameter("AGENCY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROGRESS_ROAD_WISE", levelParameter, stateParameter, districtParameter, blockParameter, monthParameter, yearParameter, collaborationParameter, pMGSYParameter, aGENCYParameter);
        }
    
        public virtual int USP_PROJECT_STATISTICS_DATA(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROJECT_STATISTICS_DATA", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROJECT_STATISTICS_REPORT_Result> USP_PROJECT_STATISTICS_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROJECT_STATISTICS_REPORT_Result>("USP_PROJECT_STATISTICS_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROJECT_STATISTICS_REPORT_DISHA_Result> USP_PROJECT_STATISTICS_REPORT_DISHA(Nullable<int> level, Nullable<int> lgdState)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var lgdStateParameter = lgdState.HasValue ?
                new ObjectParameter("LgdState", lgdState) :
                new ObjectParameter("LgdState", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROJECT_STATISTICS_REPORT_DISHA_Result>("USP_PROJECT_STATISTICS_REPORT_DISHA", levelParameter, lgdStateParameter);
        }
    
        public virtual ObjectResult<USP_PROJECT_STATISTICS_REPORT_OMMAS_INTEGRATION_Result> USP_PROJECT_STATISTICS_REPORT_OMMAS_INTEGRATION(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROJECT_STATISTICS_REPORT_OMMAS_INTEGRATION_Result>("USP_PROJECT_STATISTICS_REPORT_OMMAS_INTEGRATION", stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROJECT_SUMMARY_REPORT_Result> USP_PROJECT_SUMMARY_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROJECT_SUMMARY_REPORT_Result>("USP_PROJECT_SUMMARY_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ACHIEVEMENT_REPORT_Result> USP_PROP_ACHIEVEMENT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ACHIEVEMENT_REPORT_Result>("USP_PROP_ACHIEVEMENT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_AGREEMENT_LIST_Result> USP_PROP_AGREEMENT_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> conID, string package, string status, string agreement, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var conIDParameter = conID.HasValue ?
                new ObjectParameter("ConID", conID) :
                new ObjectParameter("ConID", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var agreementParameter = agreement != null ?
                new ObjectParameter("Agreement", agreement) :
                new ObjectParameter("Agreement", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_AGREEMENT_LIST_Result>("USP_PROP_AGREEMENT_LIST", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, conIDParameter, packageParameter, statusParameter, agreementParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ANALYSIS_CBR_REPORT_Result> USP_PROP_ANALYSIS_CBR_REPORT(Nullable<int> level, string report, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ANALYSIS_CBR_REPORT_Result>("USP_PROP_ANALYSIS_CBR_REPORT", levelParameter, reportParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ANALYSIS_DATA_REPORT_Result> USP_PROP_ANALYSIS_DATA_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> toYear, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ANALYSIS_DATA_REPORT_Result>("USP_PROP_ANALYSIS_DATA_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, toYearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ANALYSIS_SANC_REPORT_Result> USP_PROP_ANALYSIS_SANC_REPORT(Nullable<int> level, string report, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ANALYSIS_SANC_REPORT_Result>("USP_PROP_ANALYSIS_SANC_REPORT", levelParameter, reportParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ASSET_VALUE_Result> USP_PROP_ASSET_VALUE(Nullable<byte> pMGSY)
        {
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ASSET_VALUE_Result>("USP_PROP_ASSET_VALUE", pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_AVG_PAVCOST_REPORT_Result> USP_PROP_AVG_PAVCOST_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> toYear, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_AVG_PAVCOST_REPORT_Result>("USP_PROP_AVG_PAVCOST_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, toYearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_AVGLEN_HAB_REPORT_Result> USP_PROP_AVGLEN_HAB_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_AVGLEN_HAB_REPORT_Result>("USP_PROP_AVGLEN_HAB_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_AVGLEN_REPORT_Result> USP_PROP_AVGLEN_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_AVGLEN_REPORT_Result>("USP_PROP_AVGLEN_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_BUILDING_COMPONENT_LIST_Result> USP_PROP_BUILDING_COMPONENT_LIST(Nullable<int> rOAD_CODE)
        {
            var rOAD_CODEParameter = rOAD_CODE.HasValue ?
                new ObjectParameter("ROAD_CODE", rOAD_CODE) :
                new ObjectParameter("ROAD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_BUILDING_COMPONENT_LIST_Result>("USP_PROP_BUILDING_COMPONENT_LIST", rOAD_CODEParameter);
        }
    
        public virtual ObjectResult<USP_PROP_CN_MAINT_REPORT_Result> USP_PROP_CN_MAINT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_CN_MAINT_REPORT_Result>("USP_PROP_CN_MAINT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_COMPLETION_REPORT_Result> USP_PROP_COMPLETION_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_COMPLETION_REPORT_Result>("USP_PROP_COMPLETION_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_CONST_REPORT_Result> USP_PROP_CONST_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> toYear, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_CONST_REPORT_Result>("USP_PROP_CONST_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, toYearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_COST_PERKM_REPORT_Result> USP_PROP_COST_PERKM_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_COST_PERKM_REPORT_Result>("USP_PROP_COST_PERKM_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_DPIU_LIST_REPORT_Result> USP_PROP_DPIU_LIST_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> agency, Nullable<int> dPIU, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var dPIUParameter = dPIU.HasValue ?
                new ObjectParameter("DPIU", dPIU) :
                new ObjectParameter("DPIU", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_DPIU_LIST_REPORT_Result>("USP_PROP_DPIU_LIST_REPORT", levelParameter, stateParameter, districtParameter, agencyParameter, dPIUParameter, yearParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_DPIU_RATING_REPORT_Result> USP_PROP_DPIU_RATING_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_DPIU_RATING_REPORT_Result>("USP_PROP_DPIU_RATING_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual int USP_PROP_DROP_ABSTRACT_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROP_DROP_ABSTRACT_LIST", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_DROP_LIST_Result> USP_PROP_DROP_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> reqId, Nullable<int> dropCode, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("ReqId", reqId) :
                new ObjectParameter("ReqId", typeof(int));
    
            var dropCodeParameter = dropCode.HasValue ?
                new ObjectParameter("DropCode", dropCode) :
                new ObjectParameter("DropCode", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_DROP_LIST_Result>("USP_PROP_DROP_LIST", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, reqIdParameter, dropCodeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_EMC_REPORT_Result> USP_PROP_EMC_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_EMC_REPORT_Result>("USP_PROP_EMC_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_EXEC_REPORT_Result> USP_PROP_EXEC_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string type, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_EXEC_REPORT_Result>("USP_PROP_EXEC_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_FIN_REPORT_Result> USP_PROP_FIN_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string type, string progress, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var progressParameter = progress != null ?
                new ObjectParameter("Progress", progress) :
                new ObjectParameter("Progress", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_FIN_REPORT_Result>("USP_PROP_FIN_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, typeParameter, progressParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_FPP_AGENCY_PROG_REPORT_Result> USP_PROP_FPP_AGENCY_PROG_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_FPP_AGENCY_PROG_REPORT_Result>("USP_PROP_FPP_AGENCY_PROG_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_FPP_AGENCY_REPORT_Result> USP_PROP_FPP_AGENCY_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> agency, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_FPP_AGENCY_REPORT_Result>("USP_PROP_FPP_AGENCY_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, agencyParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_GEPNIC_INTEGRATION_DATA_Result> USP_PROP_GEPNIC_INTEGRATION_DATA(Nullable<long> refno, string agency)
        {
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_GEPNIC_INTEGRATION_DATA_Result>("USP_PROP_GEPNIC_INTEGRATION_DATA", refnoParameter, agencyParameter);
        }
    
        public virtual int USP_PROP_HAB_PPT_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> year, Nullable<int> curMonth, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var curMonthParameter = curMonth.HasValue ?
                new ObjectParameter("CurMonth", curMonth) :
                new ObjectParameter("CurMonth", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROP_HAB_PPT_LIST", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, yearParameter, curMonthParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_INSP_REPORT_Result> USP_PROP_INSP_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string type, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_INSP_REPORT_Result>("USP_PROP_INSP_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_LEN_PERKM_REPORT_Result> USP_PROP_LEN_PERKM_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> batch, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_LEN_PERKM_REPORT_Result>("USP_PROP_LEN_PERKM_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_LEN_REPORT_Result> USP_PROP_LEN_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_LEN_REPORT_Result>("USP_PROP_LEN_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_LIST_REPORT_Result> USP_PROP_LIST_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_LIST_REPORT_Result>("USP_PROP_LIST_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_MAINT_AGREEMENT_LIST_Result> USP_PROP_MAINT_AGREEMENT_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_MAINT_AGREEMENT_LIST_Result>("USP_PROP_MAINT_AGREEMENT_LIST", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual int USP_PROP_MAINT_PPT_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> year, Nullable<int> curMonth, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var curMonthParameter = curMonth.HasValue ?
                new ObjectParameter("CurMonth", curMonth) :
                new ObjectParameter("CurMonth", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROP_MAINT_PPT_LIST", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, yearParameter, curMonthParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_NERAGA_INTEGRATION_DATA_Result> USP_PROP_NERAGA_INTEGRATION_DATA(Nullable<long> refno, string agency)
        {
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_NERAGA_INTEGRATION_DATA_Result>("USP_PROP_NERAGA_INTEGRATION_DATA", refnoParameter, agencyParameter);
        }
    
        public virtual ObjectResult<USP_PROP_NERAGA_INTEGRATION_DATA_MAINTENANCE_Result> USP_PROP_NERAGA_INTEGRATION_DATA_MAINTENANCE(Nullable<long> refno, string agency)
        {
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_NERAGA_INTEGRATION_DATA_MAINTENANCE_Result>("USP_PROP_NERAGA_INTEGRATION_DATA_MAINTENANCE", refnoParameter, agencyParameter);
        }
    
        public virtual ObjectResult<string> USP_PROP_NERAGA_INTEGRATION_DATA_XML(Nullable<long> refno, string agency)
        {
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("agency", agency) :
                new ObjectParameter("agency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_PROP_NERAGA_INTEGRATION_DATA_XML", refnoParameter, agencyParameter);
        }
    
        public virtual int USP_PROP_NERAGA_INTEGRATION_INSERT_DATA(Nullable<int> state, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string propType, Nullable<int> scheme, string proposals, ObjectParameter refNo, string gEPNIC_NREGA, Nullable<int> orgId)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var propTypeParameter = propType != null ?
                new ObjectParameter("propType", propType) :
                new ObjectParameter("propType", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            var proposalsParameter = proposals != null ?
                new ObjectParameter("proposals", proposals) :
                new ObjectParameter("proposals", typeof(string));
    
            var gEPNIC_NREGAParameter = gEPNIC_NREGA != null ?
                new ObjectParameter("GEPNIC_NREGA", gEPNIC_NREGA) :
                new ObjectParameter("GEPNIC_NREGA", typeof(string));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROP_NERAGA_INTEGRATION_INSERT_DATA", stateParameter, yearParameter, batchParameter, collaborationParameter, propTypeParameter, schemeParameter, proposalsParameter, refNo, gEPNIC_NREGAParameter, orgIdParameter);
        }
    
        public virtual int USP_PROP_NERAGA_INTEGRATION_INSERT_DATA_MAINTENANCE(Nullable<int> state, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string propType, Nullable<int> scheme, string proposals, ObjectParameter refNo, string gEPNIC_NREGA, Nullable<int> orgId)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("collaboration", collaboration) :
                new ObjectParameter("collaboration", typeof(int));
    
            var propTypeParameter = propType != null ?
                new ObjectParameter("propType", propType) :
                new ObjectParameter("propType", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            var proposalsParameter = proposals != null ?
                new ObjectParameter("proposals", proposals) :
                new ObjectParameter("proposals", typeof(string));
    
            var gEPNIC_NREGAParameter = gEPNIC_NREGA != null ?
                new ObjectParameter("GEPNIC_NREGA", gEPNIC_NREGA) :
                new ObjectParameter("GEPNIC_NREGA", typeof(string));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROP_NERAGA_INTEGRATION_INSERT_DATA_MAINTENANCE", stateParameter, yearParameter, batchParameter, collaborationParameter, propTypeParameter, schemeParameter, proposalsParameter, refNo, gEPNIC_NREGAParameter, orgIdParameter);
        }
    
        public virtual int USP_PROP_NERAGA_UPDATE_RECORD_COUNT(Nullable<long> refno, string flag)
        {
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PROP_NERAGA_UPDATE_RECORD_COUNT", refnoParameter, flagParameter);
        }
    
        public virtual ObjectResult<USP_PROP_PHY_REPORT_Result> USP_PROP_PHY_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_PHY_REPORT_Result>("USP_PROP_PHY_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, batchParameter, yearParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_POP_AADT_REPORT_Result> USP_PROP_POP_AADT_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_POP_AADT_REPORT_Result>("USP_PROP_POP_AADT_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_PROGRESS_MON_REPORT_Result> USP_PROP_PROGRESS_MON_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> month, Nullable<int> payYear, Nullable<int> pop, string payStatus, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var payYearParameter = payYear.HasValue ?
                new ObjectParameter("PayYear", payYear) :
                new ObjectParameter("PayYear", typeof(int));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var payStatusParameter = payStatus != null ?
                new ObjectParameter("PayStatus", payStatus) :
                new ObjectParameter("PayStatus", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_PROGRESS_MON_REPORT_Result>("USP_PROP_PROGRESS_MON_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, monthParameter, payYearParameter, popParameter, payStatusParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_R7_REPORT_Result> USP_PROP_R7_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> cBR, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var cBRParameter = cBR.HasValue ?
                new ObjectParameter("CBR", cBR) :
                new ObjectParameter("CBR", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_R7_REPORT_Result>("USP_PROP_R7_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, cBRParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ROAD_COMPLETED_Result> USP_PROP_ROAD_COMPLETED(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ROAD_COMPLETED_Result>("USP_PROP_ROAD_COMPLETED", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ROAD_PROGRESS_Result> USP_PROP_ROAD_PROGRESS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ROAD_PROGRESS_Result>("USP_PROP_ROAD_PROGRESS", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_ROAD_REPORT_Result> USP_PROP_ROAD_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_ROAD_REPORT_Result>("USP_PROP_ROAD_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_SANCTION_ABSTRACT_LIST_Result> USP_PROP_SANCTION_ABSTRACT_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_SANCTION_ABSTRACT_LIST_Result>("USP_PROP_SANCTION_ABSTRACT_LIST", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_SANCTION_ABSTRACT_LIST_AGENCY_Result> USP_PROP_SANCTION_ABSTRACT_LIST_AGENCY(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> agency, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_SANCTION_ABSTRACT_LIST_AGENCY_Result>("USP_PROP_SANCTION_ABSTRACT_LIST_AGENCY", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, agencyParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_SANCTION_LIST_Result> USP_PROP_SANCTION_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_SANCTION_LIST_Result>("USP_PROP_SANCTION_LIST", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_SANCTION_LIST_AGENCY_Result> USP_PROP_SANCTION_LIST_AGENCY(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> agency, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_SANCTION_LIST_AGENCY_Result>("USP_PROP_SANCTION_LIST_AGENCY", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, agencyParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_SCRUTINY_REPORT_Result> USP_PROP_SCRUTINY_REPORT(string tYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> sCHEME, Nullable<int> tACODE, string tANAME, Nullable<byte> pMGSY)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var sCHEMEParameter = sCHEME.HasValue ?
                new ObjectParameter("SCHEME", sCHEME) :
                new ObjectParameter("SCHEME", typeof(int));
    
            var tACODEParameter = tACODE.HasValue ?
                new ObjectParameter("TACODE", tACODE) :
                new ObjectParameter("TACODE", typeof(int));
    
            var tANAMEParameter = tANAME != null ?
                new ObjectParameter("TANAME", tANAME) :
                new ObjectParameter("TANAME", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_SCRUTINY_REPORT_Result>("USP_PROP_SCRUTINY_REPORT", tYPEParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter, sCHEMEParameter, tACODEParameter, tANAMEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_SOIL_PATTERN_REPORT_Result> USP_PROP_SOIL_PATTERN_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> toYear, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> cBR, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var cBRParameter = cBR.HasValue ?
                new ObjectParameter("CBR", cBR) :
                new ObjectParameter("CBR", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_SOIL_PATTERN_REPORT_Result>("USP_PROP_SOIL_PATTERN_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, toYearParameter, batchParameter, collaborationParameter, cBRParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_TASD_REPORT_Result> USP_PROP_TASD_REPORT(string tYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> sCHEME, Nullable<int> tACODE, string tANAME, Nullable<byte> pMGSY)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var sCHEMEParameter = sCHEME.HasValue ?
                new ObjectParameter("SCHEME", sCHEME) :
                new ObjectParameter("SCHEME", typeof(int));
    
            var tACODEParameter = tACODE.HasValue ?
                new ObjectParameter("TACODE", tACODE) :
                new ObjectParameter("TACODE", typeof(int));
    
            var tANAMEParameter = tANAME != null ?
                new ObjectParameter("TANAME", tANAME) :
                new ObjectParameter("TANAME", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_TASD_REPORT_Result>("USP_PROP_TASD_REPORT", tYPEParameter, sTATEParameter, dISTRICTParameter, yEARParameter, bATCHParameter, sCHEMEParameter, tACODEParameter, tANAMEParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_TECH_REPORT_Result> USP_PROP_TECH_REPORT(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string techType, string sTAStatus, string mRDStatus, string connectivity, string rpt, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var techTypeParameter = techType != null ?
                new ObjectParameter("TechType", techType) :
                new ObjectParameter("TechType", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("Connectivity", connectivity) :
                new ObjectParameter("Connectivity", typeof(string));
    
            var rptParameter = rpt != null ?
                new ObjectParameter("Rpt", rpt) :
                new ObjectParameter("Rpt", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_TECH_REPORT_Result>("USP_PROP_TECH_REPORT", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, techTypeParameter, sTAStatusParameter, mRDStatusParameter, connectivityParameter, rptParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_WITHOUT_UPLOADS_Result> USP_PROP_WITHOUT_UPLOADS(Nullable<int> state, Nullable<int> district, Nullable<int> pIU, Nullable<int> year, Nullable<int> batch, string type)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pIUParameter = pIU.HasValue ?
                new ObjectParameter("PIU", pIU) :
                new ObjectParameter("PIU", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_WITHOUT_UPLOADS_Result>("USP_PROP_WITHOUT_UPLOADS", stateParameter, districtParameter, pIUParameter, yearParameter, batchParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_PROP_WORKS_LIST_Result> USP_PROP_WORKS_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, string status, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_WORKS_LIST_Result>("USP_PROP_WORKS_LIST", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROP_WORKS_LIST_MP_Result> USP_PROP_WORKS_LIST_MP(Nullable<int> state, Nullable<int> mPConstituency, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var mPConstituencyParameter = mPConstituency.HasValue ?
                new ObjectParameter("MPConstituency", mPConstituency) :
                new ObjectParameter("MPConstituency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROP_WORKS_LIST_MP_Result>("USP_PROP_WORKS_LIST_MP", stateParameter, mPConstituencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CARRIAGE_Result> USP_PROPDATA_CARRIAGE(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> carriage, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var carriageParameter = carriage.HasValue ?
                new ObjectParameter("Carriage", carriage) :
                new ObjectParameter("Carriage", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CARRIAGE_Result>("USP_PROPDATA_CARRIAGE", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, carriageParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CARRIAGE_DETAILS_Result> USP_PROPDATA_CARRIAGE_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> carriage, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var carriageParameter = carriage.HasValue ?
                new ObjectParameter("Carriage", carriage) :
                new ObjectParameter("Carriage", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CARRIAGE_DETAILS_Result>("USP_PROPDATA_CARRIAGE_DETAILS", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, carriageParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNDUP_Result> USP_PROPDATA_CNDUP(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNDUP_Result>("USP_PROPDATA_CNDUP", levelParameter, stateParameter, districtParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNDUP_DETAILS_Result> USP_PROPDATA_CNDUP_DETAILS(string report, Nullable<int> state, Nullable<int> district, Nullable<int> block, string road, Nullable<byte> pMGSY)
        {
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNDUP_DETAILS_Result>("USP_PROPDATA_CNDUP_DETAILS", reportParameter, stateParameter, districtParameter, blockParameter, roadParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNLEN_Result> USP_PROPDATA_CNLEN(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNLEN_Result>("USP_PROPDATA_CNLEN", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNMUL_Result> USP_PROPDATA_CNMUL(string sanction, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, Nullable<byte> pMGSY)
        {
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNMUL_Result>("USP_PROPDATA_CNMUL", sanctionParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNMUL_DETAILS_Result> USP_PROPDATA_CNMUL_DETAILS(string report, string sanction, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, string road, Nullable<byte> pMGSY)
        {
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNMUL_DETAILS_Result>("USP_PROPDATA_CNMUL_DETAILS", reportParameter, sanctionParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, roadParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNNOTMAP_Result> USP_PROPDATA_CNNOTMAP(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, string mRDStatus, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNNOTMAP_Result>("USP_PROPDATA_CNNOTMAP", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, mRDStatusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNNOTMAP_DETAILS_Result> USP_PROPDATA_CNNOTMAP_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNNOTMAP_DETAILS_Result>("USP_PROPDATA_CNNOTMAP_DETAILS", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_CNNOTMAP_PHASE_Result> USP_PROPDATA_CNNOTMAP_PHASE(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_CNNOTMAP_PHASE_Result>("USP_PROPDATA_CNNOTMAP_PHASE", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_HAB_Result> USP_PROPDATA_HAB(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> pop, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_HAB_Result>("USP_PROPDATA_HAB", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, popParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_HAB_DETAILS_Result> USP_PROPDATA_HAB_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> pop, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var popParameter = pop.HasValue ?
                new ObjectParameter("Pop", pop) :
                new ObjectParameter("Pop", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_HAB_DETAILS_Result>("USP_PROPDATA_HAB_DETAILS", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, popParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_MAINZ_Result> USP_PROPDATA_MAINZ(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string type, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_MAINZ_Result>("USP_PROPDATA_MAINZ", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, typeParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_MAINZ_DETAILS_Result> USP_PROPDATA_MAINZ_DETAILS(string report, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string type, string sTAStatus, string sanction, Nullable<byte> pMGSY)
        {
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_MAINZ_DETAILS_Result>("USP_PROPDATA_MAINZ_DETAILS", reportParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, typeParameter, sTAStatusParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_MISCLASS_Result> USP_PROPDATA_MISCLASS(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string sTAStatus, string mRDStatus, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_MISCLASS_Result>("USP_PROPDATA_MISCLASS", stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, sTAStatusParameter, mRDStatusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATA_MISCLASS_DETAILS_Result> USP_PROPDATA_MISCLASS_DETAILS(string report, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string type, string sTAStatus, string mRDStatus, Nullable<byte> pMGSY)
        {
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sTAStatusParameter = sTAStatus != null ?
                new ObjectParameter("STAStatus", sTAStatus) :
                new ObjectParameter("STAStatus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATA_MISCLASS_DETAILS_Result>("USP_PROPDATA_MISCLASS_DETAILS", reportParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, typeParameter, sTAStatusParameter, mRDStatusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATAGAP_REPORT_Result> USP_PROPDATAGAP_REPORT(Nullable<int> rptNo, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string type, string connectivity, string status, Nullable<byte> pMGSY)
        {
            var rptNoParameter = rptNo.HasValue ?
                new ObjectParameter("RptNo", rptNo) :
                new ObjectParameter("RptNo", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("Connectivity", connectivity) :
                new ObjectParameter("Connectivity", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATAGAP_REPORT_Result>("USP_PROPDATAGAP_REPORT", rptNoParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, typeParameter, connectivityParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPDATAGAP_REPORT_DETAILS_Result> USP_PROPDATAGAP_REPORT_DETAILS(Nullable<int> rptNo, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, string type, string connectivity, string status, Nullable<byte> pMGSY)
        {
            var rptNoParameter = rptNo.HasValue ?
                new ObjectParameter("RptNo", rptNo) :
                new ObjectParameter("RptNo", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectivityParameter = connectivity != null ?
                new ObjectParameter("Connectivity", connectivity) :
                new ObjectParameter("Connectivity", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPDATAGAP_REPORT_DETAILS_Result>("USP_PROPDATAGAP_REPORT_DETAILS", rptNoParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, typeParameter, connectivityParameter, statusParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPOSAL_ANALYSIS_Result> USP_PROPOSAL_ANALYSIS(Nullable<int> state, string type, string scrutiny, string sanction, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var scrutinyParameter = scrutiny != null ?
                new ObjectParameter("Scrutiny", scrutiny) :
                new ObjectParameter("Scrutiny", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPOSAL_ANALYSIS_Result>("USP_PROPOSAL_ANALYSIS", stateParameter, typeParameter, scrutinyParameter, sanctionParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPOSAL_ANALYSIS_CBR_Result> USP_PROPOSAL_ANALYSIS_CBR(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPOSAL_ANALYSIS_CBR_Result>("USP_PROPOSAL_ANALYSIS_CBR", roadParameter);
        }
    
        public virtual ObjectResult<USP_PROPOSAL_ANALYSIS_DET_Result> USP_PROPOSAL_ANALYSIS_DET(Nullable<int> state, Nullable<int> year, Nullable<int> batch, string type, string scrutiny, string sanction, string report, Nullable<byte> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var scrutinyParameter = scrutiny != null ?
                new ObjectParameter("Scrutiny", scrutiny) :
                new ObjectParameter("Scrutiny", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("Sanction", sanction) :
                new ObjectParameter("Sanction", typeof(string));
    
            var reportParameter = report != null ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPOSAL_ANALYSIS_DET_Result>("USP_PROPOSAL_ANALYSIS_DET", stateParameter, yearParameter, batchParameter, typeParameter, scrutinyParameter, sanctionParameter, reportParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPOSAL_ANALYSIS_HAB_Result> USP_PROPOSAL_ANALYSIS_HAB(Nullable<int> road, Nullable<int> pMGSY)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPOSAL_ANALYSIS_HAB_Result>("USP_PROPOSAL_ANALYSIS_HAB", roadParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PROPOSAL_ANALYSIS_TRAF_Result> USP_PROPOSAL_ANALYSIS_TRAF(Nullable<int> road)
        {
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PROPOSAL_ANALYSIS_TRAF_Result>("USP_PROPOSAL_ANALYSIS_TRAF", roadParameter);
        }
    
        public virtual ObjectResult<USP_PRPO_PHYFIN_SUMMARY_REPORT_Result> USP_PRPO_PHYFIN_SUMMARY_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> batch, Nullable<int> year, Nullable<int> collaboration, string type, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PRPO_PHYFIN_SUMMARY_REPORT_Result>("USP_PRPO_PHYFIN_SUMMARY_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, batchParameter, yearParameter, collaborationParameter, typeParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_PTA_PAYMENT_REPORT_Result> USP_PTA_PAYMENT_REPORT(Nullable<int> iNVOICE_ID)
        {
            var iNVOICE_IDParameter = iNVOICE_ID.HasValue ?
                new ObjectParameter("INVOICE_ID", iNVOICE_ID) :
                new ObjectParameter("INVOICE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PTA_PAYMENT_REPORT_Result>("USP_PTA_PAYMENT_REPORT", iNVOICE_IDParameter);
        }
    
        public virtual ObjectResult<USP_PUSH_ACK_FIRST_LEVEL_SERVICE_Result> USP_PUSH_ACK_FIRST_LEVEL_SERVICE(string packageID)
        {
            var packageIDParameter = packageID != null ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PUSH_ACK_FIRST_LEVEL_SERVICE_Result>("USP_PUSH_ACK_FIRST_LEVEL_SERVICE", packageIDParameter);
        }
    
        public virtual ObjectResult<USP_PUSH_ACK_SECOND_LEVEL_SERVICE_Result> USP_PUSH_ACK_SECOND_LEVEL_SERVICE(string packageID)
        {
            var packageIDParameter = packageID != null ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PUSH_ACK_SECOND_LEVEL_SERVICE_Result>("USP_PUSH_ACK_SECOND_LEVEL_SERVICE", packageIDParameter);
        }
    
        public virtual ObjectResult<USP_PUSH_CORRECTED_EMARG_DETAILS_Result> USP_PUSH_CORRECTED_EMARG_DETAILS(string packageID)
        {
            var packageIDParameter = packageID != null ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PUSH_CORRECTED_EMARG_DETAILS_Result>("USP_PUSH_CORRECTED_EMARG_DETAILS", packageIDParameter);
        }
    
        public virtual ObjectResult<USP_QM_ABSTRACT_GRADING_MONITOR_WISE_Result> USP_QM_ABSTRACT_GRADING_MONITOR_WISE(Nullable<int> state, string monitorcode, string qmtype, Nullable<int> frommonth, Nullable<int> fromyear, Nullable<int> tomonth, Nullable<int> toyear)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var monitorcodeParameter = monitorcode != null ?
                new ObjectParameter("monitorcode", monitorcode) :
                new ObjectParameter("monitorcode", typeof(string));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ABSTRACT_GRADING_MONITOR_WISE_Result>("USP_QM_ABSTRACT_GRADING_MONITOR_WISE", stateParameter, monitorcodeParameter, qmtypeParameter, frommonthParameter, fromyearParameter, tomonthParameter, toyearParameter);
        }
    
        public virtual ObjectResult<USP_QM_ABSTRACT_GRADING_STATE_WISE_Result> USP_QM_ABSTRACT_GRADING_STATE_WISE(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> fROMYEAR, Nullable<int> fROMMONTH, Nullable<int> tOYEAR, Nullable<int> tOMONTH, string qMTYPE, Nullable<int> scheme)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var fROMYEARParameter = fROMYEAR.HasValue ?
                new ObjectParameter("FROMYEAR", fROMYEAR) :
                new ObjectParameter("FROMYEAR", typeof(int));
    
            var fROMMONTHParameter = fROMMONTH.HasValue ?
                new ObjectParameter("FROMMONTH", fROMMONTH) :
                new ObjectParameter("FROMMONTH", typeof(int));
    
            var tOYEARParameter = tOYEAR.HasValue ?
                new ObjectParameter("TOYEAR", tOYEAR) :
                new ObjectParameter("TOYEAR", typeof(int));
    
            var tOMONTHParameter = tOMONTH.HasValue ?
                new ObjectParameter("TOMONTH", tOMONTH) :
                new ObjectParameter("TOMONTH", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ABSTRACT_GRADING_STATE_WISE_Result>("USP_QM_ABSTRACT_GRADING_STATE_WISE", lEVELParameter, sTATEParameter, fROMYEARParameter, fROMMONTHParameter, tOYEARParameter, tOMONTHParameter, qMTYPEParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_QM_ABSTRACT_GRADING_STATE_WISE_DISHA_Result> USP_QM_ABSTRACT_GRADING_STATE_WISE_DISHA(Nullable<int> lEVEL, Nullable<int> lDGSTATE, Nullable<int> fROMYEAR, Nullable<int> fROMMONTH, Nullable<int> tOYEAR, Nullable<int> tOMONTH, string qMTYPE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var lDGSTATEParameter = lDGSTATE.HasValue ?
                new ObjectParameter("LDGSTATE", lDGSTATE) :
                new ObjectParameter("LDGSTATE", typeof(int));
    
            var fROMYEARParameter = fROMYEAR.HasValue ?
                new ObjectParameter("FROMYEAR", fROMYEAR) :
                new ObjectParameter("FROMYEAR", typeof(int));
    
            var fROMMONTHParameter = fROMMONTH.HasValue ?
                new ObjectParameter("FROMMONTH", fROMMONTH) :
                new ObjectParameter("FROMMONTH", typeof(int));
    
            var tOYEARParameter = tOYEAR.HasValue ?
                new ObjectParameter("TOYEAR", tOYEAR) :
                new ObjectParameter("TOYEAR", typeof(int));
    
            var tOMONTHParameter = tOMONTH.HasValue ?
                new ObjectParameter("TOMONTH", tOMONTH) :
                new ObjectParameter("TOMONTH", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ABSTRACT_GRADING_STATE_WISE_DISHA_Result>("USP_QM_ABSTRACT_GRADING_STATE_WISE_DISHA", lEVELParameter, lDGSTATEParameter, fROMYEARParameter, fROMMONTHParameter, tOYEARParameter, tOMONTHParameter, qMTYPEParameter);
        }
    
        public virtual ObjectResult<USP_QM_ABSTRACT_GRADING_STATE_WISE_V1_Result> USP_QM_ABSTRACT_GRADING_STATE_WISE_V1(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> fROMYEAR, Nullable<int> fROMMONTH, Nullable<int> tOYEAR, Nullable<int> tOMONTH, string qMTYPE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var fROMYEARParameter = fROMYEAR.HasValue ?
                new ObjectParameter("FROMYEAR", fROMYEAR) :
                new ObjectParameter("FROMYEAR", typeof(int));
    
            var fROMMONTHParameter = fROMMONTH.HasValue ?
                new ObjectParameter("FROMMONTH", fROMMONTH) :
                new ObjectParameter("FROMMONTH", typeof(int));
    
            var tOYEARParameter = tOYEAR.HasValue ?
                new ObjectParameter("TOYEAR", tOYEAR) :
                new ObjectParameter("TOYEAR", typeof(int));
    
            var tOMONTHParameter = tOMONTH.HasValue ?
                new ObjectParameter("TOMONTH", tOMONTH) :
                new ObjectParameter("TOMONTH", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ABSTRACT_GRADING_STATE_WISE_V1_Result>("USP_QM_ABSTRACT_GRADING_STATE_WISE_V1", lEVELParameter, sTATEParameter, fROMYEARParameter, fROMMONTHParameter, tOYEARParameter, tOMONTHParameter, qMTYPEParameter);
        }
    
        public virtual ObjectResult<USP_QM_AGENCYWISE_ATR_Result> USP_QM_AGENCYWISE_ATR(Nullable<int> state, Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_AGENCYWISE_ATR_Result>("USP_QM_AGENCYWISE_ATR", stateParameter, fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter);
        }
    
        public virtual ObjectResult<USP_QM_AGENCYWISE_INSPECTIONS_Result> USP_QM_AGENCYWISE_INSPECTIONS(Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth, string qmtype)
        {
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_AGENCYWISE_INSPECTIONS_Result>("USP_QM_AGENCYWISE_INSPECTIONS", fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter, qmtypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_Result> USP_QM_ATR(Nullable<int> lEVEL, Nullable<int> state, Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_Result>("USP_QM_ATR", lEVELParameter, stateParameter, fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_AGENCY_Result> USP_QM_ATR_AGENCY(Nullable<int> level, Nullable<int> state, Nullable<int> fromYear, Nullable<int> fromMonth, Nullable<int> toYear, Nullable<int> toMonth, Nullable<int> eACODE)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(int));
    
            var fromMonthParameter = fromMonth.HasValue ?
                new ObjectParameter("FromMonth", fromMonth) :
                new ObjectParameter("FromMonth", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var toMonthParameter = toMonth.HasValue ?
                new ObjectParameter("ToMonth", toMonth) :
                new ObjectParameter("ToMonth", typeof(int));
    
            var eACODEParameter = eACODE.HasValue ?
                new ObjectParameter("EACODE", eACODE) :
                new ObjectParameter("EACODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_AGENCY_Result>("USP_QM_ATR_AGENCY", levelParameter, stateParameter, fromYearParameter, fromMonthParameter, toYearParameter, toMonthParameter, eACODEParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_AGENCY_DETAIL_Result> USP_QM_ATR_AGENCY_DETAIL(Nullable<int> lEVEL, Nullable<int> state, Nullable<int> dISTRICT, Nullable<int> fromYear, Nullable<int> fromMonth, Nullable<int> toYear, Nullable<int> toMonth, Nullable<int> eACODE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(int));
    
            var fromMonthParameter = fromMonth.HasValue ?
                new ObjectParameter("FromMonth", fromMonth) :
                new ObjectParameter("FromMonth", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var toMonthParameter = toMonth.HasValue ?
                new ObjectParameter("ToMonth", toMonth) :
                new ObjectParameter("ToMonth", typeof(int));
    
            var eACODEParameter = eACODE.HasValue ?
                new ObjectParameter("EACODE", eACODE) :
                new ObjectParameter("EACODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_AGENCY_DETAIL_Result>("USP_QM_ATR_AGENCY_DETAIL", lEVELParameter, stateParameter, dISTRICTParameter, fromYearParameter, fromMonthParameter, toYearParameter, toMonthParameter, eACODEParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_BULK_REGRADE_LIST_Result> USP_QM_ATR_BULK_REGRADE_LIST(Nullable<int> state, Nullable<int> duration)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_BULK_REGRADE_LIST_Result>("USP_QM_ATR_BULK_REGRADE_LIST", stateParameter, durationParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_NQM_Result> USP_QM_ATR_NQM(Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth)
        {
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_NQM_Result>("USP_QM_ATR_NQM", fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_NQM_DETAILS_Result> USP_QM_ATR_NQM_DETAILS(Nullable<int> lEVEL, Nullable<int> qMCODE, Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_NQM_DETAILS_Result>("USP_QM_ATR_NQM_DETAILS", lEVELParameter, qMCODEParameter, fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter);
        }
    
        public virtual ObjectResult<USP_QM_ATR_REGRADE_Result> USP_QM_ATR_REGRADE(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> gRADE, string rEGRADE, string sTATUS, Nullable<System.DateTime> rEGRADE_DATE_FROM, Nullable<System.DateTime> rEGRADE_DATE_TO)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var gRADEParameter = gRADE.HasValue ?
                new ObjectParameter("GRADE", gRADE) :
                new ObjectParameter("GRADE", typeof(int));
    
            var rEGRADEParameter = rEGRADE != null ?
                new ObjectParameter("REGRADE", rEGRADE) :
                new ObjectParameter("REGRADE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var rEGRADE_DATE_FROMParameter = rEGRADE_DATE_FROM.HasValue ?
                new ObjectParameter("REGRADE_DATE_FROM", rEGRADE_DATE_FROM) :
                new ObjectParameter("REGRADE_DATE_FROM", typeof(System.DateTime));
    
            var rEGRADE_DATE_TOParameter = rEGRADE_DATE_TO.HasValue ?
                new ObjectParameter("REGRADE_DATE_TO", rEGRADE_DATE_TO) :
                new ObjectParameter("REGRADE_DATE_TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_ATR_REGRADE_Result>("USP_QM_ATR_REGRADE", sTATEParameter, dISTRICTParameter, gRADEParameter, rEGRADEParameter, sTATUSParameter, rEGRADE_DATE_FROMParameter, rEGRADE_DATE_TOParameter);
        }
    
        public virtual int USP_QM_ATR_REGRADE_BULK(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_ATR_REGRADE_BULK", iDParameter);
        }
    
        public virtual ObjectResult<USP_QM_BLOCK_GRADING_ABSTRACT_Result> USP_QM_BLOCK_GRADING_ABSTRACT(Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth, Nullable<int> state, Nullable<int> district, string qmtype)
        {
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_BLOCK_GRADING_ABSTRACT_Result>("USP_QM_BLOCK_GRADING_ABSTRACT", fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter, stateParameter, districtParameter, qmtypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_BLOCK_LAT_LONG_Result> USP_QM_BLOCK_LAT_LONG(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_BLOCK_LAT_LONG_Result>("USP_QM_BLOCK_LAT_LONG", sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMMENCED_INSP_DETAILS_Result> USP_QM_COMMENCED_INSP_DETAILS(Nullable<int> stateCode, string qmType, Nullable<int> duration)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMMENCED_INSP_DETAILS_Result>("USP_QM_COMMENCED_INSP_DETAILS", stateCodeParameter, qmTypeParameter, durationParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMMENCED_SQM_BUT_NO_NQM_Result> USP_QM_COMMENCED_SQM_BUT_NO_NQM(Nullable<int> level, Nullable<int> state, Nullable<int> district, string status, string qmtype, Nullable<int> scheme)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMMENCED_SQM_BUT_NO_NQM_Result>("USP_QM_COMMENCED_SQM_BUT_NO_NQM", levelParameter, stateParameter, districtParameter, statusParameter, qmtypeParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMMENCED_SQMNQM_INSP_DETAILS_Result> USP_QM_COMMENCED_SQMNQM_INSP_DETAILS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> duration, string status, string qmtype, Nullable<int> scheme)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMMENCED_SQMNQM_INSP_DETAILS_Result>("USP_QM_COMMENCED_SQMNQM_INSP_DETAILS", levelParameter, stateParameter, districtParameter, durationParameter, statusParameter, qmtypeParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMMENCED_WORKS_Result> USP_QM_COMMENCED_WORKS(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMMENCED_WORKS_Result>("USP_QM_COMMENCED_WORKS", stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMMENCED_WORKS_DETAILS_Result> USP_QM_COMMENCED_WORKS_DETAILS(Nullable<int> stateCode, Nullable<int> duration)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMMENCED_WORKS_DETAILS_Result>("USP_QM_COMMENCED_WORKS_DETAILS", stateCodeParameter, durationParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMMENCED_WORKS_V1_Result> USP_QM_COMMENCED_WORKS_V1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMMENCED_WORKS_V1_Result>("USP_QM_COMMENCED_WORKS_V1");
        }
    
        public virtual ObjectResult<USP_QM_COMPLAIN_DETAIL_Result> USP_QM_COMPLAIN_DETAIL(Nullable<int> complainId, Nullable<int> forwardedTo, Nullable<int> lEVEL)
        {
            var complainIdParameter = complainId.HasValue ?
                new ObjectParameter("ComplainId", complainId) :
                new ObjectParameter("ComplainId", typeof(int));
    
            var forwardedToParameter = forwardedTo.HasValue ?
                new ObjectParameter("ForwardedTo", forwardedTo) :
                new ObjectParameter("ForwardedTo", typeof(int));
    
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLAIN_DETAIL_Result>("USP_QM_COMPLAIN_DETAIL", complainIdParameter, forwardedToParameter, lEVELParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMPLETED_INSP_DETAILS_Result> USP_QM_COMPLETED_INSP_DETAILS(Nullable<int> prRoadCode, string qmType)
        {
            var prRoadCodeParameter = prRoadCode.HasValue ?
                new ObjectParameter("prRoadCode", prRoadCode) :
                new ObjectParameter("prRoadCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLETED_INSP_DETAILS_Result>("USP_QM_COMPLETED_INSP_DETAILS", prRoadCodeParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMPLETED_SQMNQM_INSP_DETAILS_Result> USP_QM_COMPLETED_SQMNQM_INSP_DETAILS(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> duration, string status, string qmtype, Nullable<int> scheme)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLETED_SQMNQM_INSP_DETAILS_Result>("USP_QM_COMPLETED_SQMNQM_INSP_DETAILS", levelParameter, stateParameter, districtParameter, durationParameter, statusParameter, qmtypeParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMPLETED_WORKS_Result> USP_QM_COMPLETED_WORKS(Nullable<int> sTATE, string frmDate, string toDate)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var frmDateParameter = frmDate != null ?
                new ObjectParameter("frmDate", frmDate) :
                new ObjectParameter("frmDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLETED_WORKS_Result>("USP_QM_COMPLETED_WORKS", sTATEParameter, frmDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMPLETED_WORKS_DETAILS_Result> USP_QM_COMPLETED_WORKS_DETAILS(Nullable<int> sTATE, Nullable<int> dISTRICT, string wORK_TYPE, Nullable<int> pR_ROAD_CODE, string qMTYPE, string frmDate, string toDate)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var wORK_TYPEParameter = wORK_TYPE != null ?
                new ObjectParameter("WORK_TYPE", wORK_TYPE) :
                new ObjectParameter("WORK_TYPE", typeof(string));
    
            var pR_ROAD_CODEParameter = pR_ROAD_CODE.HasValue ?
                new ObjectParameter("PR_ROAD_CODE", pR_ROAD_CODE) :
                new ObjectParameter("PR_ROAD_CODE", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var frmDateParameter = frmDate != null ?
                new ObjectParameter("frmDate", frmDate) :
                new ObjectParameter("frmDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLETED_WORKS_DETAILS_Result>("USP_QM_COMPLETED_WORKS_DETAILS", sTATEParameter, dISTRICTParameter, wORK_TYPEParameter, pR_ROAD_CODEParameter, qMTYPEParameter, frmDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMPLETED_WORKS_NOT_INSP_Result> USP_QM_COMPLETED_WORKS_NOT_INSP(Nullable<int> sTATE, Nullable<int> dISTRICT, string frmDate, string toDate)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var frmDateParameter = frmDate != null ?
                new ObjectParameter("frmDate", frmDate) :
                new ObjectParameter("frmDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLETED_WORKS_NOT_INSP_Result>("USP_QM_COMPLETED_WORKS_NOT_INSP", sTATEParameter, dISTRICTParameter, frmDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_QM_COMPLETED_WORKS_ROAD_Result> USP_QM_COMPLETED_WORKS_ROAD(Nullable<int> sTATE, Nullable<int> dISTRICT, string frmDate, string toDate)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var frmDateParameter = frmDate != null ?
                new ObjectParameter("frmDate", frmDate) :
                new ObjectParameter("frmDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_COMPLETED_WORKS_ROAD_Result>("USP_QM_COMPLETED_WORKS_ROAD", sTATEParameter, dISTRICTParameter, frmDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_QM_DASH_S1_Result> USP_QM_DASH_S1(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_DASH_S1_Result>("USP_QM_DASH_S1", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter);
        }
    
        public virtual ObjectResult<USP_QM_DASH_S2_Result> USP_QM_DASH_S2(Nullable<int> state, string qMType)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var qMTypeParameter = qMType != null ?
                new ObjectParameter("QMType", qMType) :
                new ObjectParameter("QMType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_DASH_S2_Result>("USP_QM_DASH_S2", stateParameter, qMTypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_DASH_S3_Result> USP_QM_DASH_S3(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> qMCODE, string qMTYPE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_DASH_S3_Result>("USP_QM_DASH_S3", lEVELParameter, sTATEParameter, qMCODEParameter, qMTYPEParameter);
        }
    
        public virtual ObjectResult<USP_QM_DEFFECTIVE_GRAPH_Result> USP_QM_DEFFECTIVE_GRAPH(Nullable<int> sTATE, Nullable<int> yEAR, string sTATUS, string dATA_TYPE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var dATA_TYPEParameter = dATA_TYPE != null ?
                new ObjectParameter("DATA_TYPE", dATA_TYPE) :
                new ObjectParameter("DATA_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_DEFFECTIVE_GRAPH_Result>("USP_QM_DEFFECTIVE_GRAPH", sTATEParameter, yEARParameter, sTATUSParameter, dATA_TYPEParameter);
        }
    
        public virtual ObjectResult<USP_QM_DISTRICT_GRADING_ABSTRACT_Result> USP_QM_DISTRICT_GRADING_ABSTRACT(Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth, Nullable<int> state, string qmtype)
        {
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_DISTRICT_GRADING_ABSTRACT_Result>("USP_QM_DISTRICT_GRADING_ABSTRACT", fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter, stateParameter, qmtypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_GET_ASSIGNED_ROAD_LIST_Result> USP_QM_GET_ASSIGNED_ROAD_LIST(Nullable<int> schCode, Nullable<int> distCode)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_GET_ASSIGNED_ROAD_LIST_Result>("USP_QM_GET_ASSIGNED_ROAD_LIST", schCodeParameter, distCodeParameter);
        }
    
        public virtual ObjectResult<USP_QM_GET_INSP_DETAILS_Result> USP_QM_GET_INSP_DETAILS(Nullable<int> obsId)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_GET_INSP_DETAILS_Result>("USP_QM_GET_INSP_DETAILS", obsIdParameter);
        }
    
        public virtual int USP_QM_HELPDESK_DEFINALIZE_SCHEDULE(Nullable<int> admin_code, Nullable<int> inspYear, Nullable<int> inspMonth, string qmType, Nullable<int> userid, string ipadd)
        {
            var admin_codeParameter = admin_code.HasValue ?
                new ObjectParameter("admin_code", admin_code) :
                new ObjectParameter("admin_code", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("InspYear", inspYear) :
                new ObjectParameter("InspYear", typeof(int));
    
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("InspMonth", inspMonth) :
                new ObjectParameter("InspMonth", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_HELPDESK_DEFINALIZE_SCHEDULE", admin_codeParameter, inspYearParameter, inspMonthParameter, qmTypeParameter, useridParameter, ipaddParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_GET_IMAGE_DETAILS_Result> USP_QM_HELPDESK_GET_IMAGE_DETAILS(Nullable<int> adminScheduleCode, Nullable<int> roadCode)
        {
            var adminScheduleCodeParameter = adminScheduleCode.HasValue ?
                new ObjectParameter("adminScheduleCode", adminScheduleCode) :
                new ObjectParameter("adminScheduleCode", typeof(int));
    
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("roadCode", roadCode) :
                new ObjectParameter("roadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_GET_IMAGE_DETAILS_Result>("USP_QM_HELPDESK_GET_IMAGE_DETAILS", adminScheduleCodeParameter, roadCodeParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_GET_LOG_DETAILS_Result> USP_QM_HELPDESK_GET_LOG_DETAILS(Nullable<int> admin_code)
        {
            var admin_codeParameter = admin_code.HasValue ?
                new ObjectParameter("admin_code", admin_code) :
                new ObjectParameter("admin_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_GET_LOG_DETAILS_Result>("USP_QM_HELPDESK_GET_LOG_DETAILS", admin_codeParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_GET_MONITOR_DETAILS_Result> USP_QM_HELPDESK_GET_MONITOR_DETAILS(Nullable<int> inspMonth, Nullable<int> inspYear, string qmType)
        {
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("InspMonth", inspMonth) :
                new ObjectParameter("InspMonth", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("InspYear", inspYear) :
                new ObjectParameter("InspYear", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_GET_MONITOR_DETAILS_Result>("USP_QM_HELPDESK_GET_MONITOR_DETAILS", inspMonthParameter, inspYearParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<string> USP_QM_HELPDESK_GET_MONITOR_NAME(Nullable<int> admin_code)
        {
            var admin_codeParameter = admin_code.HasValue ?
                new ObjectParameter("admin_code", admin_code) :
                new ObjectParameter("admin_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_QM_HELPDESK_GET_MONITOR_NAME", admin_codeParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_GET_SCHEDULE_DETAILS_Result> USP_QM_HELPDESK_GET_SCHEDULE_DETAILS(Nullable<int> admin_code, Nullable<int> inspYear, Nullable<int> inspMonth, string qmType)
        {
            var admin_codeParameter = admin_code.HasValue ?
                new ObjectParameter("admin_code", admin_code) :
                new ObjectParameter("admin_code", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("InspYear", inspYear) :
                new ObjectParameter("InspYear", typeof(int));
    
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("InspMonth", inspMonth) :
                new ObjectParameter("InspMonth", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_GET_SCHEDULE_DETAILS_Result>("USP_QM_HELPDESK_GET_SCHEDULE_DETAILS", admin_codeParameter, inspYearParameter, inspMonthParameter, qmTypeParameter);
        }
    
        public virtual int USP_QM_HELPDESK_INSERT_IMEI(Nullable<int> admin_code, string newIMEI)
        {
            var admin_codeParameter = admin_code.HasValue ?
                new ObjectParameter("admin_code", admin_code) :
                new ObjectParameter("admin_code", typeof(int));
    
            var newIMEIParameter = newIMEI != null ?
                new ObjectParameter("newIMEI", newIMEI) :
                new ObjectParameter("newIMEI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_HELPDESK_INSERT_IMEI", admin_codeParameter, newIMEIParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_NOTIFICATION_DETAILS_Result> USP_QM_HELPDESK_NOTIFICATION_DETAILS(string moniotrType, string messageType, Nullable<int> stateCode)
        {
            var moniotrTypeParameter = moniotrType != null ?
                new ObjectParameter("MoniotrType", moniotrType) :
                new ObjectParameter("MoniotrType", typeof(string));
    
            var messageTypeParameter = messageType != null ?
                new ObjectParameter("MessageType", messageType) :
                new ObjectParameter("MessageType", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_NOTIFICATION_DETAILS_Result>("USP_QM_HELPDESK_NOTIFICATION_DETAILS", moniotrTypeParameter, messageTypeParameter, stateCodeParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_OBSERVATION_DETAILS_Result> USP_QM_HELPDESK_OBSERVATION_DETAILS(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string qmType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_OBSERVATION_DETAILS_Result>("USP_QM_HELPDESK_OBSERVATION_DETAILS", fromDateParameter, toDateParameter, qmTypeParameter);
        }
    
        public virtual int USP_QM_HELPDESK_REGRADE_ATR(Nullable<int> obsid)
        {
            var obsidParameter = obsid.HasValue ?
                new ObjectParameter("obsid", obsid) :
                new ObjectParameter("obsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_HELPDESK_REGRADE_ATR", obsidParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_CONTRACTOR_Result> USP_QM_INSPECTION_CONTRACTOR(Nullable<int> yEAR, string sTATUS, Nullable<int> sTATE)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_CONTRACTOR_Result>("USP_QM_INSPECTION_CONTRACTOR", yEARParameter, sTATUSParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_CONTRACTOR_DETAIL_Result> USP_QM_INSPECTION_CONTRACTOR_DETAIL(Nullable<int> lEVEL, Nullable<int> yEAR, string sTATUS, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> cONT)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var cONTParameter = cONT.HasValue ?
                new ObjectParameter("CONT", cONT) :
                new ObjectParameter("CONT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_CONTRACTOR_DETAIL_Result>("USP_QM_INSPECTION_CONTRACTOR_DETAIL", lEVELParameter, yEARParameter, sTATUSParameter, sTATEParameter, dISTRICTParameter, cONTParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_COUNT_Result> USP_QM_INSPECTION_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, string qMTYPE, string rD_STATUS, Nullable<int> iNSP_COUNT)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var rD_STATUSParameter = rD_STATUS != null ?
                new ObjectParameter("RD_STATUS", rD_STATUS) :
                new ObjectParameter("RD_STATUS", typeof(string));
    
            var iNSP_COUNTParameter = iNSP_COUNT.HasValue ?
                new ObjectParameter("INSP_COUNT", iNSP_COUNT) :
                new ObjectParameter("INSP_COUNT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_COUNT_Result>("USP_QM_INSPECTION_COUNT", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, qMTYPEParameter, rD_STATUSParameter, iNSP_COUNTParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_FREQUENCY_MONITOR_Result> USP_QM_INSPECTION_FREQUENCY_MONITOR(Nullable<int> lEVEL, string qTYPE, Nullable<int> sTATE, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR, Nullable<int> qMCODE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var qTYPEParameter = qTYPE != null ?
                new ObjectParameter("QTYPE", qTYPE) :
                new ObjectParameter("QTYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_FREQUENCY_MONITOR_Result>("USP_QM_INSPECTION_FREQUENCY_MONITOR", lEVELParameter, qTYPEParameter, sTATEParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter, qMCODEParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_FREQUENCY_MONITOR_DETAILS_Result> USP_QM_INSPECTION_FREQUENCY_MONITOR_DETAILS(string qTYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR, Nullable<int> qMCODE, Nullable<int> iNSPCOUNT)
        {
            var qTYPEParameter = qTYPE != null ?
                new ObjectParameter("QTYPE", qTYPE) :
                new ObjectParameter("QTYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var iNSPCOUNTParameter = iNSPCOUNT.HasValue ?
                new ObjectParameter("INSPCOUNT", iNSPCOUNT) :
                new ObjectParameter("INSPCOUNT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_FREQUENCY_MONITOR_DETAILS_Result>("USP_QM_INSPECTION_FREQUENCY_MONITOR_DETAILS", qTYPEParameter, sTATEParameter, dISTRICTParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter, qMCODEParameter, iNSPCOUNTParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_UPLOAD_Result> USP_QM_INSPECTION_UPLOAD(Nullable<int> lEVEL, string qMTYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR, Nullable<int> qMCODE, Nullable<int> rOLE)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var rOLEParameter = rOLE.HasValue ?
                new ObjectParameter("ROLE", rOLE) :
                new ObjectParameter("ROLE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_UPLOAD_Result>("USP_QM_INSPECTION_UPLOAD", lEVELParameter, qMTYPEParameter, sTATEParameter, dISTRICTParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter, qMCODEParameter, rOLEParameter);
        }
    
        public virtual ObjectResult<USP_QM_INSPECTION_UPLOAD_DETAIL_Result> USP_QM_INSPECTION_UPLOAD_DETAIL(string qMTYPE, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> fMONTH, Nullable<int> fYEAR, Nullable<int> tMONTH, Nullable<int> tYEAR, Nullable<int> qMCODE, Nullable<int> dAY)
        {
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var fMONTHParameter = fMONTH.HasValue ?
                new ObjectParameter("FMONTH", fMONTH) :
                new ObjectParameter("FMONTH", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            var tMONTHParameter = tMONTH.HasValue ?
                new ObjectParameter("TMONTH", tMONTH) :
                new ObjectParameter("TMONTH", typeof(int));
    
            var tYEARParameter = tYEAR.HasValue ?
                new ObjectParameter("TYEAR", tYEAR) :
                new ObjectParameter("TYEAR", typeof(int));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var dAYParameter = dAY.HasValue ?
                new ObjectParameter("DAY", dAY) :
                new ObjectParameter("DAY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_INSPECTION_UPLOAD_DETAIL_Result>("USP_QM_INSPECTION_UPLOAD_DETAIL", qMTYPEParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, fMONTHParameter, fYEARParameter, tMONTHParameter, tYEARParameter, qMCODEParameter, dAYParameter);
        }
    
        public virtual ObjectResult<USP_QM_JOINT_INSPECTION_LIST_Result> USP_QM_JOINT_INSPECTION_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, string pTYPE, string iNSP_STATUS, Nullable<int> sCHEME)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var pTYPEParameter = pTYPE != null ?
                new ObjectParameter("PTYPE", pTYPE) :
                new ObjectParameter("PTYPE", typeof(string));
    
            var iNSP_STATUSParameter = iNSP_STATUS != null ?
                new ObjectParameter("INSP_STATUS", iNSP_STATUS) :
                new ObjectParameter("INSP_STATUS", typeof(string));
    
            var sCHEMEParameter = sCHEME.HasValue ?
                new ObjectParameter("SCHEME", sCHEME) :
                new ObjectParameter("SCHEME", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_JOINT_INSPECTION_LIST_Result>("USP_QM_JOINT_INSPECTION_LIST", sTATEParameter, dISTRICTParameter, bLOCKParameter, pTYPEParameter, iNSP_STATUSParameter, sCHEMEParameter);
        }
    
        public virtual ObjectResult<USP_QM_LETTER_DIR_INFO_Result> USP_QM_LETTER_DIR_INFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_LETTER_DIR_INFO_Result>("USP_QM_LETTER_DIR_INFO");
        }
    
        public virtual ObjectResult<USP_QM_LETTER_NQM_DETAILS_Result> USP_QM_LETTER_NQM_DETAILS(Nullable<int> schedulecode)
        {
            var schedulecodeParameter = schedulecode.HasValue ?
                new ObjectParameter("schedulecode", schedulecode) :
                new ObjectParameter("schedulecode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_LETTER_NQM_DETAILS_Result>("USP_QM_LETTER_NQM_DETAILS", schedulecodeParameter);
        }
    
        public virtual ObjectResult<USP_QM_LETTER_SQC_INFO_Result> USP_QM_LETTER_SQC_INFO(Nullable<int> qccode)
        {
            var qccodeParameter = qccode.HasValue ?
                new ObjectParameter("qccode", qccode) :
                new ObjectParameter("qccode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_LETTER_SQC_INFO_Result>("USP_QM_LETTER_SQC_INFO", qccodeParameter);
        }
    
        public virtual ObjectResult<USP_QM_LETTER_SQC_LIST_Result> USP_QM_LETTER_SQC_LIST(Nullable<int> inspmonth, Nullable<int> inspyear)
        {
            var inspmonthParameter = inspmonth.HasValue ?
                new ObjectParameter("inspmonth", inspmonth) :
                new ObjectParameter("inspmonth", typeof(int));
    
            var inspyearParameter = inspyear.HasValue ?
                new ObjectParameter("inspyear", inspyear) :
                new ObjectParameter("inspyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_LETTER_SQC_LIST_Result>("USP_QM_LETTER_SQC_LIST", inspmonthParameter, inspyearParameter);
        }
    
        public virtual ObjectResult<USP_QM_LETTER_SQC_SCHEDULE_Result> USP_QM_LETTER_SQC_SCHEDULE(Nullable<int> stateCode, Nullable<int> inspMonth, Nullable<int> inspYear, string qmType)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("inspMonth", inspMonth) :
                new ObjectParameter("inspMonth", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("inspYear", inspYear) :
                new ObjectParameter("inspYear", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_LETTER_SQC_SCHEDULE_Result>("USP_QM_LETTER_SQC_SCHEDULE", stateCodeParameter, inspMonthParameter, inspYearParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_QM_MAINTENANCE_INSPECTION_ENTRY(Nullable<int> state, Nullable<int> district, Nullable<int> year, Nullable<int> month, Nullable<int> qMCode, Nullable<int> road, Nullable<int> grade, Nullable<decimal> sChainage, Nullable<decimal> eChainage, string inspDate, Nullable<int> userID, string iPAdd)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var qMCodeParameter = qMCode.HasValue ?
                new ObjectParameter("QMCode", qMCode) :
                new ObjectParameter("QMCode", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(int));
    
            var sChainageParameter = sChainage.HasValue ?
                new ObjectParameter("SChainage", sChainage) :
                new ObjectParameter("SChainage", typeof(decimal));
    
            var eChainageParameter = eChainage.HasValue ?
                new ObjectParameter("EChainage", eChainage) :
                new ObjectParameter("EChainage", typeof(decimal));
    
            var inspDateParameter = inspDate != null ?
                new ObjectParameter("InspDate", inspDate) :
                new ObjectParameter("InspDate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var iPAddParameter = iPAdd != null ?
                new ObjectParameter("IPAdd", iPAdd) :
                new ObjectParameter("IPAdd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_QM_MAINTENANCE_INSPECTION_ENTRY", stateParameter, districtParameter, yearParameter, monthParameter, qMCodeParameter, roadParameter, gradeParameter, sChainageParameter, eChainageParameter, inspDateParameter, userIDParameter, iPAddParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONITOR_TOUR_REPORT_Result> USP_QM_MONITOR_TOUR_REPORT(Nullable<int> state, Nullable<int> monitorcode, Nullable<int> frommonth, Nullable<int> fromyear, Nullable<int> tomonth, Nullable<int> toyear)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var monitorcodeParameter = monitorcode.HasValue ?
                new ObjectParameter("monitorcode", monitorcode) :
                new ObjectParameter("monitorcode", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONITOR_TOUR_REPORT_Result>("USP_QM_MONITOR_TOUR_REPORT", stateParameter, monitorcodeParameter, frommonthParameter, fromyearParameter, tomonthParameter, toyearParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONITOR_WISE_ATR_STATUS_Result> USP_QM_MONITOR_WISE_ATR_STATUS(string state, string monitorcode, Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth, string qmtype, string roadstatus, string atrstatus)
        {
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var monitorcodeParameter = monitorcode != null ?
                new ObjectParameter("monitorcode", monitorcode) :
                new ObjectParameter("monitorcode", typeof(string));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            var roadstatusParameter = roadstatus != null ?
                new ObjectParameter("roadstatus", roadstatus) :
                new ObjectParameter("roadstatus", typeof(string));
    
            var atrstatusParameter = atrstatus != null ?
                new ObjectParameter("atrstatus", atrstatus) :
                new ObjectParameter("atrstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONITOR_WISE_ATR_STATUS_Result>("USP_QM_MONITOR_WISE_ATR_STATUS", stateParameter, monitorcodeParameter, fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter, qmtypeParameter, roadstatusParameter, atrstatusParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONITORS_WORK_WISE_DETAILS_Result> USP_QM_MONITORS_WORK_WISE_DETAILS(Nullable<int> state, Nullable<int> district, Nullable<int> frommonth, Nullable<int> fromyear, Nullable<int> tomonth, Nullable<int> toyear)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONITORS_WORK_WISE_DETAILS_Result>("USP_QM_MONITORS_WORK_WISE_DETAILS", stateParameter, districtParameter, frommonthParameter, fromyearParameter, tomonthParameter, toyearParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONTHWISE_INSPECTIONS_Result> USP_QM_MONTHWISE_INSPECTIONS(Nullable<int> state, Nullable<int> year, string qmtype)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONTHWISE_INSPECTIONS_Result>("USP_QM_MONTHWISE_INSPECTIONS", stateParameter, yearParameter, qmtypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONTHWISE_INSPECTIONS_bak_Result> USP_QM_MONTHWISE_INSPECTIONS_bak(Nullable<int> state, Nullable<int> year, string qmtype)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONTHWISE_INSPECTIONS_bak_Result>("USP_QM_MONTHWISE_INSPECTIONS_bak", stateParameter, yearParameter, qmtypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONTHWISE_INSPECTIONS_DETAIL_Result> USP_QM_MONTHWISE_INSPECTIONS_DETAIL(Nullable<int> lEVEL, Nullable<int> state, Nullable<int> year, Nullable<int> mONTH, string qmtype, Nullable<int> mONITOR)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            var mONITORParameter = mONITOR.HasValue ?
                new ObjectParameter("MONITOR", mONITOR) :
                new ObjectParameter("MONITOR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONTHWISE_INSPECTIONS_DETAIL_Result>("USP_QM_MONTHWISE_INSPECTIONS_DETAIL", lEVELParameter, stateParameter, yearParameter, mONTHParameter, qmtypeParameter, mONITORParameter);
        }
    
        public virtual ObjectResult<USP_QM_MONTHWISE_INSPECTIONS_SCHEDULE_Result> USP_QM_MONTHWISE_INSPECTIONS_SCHEDULE(Nullable<int> lEVEL, Nullable<int> sTATE, string qMTYPE, Nullable<int> qMCODE, Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MONTHWISE_INSPECTIONS_SCHEDULE_Result>("USP_QM_MONTHWISE_INSPECTIONS_SCHEDULE", lEVELParameter, sTATEParameter, qMTYPEParameter, qMCODEParameter, yEARParameter, mONTHParameter);
        }
    
        public virtual ObjectResult<USP_QM_MP_VISIT_ROAD_LIST_Result> USP_QM_MP_VISIT_ROAD_LIST(Nullable<int> state, Nullable<int> district, Nullable<int> block)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_MP_VISIT_ROAD_LIST_Result>("USP_QM_MP_VISIT_ROAD_LIST", stateParameter, districtParameter, blockParameter);
        }
    
        public virtual ObjectResult<USP_QM_NQM_SCHEDULE_MONTH_Result> USP_QM_NQM_SCHEDULE_MONTH(Nullable<int> sYEAR)
        {
            var sYEARParameter = sYEAR.HasValue ?
                new ObjectParameter("SYEAR", sYEAR) :
                new ObjectParameter("SYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_NQM_SCHEDULE_MONTH_Result>("USP_QM_NQM_SCHEDULE_MONTH", sYEARParameter);
        }
    
        public virtual ObjectResult<USP_QM_NQM_SQM_GRADING_COMPARISION_Result> USP_QM_NQM_SQM_GRADING_COMPARISION(Nullable<int> state, string district, Nullable<int> year, string month)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_NQM_SQM_GRADING_COMPARISION_Result>("USP_QM_NQM_SQM_GRADING_COMPARISION", stateParameter, districtParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<USP_QM_PENDING_ACTION_TAKEN_REPORT_STATE_Result> USP_QM_PENDING_ACTION_TAKEN_REPORT_STATE(Nullable<int> sTATE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PENDING_ACTION_TAKEN_REPORT_STATE_Result>("USP_QM_PENDING_ACTION_TAKEN_REPORT_STATE", sTATEParameter);
        }
    
        public virtual ObjectResult<USP_QM_PHASE_INSPETION_Result> USP_QM_PHASE_INSPETION(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> pMGSY)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PHASE_INSPETION_Result>("USP_QM_PHASE_INSPETION", stateParameter, districtParameter, blockParameter, collaborationParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_QM_PHASE_PROGRESS_DETAILS_Result> USP_QM_PHASE_PROGRESS_DETAILS(Nullable<int> level, Nullable<int> state, Nullable<int> scheme, Nullable<int> year, string sTATUS)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PHASE_PROGRESS_DETAILS_Result>("USP_QM_PHASE_PROGRESS_DETAILS", levelParameter, stateParameter, schemeParameter, yearParameter, sTATUSParameter);
        }
    
        public virtual ObjectResult<USP_QM_PROG_EST_LABS_Result> USP_QM_PROG_EST_LABS(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PROG_EST_LABS_Result>("USP_QM_PROG_EST_LABS", stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_PROG_EST_LABS_DETAILS_Result> USP_QM_PROG_EST_LABS_DETAILS(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PROG_EST_LABS_DETAILS_Result>("USP_QM_PROG_EST_LABS_DETAILS", stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_PROG_EST_LABS_GEO_REF_PPT5_Result> USP_QM_PROG_EST_LABS_GEO_REF_PPT5(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PROG_EST_LABS_GEO_REF_PPT5_Result>("USP_QM_PROG_EST_LABS_GEO_REF_PPT5", stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_PROG_LABS_DAYS_TAKEN_Result> USP_QM_PROG_LABS_DAYS_TAKEN(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PROG_LABS_DAYS_TAKEN_Result>("USP_QM_PROG_LABS_DAYS_TAKEN", stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_PROG_NO_LAB_DETAILS_Result> USP_QM_PROG_NO_LAB_DETAILS(Nullable<int> state)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_PROG_NO_LAB_DETAILS_Result>("USP_QM_PROG_NO_LAB_DETAILS", stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_QUARTER_UNSATISFACTORY_WORKS_Result> USP_QM_QUARTER_UNSATISFACTORY_WORKS(Nullable<int> year, string qmType, Nullable<int> state)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_QUARTER_UNSATISFACTORY_WORKS_Result>("USP_QM_QUARTER_UNSATISFACTORY_WORKS", yearParameter, qmTypeParameter, stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_QUARTER_VI_Result> USP_QM_QUARTER_VI(Nullable<int> quarter, Nullable<int> year, Nullable<int> state)
        {
            var quarterParameter = quarter.HasValue ?
                new ObjectParameter("quarter", quarter) :
                new ObjectParameter("quarter", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_QUARTER_VI_Result>("USP_QM_QUARTER_VI", quarterParameter, yearParameter, stateParameter);
        }
    
        public virtual ObjectResult<USP_QM_SATISFACTORY_UNSATISFACTORY_WORK_PERIOD_Result> USP_QM_SATISFACTORY_UNSATISFACTORY_WORK_PERIOD(string state, Nullable<int> district, Nullable<int> grade, Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth, Nullable<int> citem, string qmType)
        {
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var citemParameter = citem.HasValue ?
                new ObjectParameter("citem", citem) :
                new ObjectParameter("citem", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_SATISFACTORY_UNSATISFACTORY_WORK_PERIOD_Result>("USP_QM_SATISFACTORY_UNSATISFACTORY_WORK_PERIOD", stateParameter, districtParameter, gradeParameter, fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter, citemParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_SCHEDULE_CURRENT_MONTH_ONWARDS_Result> USP_QM_SCHEDULE_CURRENT_MONTH_ONWARDS(Nullable<int> monitor, string qmType, Nullable<int> stateCode, Nullable<int> month, Nullable<int> year)
        {
            var monitorParameter = monitor.HasValue ?
                new ObjectParameter("monitor", monitor) :
                new ObjectParameter("monitor", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_SCHEDULE_CURRENT_MONTH_ONWARDS_Result>("USP_QM_SCHEDULE_CURRENT_MONTH_ONWARDS", monitorParameter, qmTypeParameter, stateCodeParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_QM_STATE_GRADING_ABSTRACT_Result> USP_QM_STATE_GRADING_ABSTRACT(Nullable<int> fromyear, Nullable<int> frommonth, Nullable<int> toyear, Nullable<int> tomonth, string qmtype)
        {
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("fromyear", fromyear) :
                new ObjectParameter("fromyear", typeof(int));
    
            var frommonthParameter = frommonth.HasValue ?
                new ObjectParameter("frommonth", frommonth) :
                new ObjectParameter("frommonth", typeof(int));
    
            var toyearParameter = toyear.HasValue ?
                new ObjectParameter("toyear", toyear) :
                new ObjectParameter("toyear", typeof(int));
    
            var tomonthParameter = tomonth.HasValue ?
                new ObjectParameter("tomonth", tomonth) :
                new ObjectParameter("tomonth", typeof(int));
    
            var qmtypeParameter = qmtype != null ?
                new ObjectParameter("qmtype", qmtype) :
                new ObjectParameter("qmtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_STATE_GRADING_ABSTRACT_Result>("USP_QM_STATE_GRADING_ABSTRACT", fromyearParameter, frommonthParameter, toyearParameter, tomonthParameter, qmtypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_TEAM_Result> USP_QM_TEAM(Nullable<int> sYEAR, Nullable<int> sMONTH)
        {
            var sYEARParameter = sYEAR.HasValue ?
                new ObjectParameter("SYEAR", sYEAR) :
                new ObjectParameter("SYEAR", typeof(int));
    
            var sMONTHParameter = sMONTH.HasValue ?
                new ObjectParameter("SMONTH", sMONTH) :
                new ObjectParameter("SMONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_TEAM_Result>("USP_QM_TEAM", sYEARParameter, sMONTHParameter);
        }
    
        public virtual ObjectResult<USP_QM_TEAM_NQM_LETTER_Result> USP_QM_TEAM_NQM_LETTER(string tEAMCODE)
        {
            var tEAMCODEParameter = tEAMCODE != null ?
                new ObjectParameter("TEAMCODE", tEAMCODE) :
                new ObjectParameter("TEAMCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_TEAM_NQM_LETTER_Result>("USP_QM_TEAM_NQM_LETTER", tEAMCODEParameter);
        }
    
        public virtual ObjectResult<USP_QM_TEAM_REPORT_Result> USP_QM_TEAM_REPORT(Nullable<int> sTATE, Nullable<int> mONITOR, Nullable<int> sYEAR, Nullable<int> sMONTH)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var mONITORParameter = mONITOR.HasValue ?
                new ObjectParameter("MONITOR", mONITOR) :
                new ObjectParameter("MONITOR", typeof(int));
    
            var sYEARParameter = sYEAR.HasValue ?
                new ObjectParameter("SYEAR", sYEAR) :
                new ObjectParameter("SYEAR", typeof(int));
    
            var sMONTHParameter = sMONTH.HasValue ?
                new ObjectParameter("SMONTH", sMONTH) :
                new ObjectParameter("SMONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_TEAM_REPORT_Result>("USP_QM_TEAM_REPORT", sTATEParameter, mONITORParameter, sYEARParameter, sMONTHParameter);
        }
    
        public virtual ObjectResult<USP_QM_TEAM_SQC_LETTER_Result> USP_QM_TEAM_SQC_LETTER(string tEAMCODE)
        {
            var tEAMCODEParameter = tEAMCODE != null ?
                new ObjectParameter("TEAMCODE", tEAMCODE) :
                new ObjectParameter("TEAMCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_TEAM_SQC_LETTER_Result>("USP_QM_TEAM_SQC_LETTER", tEAMCODEParameter);
        }
    
        public virtual ObjectResult<USP_QM_UNSATISFACTORY_WORKS_FOR_STATE_Result> USP_QM_UNSATISFACTORY_WORKS_FOR_STATE(Nullable<int> stateCode, string qmType)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_UNSATISFACTORY_WORKS_FOR_STATE_Result>("USP_QM_UNSATISFACTORY_WORKS_FOR_STATE", stateCodeParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<USP_QM_YEARWISE_INSP_NQM_INVOLVED_Result> USP_QM_YEARWISE_INSP_NQM_INVOLVED()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_YEARWISE_INSP_NQM_INVOLVED_Result>("USP_QM_YEARWISE_INSP_NQM_INVOLVED");
        }
    
        public virtual ObjectResult<USP_QUALITY_LAB_ESHTABLISHED_Result> USP_QUALITY_LAB_ESHTABLISHED(Nullable<int> sTATE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QUALITY_LAB_ESHTABLISHED_Result>("USP_QUALITY_LAB_ESHTABLISHED", sTATEParameter);
        }
    
        public virtual ObjectResult<USP_QUALITY_LAB_LIST_Result> USP_QUALITY_LAB_LIST(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> nDCode)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var nDCodeParameter = nDCode.HasValue ?
                new ObjectParameter("NDCode", nDCode) :
                new ObjectParameter("NDCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QUALITY_LAB_LIST_Result>("USP_QUALITY_LAB_LIST", sTATEParameter, dISTRICTParameter, nDCodeParameter);
        }
    
        public virtual ObjectResult<USP_QUALITY_PROFILE_Result> USP_QUALITY_PROFILE(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> yEAR)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QUALITY_PROFILE_Result>("USP_QUALITY_PROFILE", lEVELParameter, sTATEParameter, yEARParameter);
        }
    
        public virtual ObjectResult<USP_QUALITY_PROFILE_GRAPH_Result> USP_QUALITY_PROFILE_GRAPH(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> yEAR)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QUALITY_PROFILE_GRAPH_Result>("USP_QUALITY_PROFILE_GRAPH", lEVELParameter, sTATEParameter, yEARParameter);
        }
    
        public virtual ObjectResult<USP_REAT_DAYWISE_PENDING_BILLS_Result> USP_REAT_DAYWISE_PENDING_BILLS(Nullable<int> srrdaCode, Nullable<int> dpiuCode, string duration, Nullable<int> month, Nullable<int> year, string fundType, string startdate, string endate, string flag)
        {
            var srrdaCodeParameter = srrdaCode.HasValue ?
                new ObjectParameter("SrrdaCode", srrdaCode) :
                new ObjectParameter("SrrdaCode", typeof(int));
    
            var dpiuCodeParameter = dpiuCode.HasValue ?
                new ObjectParameter("DpiuCode", dpiuCode) :
                new ObjectParameter("DpiuCode", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("Endate", endate) :
                new ObjectParameter("Endate", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REAT_DAYWISE_PENDING_BILLS_Result>("USP_REAT_DAYWISE_PENDING_BILLS", srrdaCodeParameter, dpiuCodeParameter, durationParameter, monthParameter, yearParameter, fundTypeParameter, startdateParameter, endateParameter, flagParameter);
        }
    
        public virtual ObjectResult<USP_REAT_DAYWISE_PENDING_BILLS_DRILLDOWN_Result> USP_REAT_DAYWISE_PENDING_BILLS_DRILLDOWN(Nullable<int> srrdaCode, Nullable<int> dpiuCode, string duration, Nullable<int> month, Nullable<int> year, string fundType, string startdate, string endate, string flag, Nullable<int> bankCode, Nullable<int> dayCount, Nullable<int> lowerLimit, Nullable<int> upperLimit)
        {
            var srrdaCodeParameter = srrdaCode.HasValue ?
                new ObjectParameter("SrrdaCode", srrdaCode) :
                new ObjectParameter("SrrdaCode", typeof(int));
    
            var dpiuCodeParameter = dpiuCode.HasValue ?
                new ObjectParameter("DpiuCode", dpiuCode) :
                new ObjectParameter("DpiuCode", typeof(int));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("Endate", endate) :
                new ObjectParameter("Endate", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var bankCodeParameter = bankCode.HasValue ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(int));
    
            var dayCountParameter = dayCount.HasValue ?
                new ObjectParameter("DayCount", dayCount) :
                new ObjectParameter("DayCount", typeof(int));
    
            var lowerLimitParameter = lowerLimit.HasValue ?
                new ObjectParameter("LowerLimit", lowerLimit) :
                new ObjectParameter("LowerLimit", typeof(int));
    
            var upperLimitParameter = upperLimit.HasValue ?
                new ObjectParameter("UpperLimit", upperLimit) :
                new ObjectParameter("UpperLimit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REAT_DAYWISE_PENDING_BILLS_DRILLDOWN_Result>("USP_REAT_DAYWISE_PENDING_BILLS_DRILLDOWN", srrdaCodeParameter, dpiuCodeParameter, durationParameter, monthParameter, yearParameter, fundTypeParameter, startdateParameter, endateParameter, flagParameter, bankCodeParameter, dayCountParameter, lowerLimitParameter, upperLimitParameter);
        }
    
        public virtual ObjectResult<USP_ROAD_DETAIL_FOR_MAINTENANCE_Result> USP_ROAD_DETAIL_FOR_MAINTENANCE(Nullable<int> stateCode, Nullable<int> districtCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ROAD_DETAIL_FOR_MAINTENANCE_Result>("USP_ROAD_DETAIL_FOR_MAINTENANCE", stateCodeParameter, districtCodeParameter);
        }
    
        public virtual ObjectResult<USP_ROAD_PIU_DETAILS_EMARG_Result> USP_ROAD_PIU_DETAILS_EMARG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ROAD_PIU_DETAILS_EMARG_Result>("USP_ROAD_PIU_DETAILS_EMARG");
        }
    
        public virtual int USP_RPT_INSERT_BALANCES_MONTHWISE(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, Nullable<int> prm_Use_ID, string prm_IPADDRESS)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var prm_Use_IDParameter = prm_Use_ID.HasValue ?
                new ObjectParameter("Prm_Use_ID", prm_Use_ID) :
                new ObjectParameter("Prm_Use_ID", typeof(int));
    
            var prm_IPADDRESSParameter = prm_IPADDRESS != null ?
                new ObjectParameter("Prm_IPADDRESS", prm_IPADDRESS) :
                new ObjectParameter("Prm_IPADDRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_RPT_INSERT_BALANCES_MONTHWISE", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, prm_Use_IDParameter, prm_IPADDRESSParameter);
        }
    
        public virtual ObjectResult<USP_RPT_INSERT_REPORT_HEADS_Result> USP_RPT_INSERT_REPORT_HEADS(Nullable<short> p_SINT_ReportID, Nullable<short> p_SINT_ItemID, string p_STR_HeadIDs, string p_CHAR_CrDr, Nullable<short> p_CHAR_AddDeduct, Nullable<int> pLvlID)
        {
            var p_SINT_ReportIDParameter = p_SINT_ReportID.HasValue ?
                new ObjectParameter("P_SINT_ReportID", p_SINT_ReportID) :
                new ObjectParameter("P_SINT_ReportID", typeof(short));
    
            var p_SINT_ItemIDParameter = p_SINT_ItemID.HasValue ?
                new ObjectParameter("P_SINT_ItemID", p_SINT_ItemID) :
                new ObjectParameter("P_SINT_ItemID", typeof(short));
    
            var p_STR_HeadIDsParameter = p_STR_HeadIDs != null ?
                new ObjectParameter("P_STR_HeadIDs", p_STR_HeadIDs) :
                new ObjectParameter("P_STR_HeadIDs", typeof(string));
    
            var p_CHAR_CrDrParameter = p_CHAR_CrDr != null ?
                new ObjectParameter("P_CHAR_CrDr", p_CHAR_CrDr) :
                new ObjectParameter("P_CHAR_CrDr", typeof(string));
    
            var p_CHAR_AddDeductParameter = p_CHAR_AddDeduct.HasValue ?
                new ObjectParameter("P_CHAR_AddDeduct", p_CHAR_AddDeduct) :
                new ObjectParameter("P_CHAR_AddDeduct", typeof(short));
    
            var pLvlIDParameter = pLvlID.HasValue ?
                new ObjectParameter("PLvlID", pLvlID) :
                new ObjectParameter("PLvlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_INSERT_REPORT_HEADS_Result>("USP_RPT_INSERT_REPORT_HEADS", p_SINT_ReportIDParameter, p_SINT_ItemIDParameter, p_STR_HeadIDsParameter, p_CHAR_CrDrParameter, p_CHAR_AddDeductParameter, pLvlIDParameter);
        }
    
        public virtual ObjectResult<USP_RPT_LABOUR_DETAILS_Result> USP_RPT_LABOUR_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_LABOUR_DETAILS_Result>("USP_RPT_LABOUR_DETAILS");
        }
    
        public virtual ObjectResult<USP_RPT_MACHINERY_DETAILS_Result> USP_RPT_MACHINERY_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_MACHINERY_DETAILS_Result>("USP_RPT_MACHINERY_DETAILS");
        }
    
        public virtual ObjectResult<USP_RPT_MATERIAL_DETAILS_Result> USP_RPT_MATERIAL_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_MATERIAL_DETAILS_Result>("USP_RPT_MATERIAL_DETAILS");
        }
    
        public virtual ObjectResult<USP_RPT_MIS_CONTRACTORS_Result> USP_RPT_MIS_CONTRACTORS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_MIS_CONTRACTORS_Result>("USP_RPT_MIS_CONTRACTORS");
        }
    
        public virtual ObjectResult<USP_RPT_MIS_DSC_Result> USP_RPT_MIS_DSC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_MIS_DSC_Result>("USP_RPT_MIS_DSC");
        }
    
        public virtual ObjectResult<USP_RPT_MIS_PAYMENTS_Result> USP_RPT_MIS_PAYMENTS(string fundType, Nullable<int> month, Nullable<int> year, Nullable<int> state)
        {
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_MIS_PAYMENTS_Result>("USP_RPT_MIS_PAYMENTS", fundTypeParameter, monthParameter, yearParameter, stateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_NFP1_FINANCIAL_PROGRESS_OF_WORK_Result> USP_RPT_NFP1_FINANCIAL_PROGRESS_OF_WORK(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> fyear, Nullable<int> fAgency, Nullable<int> batch)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var fyearParameter = fyear.HasValue ?
                new ObjectParameter("Fyear", fyear) :
                new ObjectParameter("Fyear", typeof(int));
    
            var fAgencyParameter = fAgency.HasValue ?
                new ObjectParameter("FAgency", fAgency) :
                new ObjectParameter("FAgency", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_NFP1_FINANCIAL_PROGRESS_OF_WORK_Result>("USP_RPT_NFP1_FINANCIAL_PROGRESS_OF_WORK", levelParameter, stateParameter, districtParameter, blockParameter, fyearParameter, fAgencyParameter, batchParameter);
        }
    
        public virtual ObjectResult<USP_RPT_NFP2_FINANCIAL_PROGRESS_OF_WORK_Accounts_Result> USP_RPT_NFP2_FINANCIAL_PROGRESS_OF_WORK_Accounts(Nullable<int> level, Nullable<int> stateNDCode, Nullable<int> month, Nullable<int> year)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateNDCodeParameter = stateNDCode.HasValue ?
                new ObjectParameter("StateNDCode", stateNDCode) :
                new ObjectParameter("StateNDCode", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_NFP2_FINANCIAL_PROGRESS_OF_WORK_Accounts_Result>("USP_RPT_NFP2_FINANCIAL_PROGRESS_OF_WORK_Accounts", levelParameter, stateNDCodeParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_RPT_PMIS_TARGET_AND_PROGRESS_DETAILS_Result> USP_RPT_PMIS_TARGET_AND_PROGRESS_DETAILS(Nullable<int> prmRoadCode, Nullable<int> baseline)
        {
            var prmRoadCodeParameter = prmRoadCode.HasValue ?
                new ObjectParameter("prmRoadCode", prmRoadCode) :
                new ObjectParameter("prmRoadCode", typeof(int));
    
            var baselineParameter = baseline.HasValue ?
                new ObjectParameter("Baseline", baseline) :
                new ObjectParameter("Baseline", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_PMIS_TARGET_AND_PROGRESS_DETAILS_Result>("USP_RPT_PMIS_TARGET_AND_PROGRESS_DETAILS", prmRoadCodeParameter, baselineParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_ANNUAL_ACCOUNT_SELF_Result> USP_RPT_SHOW_ANNUAL_ACCOUNT_SELF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_ANNUAL_ACCOUNT_SELF_Result>("USP_RPT_SHOW_ANNUAL_ACCOUNT_SELF", p_INT_AdminNDCodeParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_BALSHEET_Result> USP_RPT_SHOW_BALSHEET(Nullable<int> pINTRptID, Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, Nullable<int> pINTisAllPIU)
        {
            var pINTRptIDParameter = pINTRptID.HasValue ?
                new ObjectParameter("PINTRptID", pINTRptID) :
                new ObjectParameter("PINTRptID", typeof(int));
    
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pINTisAllPIUParameter = pINTisAllPIU.HasValue ?
                new ObjectParameter("PINTisAllPIU", pINTisAllPIU) :
                new ObjectParameter("PINTisAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_BALSHEET_Result>("USP_RPT_SHOW_BALSHEET", pINTRptIDParameter, pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pINTisAllPIUParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_MF_BALSHEET_DPIU_Result> USP_RPT_SHOW_MF_BALSHEET_DPIU(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_MF_BALSHEET_DPIU_Result>("USP_RPT_SHOW_MF_BALSHEET_DPIU", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_MF_BALSHEET_NA_Result> USP_RPT_SHOW_MF_BALSHEET_NA(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccMonth, Nullable<int> p_INT_AccYear)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccMonthParameter = p_INT_AccMonth.HasValue ?
                new ObjectParameter("P_INT_AccMonth", p_INT_AccMonth) :
                new ObjectParameter("P_INT_AccMonth", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_MF_BALSHEET_NA_Result>("USP_RPT_SHOW_MF_BALSHEET_NA", p_INT_AdminNDCodeParameter, p_INT_AccMonthParameter, p_INT_AccYearParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_MONTHLY_ACCOUNT_ALLPIU_Result> USP_RPT_SHOW_MONTHLY_ACCOUNT_ALLPIU(Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, string pCHARfundType, string pCHARCreditDebit)
        {
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pCHARfundTypeParameter = pCHARfundType != null ?
                new ObjectParameter("PCHARfundType", pCHARfundType) :
                new ObjectParameter("PCHARfundType", typeof(string));
    
            var pCHARCreditDebitParameter = pCHARCreditDebit != null ?
                new ObjectParameter("PCHARCreditDebit", pCHARCreditDebit) :
                new ObjectParameter("PCHARCreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_MONTHLY_ACCOUNT_ALLPIU_Result>("USP_RPT_SHOW_MONTHLY_ACCOUNT_ALLPIU", pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pCHARfundTypeParameter, pCHARCreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_MONTHLY_ACCOUNT_SELF_Result> USP_RPT_SHOW_MONTHLY_ACCOUNT_SELF(Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, string pCHARfundType, string pCHARCreditDebit)
        {
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pCHARfundTypeParameter = pCHARfundType != null ?
                new ObjectParameter("PCHARfundType", pCHARfundType) :
                new ObjectParameter("PCHARfundType", typeof(string));
    
            var pCHARCreditDebitParameter = pCHARCreditDebit != null ?
                new ObjectParameter("PCHARCreditDebit", pCHARCreditDebit) :
                new ObjectParameter("PCHARCreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_MONTHLY_ACCOUNT_SELF_Result>("USP_RPT_SHOW_MONTHLY_ACCOUNT_SELF", pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pCHARfundTypeParameter, pCHARCreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_SCHEDULE_Result> USP_RPT_SHOW_SCHEDULE(Nullable<int> pINTRptID, Nullable<int> pINTAdminNDCode, Nullable<int> pINTAccMonth, Nullable<int> pINTAccYear, Nullable<int> pINTisAllPIU)
        {
            var pINTRptIDParameter = pINTRptID.HasValue ?
                new ObjectParameter("PINTRptID", pINTRptID) :
                new ObjectParameter("PINTRptID", typeof(int));
    
            var pINTAdminNDCodeParameter = pINTAdminNDCode.HasValue ?
                new ObjectParameter("PINTAdminNDCode", pINTAdminNDCode) :
                new ObjectParameter("PINTAdminNDCode", typeof(int));
    
            var pINTAccMonthParameter = pINTAccMonth.HasValue ?
                new ObjectParameter("PINTAccMonth", pINTAccMonth) :
                new ObjectParameter("PINTAccMonth", typeof(int));
    
            var pINTAccYearParameter = pINTAccYear.HasValue ?
                new ObjectParameter("PINTAccYear", pINTAccYear) :
                new ObjectParameter("PINTAccYear", typeof(int));
    
            var pINTisAllPIUParameter = pINTisAllPIU.HasValue ?
                new ObjectParameter("PINTisAllPIU", pINTisAllPIU) :
                new ObjectParameter("PINTisAllPIU", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_SCHEDULE_Result>("USP_RPT_SHOW_SCHEDULE", pINTRptIDParameter, pINTAdminNDCodeParameter, pINTAccMonthParameter, pINTAccYearParameter, pINTisAllPIUParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_YEARLY_ACCOUNT_ALLPIU_Result> USP_RPT_SHOW_YEARLY_ACCOUNT_ALLPIU(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_YEARLY_ACCOUNT_ALLPIU_Result>("USP_RPT_SHOW_YEARLY_ACCOUNT_ALLPIU", p_INT_AdminNDCodeParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SHOW_YEARLY_ACCOUNT_SELF_Result> USP_RPT_SHOW_YEARLY_ACCOUNT_SELF(Nullable<int> p_INT_AdminNDCode, Nullable<int> p_INT_AccYear, string p_CHAR_fundType, string p_CHAR_CreditDebit)
        {
            var p_INT_AdminNDCodeParameter = p_INT_AdminNDCode.HasValue ?
                new ObjectParameter("P_INT_AdminNDCode", p_INT_AdminNDCode) :
                new ObjectParameter("P_INT_AdminNDCode", typeof(int));
    
            var p_INT_AccYearParameter = p_INT_AccYear.HasValue ?
                new ObjectParameter("P_INT_AccYear", p_INT_AccYear) :
                new ObjectParameter("P_INT_AccYear", typeof(int));
    
            var p_CHAR_fundTypeParameter = p_CHAR_fundType != null ?
                new ObjectParameter("P_CHAR_fundType", p_CHAR_fundType) :
                new ObjectParameter("P_CHAR_fundType", typeof(string));
    
            var p_CHAR_CreditDebitParameter = p_CHAR_CreditDebit != null ?
                new ObjectParameter("P_CHAR_CreditDebit", p_CHAR_CreditDebit) :
                new ObjectParameter("P_CHAR_CreditDebit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SHOW_YEARLY_ACCOUNT_SELF_Result>("USP_RPT_SHOW_YEARLY_ACCOUNT_SELF", p_INT_AdminNDCodeParameter, p_INT_AccYearParameter, p_CHAR_fundTypeParameter, p_CHAR_CreditDebitParameter);
        }
    
        public virtual ObjectResult<USP_RPT_UPDATE_FA_Result> USP_RPT_UPDATE_FA(Nullable<int> p_INT_StateCode)
        {
            var p_INT_StateCodeParameter = p_INT_StateCode.HasValue ?
                new ObjectParameter("P_INT_StateCode", p_INT_StateCode) :
                new ObjectParameter("P_INT_StateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_UPDATE_FA_Result>("USP_RPT_UPDATE_FA", p_INT_StateCodeParameter);
        }
    
        public virtual ObjectResult<USP_SANCTION_HABITATION_DISHA_Result> USP_SANCTION_HABITATION_DISHA(Nullable<int> lDGSTATE)
        {
            var lDGSTATEParameter = lDGSTATE.HasValue ?
                new ObjectParameter("LDGSTATE", lDGSTATE) :
                new ObjectParameter("LDGSTATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SANCTION_HABITATION_DISHA_Result>("USP_SANCTION_HABITATION_DISHA", lDGSTATEParameter);
        }
    
        public virtual ObjectResult<string> USP_SLR_PROPOSAL_STATUS(string type, Nullable<int> road)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SLR_PROPOSAL_STATUS", typeParameter, roadParameter);
        }
    
        public virtual ObjectResult<USP_SQC_DETAILS_Result> USP_SQC_DETAILS(Nullable<int> sTATECODELGD)
        {
            var sTATECODELGDParameter = sTATECODELGD.HasValue ?
                new ObjectParameter("STATECODELGD", sTATECODELGD) :
                new ObjectParameter("STATECODELGD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SQC_DETAILS_Result>("USP_SQC_DETAILS", sTATECODELGDParameter);
        }
    
        public virtual ObjectResult<USP_STA_PAYMENT_REPORT_Result> USP_STA_PAYMENT_REPORT(Nullable<int> iNVOICE_ID)
        {
            var iNVOICE_IDParameter = iNVOICE_ID.HasValue ?
                new ObjectParameter("INVOICE_ID", iNVOICE_ID) :
                new ObjectParameter("INVOICE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_STA_PAYMENT_REPORT_Result>("USP_STA_PAYMENT_REPORT", iNVOICE_IDParameter);
        }
    
        public virtual ObjectResult<USP_STATE_RANK_OVERALLRANK_CALCULATION_Result> USP_STATE_RANK_OVERALLRANK_CALCULATION(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_STATE_RANK_OVERALLRANK_CALCULATION_Result>("USP_STATE_RANK_OVERALLRANK_CALCULATION", sTATEParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_STATE_RANK_OVERALLRANK_CALCULATION_only_for_edmx_Result> USP_STATE_RANK_OVERALLRANK_CALCULATION_only_for_edmx(Nullable<int> sTATE, Nullable<int> month, Nullable<int> year)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_STATE_RANK_OVERALLRANK_CALCULATION_only_for_edmx_Result>("USP_STATE_RANK_OVERALLRANK_CALCULATION_only_for_edmx", sTATEParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_STATE_WISE_QUALITY_ISSUES_Result> USP_STATE_WISE_QUALITY_ISSUES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_STATE_WISE_QUALITY_ISSUES_Result>("USP_STATE_WISE_QUALITY_ISSUES");
        }
    
        public virtual ObjectResult<USP_TARGET_ACHIEVEMENT_Result> USP_TARGET_ACHIEVEMENT(Nullable<int> yEAR, Nullable<int> sTATE)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TARGET_ACHIEVEMENT_Result>("USP_TARGET_ACHIEVEMENT", yEARParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_TARGET_ACHIEVEMENT_DISHA_Result> USP_TARGET_ACHIEVEMENT_DISHA(Nullable<int> yEAR, Nullable<int> lDGSTATE)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var lDGSTATEParameter = lDGSTATE.HasValue ?
                new ObjectParameter("LDGSTATE", lDGSTATE) :
                new ObjectParameter("LDGSTATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TARGET_ACHIEVEMENT_DISHA_Result>("USP_TARGET_ACHIEVEMENT_DISHA", yEARParameter, lDGSTATEParameter);
        }
    
        public virtual ObjectResult<USP_TARGET_ACHIEVEMENT_MORD_Result> USP_TARGET_ACHIEVEMENT_MORD(Nullable<int> yEAR, Nullable<int> sTATE)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TARGET_ACHIEVEMENT_MORD_Result>("USP_TARGET_ACHIEVEMENT_MORD", yEARParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_TECH_CHART_LEN_Result> USP_TECH_CHART_LEN(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TECH_CHART_LEN_Result>("USP_TECH_CHART_LEN", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_TECH_DASH_R1_Result> USP_TECH_DASH_R1(Nullable<int> report, Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TECH_DASH_R1_Result>("USP_TECH_DASH_R1", reportParameter, levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_TECH_DASH_R2_Result> USP_TECH_DASH_R2(Nullable<int> report, Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TECH_DASH_R2_Result>("USP_TECH_DASH_R2", reportParameter, levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_TECH_DASH_REPORT_Result> USP_TECH_DASH_REPORT(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> collaboration, Nullable<byte> pMGSY)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TECH_DASH_REPORT_Result>("USP_TECH_DASH_REPORT", levelParameter, stateParameter, districtParameter, blockParameter, collaborationParameter, pMGSYParameter);
        }
    
        public virtual int USP_TECH_TRENDS_CHART_PPT(Nullable<int> report, Nullable<int> level, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> collaboration, Nullable<int> agency, Nullable<byte> pMGSY)
        {
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_TECH_TRENDS_CHART_PPT", reportParameter, levelParameter, districtParameter, blockParameter, yearParameter, collaborationParameter, agencyParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_TEND_AGREEMENT_DETAIL_Result> USP_TEND_AGREEMENT_DETAIL(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> bLOCK, Nullable<int> yEAR, Nullable<int> bATCH, Nullable<int> cOLLAB, Nullable<byte> pMGSY)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var bLOCKParameter = bLOCK.HasValue ?
                new ObjectParameter("BLOCK", bLOCK) :
                new ObjectParameter("BLOCK", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var bATCHParameter = bATCH.HasValue ?
                new ObjectParameter("BATCH", bATCH) :
                new ObjectParameter("BATCH", typeof(int));
    
            var cOLLABParameter = cOLLAB.HasValue ?
                new ObjectParameter("COLLAB", cOLLAB) :
                new ObjectParameter("COLLAB", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TEND_AGREEMENT_DETAIL_Result>("USP_TEND_AGREEMENT_DETAIL", lEVELParameter, sTATEParameter, dISTRICTParameter, bLOCKParameter, yEARParameter, bATCHParameter, cOLLABParameter, pMGSYParameter);
        }
    
        public virtual ObjectResult<USP_TKT_GET_ALL_TKTLIST_SELFLEVEL_Result> USP_TKT_GET_ALL_TKTLIST_SELFLEVEL(Nullable<int> roleID, Nullable<int> userID, Nullable<int> state, Nullable<int> categoryID, Nullable<int> moduleID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("moduleID", moduleID) :
                new ObjectParameter("moduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TKT_GET_ALL_TKTLIST_SELFLEVEL_Result>("USP_TKT_GET_ALL_TKTLIST_SELFLEVEL", roleIDParameter, userIDParameter, stateParameter, categoryIDParameter, moduleIDParameter);
        }
    
        public virtual ObjectResult<USP_TKT_GET_PENDING_TKTLIST_SELFLEVEL_Result> USP_TKT_GET_PENDING_TKTLIST_SELFLEVEL(Nullable<int> roleID, Nullable<int> userID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TKT_GET_PENDING_TKTLIST_SELFLEVEL_Result>("USP_TKT_GET_PENDING_TKTLIST_SELFLEVEL", roleIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<USP_TKT_RPT_GET_ALL_TKTLIST_1_Result> USP_TKT_RPT_GET_ALL_TKTLIST_1(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> rOLEID, Nullable<int> cATEGORYID, Nullable<int> mODULEID, Nullable<int> uSERID, Nullable<int> days)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var rOLEIDParameter = rOLEID.HasValue ?
                new ObjectParameter("ROLEID", rOLEID) :
                new ObjectParameter("ROLEID", typeof(int));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var mODULEIDParameter = mODULEID.HasValue ?
                new ObjectParameter("MODULEID", mODULEID) :
                new ObjectParameter("MODULEID", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TKT_RPT_GET_ALL_TKTLIST_1_Result>("USP_TKT_RPT_GET_ALL_TKTLIST_1", lEVELParameter, sTATEParameter, rOLEIDParameter, cATEGORYIDParameter, mODULEIDParameter, uSERIDParameter, daysParameter);
        }
    
        public virtual ObjectResult<USP_TKT_RPT_GET_TICKET_COUNT_Result> USP_TKT_RPT_GET_TICKET_COUNT(Nullable<int> lEVEL, Nullable<int> sTATE, Nullable<int> rOLEID, Nullable<int> cATEGORYID, Nullable<int> mODULEID, Nullable<int> uSERID)
        {
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var rOLEIDParameter = rOLEID.HasValue ?
                new ObjectParameter("ROLEID", rOLEID) :
                new ObjectParameter("ROLEID", typeof(int));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var mODULEIDParameter = mODULEID.HasValue ?
                new ObjectParameter("MODULEID", mODULEID) :
                new ObjectParameter("MODULEID", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TKT_RPT_GET_TICKET_COUNT_Result>("USP_TKT_RPT_GET_TICKET_COUNT", lEVELParameter, sTATEParameter, rOLEIDParameter, cATEGORYIDParameter, mODULEIDParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<USP_TREEPLANT_HEADER_Result> USP_TREEPLANT_HEADER(Nullable<int> roadId)
        {
            var roadIdParameter = roadId.HasValue ?
                new ObjectParameter("RoadId", roadId) :
                new ObjectParameter("RoadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TREEPLANT_HEADER_Result>("USP_TREEPLANT_HEADER", roadIdParameter);
        }
    
        public virtual ObjectResult<USP_TREEPLANT_LIST_Result> USP_TREEPLANT_LIST(Nullable<int> roadId)
        {
            var roadIdParameter = roadId.HasValue ?
                new ObjectParameter("RoadId", roadId) :
                new ObjectParameter("RoadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_TREEPLANT_LIST_Result>("USP_TREEPLANT_LIST", roadIdParameter);
        }
    
        public virtual ObjectResult<USP_UM_GET_LOGIN_DETAILS_Result> USP_UM_GET_LOGIN_DETAILS(Nullable<int> roleCode, Nullable<int> stateCode, Nullable<int> userCode, Nullable<int> year, Nullable<int> month)
        {
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var userCodeParameter = userCode.HasValue ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_UM_GET_LOGIN_DETAILS_Result>("USP_UM_GET_LOGIN_DETAILS", roleCodeParameter, stateCodeParameter, userCodeParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<USP_UM_GET_USER_ACCESS_DETAILS_Result> USP_UM_GET_USER_ACCESS_DETAILS(Nullable<int> moduleId, Nullable<int> year, Nullable<int> month)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_UM_GET_USER_ACCESS_DETAILS_Result>("USP_UM_GET_USER_ACCESS_DETAILS", moduleIdParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_UM_GET_USER_LOGIN_YEAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_UM_GET_USER_LOGIN_YEAR");
        }
    
        public virtual int USP_UPDATE_BULK_DROP_DETAILS(string imsSanctioned, string imsSanctionedBy, Nullable<System.DateTime> sanctionDate, string isCompleted)
        {
            var imsSanctionedParameter = imsSanctioned != null ?
                new ObjectParameter("ImsSanctioned", imsSanctioned) :
                new ObjectParameter("ImsSanctioned", typeof(string));
    
            var imsSanctionedByParameter = imsSanctionedBy != null ?
                new ObjectParameter("ImsSanctionedBy", imsSanctionedBy) :
                new ObjectParameter("ImsSanctionedBy", typeof(string));
    
            var sanctionDateParameter = sanctionDate.HasValue ?
                new ObjectParameter("SanctionDate", sanctionDate) :
                new ObjectParameter("SanctionDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted != null ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UPDATE_BULK_DROP_DETAILS", imsSanctionedParameter, imsSanctionedByParameter, sanctionDateParameter, isCompletedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_UPDATE_MASTER_ACTIVE_STATUS(Nullable<int> paramId, string paramMaster, string paramActive)
        {
            var paramIdParameter = paramId.HasValue ?
                new ObjectParameter("paramId", paramId) :
                new ObjectParameter("paramId", typeof(int));
    
            var paramMasterParameter = paramMaster != null ?
                new ObjectParameter("paramMaster", paramMaster) :
                new ObjectParameter("paramMaster", typeof(string));
    
            var paramActiveParameter = paramActive != null ?
                new ObjectParameter("paramActive", paramActive) :
                new ObjectParameter("paramActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_UPDATE_MASTER_ACTIVE_STATUS", paramIdParameter, paramMasterParameter, paramActiveParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_UPDATE_VILLAGE_HABITATION_STATUS(Nullable<int> paramBlock, string paramActive, string paramSchedule)
        {
            var paramBlockParameter = paramBlock.HasValue ?
                new ObjectParameter("paramBlock", paramBlock) :
                new ObjectParameter("paramBlock", typeof(int));
    
            var paramActiveParameter = paramActive != null ?
                new ObjectParameter("paramActive", paramActive) :
                new ObjectParameter("paramActive", typeof(string));
    
            var paramScheduleParameter = paramSchedule != null ?
                new ObjectParameter("paramSchedule", paramSchedule) :
                new ObjectParameter("paramSchedule", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_UPDATE_VILLAGE_HABITATION_STATUS", paramBlockParameter, paramActiveParameter, paramScheduleParameter);
        }
    
        public virtual ObjectResult<USP_VALIDATE_EMARG_ROAD_FOR_REPACKAGING_Result> USP_VALIDATE_EMARG_ROAD_FOR_REPACKAGING(string packageID, Nullable<int> level)
        {
            var packageIDParameter = packageID != null ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_VALIDATE_EMARG_ROAD_FOR_REPACKAGING_Result>("USP_VALIDATE_EMARG_ROAD_FOR_REPACKAGING", packageIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<USP_WEEKLY_PROGRESS_Result> USP_WEEKLY_PROGRESS(string uSERNAME, Nullable<int> lEVEL, Nullable<int> pROGRESS, Nullable<int> sTATE)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var lEVELParameter = lEVEL.HasValue ?
                new ObjectParameter("LEVEL", lEVEL) :
                new ObjectParameter("LEVEL", typeof(int));
    
            var pROGRESSParameter = pROGRESS.HasValue ?
                new ObjectParameter("PROGRESS", pROGRESS) :
                new ObjectParameter("PROGRESS", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_WEEKLY_PROGRESS_Result>("USP_WEEKLY_PROGRESS", uSERNAMEParameter, lEVELParameter, pROGRESSParameter, sTATEParameter);
        }
    
        public virtual ObjectResult<USP_WORK_HEADER_Result> USP_WORK_HEADER(Nullable<int> rOAD_CODE)
        {
            var rOAD_CODEParameter = rOAD_CODE.HasValue ?
                new ObjectParameter("ROAD_CODE", rOAD_CODE) :
                new ObjectParameter("ROAD_CODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_WORK_HEADER_Result>("USP_WORK_HEADER", rOAD_CODEParameter);
        }
    
        public virtual ObjectResult<USP_WORKS_SANCTION_PENDING_Result> USP_WORKS_SANCTION_PENDING(Nullable<int> month, Nullable<int> year, Nullable<int> scheme)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_WORKS_SANCTION_PENDING_Result>("USP_WORKS_SANCTION_PENDING", monthParameter, yearParameter, schemeParameter);
        }
    
        public virtual ObjectResult<USP_WORKS_SANCTION_PENDING_DISHA_Result> USP_WORKS_SANCTION_PENDING_DISHA(Nullable<int> level, Nullable<int> month, Nullable<int> year, Nullable<int> lDGSTATE)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var lDGSTATEParameter = lDGSTATE.HasValue ?
                new ObjectParameter("LDGSTATE", lDGSTATE) :
                new ObjectParameter("LDGSTATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_WORKS_SANCTION_PENDING_DISHA_Result>("USP_WORKS_SANCTION_PENDING_DISHA", levelParameter, monthParameter, yearParameter, lDGSTATEParameter);
        }
    
        public virtual ObjectResult<USP_WORKS_SANCTION_PENDING_V1_Result> USP_WORKS_SANCTION_PENDING_V1(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_WORKS_SANCTION_PENDING_V1_Result>("USP_WORKS_SANCTION_PENDING_V1", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_WRONG_MAPPED_HABS_Result> USP_WRONG_MAPPED_HABS(Nullable<int> stateCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_WRONG_MAPPED_HABS_Result>("USP_WRONG_MAPPED_HABS", stateCodeParameter);
        }
    
        public virtual int USP_EFORMS_DELETE_INSPECTION_DETAILS(Nullable<int> roadCode, Nullable<int> eFORM_ID)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            var eFORM_IDParameter = eFORM_ID.HasValue ?
                new ObjectParameter("EFORM_ID", eFORM_ID) :
                new ObjectParameter("EFORM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_DELETE_INSPECTION_DETAILS", roadCodeParameter, eFORM_IDParameter);
        }
    
        public virtual ObjectResult<USP_EFORMS_GET_INSPECTION_LIST_Result> USP_EFORMS_GET_INSPECTION_LIST(Nullable<int> month, Nullable<int> year, string type, Nullable<int> code)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EFORMS_GET_INSPECTION_LIST_Result>("USP_EFORMS_GET_INSPECTION_LIST", monthParameter, yearParameter, typeParameter, codeParameter);
        }
    
        public virtual ObjectResult<USP_EFORMS_GET_PIU_DETAIL_Result> USP_EFORMS_GET_PIU_DETAIL(Nullable<int> roadCode)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EFORMS_GET_PIU_DETAIL_Result>("USP_EFORMS_GET_PIU_DETAIL", roadCodeParameter);
        }
    
        public virtual int USP_EFORMS_INITIALIZE(Nullable<int> rOADCODE, Nullable<int> sCHEDULE_CODE, Nullable<int> uSERID, string iPADD)
        {
            var rOADCODEParameter = rOADCODE.HasValue ?
                new ObjectParameter("ROADCODE", rOADCODE) :
                new ObjectParameter("ROADCODE", typeof(int));
    
            var sCHEDULE_CODEParameter = sCHEDULE_CODE.HasValue ?
                new ObjectParameter("SCHEDULE_CODE", sCHEDULE_CODE) :
                new ObjectParameter("SCHEDULE_CODE", typeof(int));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_INITIALIZE", rOADCODEParameter, sCHEDULE_CODEParameter, uSERIDParameter, iPADDParameter);
        }
    
        public virtual int USP_EFORMS_QM_DELETE_INSPECTION_DETAILS(Nullable<int> roadCode, Nullable<int> eFORM_ID)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            var eFORM_IDParameter = eFORM_ID.HasValue ?
                new ObjectParameter("EFORM_ID", eFORM_ID) :
                new ObjectParameter("EFORM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_QM_DELETE_INSPECTION_DETAILS", roadCodeParameter, eFORM_IDParameter);
        }
    
        public virtual ObjectResult<USP_EFORMS_GET_SCHEDULE_ROADLIST_Result> USP_EFORMS_GET_SCHEDULE_ROADLIST(string qmType, Nullable<int> schMonth, Nullable<int> schYear, Nullable<int> state, Nullable<int> district, string eformStatus, Nullable<int> adminQMCode)
        {
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var schMonthParameter = schMonth.HasValue ?
                new ObjectParameter("schMonth", schMonth) :
                new ObjectParameter("schMonth", typeof(int));
    
            var schYearParameter = schYear.HasValue ?
                new ObjectParameter("schYear", schYear) :
                new ObjectParameter("schYear", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var eformStatusParameter = eformStatus != null ?
                new ObjectParameter("EformStatus", eformStatus) :
                new ObjectParameter("EformStatus", typeof(string));
    
            var adminQMCodeParameter = adminQMCode.HasValue ?
                new ObjectParameter("AdminQMCode", adminQMCode) :
                new ObjectParameter("AdminQMCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EFORMS_GET_SCHEDULE_ROADLIST_Result>("USP_EFORMS_GET_SCHEDULE_ROADLIST", qmTypeParameter, schMonthParameter, schYearParameter, stateParameter, districtParameter, eformStatusParameter, adminQMCodeParameter);
        }
    
        public virtual int USP_EFORMS_INSERT_UPDATE_PREFILLED_INFO(Nullable<int> eFORM_ID, string aCTION, Nullable<int> uSERID, string iPADD)
        {
            var eFORM_IDParameter = eFORM_ID.HasValue ?
                new ObjectParameter("EFORM_ID", eFORM_ID) :
                new ObjectParameter("EFORM_ID", typeof(int));
    
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var iPADDParameter = iPADD != null ?
                new ObjectParameter("IPADD", iPADD) :
                new ObjectParameter("IPADD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_INSERT_UPDATE_PREFILLED_INFO", eFORM_IDParameter, aCTIONParameter, uSERIDParameter, iPADDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetInspectionSequenceValue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetInspectionSequenceValue");
        }
    
        [DbFunction("Entities", "UDF_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE")]
        public virtual IQueryable<UDF_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE_Result> UDF_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE(Nullable<int> state, Nullable<int> district)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE_Result>("[Entities].[UDF_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE](@State, @District)", stateParameter, districtParameter);
        }
    
        public virtual ObjectResult<USP_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE_Result> USP_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE(Nullable<int> stateCode, Nullable<int> districtCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE_Result>("USP_CORRECTED_ROAD_DETAIL_FOR_MAINTENANCE", stateCodeParameter, districtCodeParameter);
        }
    
        public virtual ObjectResult<USP_INSERT_POST_DLP_RECORDS_Result> USP_INSERT_POST_DLP_RECORDS(Nullable<int> eMARG_ID)
        {
            var eMARG_IDParameter = eMARG_ID.HasValue ?
                new ObjectParameter("EMARG_ID", eMARG_ID) :
                new ObjectParameter("EMARG_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_INSERT_POST_DLP_RECORDS_Result>("USP_INSERT_POST_DLP_RECORDS", eMARG_IDParameter);
        }
    
        public virtual int INSERT_DATA_IN_DYNAMIC_DASHBOARD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DATA_IN_DYNAMIC_DASHBOARD");
        }
    
        public virtual ObjectResult<USP_QCR_DETAILS_Result> USP_QCR_DETAILS(Nullable<int> yEAR, Nullable<int> dISTRICT, Nullable<int> sCHEME)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var sCHEMEParameter = sCHEME.HasValue ?
                new ObjectParameter("SCHEME", sCHEME) :
                new ObjectParameter("SCHEME", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QCR_DETAILS_Result>("USP_QCR_DETAILS", yEARParameter, dISTRICTParameter, sCHEMEParameter);
        }
    
        public virtual int USP_EFORMS_BRIDGE_PIU_DELETE_INSPECTION_DETAILS(Nullable<int> roadCode, Nullable<int> eFORM_ID)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            var eFORM_IDParameter = eFORM_ID.HasValue ?
                new ObjectParameter("EFORM_ID", eFORM_ID) :
                new ObjectParameter("EFORM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_BRIDGE_PIU_DELETE_INSPECTION_DETAILS", roadCodeParameter, eFORM_IDParameter);
        }
    
        public virtual int USP_EFORMS_BRIDGE_QM_DELETE_INSPECTION_DETAILS(Nullable<int> roadCode, Nullable<int> eFORM_ID)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            var eFORM_IDParameter = eFORM_ID.HasValue ?
                new ObjectParameter("EFORM_ID", eFORM_ID) :
                new ObjectParameter("EFORM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_BRIDGE_QM_DELETE_INSPECTION_DETAILS", roadCodeParameter, eFORM_IDParameter);
        }
    
        public virtual int USP_QM_REGRADE_ATR(Nullable<int> obsId, string status, Nullable<int> atrId, string remarks, Nullable<int> atrReasonId, Nullable<int> userId, string ipAdd)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var atrIdParameter = atrId.HasValue ?
                new ObjectParameter("atrId", atrId) :
                new ObjectParameter("atrId", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var atrReasonIdParameter = atrReasonId.HasValue ?
                new ObjectParameter("atrReasonId", atrReasonId) :
                new ObjectParameter("atrReasonId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var ipAddParameter = ipAdd != null ?
                new ObjectParameter("ipAdd", ipAdd) :
                new ObjectParameter("ipAdd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_REGRADE_ATR", obsIdParameter, statusParameter, atrIdParameter, remarksParameter, atrReasonIdParameter, userIdParameter, ipAddParameter);
        }
    
        public virtual ObjectResult<qm_get_works_to_assign_Result> qm_get_works_to_assign(Nullable<int> sTATE, Nullable<int> dISTRICT, Nullable<int> sCHEDULE, Nullable<int> pmgsy)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            var sCHEDULEParameter = sCHEDULE.HasValue ?
                new ObjectParameter("SCHEDULE", sCHEDULE) :
                new ObjectParameter("SCHEDULE", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_works_to_assign_Result>("qm_get_works_to_assign", sTATEParameter, dISTRICTParameter, sCHEDULEParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_Against_Road_Result> qm_inspection_list_Against_Road(Nullable<int> roadCode)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("roadCode", roadCode) :
                new ObjectParameter("roadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_Against_Road_Result>("qm_inspection_list_Against_Road", roadCodeParameter);
        }
    
        public virtual ObjectResult<qm_get_assigned_road_list1_Result> qm_get_assigned_road_list1(Nullable<int> schCode, Nullable<int> distCode, Nullable<int> pmgsy)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_assigned_road_list1_Result>("qm_get_assigned_road_list1", schCodeParameter, distCodeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_get_assigned_road_list2_Result> qm_get_assigned_road_list2(Nullable<int> schCode, Nullable<int> distCode, Nullable<int> pmgsy)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_assigned_road_list2_Result>("qm_get_assigned_road_list2", schCodeParameter, distCodeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_get_monitor_scheduled_roads_Result> qm_get_monitor_scheduled_roads(Nullable<int> monitorCode, Nullable<int> inspMonth, Nullable<int> inspYear, string qmType)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("inspMonth", inspMonth) :
                new ObjectParameter("inspMonth", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("inspYear", inspYear) :
                new ObjectParameter("inspYear", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_monitor_scheduled_roads_Result>("qm_get_monitor_scheduled_roads", monitorCodeParameter, inspMonthParameter, inspYearParameter, qmTypeParameter);
        }
    
        public virtual ObjectResult<USP_PUSH_CORRECTED_EMARG_DETAILS_POST_DLP_Result> USP_PUSH_CORRECTED_EMARG_DETAILS_POST_DLP(Nullable<int> roadcode)
        {
            var roadcodeParameter = roadcode.HasValue ?
                new ObjectParameter("roadcode", roadcode) :
                new ObjectParameter("roadcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PUSH_CORRECTED_EMARG_DETAILS_POST_DLP_Result>("USP_PUSH_CORRECTED_EMARG_DETAILS_POST_DLP", roadcodeParameter);
        }
    
        public virtual ObjectResult<qm_get_assigned_road_list_Result> qm_get_assigned_road_list(Nullable<int> schCode, Nullable<int> distCode, Nullable<int> pmgsy)
        {
            var schCodeParameter = schCode.HasValue ?
                new ObjectParameter("schCode", schCode) :
                new ObjectParameter("schCode", typeof(int));
    
            var distCodeParameter = distCode.HasValue ?
                new ObjectParameter("distCode", distCode) :
                new ObjectParameter("distCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_assigned_road_list_Result>("qm_get_assigned_road_list", schCodeParameter, distCodeParameter, pmgsyParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_atrr_Result> qm_inspection_list_atrr(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> adminNdCode, Nullable<int> pmgsy, string flag)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_atrr_Result>("qm_inspection_list_atrr", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, adminNdCodeParameter, pmgsyParameter, flagParameter);
        }
    
        [DbFunction("Entities", "UDF_IMS_UNLOCK_STATUS_TECHNOLOGY")]
        public virtual IQueryable<Nullable<int>> UDF_IMS_UNLOCK_STATUS_TECHNOLOGY(Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> hab, Nullable<int> road, Nullable<int> batch, Nullable<int> year, string module, Nullable<byte> scheme, Nullable<short> roleID)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var habParameter = hab.HasValue ?
                new ObjectParameter("Hab", hab) :
                new ObjectParameter("Hab", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(byte));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[Entities].[UDF_IMS_UNLOCK_STATUS_TECHNOLOGY](@State, @District, @Block, @Village, @Hab, @Road, @Batch, @Year, @Module, @Scheme, @RoleID)", stateParameter, districtParameter, blockParameter, villageParameter, habParameter, roadParameter, batchParameter, yearParameter, moduleParameter, schemeParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<qm_get_schedule_current_month_onwards_Result> qm_get_schedule_current_month_onwards(Nullable<int> monitor, string qmType, Nullable<int> stateCode, Nullable<int> month, Nullable<int> year, Nullable<int> userId)
        {
            var monitorParameter = monitor.HasValue ?
                new ObjectParameter("monitor", monitor) :
                new ObjectParameter("monitor", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_get_schedule_current_month_onwards_Result>("qm_get_schedule_current_month_onwards", monitorParameter, qmTypeParameter, stateCodeParameter, monthParameter, yearParameter, userIdParameter);
        }
    
        public virtual int QM_GET_WORK_AUTO_SCHEDULE(Nullable<int> sTATE, Nullable<int> dISTRICT1, Nullable<int> dISTRICT2, Nullable<int> aUTO_SCHEDULE_ID)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICT1Parameter = dISTRICT1.HasValue ?
                new ObjectParameter("DISTRICT1", dISTRICT1) :
                new ObjectParameter("DISTRICT1", typeof(int));
    
            var dISTRICT2Parameter = dISTRICT2.HasValue ?
                new ObjectParameter("DISTRICT2", dISTRICT2) :
                new ObjectParameter("DISTRICT2", typeof(int));
    
            var aUTO_SCHEDULE_IDParameter = aUTO_SCHEDULE_ID.HasValue ?
                new ObjectParameter("AUTO_SCHEDULE_ID", aUTO_SCHEDULE_ID) :
                new ObjectParameter("AUTO_SCHEDULE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QM_GET_WORK_AUTO_SCHEDULE", sTATEParameter, dISTRICT1Parameter, dISTRICT2Parameter, aUTO_SCHEDULE_IDParameter);
        }
    
        public virtual int USP_QUALITY_QM_AUTO_SCHEDULE(Nullable<int> statecode, Nullable<int> year, Nullable<int> month)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QUALITY_QM_AUTO_SCHEDULE", statecodeParameter, yearParameter, monthParameter);
        }
    
        public virtual int USP_QUALITY_QM_AUTO_SCHEDULE_DISTRICT(Nullable<int> statecode, Nullable<int> year, Nullable<int> month)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QUALITY_QM_AUTO_SCHEDULE_DISTRICT", statecodeParameter, yearParameter, monthParameter);
        }
    
        public virtual int USP_EFORMS_TR_DELETE_INSPECTION_DETAILS(Nullable<int> roadCode, Nullable<int> eFORM_ID)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("RoadCode", roadCode) :
                new ObjectParameter("RoadCode", typeof(int));
    
            var eFORM_IDParameter = eFORM_ID.HasValue ?
                new ObjectParameter("EFORM_ID", eFORM_ID) :
                new ObjectParameter("EFORM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_EFORMS_TR_DELETE_INSPECTION_DETAILS", roadCodeParameter, eFORM_IDParameter);
        }
    
        public virtual ObjectResult<string> REAT_GENERATE_HOLDING_ACCOUNT_PAYEMENT_XML(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<System.DateTime> generationDate, Nullable<long> billId, string fileGenerationType, string xmlFileName, Nullable<int> runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var generationDateParameter = generationDate.HasValue ?
                new ObjectParameter("generationDate", generationDate) :
                new ObjectParameter("generationDate", typeof(System.DateTime));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            var fileGenerationTypeParameter = fileGenerationType != null ?
                new ObjectParameter("fileGenerationType", fileGenerationType) :
                new ObjectParameter("fileGenerationType", typeof(string));
    
            var xmlFileNameParameter = xmlFileName != null ?
                new ObjectParameter("XmlFileName", xmlFileName) :
                new ObjectParameter("XmlFileName", typeof(string));
    
            var runningCountParameter = runningCount.HasValue ?
                new ObjectParameter("RunningCount", runningCount) :
                new ObjectParameter("RunningCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_GENERATE_HOLDING_ACCOUNT_PAYEMENT_XML", stateCodeParameter, agencyCodeParameter, generationDateParameter, billIdParameter, fileGenerationTypeParameter, xmlFileNameParameter, runningCountParameter);
        }
    
        public virtual ObjectResult<string> REAT_HOLDING_ACCOUNT_PAYMENT_HEADER_XML(Nullable<int> stateCode, Nullable<int> agencyCode, Nullable<System.DateTime> generationDate, string fileGenerationType, Nullable<long> billId, ObjectParameter xmlFileName, ObjectParameter runningCount)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var agencyCodeParameter = agencyCode.HasValue ?
                new ObjectParameter("agencyCode", agencyCode) :
                new ObjectParameter("agencyCode", typeof(int));
    
            var generationDateParameter = generationDate.HasValue ?
                new ObjectParameter("generationDate", generationDate) :
                new ObjectParameter("generationDate", typeof(System.DateTime));
    
            var fileGenerationTypeParameter = fileGenerationType != null ?
                new ObjectParameter("fileGenerationType", fileGenerationType) :
                new ObjectParameter("fileGenerationType", typeof(string));
    
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("REAT_HOLDING_ACCOUNT_PAYMENT_HEADER_XML", stateCodeParameter, agencyCodeParameter, generationDateParameter, fileGenerationTypeParameter, billIdParameter, xmlFileName, runningCount);
        }
    
        public virtual ObjectResult<SP_ACC_Display_Vouchers_Acknowledged_details_Result> SP_ACC_Display_Vouchers_Acknowledged_details(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<int> prm_Dpiu_code, string aCC_Type)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_Dpiu_codeParameter = prm_Dpiu_code.HasValue ?
                new ObjectParameter("Prm_Dpiu_code", prm_Dpiu_code) :
                new ObjectParameter("Prm_Dpiu_code", typeof(int));
    
            var aCC_TypeParameter = aCC_Type != null ?
                new ObjectParameter("ACC_Type", aCC_Type) :
                new ObjectParameter("ACC_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACC_Display_Vouchers_Acknowledged_details_Result>("SP_ACC_Display_Vouchers_Acknowledged_details", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_Dpiu_codeParameter, aCC_TypeParameter);
        }
    
        [DbFunction("Entities", "UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_COMPOSITE")]
        public virtual IQueryable<UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_COMPOSITE_Result> UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_COMPOSITE(string prm_Fund_Type, Nullable<int> prm_Admin_Nd_Code, Nullable<short> prm_Month, Nullable<short> prm_Year, Nullable<short> prm_lvl)
        {
            var prm_Fund_TypeParameter = prm_Fund_Type != null ?
                new ObjectParameter("Prm_Fund_Type", prm_Fund_Type) :
                new ObjectParameter("Prm_Fund_Type", typeof(string));
    
            var prm_Admin_Nd_CodeParameter = prm_Admin_Nd_Code.HasValue ?
                new ObjectParameter("Prm_Admin_Nd_Code", prm_Admin_Nd_Code) :
                new ObjectParameter("Prm_Admin_Nd_Code", typeof(int));
    
            var prm_MonthParameter = prm_Month.HasValue ?
                new ObjectParameter("Prm_Month", prm_Month) :
                new ObjectParameter("Prm_Month", typeof(short));
    
            var prm_YearParameter = prm_Year.HasValue ?
                new ObjectParameter("Prm_Year", prm_Year) :
                new ObjectParameter("Prm_Year", typeof(short));
    
            var prm_lvlParameter = prm_lvl.HasValue ?
                new ObjectParameter("Prm_lvl", prm_lvl) :
                new ObjectParameter("Prm_lvl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_COMPOSITE_Result>("[Entities].[UDF_ACC_GEN_GET_BA_CASH_CLOSING_BALANCES_COMPOSITE](@Prm_Fund_Type, @Prm_Admin_Nd_Code, @Prm_Month, @Prm_Year, @Prm_lvl)", prm_Fund_TypeParameter, prm_Admin_Nd_CodeParameter, prm_MonthParameter, prm_YearParameter, prm_lvlParameter);
        }
    
        public virtual ObjectResult<USP_ACC_HOLDING_SDA_TRANSACTION_Result> USP_ACC_HOLDING_SDA_TRANSACTION(Nullable<int> month, Nullable<int> year, Nullable<int> adminNDcode)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var adminNDcodeParameter = adminNDcode.HasValue ?
                new ObjectParameter("adminNDcode", adminNDcode) :
                new ObjectParameter("adminNDcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_HOLDING_SDA_TRANSACTION_Result>("USP_ACC_HOLDING_SDA_TRANSACTION", monthParameter, yearParameter, adminNDcodeParameter);
        }
    
        public virtual int USP_ACC_INSERT_AUTOTXNS_ATSRRDA(Nullable<int> txn_id, Nullable<int> bILL_MONTH, Nullable<int> bILL_YEAR, Nullable<int> piu_code, Nullable<int> srrdacode)
        {
            var txn_idParameter = txn_id.HasValue ?
                new ObjectParameter("txn_id", txn_id) :
                new ObjectParameter("txn_id", typeof(int));
    
            var bILL_MONTHParameter = bILL_MONTH.HasValue ?
                new ObjectParameter("BILL_MONTH", bILL_MONTH) :
                new ObjectParameter("BILL_MONTH", typeof(int));
    
            var bILL_YEARParameter = bILL_YEAR.HasValue ?
                new ObjectParameter("BILL_YEAR", bILL_YEAR) :
                new ObjectParameter("BILL_YEAR", typeof(int));
    
            var piu_codeParameter = piu_code.HasValue ?
                new ObjectParameter("piu_code", piu_code) :
                new ObjectParameter("piu_code", typeof(int));
    
            var srrdacodeParameter = srrdacode.HasValue ?
                new ObjectParameter("srrdacode", srrdacode) :
                new ObjectParameter("srrdacode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACC_INSERT_AUTOTXNS_ATSRRDA", txn_idParameter, bILL_MONTHParameter, bILL_YEARParameter, piu_codeParameter, srrdacodeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_INSERT_CHQ_BOOK_DETAILS(Nullable<int> chequeBookId, string startLeaf, string endLeaf, string fundType, Nullable<System.DateTime> issuedate, Nullable<int> bankCode, Nullable<int> adminNdCode, Nullable<int> levelId, Nullable<int> userId, string iPAddress, string accountType)
        {
            var chequeBookIdParameter = chequeBookId.HasValue ?
                new ObjectParameter("ChequeBookId", chequeBookId) :
                new ObjectParameter("ChequeBookId", typeof(int));
    
            var startLeafParameter = startLeaf != null ?
                new ObjectParameter("StartLeaf", startLeaf) :
                new ObjectParameter("StartLeaf", typeof(string));
    
            var endLeafParameter = endLeaf != null ?
                new ObjectParameter("EndLeaf", endLeaf) :
                new ObjectParameter("EndLeaf", typeof(string));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var issuedateParameter = issuedate.HasValue ?
                new ObjectParameter("Issuedate", issuedate) :
                new ObjectParameter("Issuedate", typeof(System.DateTime));
    
            var bankCodeParameter = bankCode.HasValue ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_INSERT_CHQ_BOOK_DETAILS", chequeBookIdParameter, startLeafParameter, endLeafParameter, fundTypeParameter, issuedateParameter, bankCodeParameter, adminNdCodeParameter, levelIdParameter, userIdParameter, iPAddressParameter, accountTypeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_VALIDATE_BANK_DETAILS(Nullable<int> adminNdCode, string fundType, string accountType)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_VALIDATE_BANK_DETAILS", adminNdCodeParameter, fundTypeParameter, accountTypeParameter);
        }
    
        public virtual ObjectResult<string> USP_ACC_VALIDATE_CHEQUEBOOK_DETAILS(Nullable<int> adminNdCode, string fundType, string issueDate, string leafStart, string leafEnd, Nullable<int> levelID, string accountType)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var issueDateParameter = issueDate != null ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(string));
    
            var leafStartParameter = leafStart != null ?
                new ObjectParameter("LeafStart", leafStart) :
                new ObjectParameter("LeafStart", typeof(string));
    
            var leafEndParameter = leafEnd != null ?
                new ObjectParameter("LeafEnd", leafEnd) :
                new ObjectParameter("LeafEnd", typeof(string));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ACC_VALIDATE_CHEQUEBOOK_DETAILS", adminNdCodeParameter, fundTypeParameter, issueDateParameter, leafStartParameter, leafEndParameter, levelIDParameter, accountTypeParameter);
        }
    
        public virtual ObjectResult<USP_ACC_GET_CHQ_BOOK_LIST_Result> USP_ACC_GET_CHQ_BOOK_LIST(Nullable<int> adminNdCode, string fundType, Nullable<int> levelID, Nullable<int> month, Nullable<int> year, Nullable<int> chequeBookNumber)
        {
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var chequeBookNumberParameter = chequeBookNumber.HasValue ?
                new ObjectParameter("ChequeBookNumber", chequeBookNumber) :
                new ObjectParameter("ChequeBookNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ACC_GET_CHQ_BOOK_LIST_Result>("USP_ACC_GET_CHQ_BOOK_LIST", adminNdCodeParameter, fundTypeParameter, levelIDParameter, monthParameter, yearParameter, chequeBookNumberParameter);
        }
    
        public virtual ObjectResult<USP_QM_HELPDESK_GET_IMEI_DETAILS_Result> USP_QM_HELPDESK_GET_IMEI_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_HELPDESK_GET_IMEI_DETAILS_Result>("USP_QM_HELPDESK_GET_IMEI_DETAILS");
        }
    
        public virtual ObjectResult<REAT_TRANSFER_DEDUCTION_AMT_TO_HOLDING_ACCOUNT_DETAILS_Result> REAT_TRANSFER_DEDUCTION_AMT_TO_HOLDING_ACCOUNT_DETAILS(Nullable<int> month, Nullable<int> year, Nullable<int> adminNdCode, string startDate)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REAT_TRANSFER_DEDUCTION_AMT_TO_HOLDING_ACCOUNT_DETAILS_Result>("REAT_TRANSFER_DEDUCTION_AMT_TO_HOLDING_ACCOUNT_DETAILS", monthParameter, yearParameter, adminNdCodeParameter, startDateParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list1_Result> qm_inspection_list1(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, string qmType, Nullable<int> pmgsy, Nullable<int> roleCode, string propType, string overallGrade, string eformStatus)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            var propTypeParameter = propType != null ?
                new ObjectParameter("propType", propType) :
                new ObjectParameter("propType", typeof(string));
    
            var overallGradeParameter = overallGrade != null ?
                new ObjectParameter("overallGrade", overallGrade) :
                new ObjectParameter("overallGrade", typeof(string));
    
            var eformStatusParameter = eformStatus != null ?
                new ObjectParameter("eformStatus", eformStatus) :
                new ObjectParameter("eformStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list1_Result>("qm_inspection_list1", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, qmTypeParameter, pmgsyParameter, roleCodeParameter, propTypeParameter, overallGradeParameter, eformStatusParameter);
        }
    
        public virtual ObjectResult<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result> USP_EFORMS_GET_SCHEDULE_WORKLIST(string qmType, Nullable<int> schMonth, Nullable<int> schYear, Nullable<int> state, Nullable<int> district, string eformStatus, Nullable<int> adminQMCode, string propType)
        {
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var schMonthParameter = schMonth.HasValue ?
                new ObjectParameter("schMonth", schMonth) :
                new ObjectParameter("schMonth", typeof(int));
    
            var schYearParameter = schYear.HasValue ?
                new ObjectParameter("schYear", schYear) :
                new ObjectParameter("schYear", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(int));
    
            var eformStatusParameter = eformStatus != null ?
                new ObjectParameter("EformStatus", eformStatus) :
                new ObjectParameter("EformStatus", typeof(string));
    
            var adminQMCodeParameter = adminQMCode.HasValue ?
                new ObjectParameter("AdminQMCode", adminQMCode) :
                new ObjectParameter("AdminQMCode", typeof(int));
    
            var propTypeParameter = propType != null ?
                new ObjectParameter("PropType", propType) :
                new ObjectParameter("PropType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_EFORMS_GET_SCHEDULE_WORKLIST_Result>("USP_EFORMS_GET_SCHEDULE_WORKLIST", qmTypeParameter, schMonthParameter, schYearParameter, stateParameter, districtParameter, eformStatusParameter, adminQMCodeParameter, propTypeParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_Result> qm_inspection_list(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, string qmType, Nullable<int> pmgsy, Nullable<int> roleCode, string propType, string overallGrade, string eformStatus)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            var propTypeParameter = propType != null ?
                new ObjectParameter("propType", propType) :
                new ObjectParameter("propType", typeof(string));
    
            var overallGradeParameter = overallGrade != null ?
                new ObjectParameter("overallGrade", overallGrade) :
                new ObjectParameter("overallGrade", typeof(string));
    
            var eformStatusParameter = eformStatus != null ?
                new ObjectParameter("eformStatus", eformStatus) :
                new ObjectParameter("eformStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_Result>("qm_inspection_list", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, qmTypeParameter, pmgsyParameter, roleCodeParameter, propTypeParameter, overallGradeParameter, eformStatusParameter);
        }
    
        public virtual ObjectResult<TOUR_CLAIM_CALCULATION_Result> TOUR_CLAIM_CALCULATION(Nullable<int> tourId, Nullable<int> monthOfInspection, Nullable<int> yearOfInspection)
        {
            var tourIdParameter = tourId.HasValue ?
                new ObjectParameter("tourId", tourId) :
                new ObjectParameter("tourId", typeof(int));
    
            var monthOfInspectionParameter = monthOfInspection.HasValue ?
                new ObjectParameter("monthOfInspection", monthOfInspection) :
                new ObjectParameter("monthOfInspection", typeof(int));
    
            var yearOfInspectionParameter = yearOfInspection.HasValue ?
                new ObjectParameter("yearOfInspection", yearOfInspection) :
                new ObjectParameter("yearOfInspection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOUR_CLAIM_CALCULATION_Result>("TOUR_CLAIM_CALCULATION", tourIdParameter, monthOfInspectionParameter, yearOfInspectionParameter);
        }
    
        public virtual ObjectResult<USP_QM_QUICK_RESPONSE_SHEET_Result> USP_QM_QUICK_RESPONSE_SHEET(string qMTYPE, Nullable<int> qMCODE, Nullable<int> inspYear, Nullable<int> inspMonth, Nullable<int> pMGSY, Nullable<int> sTATE, Nullable<int> dISTRICT)
        {
            var qMTYPEParameter = qMTYPE != null ?
                new ObjectParameter("QMTYPE", qMTYPE) :
                new ObjectParameter("QMTYPE", typeof(string));
    
            var qMCODEParameter = qMCODE.HasValue ?
                new ObjectParameter("QMCODE", qMCODE) :
                new ObjectParameter("QMCODE", typeof(int));
    
            var inspYearParameter = inspYear.HasValue ?
                new ObjectParameter("InspYear", inspYear) :
                new ObjectParameter("InspYear", typeof(int));
    
            var inspMonthParameter = inspMonth.HasValue ?
                new ObjectParameter("InspMonth", inspMonth) :
                new ObjectParameter("InspMonth", typeof(int));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(int));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            var dISTRICTParameter = dISTRICT.HasValue ?
                new ObjectParameter("DISTRICT", dISTRICT) :
                new ObjectParameter("DISTRICT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QM_QUICK_RESPONSE_SHEET_Result>("USP_QM_QUICK_RESPONSE_SHEET", qMTYPEParameter, qMCODEParameter, inspYearParameter, inspMonthParameter, pMGSYParameter, sTATEParameter, dISTRICTParameter);
        }
    
        public virtual ObjectResult<GET_CORE_NETWORKS_Result> GET_CORE_NETWORKS(Nullable<int> statecode, Nullable<int> districtcode, Nullable<int> blockcode, string roadtype, Nullable<int> roadcode, string roadname, Nullable<short> roleID)
        {
            var statecodeParameter = statecode.HasValue ?
                new ObjectParameter("statecode", statecode) :
                new ObjectParameter("statecode", typeof(int));
    
            var districtcodeParameter = districtcode.HasValue ?
                new ObjectParameter("districtcode", districtcode) :
                new ObjectParameter("districtcode", typeof(int));
    
            var blockcodeParameter = blockcode.HasValue ?
                new ObjectParameter("blockcode", blockcode) :
                new ObjectParameter("blockcode", typeof(int));
    
            var roadtypeParameter = roadtype != null ?
                new ObjectParameter("roadtype", roadtype) :
                new ObjectParameter("roadtype", typeof(string));
    
            var roadcodeParameter = roadcode.HasValue ?
                new ObjectParameter("roadcode", roadcode) :
                new ObjectParameter("roadcode", typeof(int));
    
            var roadnameParameter = roadname != null ?
                new ObjectParameter("roadname", roadname) :
                new ObjectParameter("roadname", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CORE_NETWORKS_Result>("GET_CORE_NETWORKS", statecodeParameter, districtcodeParameter, blockcodeParameter, roadtypeParameter, roadcodeParameter, roadnameParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<QUALITY_QM_TE_REVIEW_REMARKS_LIST_Result> QUALITY_QM_TE_REVIEW_REMARKS_LIST(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, string qmType, Nullable<int> pmgsy, Nullable<int> roleCode, string propType, string overallGrade, string eformStatus, Nullable<int> technicalExpertId)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var qmTypeParameter = qmType != null ?
                new ObjectParameter("qmType", qmType) :
                new ObjectParameter("qmType", typeof(string));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            var propTypeParameter = propType != null ?
                new ObjectParameter("propType", propType) :
                new ObjectParameter("propType", typeof(string));
    
            var overallGradeParameter = overallGrade != null ?
                new ObjectParameter("overallGrade", overallGrade) :
                new ObjectParameter("overallGrade", typeof(string));
    
            var eformStatusParameter = eformStatus != null ?
                new ObjectParameter("eformStatus", eformStatus) :
                new ObjectParameter("eformStatus", typeof(string));
    
            var technicalExpertIdParameter = technicalExpertId.HasValue ?
                new ObjectParameter("technicalExpertId", technicalExpertId) :
                new ObjectParameter("technicalExpertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QUALITY_QM_TE_REVIEW_REMARKS_LIST_Result>("QUALITY_QM_TE_REVIEW_REMARKS_LIST", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, qmTypeParameter, pmgsyParameter, roleCodeParameter, propTypeParameter, overallGradeParameter, eformStatusParameter, technicalExpertIdParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_2_Tier_atrr_Result> qm_inspection_list_2_Tier_atrr(Nullable<int> monitorCode, Nullable<int> fromInspMonth, Nullable<int> fromInspYear, Nullable<int> toInspMonth, Nullable<int> toInspYear, string atrStatus, string rdStatus, Nullable<int> stateCode, Nullable<int> districtCode, Nullable<int> adminNdCode, Nullable<int> pmgsy, string flag)
        {
            var monitorCodeParameter = monitorCode.HasValue ?
                new ObjectParameter("monitorCode", monitorCode) :
                new ObjectParameter("monitorCode", typeof(int));
    
            var fromInspMonthParameter = fromInspMonth.HasValue ?
                new ObjectParameter("fromInspMonth", fromInspMonth) :
                new ObjectParameter("fromInspMonth", typeof(int));
    
            var fromInspYearParameter = fromInspYear.HasValue ?
                new ObjectParameter("fromInspYear", fromInspYear) :
                new ObjectParameter("fromInspYear", typeof(int));
    
            var toInspMonthParameter = toInspMonth.HasValue ?
                new ObjectParameter("toInspMonth", toInspMonth) :
                new ObjectParameter("toInspMonth", typeof(int));
    
            var toInspYearParameter = toInspYear.HasValue ?
                new ObjectParameter("toInspYear", toInspYear) :
                new ObjectParameter("toInspYear", typeof(int));
    
            var atrStatusParameter = atrStatus != null ?
                new ObjectParameter("atrStatus", atrStatus) :
                new ObjectParameter("atrStatus", typeof(string));
    
            var rdStatusParameter = rdStatus != null ?
                new ObjectParameter("rdStatus", rdStatus) :
                new ObjectParameter("rdStatus", typeof(string));
    
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("stateCode", stateCode) :
                new ObjectParameter("stateCode", typeof(int));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var adminNdCodeParameter = adminNdCode.HasValue ?
                new ObjectParameter("AdminNdCode", adminNdCode) :
                new ObjectParameter("AdminNdCode", typeof(int));
    
            var pmgsyParameter = pmgsy.HasValue ?
                new ObjectParameter("Pmgsy", pmgsy) :
                new ObjectParameter("Pmgsy", typeof(int));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_2_Tier_atrr_Result>("qm_inspection_list_2_Tier_atrr", monitorCodeParameter, fromInspMonthParameter, fromInspYearParameter, toInspMonthParameter, toInspYearParameter, atrStatusParameter, rdStatusParameter, stateCodeParameter, districtCodeParameter, adminNdCodeParameter, pmgsyParameter, flagParameter);
        }
    
        public virtual ObjectResult<qm_inspection_list_Against_Road_sqmATR_Result> qm_inspection_list_Against_Road_sqmATR(Nullable<int> roadCode)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("roadCode", roadCode) :
                new ObjectParameter("roadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qm_inspection_list_Against_Road_sqmATR_Result>("qm_inspection_list_Against_Road_sqmATR", roadCodeParameter);
        }
    
        public virtual int USP_QM_HELPDESK_REGRADE_SQM_ATR(Nullable<int> obsid)
        {
            var obsidParameter = obsid.HasValue ?
                new ObjectParameter("obsid", obsid) :
                new ObjectParameter("obsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_HELPDESK_REGRADE_SQM_ATR", obsidParameter);
        }
    
        public virtual int USP_QM_REGRADE_SQM_ATR(Nullable<int> obsId, string status, Nullable<int> atrId, string remarks, Nullable<int> atrReasonId, Nullable<int> userId, string ipAdd)
        {
            var obsIdParameter = obsId.HasValue ?
                new ObjectParameter("obsId", obsId) :
                new ObjectParameter("obsId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var atrIdParameter = atrId.HasValue ?
                new ObjectParameter("atrId", atrId) :
                new ObjectParameter("atrId", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var atrReasonIdParameter = atrReasonId.HasValue ?
                new ObjectParameter("atrReasonId", atrReasonId) :
                new ObjectParameter("atrReasonId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var ipAddParameter = ipAdd != null ?
                new ObjectParameter("ipAdd", ipAdd) :
                new ObjectParameter("ipAdd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QM_REGRADE_SQM_ATR", obsIdParameter, statusParameter, atrIdParameter, remarksParameter, atrReasonIdParameter, userIdParameter, ipAddParameter);
        }
    
        public virtual ObjectResult<USP_FDR_TECH_DETAILS_AGAINST_ROAD_Result> USP_FDR_TECH_DETAILS_AGAINST_ROAD(Nullable<int> roadCode)
        {
            var roadCodeParameter = roadCode.HasValue ?
                new ObjectParameter("roadCode", roadCode) :
                new ObjectParameter("roadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FDR_TECH_DETAILS_AGAINST_ROAD_Result>("USP_FDR_TECH_DETAILS_AGAINST_ROAD", roadCodeParameter);
        }
    
        public virtual ObjectResult<USP_SANCTION_DRRP_ROADS_Result> USP_SANCTION_DRRP_ROADS(Nullable<int> sTATE)
        {
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SANCTION_DRRP_ROADS_Result>("USP_SANCTION_DRRP_ROADS", sTATEParameter);
        }
    
        public virtual ObjectResult<USP_GET_PROPOSAL_LIST_Result> USP_GET_PROPOSAL_LIST(Nullable<int> level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> year, Nullable<int> batch, Nullable<int> collaboration, Nullable<int> agency, Nullable<int> pIU, Nullable<int> tACode, string tAName, string tAType, string pIUStatus, string pTAStatus, string sTAStaus, string mRDStatus, string type, string connect, Nullable<byte> pMGSY, Nullable<short> roleID)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var agencyParameter = agency.HasValue ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(int));
    
            var pIUParameter = pIU.HasValue ?
                new ObjectParameter("PIU", pIU) :
                new ObjectParameter("PIU", typeof(int));
    
            var tACodeParameter = tACode.HasValue ?
                new ObjectParameter("TACode", tACode) :
                new ObjectParameter("TACode", typeof(int));
    
            var tANameParameter = tAName != null ?
                new ObjectParameter("TAName", tAName) :
                new ObjectParameter("TAName", typeof(string));
    
            var tATypeParameter = tAType != null ?
                new ObjectParameter("TAType", tAType) :
                new ObjectParameter("TAType", typeof(string));
    
            var pIUStatusParameter = pIUStatus != null ?
                new ObjectParameter("PIUStatus", pIUStatus) :
                new ObjectParameter("PIUStatus", typeof(string));
    
            var pTAStatusParameter = pTAStatus != null ?
                new ObjectParameter("PTAStatus", pTAStatus) :
                new ObjectParameter("PTAStatus", typeof(string));
    
            var sTAStausParameter = sTAStaus != null ?
                new ObjectParameter("STAStaus", sTAStaus) :
                new ObjectParameter("STAStaus", typeof(string));
    
            var mRDStatusParameter = mRDStatus != null ?
                new ObjectParameter("MRDStatus", mRDStatus) :
                new ObjectParameter("MRDStatus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var connectParameter = connect != null ?
                new ObjectParameter("Connect", connect) :
                new ObjectParameter("Connect", typeof(string));
    
            var pMGSYParameter = pMGSY.HasValue ?
                new ObjectParameter("PMGSY", pMGSY) :
                new ObjectParameter("PMGSY", typeof(byte));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PROPOSAL_LIST_Result>("USP_GET_PROPOSAL_LIST", levelParameter, stateParameter, districtParameter, blockParameter, yearParameter, batchParameter, collaborationParameter, agencyParameter, pIUParameter, tACodeParameter, tANameParameter, tATypeParameter, pIUStatusParameter, pTAStatusParameter, sTAStausParameter, mRDStatusParameter, typeParameter, connectParameter, pMGSYParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<USP_UNLOCK_RECORDS_Result> USP_UNLOCK_RECORDS(string module, string level, Nullable<int> state, Nullable<int> district, Nullable<int> block, Nullable<int> village, Nullable<int> hab, Nullable<int> road, Nullable<int> year, Nullable<int> batch, string type, string package, Nullable<byte> scheme, Nullable<int> collaboration, Nullable<int> roleId)
        {
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var villageParameter = village.HasValue ?
                new ObjectParameter("Village", village) :
                new ObjectParameter("Village", typeof(int));
    
            var habParameter = hab.HasValue ?
                new ObjectParameter("Hab", hab) :
                new ObjectParameter("Hab", typeof(int));
    
            var roadParameter = road.HasValue ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            var schemeParameter = scheme.HasValue ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(byte));
    
            var collaborationParameter = collaboration.HasValue ?
                new ObjectParameter("Collaboration", collaboration) :
                new ObjectParameter("Collaboration", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_UNLOCK_RECORDS_Result>("USP_UNLOCK_RECORDS", moduleParameter, levelParameter, stateParameter, districtParameter, blockParameter, villageParameter, habParameter, roadParameter, yearParameter, batchParameter, typeParameter, packageParameter, schemeParameter, collaborationParameter, roleIdParameter);
        }
    }
}
